v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff651540000,0x7ff65518e000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ff8da070000,0x7ff8da265000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ff8d8430000,0x7ff8d84ed000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ff8d7ac0000,0x7ff8d7d8d000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ff8d9160000,0x7ff8d91cb000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ff8d94d0000,0x7ff8d95f5000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ff8d53f0000,0x7ff8d55d4000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ff8d9440000,0x7ff8d9448000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ff8d87e0000,0x7ff8d888e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ff8d7e80000,0x7ff8d7f80000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ff8d84f0000,0x7ff8d858e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ff8d8270000,0x7ff8d830c000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ff8d6be0000,0x7ff8d6c1b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ff8d7640000,0x7ff8d766e000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ff8d8590000,0x7ff8d8730000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ff8d7f80000,0x7ff8d7fa2000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ff8d9300000,0x7ff8d932a000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ff8d7fb0000,0x7ff8d80bb000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ff8d7d90000,0x7ff8d7e2d000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ff8d77f0000,0x7ff8d7946000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ff8d7a90000,0x7ff8d7ab7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ff8c8f60000,0x7ff8c8f87000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ff8d7150000,0x7ff8d715c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ff8d9410000,0x7ff8d9440000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ff8d6d50000,0x7ff8d6d9b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ff8d6bc0000,0x7ff8d6bd2000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ff8d4d40000,0x7ff8d4dde000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ff8d8e00000,0x7ff8d9154000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ff8d6f40000,0x7ff8d6faa000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ff8d5710000,0x7ff8d5722000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ff8d7a00000,0x7ff8d7a82000,0
shared-library-end
tick,0x7ff8da10cdc4,529026,0,0x0,6
profiler,begin,1000
new,CodeRange,0x206f4ce0000,0
new,MemoryChunk,0x14ab9e00000,262144
new,MemoryChunk,0x6136d80000,262144
new,MemoryChunk,0x389835c0000,262144
new,MemoryChunk,0x3e018240000,262144
new,MemoryChunk,0x3682a600000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x31512200000,262144
new,MemoryChunk,0x2bc774c0000,262144
new,MemoryChunk,0x3de4d100000,262144
new,MemoryChunk,0x8ef9380000,262144
new,MemoryChunk,0x41d4e00000,262144
new,MemoryChunk,0x10091780000,262144
new,MemoryChunk,0x31c2e200000,262144
tick,0x7ff651c4c15a,541073,0,0x0,6
new,MemoryChunk,0x206f4d00000,262144
new,MemoryChunk,0x3b10ff00000,262144
code-creation,Builtin,2,551283,0x7ff6520b0be4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,551395,0x7ff6520b1144,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,551438,0x7ff6520b1324,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,551474,0x7ff6520b15a4,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,551509,0x7ff6520b1684,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,551544,0x7ff6520b1804,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,551577,0x7ff6520b18a4,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,551610,0x7ff6520b18e4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,551645,0x7ff6520b1a64,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,551682,0x7ff6520b1c24,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,551879,0x7ff6520b1de4,104,CallBoundFunction
code-creation,Builtin,2,551932,0x7ff6520b1e64,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,551969,0x7ff6520b1ee4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,552004,0x7ff6520b1f64,120,Call_ReceiverIsAny
code-creation,Builtin,2,552035,0x7ff6520b1fe4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,552072,0x7ff6520b23e4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,552107,0x7ff6520b27e4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,552144,0x7ff6520b2c24,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,552180,0x7ff6520b3064,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,552214,0x7ff6520b34a4,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,552248,0x7ff6520b38e4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,552284,0x7ff6520b3ca4,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,552320,0x7ff6520b4064,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,552354,0x7ff6520b4424,736,CallProxy
code-creation,Builtin,2,552384,0x7ff6520b4724,148,CallVarargs
code-creation,Builtin,2,552416,0x7ff6520b47c4,944,CallWithSpread
code-creation,Builtin,2,552447,0x7ff6520b4b84,1956,CallWithSpread_Baseline
code-creation,Builtin,2,552481,0x7ff6520b5344,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,552514,0x7ff6520b5ae4,864,CallWithArrayLike
code-creation,Builtin,2,552546,0x7ff6520b5e64,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,552580,0x7ff6520b6584,156,CallForwardVarargs
code-creation,Builtin,2,552612,0x7ff6520b6624,156,CallFunctionForwardVarargs
code-creation,Builtin,2,552645,0x7ff6520b66c4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,552679,0x7ff6520b6764,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,552714,0x7ff6520b6864,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,552752,0x7ff6520b69a4,28,ConstructFunction
code-creation,Builtin,2,552784,0x7ff6520b69c4,104,ConstructBoundFunction
code-creation,Builtin,2,552816,0x7ff6520b6a44,28,ConstructedNonConstructable
code-creation,Builtin,2,552855,0x7ff6520b6a64,100,Construct
code-creation,Builtin,2,552887,0x7ff6520b6ae4,148,ConstructVarargs
code-creation,Builtin,2,552918,0x7ff6520b6b84,968,ConstructWithSpread
code-creation,Builtin,2,552950,0x7ff6520b6f64,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,552984,0x7ff6520b7644,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,553018,0x7ff6520b7d44,924,ConstructWithArrayLike
code-creation,Builtin,2,553051,0x7ff6520b80e4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,553086,0x7ff6520b8764,196,ConstructForwardVarargs
code-creation,Builtin,2,553119,0x7ff6520b8844,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,553153,0x7ff6520b8924,804,Construct_Baseline
code-creation,Builtin,2,553184,0x7ff6520b8c64,820,Construct_WithFeedback
code-creation,Builtin,2,553217,0x7ff6520b8fa4,476,JSConstructStubGeneric
code-creation,Builtin,2,553250,0x7ff6520b9184,376,JSBuiltinsConstructStub
code-creation,Builtin,2,553283,0x7ff6520b9304,676,FastNewObject
code-creation,Builtin,2,553314,0x7ff6520b95c4,292,FastNewClosure
code-creation,Builtin,2,553346,0x7ff6520b9704,720,ConstructProxy
code-creation,Builtin,2,553378,0x7ff6520b99e4,360,JSEntry
code-creation,Builtin,2,553408,0x7ff6520b9b64,360,JSConstructEntry
code-creation,Builtin,2,553440,0x7ff6520b9ce4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,553472,0x7ff6520b9e64,96,JSEntryTrampoline
code-creation,Builtin,2,553504,0x7ff6520b9ee4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,553537,0x7ff6520b9f64,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,553571,0x7ff6520ba084,1116,StringCodePointAt
code-creation,Builtin,2,553603,0x7ff6520ba4e4,1552,StringFromCodePointAt
code-creation,Builtin,2,553636,0x7ff6520bab04,544,StringEqual
code-creation,Builtin,2,557255,0x7ff6520bad44,276,StringGreaterThan
code-creation,Builtin,2,557526,0x7ff6520bae64,276,StringGreaterThanOrEqual
code-creation,Builtin,2,557595,0x7ff6520baf84,276,StringLessThan
code-creation,Builtin,2,557635,0x7ff6520bb0a4,276,StringLessThanOrEqual
code-creation,Builtin,2,557674,0x7ff6520bb1c4,2492,StringSubstring
code-creation,Builtin,2,557711,0x7ff6520bbb84,80,OrderedHashTableHealIndex
code-creation,Builtin,2,557749,0x7ff6520bbbe4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,557789,0x7ff6520bc084,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,557828,0x7ff6520bc0e4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,557871,0x7ff6520bc144,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,557967,0x7ff6520bc1a4,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,558012,0x7ff6520bc204,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,558055,0x7ff6520bc264,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,558092,0x7ff6520bc2c4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,558130,0x7ff6520bc324,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,558169,0x7ff6520bc404,52,InterpreterOnStackReplacement
code-creation,Builtin,2,558207,0x7ff6520bc444,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,558245,0x7ff6520bc6a4,56,BaselineOnStackReplacement
code-creation,Builtin,2,558283,0x7ff6520bc6e4,84,BaselineLeaveFrame
code-creation,Builtin,2,558320,0x7ff6520bc744,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,558359,0x7ff6520bc824,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,558399,0x7ff6520bc924,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,558439,0x7ff6520bca04,1004,CompileLazy
code-creation,Builtin,2,558497,0x7ff6520bce04,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,558533,0x7ff6520bce64,252,InstantiateAsmJs
code-creation,Builtin,2,558570,0x7ff6520bcf64,32,NotifyDeoptimized
code-creation,Builtin,2,558603,0x7ff6520bcfa4,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,558641,0x7ff6520bd2c4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,558678,0x7ff6520bd5e4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,558716,0x7ff6520bd904,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,558754,0x7ff6520bdc24,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,558804,0x7ff6520bdc64,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,558883,0x7ff6520bdca4,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,558927,0x7ff6520bdce4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,558968,0x7ff6520bdd44,288,CallApiCallback
code-creation,Builtin,2,559001,0x7ff6520bde84,268,CallApiGetter
code-creation,Builtin,2,559035,0x7ff6520bdfa4,12,HandleApiCall
code-creation,Builtin,2,559066,0x7ff6520bdfc4,12,HandleApiCallAsFunction
code-creation,Builtin,2,559104,0x7ff6520bdfe4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,559138,0x7ff6520be004,64,AllocateInYoungGeneration
code-creation,Builtin,2,559171,0x7ff6520be064,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,559205,0x7ff6520be0a4,64,AllocateInOldGeneration
code-creation,Builtin,2,559237,0x7ff6520be104,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,559271,0x7ff6520be144,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,559309,0x7ff6520be304,496,GrowFastDoubleElements
code-creation,Builtin,2,559346,0x7ff6520be504,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,559384,0x7ff6520be6a4,388,DebugBreakTrampoline
code-creation,Builtin,2,559422,0x7ff6520be844,180,ToNumber
code-creation,Builtin,2,559457,0x7ff6520be904,292,ToNumber_Baseline
code-creation,Builtin,2,562498,0x7ff6520bea44,360,ToNumeric_Baseline
code-creation,Builtin,2,562549,0x7ff6520bebc4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,562584,0x7ff6520bec44,212,ToNumberConvertBigInt
code-creation,Builtin,2,562617,0x7ff6520bed24,132,Typeof
code-creation,Builtin,2,562648,0x7ff6520bedc4,104,BigIntToI64
code-creation,Builtin,2,562680,0x7ff6520bee44,4,BigIntToI32Pair
code-creation,Builtin,2,562721,0x7ff6520bee64,232,I64ToBigInt
code-creation,Builtin,2,562760,0x7ff6520bef64,4,I32PairToBigInt
code-creation,Builtin,2,562793,0x7ff6520bef84,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,562828,0x7ff6520bf004,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,562862,0x7ff6520c00a4,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,562896,0x7ff6520c3ea4,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,562929,0x7ff6520c3fc4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,562962,0x7ff6520c4004,12,LoadIC_StringLength
code-creation,Builtin,2,562995,0x7ff6520c4024,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,563028,0x7ff6520c4044,3056,LoadIC_NoFeedback
code-creation,Builtin,2,563060,0x7ff6520c4c44,32,StoreGlobalIC_Slow
code-creation,Builtin,2,563094,0x7ff6520c4c84,7332,StoreIC_NoFeedback
code-creation,Builtin,2,563126,0x7ff6520c6944,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,563165,0x7ff6520c6a04,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,563204,0x7ff6520c6a64,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,563246,0x7ff6520c6b64,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,563285,0x7ff6520c6c64,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,563322,0x7ff6520c6d64,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,563359,0x7ff6520c6e64,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,563404,0x7ff6520ca684,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,563442,0x7ff6520ccc24,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,563492,0x7ff6520d0064,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,563530,0x7ff6520d1844,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,563599,0x7ff6520d3984,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,563715,0x7ff6520d8544,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,563828,0x7ff6520da684,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,563935,0x7ff6520dd1a4,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,564030,0x7ff6520dd4c4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,564130,0x7ff6520dd584,72,HasIndexedInterceptorIC
code-creation,Builtin,2,564231,0x7ff6520dd5e4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,564332,0x7ff6520dd664,224,DynamicCheckMaps
code-creation,Builtin,2,564472,0x7ff6520dd764,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,564554,0x7ff6520dd7e4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,564627,0x7ff6520dd8a4,152,EnqueueMicrotask
code-creation,Builtin,2,564692,0x7ff6520dd944,8,RunMicrotasksTrampoline
code-creation,Builtin,2,564759,0x7ff6520dd964,3476,RunMicrotasks
code-creation,Builtin,2,564824,0x7ff6520de704,2636,HasProperty
code-creation,Builtin,2,564888,0x7ff6520df164,1156,DeleteProperty
code-creation,Builtin,2,564953,0x7ff6520df604,1972,CopyDataProperties
code-creation,Builtin,2,565021,0x7ff6520dfdc4,9184,SetDataProperties
code-creation,Builtin,2,565088,0x7ff6520e21c4,28,Abort
code-creation,Builtin,2,565152,0x7ff6520e21e4,28,AbortCSAAssert
code-creation,Builtin,2,565235,0x7ff6520e2204,12,EmptyFunction
code-creation,Builtin,2,565311,0x7ff6520e2224,12,Illegal
code-creation,Builtin,2,565435,0x7ff6520e2244,12,StrictPoisonPillThrower
code-creation,Builtin,2,565544,0x7ff6520e2264,12,UnsupportedThrower
code-creation,Builtin,2,565643,0x7ff6520e2284,64,ReturnReceiver
code-creation,Builtin,2,565743,0x7ff6520e22e4,28,ArrayConstructor
code-creation,Builtin,2,565844,0x7ff6520e2304,404,ArrayConstructorImpl
code-creation,Builtin,2,565945,0x7ff6520e24a4,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,566020,0x7ff6520e2584,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,566085,0x7ff6520e2664,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,566470,0x7ff6520e2724,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,566586,0x7ff6520e27e4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,566693,0x7ff6520e28a4,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,566798,0x7ff6520e2964,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,566905,0x7ff6520e2a24,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,567011,0x7ff6520e2ae4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,567115,0x7ff6520e2d04,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,567221,0x7ff6520e2f04,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,567327,0x7ff6520e30c4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,567448,0x7ff6520e3264,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,567555,0x7ff6520e3424,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,567661,0x7ff6520e35c4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,567768,0x7ff6520e37a4,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,567876,0x7ff6520e3944,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,567978,0x7ff6520e39a4,12,ArrayConcat
code-creation,Builtin,2,568077,0x7ff6520e39c4,12,ArrayPrototypeFill
code-creation,Builtin,2,568176,0x7ff6520e39e4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,568277,0x7ff6520e3da4,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,568379,0x7ff6520e3e44,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,568489,0x7ff6520e3f24,548,ArrayIncludes
code-creation,Builtin,2,568589,0x7ff6520e4164,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,568690,0x7ff6520e44c4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,568792,0x7ff6520e4544,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,568893,0x7ff6520e45c4,552,ArrayIndexOf
code-creation,Builtin,2,568991,0x7ff6520e4804,12,ArrayPop
code-creation,Builtin,2,569090,0x7ff6520e4824,616,ArrayPrototypePop
code-creation,Builtin,2,569189,0x7ff6520e4aa4,12,ArrayPush
code-creation,Builtin,2,569288,0x7ff6520e4ac4,2424,ArrayPrototypePush
code-creation,Builtin,2,569389,0x7ff6520e5444,12,ArrayShift
code-creation,Builtin,2,569495,0x7ff6520e5464,12,ArrayUnshift
code-creation,Builtin,2,569593,0x7ff6520e5484,956,CloneFastJSArray
code-creation,Builtin,2,569693,0x7ff6520e5844,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,569794,0x7ff6520e60e4,976,ExtractFastJSArray
code-creation,Builtin,2,569894,0x7ff6520e64c4,260,ArrayPrototypeEntries
code-creation,Builtin,2,569995,0x7ff6520e65e4,248,ArrayPrototypeKeys
code-creation,Builtin,2,570095,0x7ff6520e66e4,260,ArrayPrototypeValues
code-creation,Builtin,2,570195,0x7ff6520e6804,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,570296,0x7ff6520e7964,4168,FlattenIntoArray
code-creation,Builtin,2,570397,0x7ff6520e89c4,4172,FlatMapIntoArray
code-creation,Builtin,2,570505,0x7ff6520e9a24,372,ArrayPrototypeFlat
code-creation,Builtin,2,570604,0x7ff6520e9ba4,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,570705,0x7ff6520e9d64,12,ArrayBufferConstructor
code-creation,Builtin,2,570805,0x7ff6520e9d84,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,570907,0x7ff6520e9da4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,571009,0x7ff6520e9dc4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,571110,0x7ff6520e9de4,804,AsyncFunctionEnter
code-creation,Builtin,2,571209,0x7ff6520ea124,132,AsyncFunctionReject
code-creation,Builtin,2,571309,0x7ff6520ea1c4,128,AsyncFunctionResolve
code-creation,Builtin,2,571421,0x7ff6520ea264,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,571524,0x7ff6520ea284,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,571625,0x7ff6520ead84,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,571736,0x7ff6520eb884,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,571844,0x7ff6520eb944,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,571947,0x7ff6520eba04,12,BigIntConstructor
code-creation,Builtin,2,572046,0x7ff6520eba24,12,BigIntAsUintN
code-creation,Builtin,2,572145,0x7ff6520eba44,12,BigIntAsIntN
code-creation,Builtin,2,572243,0x7ff6520eba64,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,572347,0x7ff6520eba84,12,BigIntPrototypeToString
code-creation,Builtin,2,572474,0x7ff6520ebaa4,12,BigIntPrototypeValueOf
code-creation,Builtin,2,572679,0x7ff6520ebac4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,572757,0x7ff6520ebae4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,572827,0x7ff6520ebb04,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,572896,0x7ff6520ebb24,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,572964,0x7ff6520ebb44,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,573049,0x7ff6520ebb64,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,573094,0x7ff6520ebb84,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,573130,0x7ff6520ebba4,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,573164,0x7ff6520ebbc4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,573199,0x7ff6520ebbe4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,573233,0x7ff6520ebc04,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,573267,0x7ff6520ebc24,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,573303,0x7ff6520ebc44,12,CallSitePrototypeGetThis
code-creation,Builtin,2,573335,0x7ff6520ebc64,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,573369,0x7ff6520ebc84,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,573407,0x7ff6520ebca4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,573442,0x7ff6520ebcc4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,573475,0x7ff6520ebce4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,573508,0x7ff6520ebd04,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,573541,0x7ff6520ebd24,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,573574,0x7ff6520ebd44,12,CallSitePrototypeToString
code-creation,Builtin,2,573631,0x7ff6520ebd64,12,ConsoleDebug
code-creation,Builtin,2,573663,0x7ff6520ebd84,12,ConsoleError
code-creation,Builtin,2,573695,0x7ff6520ebda4,12,ConsoleInfo
code-creation,Builtin,2,573726,0x7ff6520ebdc4,12,ConsoleLog
code-creation,Builtin,2,573757,0x7ff6520ebde4,12,ConsoleWarn
code-creation,Builtin,2,573789,0x7ff6520ebe04,12,ConsoleDir
code-creation,Builtin,2,573819,0x7ff6520ebe24,12,ConsoleDirXml
code-creation,Builtin,2,573851,0x7ff6520ebe44,12,ConsoleTable
code-creation,Builtin,2,573882,0x7ff6520ebe64,12,ConsoleTrace
code-creation,Builtin,2,573914,0x7ff6520ebe84,12,ConsoleGroup
code-creation,Builtin,2,573945,0x7ff6520ebea4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,573977,0x7ff6520ebec4,12,ConsoleGroupEnd
code-creation,Builtin,2,574009,0x7ff6520ebee4,12,ConsoleClear
code-creation,Builtin,2,574040,0x7ff6520ebf04,12,ConsoleCount
code-creation,Builtin,2,574071,0x7ff6520ebf24,12,ConsoleCountReset
code-creation,Builtin,2,574103,0x7ff6520ebf44,12,ConsoleAssert
code-creation,Builtin,2,574134,0x7ff6520ebf64,12,ConsoleProfile
code-creation,Builtin,2,574165,0x7ff6520ebf84,12,ConsoleProfileEnd
code-creation,Builtin,2,574197,0x7ff6520ebfa4,12,ConsoleTime
code-creation,Builtin,2,574232,0x7ff6520ebfc4,12,ConsoleTimeLog
code-creation,Builtin,2,574264,0x7ff6520ebfe4,12,ConsoleTimeEnd
code-creation,Builtin,2,574296,0x7ff6520ec004,12,ConsoleTimeStamp
code-creation,Builtin,2,574328,0x7ff6520ec024,12,ConsoleContext
code-creation,Builtin,2,574359,0x7ff6520ec044,12,DataViewConstructor
code-creation,Builtin,2,574396,0x7ff6520ec064,12,DateConstructor
code-creation,Builtin,2,574429,0x7ff6520ec084,216,DatePrototypeGetDate
code-creation,Builtin,2,574461,0x7ff6520ec164,216,DatePrototypeGetDay
code-creation,Builtin,2,574494,0x7ff6520ec244,216,DatePrototypeGetFullYear
code-creation,Builtin,2,574540,0x7ff6520ec324,216,DatePrototypeGetHours
code-creation,Builtin,2,574581,0x7ff6520ec404,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,574615,0x7ff6520ec4e4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,574648,0x7ff6520ec5c4,216,DatePrototypeGetMonth
code-creation,Builtin,2,574681,0x7ff6520ec6a4,216,DatePrototypeGetSeconds
code-creation,Builtin,2,574713,0x7ff6520ec784,124,DatePrototypeGetTime
code-creation,Builtin,2,574745,0x7ff6520ec804,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,574779,0x7ff6520ec8e4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,574817,0x7ff6520ec9c4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,574852,0x7ff6520ecaa4,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,574885,0x7ff6520ecb84,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,574919,0x7ff6520ecc64,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,574953,0x7ff6520ecd44,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,574986,0x7ff6520ece24,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,575019,0x7ff6520ecf04,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,575053,0x7ff6520ecfe4,124,DatePrototypeValueOf
code-creation,Builtin,2,575086,0x7ff6520ed064,352,DatePrototypeToPrimitive
code-creation,Builtin,2,575118,0x7ff6520ed1e4,12,DatePrototypeGetYear
code-creation,Builtin,2,575151,0x7ff6520ed204,12,DatePrototypeSetYear
code-creation,Builtin,2,575183,0x7ff6520ed224,12,DateNow
code-creation,Builtin,2,575213,0x7ff6520ed244,12,DateParse
code-creation,Builtin,2,575244,0x7ff6520ed264,12,DatePrototypeSetDate
code-creation,Builtin,2,575276,0x7ff6520ed284,12,DatePrototypeSetFullYear
code-creation,Builtin,2,575314,0x7ff6520ed2a4,12,DatePrototypeSetHours
code-creation,Builtin,2,575348,0x7ff6520ed2c4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,575382,0x7ff6520ed2e4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,575433,0x7ff6520ed304,12,DatePrototypeSetMonth
code-creation,Builtin,2,575476,0x7ff6520ed324,12,DatePrototypeSetSeconds
code-creation,Builtin,2,575509,0x7ff6520ed344,12,DatePrototypeSetTime
code-creation,Builtin,2,575541,0x7ff6520ed364,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,575573,0x7ff6520ed384,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,575606,0x7ff6520ed3a4,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,575639,0x7ff6520ed3c4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,575672,0x7ff6520ed3e4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,575705,0x7ff6520ed404,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,575738,0x7ff6520ed424,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,575771,0x7ff6520ed444,12,DatePrototypeToDateString
code-creation,Builtin,2,575804,0x7ff6520ed464,12,DatePrototypeToISOString
code-creation,Builtin,2,575837,0x7ff6520ed484,12,DatePrototypeToUTCString
code-creation,Builtin,2,575870,0x7ff6520ed4a4,12,DatePrototypeToString
code-creation,Builtin,2,575902,0x7ff6520ed4c4,12,DatePrototypeToTimeString
code-creation,Builtin,2,575936,0x7ff6520ed4e4,12,DatePrototypeToJson
code-creation,Builtin,2,575974,0x7ff6520ed504,12,DateUTC
code-creation,Builtin,2,576063,0x7ff6520ed524,12,ErrorConstructor
code-creation,Builtin,2,576144,0x7ff6520ed544,12,ErrorCaptureStackTrace
code-creation,Builtin,2,576210,0x7ff6520ed564,12,ErrorPrototypeToString
code-creation,Builtin,2,576272,0x7ff6520ed584,12,FunctionConstructor
code-creation,Builtin,2,576334,0x7ff6520ed5a4,68,FunctionPrototypeApply
code-creation,Builtin,2,576400,0x7ff6520ed604,12,FunctionPrototypeBind
code-creation,Builtin,2,576460,0x7ff6520ed624,32,FunctionPrototypeCall
code-creation,Builtin,2,576525,0x7ff6520ed664,12,FunctionPrototypeToString
code-creation,Builtin,2,576591,0x7ff6520ed684,192,CreateIterResultObject
code-creation,Builtin,2,576658,0x7ff6520ed764,788,CreateGeneratorObject
code-creation,Builtin,2,576723,0x7ff6520eda84,12,GeneratorFunctionConstructor
code-creation,Builtin,2,576788,0x7ff6520edaa4,412,GeneratorPrototypeNext
code-creation,Builtin,2,576852,0x7ff6520edc44,420,GeneratorPrototypeReturn
code-creation,Builtin,2,576934,0x7ff6520ede04,424,GeneratorPrototypeThrow
code-creation,Builtin,2,577014,0x7ff6520edfc4,12,AsyncFunctionConstructor
code-creation,Builtin,2,577083,0x7ff6520edfe4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,577150,0x7ff6520ee164,88,ResumeGeneratorBaseline
code-creation,Builtin,2,577217,0x7ff6520ee1c4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,577289,0x7ff6520ee204,12,GlobalDecodeURI
code-creation,Builtin,2,577357,0x7ff6520ee224,12,GlobalDecodeURIComponent
code-creation,Builtin,2,577436,0x7ff6520ee244,12,GlobalEncodeURI
code-creation,Builtin,2,577536,0x7ff6520ee264,12,GlobalEncodeURIComponent
code-creation,Builtin,2,577607,0x7ff6520ee284,12,GlobalEscape
code-creation,Builtin,2,577671,0x7ff6520ee2a4,12,GlobalUnescape
code-creation,Builtin,2,577735,0x7ff6520ee2c4,12,GlobalEval
code-creation,Builtin,2,577797,0x7ff6520ee2e4,132,GlobalIsFinite
code-creation,Builtin,2,577860,0x7ff6520ee384,124,GlobalIsNaN
code-creation,Builtin,2,577922,0x7ff6520ee404,12,JsonParse
code-creation,Builtin,2,577985,0x7ff6520ee424,12,JsonStringify
code-creation,Builtin,2,578048,0x7ff6520ee444,4608,LoadIC
code-creation,Builtin,2,578111,0x7ff6520ef664,4296,LoadIC_Megamorphic
code-creation,Builtin,2,578175,0x7ff6520f0744,4520,LoadIC_Noninlined
code-creation,Builtin,2,578234,0x7ff6520f1904,44,LoadICTrampoline
code-creation,Builtin,2,578292,0x7ff6520f1944,24,LoadICBaseline
code-creation,Builtin,2,578349,0x7ff6520f1964,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,578425,0x7ff6520f19a4,7376,LoadSuperIC
code-creation,Builtin,2,578495,0x7ff6520f3684,24,LoadSuperICBaseline
code-creation,Builtin,2,578536,0x7ff6520f36a4,8148,KeyedLoadIC
code-creation,Builtin,2,578576,0x7ff6520f5684,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,578617,0x7ff6520f89c4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,578657,0x7ff6520f8a04,24,KeyedLoadICBaseline
code-creation,Builtin,2,578698,0x7ff6520f8a24,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,578743,0x7ff6520f8a64,5104,StoreGlobalIC
code-creation,Builtin,2,578784,0x7ff6520f9e64,44,StoreGlobalICTrampoline
code-creation,Builtin,2,578826,0x7ff6520f9ea4,24,StoreGlobalICBaseline
code-creation,Builtin,2,578868,0x7ff6520f9ec4,5340,StoreIC
code-creation,Builtin,2,578909,0x7ff6520fb3a4,44,StoreICTrampoline
code-creation,Builtin,2,578949,0x7ff6520fb3e4,24,StoreICBaseline
code-creation,Builtin,2,578988,0x7ff6520fb404,5780,KeyedStoreIC
code-creation,Builtin,2,579029,0x7ff6520fcaa4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,579072,0x7ff6520fcae4,24,KeyedStoreICBaseline
code-creation,Builtin,2,579115,0x7ff6520fcb04,404,StoreInArrayLiteralIC
code-creation,Builtin,2,579160,0x7ff6520fcca4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,579204,0x7ff6520fccc4,140,LookupContextBaseline
code-creation,Builtin,2,579247,0x7ff6520fcd64,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,579292,0x7ff6520fce04,3244,LoadGlobalIC
code-creation,Builtin,2,579335,0x7ff6520fdac4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,579378,0x7ff6520fe764,44,LoadGlobalICTrampoline
code-creation,Builtin,2,579426,0x7ff6520fe7a4,24,LoadGlobalICBaseline
code-creation,Builtin,2,579468,0x7ff6520fe7c4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,579512,0x7ff6520fe804,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,579556,0x7ff6520fe824,140,LookupGlobalICBaseline
code-creation,Builtin,2,579599,0x7ff6520fe8c4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,579642,0x7ff6520fe964,2064,CloneObjectIC
code-creation,Builtin,2,579684,0x7ff6520ff184,24,CloneObjectICBaseline
code-creation,Builtin,2,579727,0x7ff6520ff1a4,1988,CloneObjectIC_Slow
code-creation,Builtin,2,579768,0x7ff6520ff984,2756,KeyedHasIC
code-creation,Builtin,2,579808,0x7ff652100464,24,KeyedHasICBaseline
code-creation,Builtin,2,579850,0x7ff652100484,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,579892,0x7ff652100ee4,1436,IterableToList
code-creation,Builtin,2,579932,0x7ff652101484,1240,IterableToFixedArray
code-creation,Builtin,2,579974,0x7ff652101964,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,580196,0x7ff652101c64,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,580256,0x7ff652101ca4,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,580321,0x7ff652101d24,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,580388,0x7ff652102104,1616,StringListFromIterable
code-creation,Builtin,2,580439,0x7ff652102764,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,580482,0x7ff652102c44,4156,MapConstructor
code-creation,Builtin,2,580524,0x7ff652103c84,1996,MapPrototypeSet
code-creation,Builtin,2,580568,0x7ff652104464,1524,MapPrototypeDelete
code-creation,Builtin,2,580613,0x7ff652104a64,204,MapPrototypeGet
code-creation,Builtin,2,580655,0x7ff652104b44,164,MapPrototypeHas
code-creation,Builtin,2,580696,0x7ff652104c04,12,MapPrototypeClear
code-creation,Builtin,2,580738,0x7ff652104c24,284,MapPrototypeEntries
code-creation,Builtin,2,580780,0x7ff652104d44,144,MapPrototypeGetSize
code-creation,Builtin,2,580822,0x7ff652104de4,492,MapPrototypeForEach
code-creation,Builtin,2,580864,0x7ff652104fe4,284,MapPrototypeKeys
code-creation,Builtin,2,580905,0x7ff652105104,284,MapPrototypeValues
code-creation,Builtin,2,580947,0x7ff652105224,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,580990,0x7ff652105644,1168,MapIteratorToList
code-creation,Builtin,2,581033,0x7ff652105ae4,12,NumberPrototypeToExponential
code-creation,Builtin,2,581079,0x7ff652105b04,12,NumberPrototypeToFixed
code-creation,Builtin,2,581122,0x7ff652105b24,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,581166,0x7ff652105b44,12,NumberPrototypeToPrecision
code-creation,Builtin,2,581209,0x7ff652105b64,328,SameValue
code-creation,Builtin,2,581249,0x7ff652105cc4,204,SameValueNumbersOnly
code-creation,Builtin,2,581291,0x7ff652105da4,792,Add_Baseline
code-creation,Builtin,2,581360,0x7ff6521060c4,828,Subtract_Baseline
code-creation,Builtin,2,581424,0x7ff652106404,808,Multiply_Baseline
code-creation,Builtin,2,581465,0x7ff652106744,832,Divide_Baseline
code-creation,Builtin,2,581508,0x7ff652106aa4,764,Modulus_Baseline
code-creation,Builtin,2,581551,0x7ff652106da4,808,Exponentiate_Baseline
code-creation,Builtin,2,581593,0x7ff6521070e4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,581636,0x7ff6521073c4,700,BitwiseOr_Baseline
code-creation,Builtin,2,581699,0x7ff652107684,708,BitwiseXor_Baseline
code-creation,Builtin,2,581751,0x7ff652107964,720,ShiftLeft_Baseline
code-creation,Builtin,2,581839,0x7ff652107c44,720,ShiftRight_Baseline
code-creation,Builtin,2,581990,0x7ff652107f24,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,582109,0x7ff652108284,720,Add_WithFeedback
code-creation,Builtin,2,582158,0x7ff652108564,780,Subtract_WithFeedback
code-creation,Builtin,2,582209,0x7ff652108884,776,Multiply_WithFeedback
code-creation,Builtin,2,582263,0x7ff652108ba4,804,Divide_WithFeedback
code-creation,Builtin,2,582326,0x7ff652108ee4,724,Modulus_WithFeedback
code-creation,Builtin,2,582393,0x7ff6521091c4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,582456,0x7ff6521094c4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,582518,0x7ff652109784,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,582581,0x7ff652109a44,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,582644,0x7ff652109d04,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,582707,0x7ff652109fc4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,582769,0x7ff65210a284,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,582832,0x7ff65210a5c4,1696,Equal_Baseline
code-creation,Builtin,2,582895,0x7ff65210ac84,908,StrictEqual_Baseline
code-creation,Builtin,2,582958,0x7ff65210b024,1264,LessThan_Baseline
code-creation,Builtin,2,583020,0x7ff65210b524,1264,GreaterThan_Baseline
code-creation,Builtin,2,583083,0x7ff65210ba24,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,583146,0x7ff65210bf24,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,583209,0x7ff65210c424,1620,Equal_WithFeedback
code-creation,Builtin,2,583271,0x7ff65210ca84,940,StrictEqual_WithFeedback
code-creation,Builtin,2,583334,0x7ff65210ce44,1240,LessThan_WithFeedback
code-creation,Builtin,2,583407,0x7ff65210d324,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,583475,0x7ff65210d804,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,583539,0x7ff65210dce4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,583603,0x7ff65210e1c4,332,BitwiseNot_Baseline
code-creation,Builtin,2,583666,0x7ff65210e324,460,Decrement_Baseline
code-creation,Builtin,2,583729,0x7ff65210e504,464,Increment_Baseline
code-creation,Builtin,2,583792,0x7ff65210e6e4,488,Negate_Baseline
code-creation,Builtin,2,583854,0x7ff65210e8e4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,583917,0x7ff65210ea24,440,Decrement_WithFeedback
code-creation,Builtin,2,583979,0x7ff65210ebe4,444,Increment_WithFeedback
code-creation,Builtin,2,584042,0x7ff65210eda4,472,Negate_WithFeedback
code-creation,Builtin,2,584105,0x7ff65210ef84,252,ObjectAssign
code-creation,Builtin,2,584166,0x7ff65210f084,864,ObjectCreate
code-creation,Builtin,2,584227,0x7ff65210f404,12,ObjectDefineGetter
code-creation,Builtin,2,584290,0x7ff65210f424,12,ObjectDefineProperties
code-creation,Builtin,2,584353,0x7ff65210f444,12,ObjectDefineProperty
code-creation,Builtin,2,584418,0x7ff65210f464,12,ObjectDefineSetter
code-creation,Builtin,2,584480,0x7ff65210f484,1516,ObjectEntries
code-creation,Builtin,2,584542,0x7ff65210fa84,12,ObjectFreeze
code-creation,Builtin,2,584604,0x7ff65210faa4,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,584667,0x7ff6521110a4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,584730,0x7ff6521110c4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,584793,0x7ff652111324,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,584856,0x7ff652111344,164,ObjectHasOwn
code-creation,Builtin,2,584917,0x7ff652111404,388,ObjectIs
code-creation,Builtin,2,584979,0x7ff6521115a4,12,ObjectIsFrozen
code-creation,Builtin,2,585046,0x7ff6521115c4,12,ObjectIsSealed
code-creation,Builtin,2,585109,0x7ff6521115e4,536,ObjectKeys
code-creation,Builtin,2,585170,0x7ff652111804,12,ObjectLookupGetter
code-creation,Builtin,2,585232,0x7ff652111824,12,ObjectLookupSetter
code-creation,Builtin,2,585294,0x7ff652111844,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,585357,0x7ff652112144,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,585444,0x7ff652112224,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,585509,0x7ff652112244,12,ObjectPrototypeGetProto
code-creation,Builtin,2,585572,0x7ff652112264,12,ObjectPrototypeSetProto
code-creation,Builtin,2,585634,0x7ff652112284,12,ObjectSeal
code-creation,Builtin,2,585695,0x7ff6521122a4,1108,ObjectToString
code-creation,Builtin,2,585757,0x7ff652112704,1284,ObjectValues
code-creation,Builtin,2,585818,0x7ff652112c24,280,OrdinaryHasInstance
code-creation,Builtin,2,585880,0x7ff652112d44,344,InstanceOf
code-creation,Builtin,2,585942,0x7ff652112ea4,632,InstanceOf_WithFeedback
code-creation,Builtin,2,586004,0x7ff652113124,648,InstanceOf_Baseline
code-creation,Builtin,2,586067,0x7ff6521133c4,268,ForInEnumerate
code-creation,Builtin,2,586142,0x7ff6521134e4,148,ForInPrepare
code-creation,Builtin,2,586204,0x7ff652113584,2584,ForInFilter
code-creation,Builtin,2,586266,0x7ff652113fa4,52,ReflectApply
code-creation,Builtin,2,586328,0x7ff652113fe4,60,ReflectConstruct
code-creation,Builtin,2,586393,0x7ff652114024,12,ReflectDefineProperty
code-creation,Builtin,2,586457,0x7ff652114044,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,586520,0x7ff652114064,12,ReflectOwnKeys
code-creation,Builtin,2,586581,0x7ff652114084,12,ReflectSet
code-creation,Builtin,2,586653,0x7ff6521140a4,12,RegExpCapture1Getter
code-creation,Builtin,2,586701,0x7ff6521140c4,12,RegExpCapture2Getter
code-creation,Builtin,2,586738,0x7ff6521140e4,12,RegExpCapture3Getter
code-creation,Builtin,2,586775,0x7ff652114104,12,RegExpCapture4Getter
code-creation,Builtin,2,586814,0x7ff652114124,12,RegExpCapture5Getter
code-creation,Builtin,2,586869,0x7ff652114144,12,RegExpCapture6Getter
code-creation,Builtin,2,586916,0x7ff652114164,12,RegExpCapture7Getter
code-creation,Builtin,2,586977,0x7ff652114184,12,RegExpCapture8Getter
code-creation,Builtin,2,587047,0x7ff6521141a4,12,RegExpCapture9Getter
code-creation,Builtin,2,587114,0x7ff6521141c4,2212,RegExpConstructor
code-creation,Builtin,2,587177,0x7ff652114a84,12,RegExpInputGetter
code-creation,Builtin,2,587239,0x7ff652114aa4,12,RegExpInputSetter
code-creation,Builtin,2,587301,0x7ff652114ac4,12,RegExpLastMatchGetter
code-creation,Builtin,2,587364,0x7ff652114ae4,12,RegExpLastParenGetter
code-creation,Builtin,2,587431,0x7ff652114b04,12,RegExpLeftContextGetter
code-creation,Builtin,2,587493,0x7ff652114b24,908,RegExpPrototypeCompile
code-creation,Builtin,2,587556,0x7ff652114ec4,12,RegExpPrototypeToString
code-creation,Builtin,2,587618,0x7ff652114ee4,12,RegExpRightContextGetter
code-creation,Builtin,2,587681,0x7ff652114f04,252,RegExpExecAtom
code-creation,Builtin,2,587743,0x7ff652115004,1040,RegExpExecInternal
code-creation,Builtin,2,587805,0x7ff652115424,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,587867,0x7ff652115444,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,587930,0x7ff652115464,2684,SetConstructor
code-creation,Builtin,2,587992,0x7ff652115ee4,1284,SetPrototypeHas
code-creation,Builtin,2,588054,0x7ff652116404,1736,SetPrototypeAdd
code-creation,Builtin,2,588116,0x7ff652116ae4,1476,SetPrototypeDelete
code-creation,Builtin,2,588179,0x7ff6521170c4,12,SetPrototypeClear
code-creation,Builtin,2,588241,0x7ff6521170e4,284,SetPrototypeEntries
code-creation,Builtin,2,588303,0x7ff652117204,144,SetPrototypeGetSize
code-creation,Builtin,2,588365,0x7ff6521172a4,444,SetPrototypeForEach
code-creation,Builtin,2,588509,0x7ff652117464,284,SetPrototypeValues
code-creation,Builtin,2,588579,0x7ff652117584,988,SetIteratorPrototypeNext
code-creation,Builtin,2,588622,0x7ff652117964,1112,SetOrSetIteratorToList
code-creation,Builtin,2,588662,0x7ff652117dc4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,588702,0x7ff652117de4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,588742,0x7ff652117e04,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,588780,0x7ff652117e24,1280,AtomicsLoad
code-creation,Builtin,2,588815,0x7ff652118344,1008,AtomicsStore
code-creation,Builtin,2,588850,0x7ff652118744,1704,AtomicsExchange
code-creation,Builtin,2,588884,0x7ff652118e04,2092,AtomicsCompareExchange
code-creation,Builtin,2,588921,0x7ff652119644,1804,AtomicsAdd
code-creation,Builtin,2,588956,0x7ff652119d64,1804,AtomicsSub
code-creation,Builtin,2,589009,0x7ff65211a484,1804,AtomicsAnd
code-creation,Builtin,2,589071,0x7ff65211aba4,1804,AtomicsOr
code-creation,Builtin,2,589132,0x7ff65211b2c4,1804,AtomicsXor
code-creation,Builtin,2,589159,0x7ff65211b9e4,12,AtomicsNotify
code-creation,Builtin,2,589182,0x7ff65211ba04,12,AtomicsIsLockFree
code-creation,Builtin,2,589206,0x7ff65211ba24,12,AtomicsWait
code-creation,Builtin,2,589226,0x7ff65211ba44,12,AtomicsWaitAsync
code-creation,Builtin,2,589246,0x7ff65211ba64,12,StringFromCodePoint
code-creation,Builtin,2,589266,0x7ff65211ba84,1428,StringFromCharCode
code-creation,Builtin,2,589286,0x7ff65211c024,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,589307,0x7ff65211c044,4360,StringPrototypeMatchAll
code-creation,Builtin,2,589327,0x7ff65211d164,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,589348,0x7ff65211d184,1228,StringPrototypeReplace
code-creation,Builtin,2,589368,0x7ff65211d664,2900,StringPrototypeSplit
code-creation,Builtin,2,589397,0x7ff65211e1c4,12,StringRaw
code-creation,Builtin,2,589422,0x7ff65211e1e4,12,SymbolConstructor
code-creation,Builtin,2,589442,0x7ff65211e204,12,SymbolFor
code-creation,Builtin,2,589461,0x7ff65211e224,12,SymbolKeyFor
code-creation,Builtin,2,589480,0x7ff65211e244,88,TypedArrayBaseConstructor
code-creation,Builtin,2,589501,0x7ff65211e2a4,256,TypedArrayConstructor
code-creation,Builtin,2,589521,0x7ff65211e3c4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,589545,0x7ff65211e3e4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,589569,0x7ff65211e764,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,589591,0x7ff65211e8e4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,589620,0x7ff65211eb44,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,589647,0x7ff65211eb64,12,TypedArrayPrototypeFill
code-creation,Builtin,2,589668,0x7ff65211eb84,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,589689,0x7ff65211eba4,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,589709,0x7ff65211ebc4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,589732,0x7ff65211ebe4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,589756,0x7ff65211ec04,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,589780,0x7ff65211ed44,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,589804,0x7ff652121704,792,GenericJSToWasmWrapper
code-creation,Builtin,2,589827,0x7ff652121a24,148,WasmCompileLazy
code-creation,Builtin,2,589865,0x7ff652121ac4,168,WasmDebugBreak
code-creation,Builtin,2,589886,0x7ff652121b84,16,WasmOnStackReplace
code-creation,Builtin,2,589906,0x7ff652121ba4,140,WasmFloat32ToNumber
code-creation,Builtin,2,589926,0x7ff652121c44,152,WasmFloat64ToNumber
code-creation,Builtin,2,589945,0x7ff652121ce4,4,WasmI32AtomicWait32
code-creation,Builtin,2,589965,0x7ff652121d04,4,WasmI64AtomicWait32
code-creation,Builtin,2,589985,0x7ff652121d24,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,590005,0x7ff652121d44,4320,WeakMapConstructor
code-creation,Builtin,2,590025,0x7ff652122e44,196,WeakMapLookupHashIndex
code-creation,Builtin,2,590045,0x7ff652122f24,220,WeakMapGet
code-creation,Builtin,2,590067,0x7ff652123004,176,WeakMapPrototypeHas
code-creation,Builtin,2,590088,0x7ff6521230c4,204,WeakMapPrototypeSet
code-creation,Builtin,2,590108,0x7ff6521231a4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,590128,0x7ff652123244,2876,WeakSetConstructor
code-creation,Builtin,2,590148,0x7ff652123d84,176,WeakSetPrototypeHas
code-creation,Builtin,2,590168,0x7ff652123e44,204,WeakSetPrototypeAdd
code-creation,Builtin,2,590188,0x7ff652123f24,144,WeakSetPrototypeDelete
code-creation,Builtin,2,590211,0x7ff652123fc4,372,WeakCollectionDelete
code-creation,Builtin,2,590231,0x7ff652124144,764,WeakCollectionSet
code-creation,Builtin,2,590254,0x7ff652124444,296,AsyncGeneratorResolve
code-creation,Builtin,2,590278,0x7ff652124584,100,AsyncGeneratorReject
code-creation,Builtin,2,590302,0x7ff652124604,2760,AsyncGeneratorYield
code-creation,Builtin,2,590323,0x7ff6521250e4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,590343,0x7ff652125c24,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,590364,0x7ff652125d64,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,590388,0x7ff652125d84,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,590420,0x7ff652126184,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,590441,0x7ff6521265a4,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,590462,0x7ff6521269c4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,590483,0x7ff652127484,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,590503,0x7ff652127f44,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,590527,0x7ff652127fc4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,590552,0x7ff652128064,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,590575,0x7ff6521280e4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,590597,0x7ff652128164,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,590619,0x7ff6521281e4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,590640,0x7ff652128284,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,590670,0x7ff6521288c4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,590692,0x7ff652128f84,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,590714,0x7ff652129644,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,590734,0x7ff6521296c4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,590757,0x7ff6521297c4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,590780,0x7ff6521298c4,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,590808,0x7ff6521299a4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,590833,0x7ff652129b44,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,590857,0x7ff652129ce4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,590880,0x7ff652129de4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,590906,0x7ff652129ee4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,590930,0x7ff652129fe4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,590957,0x7ff65212a184,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,590980,0x7ff65212a324,4,DirectCEntry
code-creation,Builtin,2,590999,0x7ff65212a344,1096,StringAdd_CheckNone
code-creation,Builtin,2,591019,0x7ff65212a7a4,2484,SubString
code-creation,Builtin,2,591038,0x7ff65212b164,16,StackCheck
code-creation,Builtin,2,591057,0x7ff65212b184,84,DoubleToI
code-creation,Builtin,2,591076,0x7ff65212b1e4,2236,GetProperty
code-creation,Builtin,2,591095,0x7ff65212baa4,2308,GetPropertyWithReceiver
code-creation,Builtin,2,591115,0x7ff65212c3c4,16004,SetProperty
code-creation,Builtin,2,591138,0x7ff652130264,13480,SetPropertyInLiteral
code-creation,Builtin,2,591161,0x7ff652133724,8,MemCopyUint8Uint8
code-creation,Builtin,2,591184,0x7ff652133744,8,MemMove
code-creation,Builtin,2,591204,0x7ff652133764,12,IsTraceCategoryEnabled
code-creation,Builtin,2,591224,0x7ff652133784,12,Trace
code-creation,Builtin,2,591242,0x7ff6521337a4,12,FinalizationRegistryUnregister
code-creation,Builtin,2,591263,0x7ff6521337c4,416,AsyncModuleEvaluate
code-creation,Builtin,2,591284,0x7ff652133984,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,591304,0x7ff6521339a4,12,CallAsyncModuleRejected
code-creation,Builtin,2,591324,0x7ff6521339c4,260,AggregateErrorConstructor
code-creation,Builtin,2,591345,0x7ff652133ae4,856,ArrayPrototypeAt
code-creation,Builtin,2,591368,0x7ff652133e44,656,ArrayPrototypeConcat
code-creation,Builtin,2,591400,0x7ff6521340e4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,591427,0x7ff6521357c4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,591453,0x7ff6521358a4,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,591479,0x7ff652135b24,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,591503,0x7ff652136824,1464,ArrayEvery
code-creation,Builtin,2,591527,0x7ff652136de4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,591552,0x7ff652136f04,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,591578,0x7ff6521372e4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,591603,0x7ff6521380e4,4260,ArrayFilter
code-creation,Builtin,2,591626,0x7ff6521391a4,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,591650,0x7ff652139284,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,591674,0x7ff6521392c4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,591700,0x7ff652139404,528,ArrayFindLoopContinuation
code-creation,Builtin,2,591721,0x7ff652139624,1460,ArrayPrototypeFind
code-creation,Builtin,2,591741,0x7ff652139be4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,591763,0x7ff652139cc4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,591785,0x7ff652139d04,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,591807,0x7ff652139e44,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,591828,0x7ff65213a064,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,591848,0x7ff65213a624,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,591872,0x7ff65213a804,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,591896,0x7ff65213aec4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,591920,0x7ff65213b0a4,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,591944,0x7ff65213b764,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,591969,0x7ff65213b844,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,592000,0x7ff65213b924,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,592025,0x7ff65213c584,1328,ArrayForEach
code-creation,Builtin,2,592046,0x7ff65213cac4,3572,ArrayFrom
code-creation,Builtin,2,592065,0x7ff65213d8c4,148,ArrayIsArray
code-creation,Builtin,2,592085,0x7ff65213d964,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,592106,0x7ff65213db04,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,592128,0x7ff65213db44,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,592152,0x7ff65213dbe4,312,ConvertToLocaleString
code-creation,Builtin,2,592175,0x7ff65213dd24,752,JoinStackPush
code-creation,Builtin,2,592198,0x7ff65213e024,272,JoinStackPop
code-creation,Builtin,2,592220,0x7ff65213e144,6628,ArrayPrototypeJoin
code-creation,Builtin,2,592243,0x7ff65213fb44,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,592268,0x7ff652141044,236,ArrayPrototypeToString
code-creation,Builtin,2,592291,0x7ff652141144,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,592315,0x7ff652142884,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,592339,0x7ff652143aa4,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,592363,0x7ff6521449a4,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,592397,0x7ff652144ac4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,592422,0x7ff652144bc4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,592444,0x7ff652144de4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,592467,0x7ff652145a64,3912,ArrayMap
code-creation,Builtin,2,592487,0x7ff6521469c4,1000,ArrayOf
code-creation,Builtin,2,592506,0x7ff652146dc4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,592529,0x7ff652146f84,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,592551,0x7ff652147064,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,592573,0x7ff652147144,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,592598,0x7ff652147de4,2000,ArrayReduceRight
code-creation,Builtin,2,592618,0x7ff6521485c4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,592640,0x7ff652148684,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,592661,0x7ff652148764,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,592682,0x7ff652148844,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,592703,0x7ff652149504,1604,ArrayReduce
code-creation,Builtin,2,592722,0x7ff652149b64,3216,ArrayPrototypeReverse
code-creation,Builtin,2,592742,0x7ff65214a804,3592,ArrayPrototypeShift
code-creation,Builtin,2,592765,0x7ff65214b624,5220,ArrayPrototypeSlice
code-creation,Builtin,2,592789,0x7ff65214caa4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,592814,0x7ff65214cb84,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,592839,0x7ff65214cde4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,592862,0x7ff65214dae4,1448,ArraySome
code-creation,Builtin,2,592885,0x7ff65214e0a4,14216,ArrayPrototypeSplice
code-creation,Builtin,2,592908,0x7ff652151844,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,592931,0x7ff652152524,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,592956,0x7ff652152684,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,592981,0x7ff6521527e4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,593003,0x7ff6521528c4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,593025,0x7ff652152a24,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,593047,0x7ff652152b04,96,ArrayBufferIsView
code-creation,Builtin,2,593066,0x7ff652152b84,396,ToInteger
code-creation,Builtin,2,593086,0x7ff652152d24,3084,FastCreateDataProperty
code-creation,Builtin,2,593106,0x7ff652153944,676,CheckNumberInRange
code-creation,Builtin,2,593126,0x7ff652153c04,584,CheckSameObject
code-creation,Builtin,2,593145,0x7ff652153e64,904,BooleanConstructor
code-creation,Builtin,2,593165,0x7ff652154204,164,BooleanPrototypeToString
code-creation,Builtin,2,593194,0x7ff6521542c4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,593217,0x7ff652154364,1184,BigIntAddNoThrow
code-creation,Builtin,2,593238,0x7ff652154824,1280,BigIntAdd
code-creation,Builtin,2,593257,0x7ff652154d44,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,593277,0x7ff652155204,1280,BigIntSubtract
code-creation,Builtin,2,593296,0x7ff652155724,284,BigIntUnaryMinus
code-creation,Builtin,2,593316,0x7ff652155844,1360,ToString
code-creation,Builtin,2,593335,0x7ff652155da4,156,StringPrototypeToString
code-creation,Builtin,2,593356,0x7ff652155e44,156,StringPrototypeValueOf
code-creation,Builtin,2,593376,0x7ff652155ee4,2480,StringToList
code-creation,Builtin,2,593406,0x7ff6521568a4,1012,StringPrototypeCharAt
code-creation,Builtin,2,593427,0x7ff652156ca4,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,593448,0x7ff652156f64,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,593468,0x7ff652157484,400,StringPrototypeConcat
code-creation,Builtin,2,593489,0x7ff652157624,992,StringConstructor
code-creation,Builtin,2,593511,0x7ff652157a24,1436,StringAddConvertLeft
code-creation,Builtin,2,593535,0x7ff652157fc4,1464,StringAddConvertRight
code-creation,Builtin,2,593558,0x7ff652158584,816,StringCharAt
code-creation,Builtin,2,593580,0x7ff6521588c4,16,FastNewClosureBaseline
code-creation,Builtin,2,593603,0x7ff6521588e4,196,FastNewFunctionContextEval
code-creation,Builtin,2,593627,0x7ff6521589c4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,593651,0x7ff652158aa4,248,CreateRegExpLiteral
code-creation,Builtin,2,593674,0x7ff652158ba4,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,593698,0x7ff652158fe4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,593719,0x7ff6521591e4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,593740,0x7ff6521598c4,384,ObjectConstructor
code-creation,Builtin,2,594044,0x7ff652159a64,176,CreateEmptyLiteralObject
code-creation,Builtin,2,594075,0x7ff652159b24,536,NumberConstructor
code-creation,Builtin,2,594100,0x7ff652159d44,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,594125,0x7ff652159da4,64,StringToNumber
code-creation,Builtin,2,594148,0x7ff652159e04,184,NonNumberToNumber
code-creation,Builtin,2,594171,0x7ff652159ec4,240,NonNumberToNumeric
code-creation,Builtin,2,594194,0x7ff652159fc4,36,ToNumeric
code-creation,Builtin,2,594217,0x7ff65215a004,1184,NumberToString
code-creation,Builtin,2,594240,0x7ff65215a4c4,92,ToBoolean
code-creation,Builtin,2,594262,0x7ff65215a524,96,ToBooleanForBaselineJump
code-creation,Builtin,2,594286,0x7ff65215a5a4,728,ToLength
code-creation,Builtin,2,594308,0x7ff65215a884,1312,ToName
code-creation,Builtin,2,594328,0x7ff65215adc4,756,ToObject
code-creation,Builtin,2,594347,0x7ff65215b0c4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,594368,0x7ff65215b1a4,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,594389,0x7ff65215b284,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,594410,0x7ff65215b364,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,594430,0x7ff65215b4a4,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,594451,0x7ff65215b5e4,216,FastConsoleAssert
code-creation,Builtin,2,594470,0x7ff65215b6c4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,594494,0x7ff65215b784,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,594518,0x7ff65215b8e4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,594540,0x7ff65215ba44,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,594561,0x7ff65215bc84,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,594581,0x7ff65215bec4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,594602,0x7ff65215c164,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,594622,0x7ff65215c404,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,594643,0x7ff65215c744,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,594664,0x7ff65215ca04,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,594685,0x7ff65215cd64,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,594708,0x7ff65215d104,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,594738,0x7ff65215d4e4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,594764,0x7ff65215d8e4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,594785,0x7ff65215dca4,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,594806,0x7ff65215e064,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,594827,0x7ff65215e484,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,594847,0x7ff65215e8a4,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,594868,0x7ff65215ece4,1064,DataViewPrototypeSetInt32
tick,0x7ff651e4f453,594892,0,0x0,6
tick,0x7ff8da09fab3,594952,0,0x0,6
tick,0x7ff8da10ce44,594989,0,0x0,6
code-creation,Builtin,2,595025,0x7ff65215f124,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,595066,0x7ff65215f544,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,595090,0x7ff65215f9a4,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,595111,0x7ff65215fd64,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,595132,0x7ff652160124,828,FinalizationRegistryConstructor
code-creation,Builtin,2,595153,0x7ff652160464,1152,FinalizationRegistryRegister
code-creation,Builtin,2,595174,0x7ff652160904,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,595195,0x7ff652160ba4,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,595216,0x7ff652160d04,924,FastFunctionPrototypeBind
code-creation,Builtin,2,595237,0x7ff6521610a4,88,IncBlockCounter
code-creation,Builtin,2,595257,0x7ff652161104,228,GetTemplateObject
code-creation,Builtin,2,595276,0x7ff652161204,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,595297,0x7ff652161224,92,ForInNext
code-creation,Builtin,2,595317,0x7ff652161284,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,595337,0x7ff652161324,116,GetIteratorWithFeedback
code-creation,Builtin,2,595358,0x7ff6521613a4,100,GetIteratorBaseline
code-creation,Builtin,2,595377,0x7ff652161424,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,595399,0x7ff652161544,1084,CallIteratorWithFeedback
code-creation,Builtin,2,595419,0x7ff652161984,288,MathAbs
code-creation,Builtin,2,595438,0x7ff652161ac4,428,MathCeil
code-creation,Builtin,2,595456,0x7ff652161c84,432,MathFloor
code-creation,Builtin,2,595475,0x7ff652161e44,488,MathRound
code-creation,Builtin,2,595494,0x7ff652162044,428,MathTrunc
code-creation,Builtin,2,595513,0x7ff652162204,368,MathPow
code-creation,Builtin,2,595532,0x7ff652162384,396,MathMax
code-creation,Builtin,2,595551,0x7ff652162524,404,MathMin
code-creation,Builtin,2,595570,0x7ff6521626c4,320,MathAcos
code-creation,Builtin,2,595589,0x7ff652162824,320,MathAcosh
code-creation,Builtin,2,595608,0x7ff652162984,320,MathAsin
code-creation,Builtin,2,595627,0x7ff652162ae4,320,MathAsinh
code-creation,Builtin,2,595646,0x7ff652162c44,320,MathAtan
code-creation,Builtin,2,595665,0x7ff652162da4,416,MathAtan2
code-creation,Builtin,2,595684,0x7ff652162f64,320,MathAtanh
code-creation,Builtin,2,595703,0x7ff6521630c4,320,MathCbrt
code-creation,Builtin,2,595721,0x7ff652163224,168,MathClz32
code-creation,Builtin,2,595740,0x7ff6521632e4,320,MathCos
code-creation,Builtin,2,595759,0x7ff652163444,320,MathCosh
code-creation,Builtin,2,595778,0x7ff6521635a4,320,MathExp
code-creation,Builtin,2,595797,0x7ff652163704,320,MathExpm1
code-creation,Builtin,2,595816,0x7ff652163864,272,MathFround
code-creation,Builtin,2,595835,0x7ff652163984,304,MathImul
code-creation,Builtin,2,595854,0x7ff652163ac4,320,MathLog
code-creation,Builtin,2,595872,0x7ff652163c24,320,MathLog1p
code-creation,Builtin,2,595891,0x7ff652163d84,320,MathLog10
code-creation,Builtin,2,595910,0x7ff652163ee4,320,MathLog2
code-creation,Builtin,2,595929,0x7ff652164044,320,MathSin
code-creation,Builtin,2,595948,0x7ff6521641a4,180,MathSign
code-creation,Builtin,2,595984,0x7ff652164264,320,MathSinh
code-creation,Builtin,2,596004,0x7ff6521643c4,268,MathSqrt
code-creation,Builtin,2,596023,0x7ff6521644e4,320,MathTan
code-creation,Builtin,2,596042,0x7ff652164644,320,MathTanh
code-creation,Builtin,2,596060,0x7ff6521647a4,1060,MathHypot
code-creation,Builtin,2,596080,0x7ff652164be4,332,MathRandom
code-creation,Builtin,2,596189,0x7ff652164d44,2956,NumberPrototypeToString
code-creation,Builtin,2,596219,0x7ff6521658e4,136,NumberIsFinite
code-creation,Builtin,2,596241,0x7ff652165984,340,NumberIsInteger
code-creation,Builtin,2,596260,0x7ff652165ae4,116,NumberIsNaN
code-creation,Builtin,2,596280,0x7ff652165b64,372,NumberIsSafeInteger
code-creation,Builtin,2,596300,0x7ff652165ce4,156,NumberPrototypeValueOf
code-creation,Builtin,2,596320,0x7ff652165d84,196,NumberParseFloat
code-creation,Builtin,2,596340,0x7ff652165e64,248,ParseInt
code-creation,Builtin,2,596359,0x7ff652165f64,84,NumberParseInt
code-creation,Builtin,2,596378,0x7ff652165fc4,860,Add
code-creation,Builtin,2,596397,0x7ff652166324,424,Subtract
code-creation,Builtin,2,596416,0x7ff6521664e4,608,Multiply
code-creation,Builtin,2,596435,0x7ff652166764,532,Divide
code-creation,Builtin,2,596453,0x7ff652166984,592,Modulus
code-creation,Builtin,2,596472,0x7ff652166be4,524,Exponentiate
code-creation,Builtin,2,596491,0x7ff652166e04,344,Negate
code-creation,Builtin,2,596510,0x7ff652166f64,112,BitwiseNot
code-creation,Builtin,2,596529,0x7ff652166fe4,112,Decrement
code-creation,Builtin,2,596548,0x7ff652167064,112,Increment
code-creation,Builtin,2,596567,0x7ff6521670e4,392,ShiftLeft
code-creation,Builtin,2,596586,0x7ff652167284,392,ShiftRight
code-creation,Builtin,2,596605,0x7ff652167424,508,ShiftRightLogical
code-creation,Builtin,2,596624,0x7ff652167624,388,BitwiseAnd
code-creation,Builtin,2,596643,0x7ff6521677c4,388,BitwiseOr
code-creation,Builtin,2,596662,0x7ff652167964,388,BitwiseXor
code-creation,Builtin,2,596682,0x7ff652167b04,796,LessThan
code-creation,Builtin,2,596701,0x7ff652167e24,796,LessThanOrEqual
code-creation,Builtin,2,596720,0x7ff652168144,796,GreaterThan
code-creation,Builtin,2,596739,0x7ff652168464,796,GreaterThanOrEqual
code-creation,Builtin,2,596759,0x7ff652168784,860,Equal
code-creation,Builtin,2,596777,0x7ff652168ae4,348,StrictEqual
code-creation,Builtin,2,596796,0x7ff652168c44,3132,ObjectFromEntries
code-creation,Builtin,2,596817,0x7ff652169884,756,CreateObjectWithoutProperties
code-creation,Builtin,2,596844,0x7ff652169b84,144,ObjectIsExtensible
code-creation,Builtin,2,596899,0x7ff652169c24,148,ObjectPreventExtensions
code-creation,Builtin,2,596959,0x7ff652169cc4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,597018,0x7ff652169d64,300,ObjectSetPrototypeOf
code-creation,Builtin,2,597070,0x7ff652169ea4,80,ObjectPrototypeToString
code-creation,Builtin,2,597112,0x7ff652169f04,96,ObjectPrototypeValueOf
code-creation,Builtin,2,597158,0x7ff652169f84,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,597182,0x7ff65216a044,868,FulfillPromise
code-creation,Builtin,2,597232,0x7ff65216a3c4,988,RejectPromise
code-creation,Builtin,2,597268,0x7ff65216a7a4,2416,NewPromiseCapability
code-creation,Builtin,2,597300,0x7ff65216b124,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,597334,0x7ff65216b1e4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,597368,0x7ff65216b284,1416,PerformPromiseThen
code-creation,Builtin,2,597402,0x7ff65216b824,648,PromiseReject
code-creation,Builtin,2,597448,0x7ff65216bac4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,597475,0x7ff65216bbe4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,597497,0x7ff65216bc64,4560,PromiseAll
code-creation,Builtin,2,597517,0x7ff65216ce44,4880,PromiseAllSettled
code-creation,Builtin,2,597536,0x7ff65216e164,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,597557,0x7ff65216e5c4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,597579,0x7ff65216eb44,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,597601,0x7ff65216f0c4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,597622,0x7ff65216f564,2368,PromiseAny
code-creation,Builtin,2,597641,0x7ff65216fec4,2908,PromiseConstructor
code-creation,Builtin,2,597661,0x7ff652170a24,296,PromisePrototypeCatch
code-creation,Builtin,2,597682,0x7ff652170b64,88,PromiseValueThunkFinally
code-creation,Builtin,2,597702,0x7ff652170bc4,84,PromiseThrowerFinally
code-creation,Builtin,2,597764,0x7ff652170c24,904,PromiseCatchFinally
code-creation,Builtin,2,597808,0x7ff652170fc4,904,PromiseThenFinally
code-creation,Builtin,2,597843,0x7ff652171364,1700,PromisePrototypeFinally
code-creation,Builtin,2,597877,0x7ff652171a24,1336,PromiseRace
code-creation,Builtin,2,597912,0x7ff652171f64,268,PromiseFulfillReactionJob
code-creation,Builtin,2,597947,0x7ff652172084,364,PromiseRejectReactionJob
code-creation,Builtin,2,597988,0x7ff652172204,156,PromiseResolveTrampoline
code-creation,Builtin,2,598024,0x7ff6521722a4,656,PromiseResolve
code-creation,Builtin,2,598059,0x7ff652172544,712,ResolvePromise
code-creation,Builtin,2,598094,0x7ff652172824,2224,PromisePrototypeThen
code-creation,Builtin,2,598130,0x7ff6521730e4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,598166,0x7ff652173564,448,ProxyConstructor
code-creation,Builtin,2,598202,0x7ff652173744,1760,ProxyDeleteProperty
code-creation,Builtin,2,598309,0x7ff652173e44,2112,ProxyGetProperty
code-creation,Builtin,2,598370,0x7ff6521746a4,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,598462,0x7ff652174ae4,1668,ProxyHasProperty
code-creation,Builtin,2,598512,0x7ff652175184,760,ProxyIsExtensible
code-creation,Builtin,2,598558,0x7ff652175484,800,ProxyPreventExtensions
code-creation,Builtin,2,598580,0x7ff6521757c4,1148,ProxyRevocable
code-creation,Builtin,2,598601,0x7ff652175c44,120,ProxyRevoke
code-creation,Builtin,2,598620,0x7ff652175cc4,2216,ProxySetProperty
code-creation,Builtin,2,598640,0x7ff652176584,1292,ProxySetPrototypeOf
code-creation,Builtin,2,598660,0x7ff652176aa4,208,ReflectIsExtensible
code-creation,Builtin,2,598680,0x7ff652176b84,212,ReflectPreventExtensions
code-creation,Builtin,2,598701,0x7ff652176c64,188,ReflectGetPrototypeOf
code-creation,Builtin,2,598721,0x7ff652176d24,292,ReflectSetPrototypeOf
code-creation,Builtin,2,598741,0x7ff652176e64,284,ReflectGet
code-creation,Builtin,2,598760,0x7ff652176f84,160,ReflectDeleteProperty
code-creation,Builtin,2,598779,0x7ff652177044,148,ReflectHas
code-creation,Builtin,2,598799,0x7ff6521770e4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,598819,0x7ff652178504,5104,RegExpPrototypeExec
code-creation,Builtin,2,598839,0x7ff652179904,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,598859,0x7ff65217a244,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,598881,0x7ff65217c724,8840,RegExpMatchFast
code-creation,Builtin,2,598900,0x7ff65217e9c4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,598921,0x7ff65217f7e4,6328,RegExpReplace
code-creation,Builtin,2,598940,0x7ff6521810a4,524,RegExpPrototypeReplace
code-creation,Builtin,2,598960,0x7ff6521812c4,1424,RegExpSearchFast
code-creation,Builtin,2,598984,0x7ff652181864,1640,RegExpPrototypeSearch
code-creation,Builtin,2,599005,0x7ff652181ee4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,599026,0x7ff652181fc4,5872,RegExpSplit
code-creation,Builtin,2,599046,0x7ff6521836c4,476,RegExpPrototypeSplit
code-creation,Builtin,2,599066,0x7ff6521838a4,2252,RegExpPrototypeTest
code-creation,Builtin,2,599086,0x7ff652184184,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,599106,0x7ff6521846e4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,599127,0x7ff6521847e4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,599148,0x7ff6521848e4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,599169,0x7ff6521849e4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,599190,0x7ff652184ae4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,599227,0x7ff652184be4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,599248,0x7ff652184ce4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,599269,0x7ff652184e04,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,599290,0x7ff652184f24,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,599311,0x7ff652185804,1500,StringPrototypeAt
code-creation,Builtin,2,599331,0x7ff652185de4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,599351,0x7ff6521869c4,480,CreateHTML
code-creation,Builtin,2,599370,0x7ff652186bc4,164,StringPrototypeAnchor
code-creation,Builtin,2,599397,0x7ff652186c84,128,StringPrototypeBig
code-creation,Builtin,2,599423,0x7ff652186d24,128,StringPrototypeBlink
code-creation,Builtin,2,599444,0x7ff652186dc4,128,StringPrototypeBold
code-creation,Builtin,2,599464,0x7ff652186e64,168,StringPrototypeFontcolor
code-creation,Builtin,2,599484,0x7ff652186f24,168,StringPrototypeFontsize
code-creation,Builtin,2,599504,0x7ff652186fe4,128,StringPrototypeFixed
code-creation,Builtin,2,599525,0x7ff652187084,128,StringPrototypeItalics
code-creation,Builtin,2,599545,0x7ff652187124,168,StringPrototypeLink
code-creation,Builtin,2,599564,0x7ff6521871e4,128,StringPrototypeSmall
code-creation,Builtin,2,599584,0x7ff652187284,128,StringPrototypeStrike
code-creation,Builtin,2,599604,0x7ff652187324,128,StringPrototypeSub
code-creation,Builtin,2,599624,0x7ff6521873c4,128,StringPrototypeSup
code-creation,Builtin,2,599644,0x7ff652187464,1028,StringPrototypeIncludes
code-creation,Builtin,2,599664,0x7ff652187884,628,StringPrototypeIndexOf
code-creation,Builtin,2,599685,0x7ff652187b04,344,StringPrototypeIterator
code-creation,Builtin,2,599705,0x7ff652187c64,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,599726,0x7ff652188464,1304,StringPrototypeMatch
code-creation,Builtin,2,599746,0x7ff652188984,1304,StringPrototypeSearch
code-creation,Builtin,2,599766,0x7ff652188ea4,824,StringPrototypePadStart
code-creation,Builtin,2,599786,0x7ff6521891e4,824,StringPrototypePadEnd
code-creation,Builtin,2,599806,0x7ff652189524,120,StringRepeat
code-creation,Builtin,2,599825,0x7ff6521895a4,400,StringPrototypeRepeat
code-creation,Builtin,2,599845,0x7ff652189744,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,599866,0x7ff65218c304,3388,StringPrototypeSlice
code-creation,Builtin,2,599886,0x7ff65218d044,3028,StringPrototypeStartsWith
code-creation,Builtin,2,599908,0x7ff65218dc24,3328,StringPrototypeSubstr
code-creation,Builtin,2,599928,0x7ff65218e944,3260,StringPrototypeSubstring
code-creation,Builtin,2,599948,0x7ff65218f604,6916,StringPrototypeTrim
code-creation,Builtin,2,599968,0x7ff652191124,6332,StringPrototypeTrimStart
code-creation,Builtin,2,599994,0x7ff6521929e4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,600015,0x7ff6521940c4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,600036,0x7ff652194184,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,600057,0x7ff652194224,172,SymbolPrototypeToString
code-creation,Builtin,2,600077,0x7ff6521942e4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,600097,0x7ff652194384,832,TypedArrayPrototypeAt
code-creation,Builtin,2,600117,0x7ff6521946e4,10064,CreateTypedArray
code-creation,Builtin,2,600137,0x7ff652196e44,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,600158,0x7ff652197244,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,600178,0x7ff6521973c4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,600199,0x7ff652198184,996,TypedArrayPrototypeFind
code-creation,Builtin,2,600219,0x7ff652198584,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,600240,0x7ff652198984,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,600262,0x7ff652198b44,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,600282,0x7ff652199004,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,600304,0x7ff6521991c4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,600326,0x7ff6521996a4,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,600346,0x7ff652199a24,2352,TypedArrayFrom
code-creation,Builtin,2,600366,0x7ff65219a364,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,600386,0x7ff65219a4e4,1028,TypedArrayOf
code-creation,Builtin,2,600405,0x7ff65219a904,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,600425,0x7ff65219acc4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,600446,0x7ff65219b084,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,600467,0x7ff65219ba64,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,600487,0x7ff65219c664,992,TypedArrayPrototypeSome
code-creation,Builtin,2,600507,0x7ff65219ca64,1060,TypedArrayMergeSort
code-creation,Builtin,2,600531,0x7ff65219cea4,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,600555,0x7ff65219d504,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,600576,0x7ff65219dfc4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,600597,0x7ff65219e144,952,WeakRefConstructor
code-creation,Builtin,2,600617,0x7ff65219e504,184,WeakRefDeref
code-creation,Builtin,2,600636,0x7ff65219e5c4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,600656,0x7ff65219e884,296,NewStrictArgumentsElements
code-creation,Builtin,2,600676,0x7ff65219e9c4,320,NewRestArgumentsElements
code-creation,Builtin,2,600701,0x7ff65219eb24,1388,FastNewSloppyArguments
code-creation,Builtin,2,600722,0x7ff65219f0a4,524,FastNewStrictArguments
code-creation,Builtin,2,600742,0x7ff65219f2c4,556,FastNewRestArguments
code-creation,Builtin,2,600762,0x7ff65219f504,676,StringSlowFlatten
code-creation,Builtin,2,600781,0x7ff65219f7c4,2068,StringIndexOf
code-creation,Builtin,2,600801,0x7ff65219ffe4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,600821,0x7ff6521a0004,20,TestHelperPlus1
code-creation,Builtin,2,600840,0x7ff6521a0024,20,TestHelperPlus2
code-creation,Builtin,2,600859,0x7ff6521a0044,96,NewSmiBox
code-creation,Builtin,2,600878,0x7ff6521a00c4,24,ReturnTwoValues
code-creation,Builtin,2,600898,0x7ff6521a00e4,32,Load_FastSmiElements_0
code-creation,Builtin,2,600918,0x7ff6521a0124,32,Load_FastObjectElements_0
code-creation,Builtin,2,600938,0x7ff6521a0164,144,Load_FastDoubleElements_0
code-creation,Builtin,2,600958,0x7ff6521a0204,32,Store_FastSmiElements_0
code-creation,Builtin,2,600980,0x7ff6521a0244,96,Store_FastObjectElements_0
code-creation,Builtin,2,601001,0x7ff6521a02c4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,601021,0x7ff6521a0304,36,Delete_FastSmiElements_0
code-creation,Builtin,2,601042,0x7ff6521a0344,36,Delete_FastObjectElements_0
code-creation,Builtin,2,601062,0x7ff6521a0384,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,601082,0x7ff6521a03c4,308,SortCompareDefault
code-creation,Builtin,2,601102,0x7ff6521a0504,92,SortCompareUserFn
code-creation,Builtin,2,601121,0x7ff6521a0564,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,601143,0x7ff6521a0584,312,Copy
code-creation,Builtin,2,601162,0x7ff6521a06c4,5776,MergeAt
code-creation,Builtin,2,601181,0x7ff6521a1d64,792,GallopLeft
code-creation,Builtin,2,601200,0x7ff6521a2084,832,GallopRight
code-creation,Builtin,2,601219,0x7ff6521a23e4,3832,ArrayTimSort
code-creation,Builtin,2,601238,0x7ff6521a32e4,2112,ArrayPrototypeSort
code-creation,Builtin,2,601258,0x7ff6521a3b44,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,601278,0x7ff6521a3bc4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,601298,0x7ff6521a3c44,76,WasmTaggedToFloat64
code-creation,Builtin,2,601318,0x7ff6521a3ca4,72,WasmMemoryGrow
code-creation,Builtin,2,601338,0x7ff6521a3d04,100,WasmTableInit
code-creation,Builtin,2,601357,0x7ff6521a3d84,100,WasmTableCopy
code-creation,Builtin,2,601376,0x7ff6521a3e04,84,WasmTableFill
code-creation,Builtin,2,601395,0x7ff6521a3e64,72,WasmTableGrow
code-creation,Builtin,2,601414,0x7ff6521a3ec4,144,WasmTableGet
code-creation,Builtin,2,601433,0x7ff6521a3f64,236,WasmTableSet
code-creation,Builtin,2,601453,0x7ff6521a4064,88,WasmRefFunc
code-creation,Builtin,2,601474,0x7ff6521a40c4,144,WasmAllocateFixedArray
code-creation,Builtin,2,601495,0x7ff6521a4164,44,WasmThrow
code-creation,Builtin,2,601514,0x7ff6521a41a4,52,WasmRethrow
code-creation,Builtin,2,601534,0x7ff6521a41e4,44,WasmTriggerTierUp
code-creation,Builtin,2,601553,0x7ff6521a4224,32,WasmStackGuard
code-creation,Builtin,2,601572,0x7ff6521a4264,32,WasmStackOverflow
code-creation,Builtin,2,601592,0x7ff6521a42a4,40,WasmTraceMemory
code-creation,Builtin,2,601611,0x7ff6521a42e4,32,WasmTraceEnter
code-creation,Builtin,2,601631,0x7ff6521a4324,40,WasmTraceExit
code-creation,Builtin,2,601649,0x7ff6521a4364,332,WasmAllocateJSArray
code-creation,Builtin,2,601669,0x7ff6521a44c4,104,WasmAllocatePair
code-creation,Builtin,2,601689,0x7ff6521a4544,64,WasmAllocateRtt
code-creation,Builtin,2,601708,0x7ff6521a45a4,72,WasmAllocateFreshRtt
code-creation,Builtin,2,601734,0x7ff6521a4604,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,601757,0x7ff6521a4684,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,601779,0x7ff6521a4724,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,601800,0x7ff6521a47e4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,601820,0x7ff6521a48a4,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,601840,0x7ff6521a4924,60,WasmArrayCopy
code-creation,Builtin,2,601859,0x7ff6521a4964,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,601880,0x7ff6521a4a64,52,WasmSubtypeCheck
code-creation,Builtin,2,601900,0x7ff6521a4aa4,8,WasmInt32ToNumber
code-creation,Builtin,2,601919,0x7ff6521a4ac4,116,WasmUint32ToNumber
code-creation,Builtin,2,601939,0x7ff6521a4b44,144,UintPtr53ToNumber
code-creation,Builtin,2,601959,0x7ff6521a4be4,96,WasmAtomicNotify
code-creation,Builtin,2,601980,0x7ff6521a4c64,116,WasmI32AtomicWait64
code-creation,Builtin,2,602000,0x7ff6521a4ce4,116,WasmI64AtomicWait64
code-creation,Builtin,2,602020,0x7ff6521a4d64,580,WasmGetOwnProperty
code-creation,Builtin,2,602040,0x7ff6521a4fc4,40,WasmTrap
code-creation,Builtin,2,602059,0x7ff6521a5004,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,602079,0x7ff6521a5024,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,602099,0x7ff6521a5044,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,602120,0x7ff6521a5064,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,602140,0x7ff6521a5084,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,602161,0x7ff6521a50a4,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,602181,0x7ff6521a50c4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,602203,0x7ff6521a50e4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,602223,0x7ff6521a5104,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,602244,0x7ff6521a5124,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,602265,0x7ff6521a5144,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,602285,0x7ff6521a5164,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,602305,0x7ff6521a5184,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,602326,0x7ff6521a51a4,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,602346,0x7ff6521a51c4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,602366,0x7ff6521a51e4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,602387,0x7ff6521a5204,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,602408,0x7ff6521a52c4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,602430,0x7ff6521a52e4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,602451,0x7ff6521a5364,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,602473,0x7ff6521a53e4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,602494,0x7ff6521a5404,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,602516,0x7ff6521a54e4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,602538,0x7ff6521a55e4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,602559,0x7ff6521a5604,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,602580,0x7ff6521a5624,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,602601,0x7ff6521a5644,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,602623,0x7ff6521a5664,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,602644,0x7ff6521a5704,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,602664,0x7ff6521a5724,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,602685,0x7ff6521a5764,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,602707,0x7ff6521a57a4,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,602728,0x7ff6521a57e4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,602750,0x7ff6521a6264,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,602771,0x7ff6521a6284,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,602792,0x7ff6521a62c4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,602817,0x7ff6521a62e4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,602841,0x7ff6521a63a4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,602863,0x7ff6521a6464,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,602885,0x7ff6521a64e4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,602907,0x7ff6521a6524,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,602928,0x7ff6521a65c4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,602950,0x7ff6521a6644,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,602972,0x7ff6521a6664,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,602998,0x7ff6521a6704,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,603020,0x7ff6521a6724,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,603042,0x7ff6521a6744,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,603064,0x7ff6521a69c4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,603085,0x7ff6521a6aa4,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,603115,0x7ff6521a6ae4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,603137,0x7ff6521a6bc4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,603158,0x7ff6521a6cc4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,603179,0x7ff6521a6d04,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,603201,0x7ff6521a6de4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,603222,0x7ff6521a6e04,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,603243,0x7ff6521a6e24,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,603265,0x7ff6521a6ee4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,603285,0x7ff6521a6f04,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,603307,0x7ff6521a6f24,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,603329,0x7ff6521a6fe4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,603350,0x7ff6521a7004,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,603371,0x7ff6521a7024,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,603393,0x7ff6521a70e4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,603414,0x7ff6521a7104,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,603435,0x7ff6521a7124,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,603457,0x7ff6521a71e4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,603478,0x7ff6521a7284,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,603500,0x7ff6521a7344,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,603521,0x7ff6521a7404,12,CollatorConstructor
code-creation,Builtin,2,603541,0x7ff6521a7424,12,CollatorInternalCompare
code-creation,Builtin,2,603561,0x7ff6521a7444,12,CollatorPrototypeCompare
code-creation,Builtin,2,603581,0x7ff6521a7464,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,603602,0x7ff6521a7484,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,603623,0x7ff6521a74a4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,603643,0x7ff6521a74c4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,603664,0x7ff6521a74e4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,603684,0x7ff6521a7504,12,DateTimeFormatConstructor
code-creation,Builtin,2,603705,0x7ff6521a7524,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,603725,0x7ff6521a7544,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,603746,0x7ff6521a7564,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,603767,0x7ff6521a7584,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,603788,0x7ff6521a75a4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,603810,0x7ff6521a75c4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,603831,0x7ff6521a75e4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,603856,0x7ff6521a7604,12,DisplayNamesConstructor
code-creation,Builtin,2,603878,0x7ff6521a7624,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,603899,0x7ff6521a7644,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,603920,0x7ff6521a7664,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,603941,0x7ff6521a7684,12,IntlGetCanonicalLocales
code-creation,Builtin,2,603961,0x7ff6521a76a4,12,ListFormatConstructor
code-creation,Builtin,2,603983,0x7ff6521a76c4,224,ListFormatPrototypeFormat
tick,0x7ff8da10ce44,604102,0,0x0,6
code-creation,Builtin,2,604193,0x7ff6521a77c4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,604261,0x7ff6521a78c4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,604316,0x7ff6521a78e4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,604346,0x7ff6521a7904,12,LocaleConstructor
code-creation,Builtin,2,604367,0x7ff6521a7924,12,LocalePrototypeBaseName
code-creation,Builtin,2,604388,0x7ff6521a7944,12,LocalePrototypeCalendar
code-creation,Builtin,2,604408,0x7ff6521a7964,12,LocalePrototypeCalendars
code-creation,Builtin,2,604428,0x7ff6521a7984,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,604449,0x7ff6521a79a4,12,LocalePrototypeCollation
code-creation,Builtin,2,604469,0x7ff6521a79c4,12,LocalePrototypeCollations
code-creation,Builtin,2,604490,0x7ff6521a79e4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,604510,0x7ff6521a7a04,12,LocalePrototypeHourCycles
code-creation,Builtin,2,604530,0x7ff6521a7a24,12,LocalePrototypeLanguage
code-creation,Builtin,2,604550,0x7ff6521a7a44,12,LocalePrototypeMaximize
code-creation,Builtin,2,604570,0x7ff6521a7a64,12,LocalePrototypeMinimize
code-creation,Builtin,2,604590,0x7ff6521a7a84,12,LocalePrototypeNumeric
code-creation,Builtin,2,604610,0x7ff6521a7aa4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,604631,0x7ff6521a7ac4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,604651,0x7ff6521a7ae4,12,LocalePrototypeRegion
code-creation,Builtin,2,604671,0x7ff6521a7b04,12,LocalePrototypeScript
code-creation,Builtin,2,604691,0x7ff6521a7b24,12,LocalePrototypeTextInfo
code-creation,Builtin,2,604712,0x7ff6521a7b44,12,LocalePrototypeTimeZones
code-creation,Builtin,2,604732,0x7ff6521a7b64,12,LocalePrototypeToString
code-creation,Builtin,2,604752,0x7ff6521a7b84,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,604772,0x7ff6521a7ba4,12,NumberFormatConstructor
code-creation,Builtin,2,604792,0x7ff6521a7bc4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,604813,0x7ff6521a7be4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,604834,0x7ff6521a7c04,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,604855,0x7ff6521a7c24,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,604877,0x7ff6521a7c44,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,604898,0x7ff6521a7c64,12,PluralRulesConstructor
code-creation,Builtin,2,604918,0x7ff6521a7c84,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,604939,0x7ff6521a7ca4,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,604959,0x7ff6521a7cc4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,604984,0x7ff6521a7ce4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,605005,0x7ff6521a7d04,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,605027,0x7ff6521a7d24,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,605048,0x7ff6521a7d44,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,605070,0x7ff6521a7d64,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,605092,0x7ff6521a7d84,12,SegmenterConstructor
code-creation,Builtin,2,605111,0x7ff6521a7da4,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,605132,0x7ff6521a7dc4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,605152,0x7ff6521a7de4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,605173,0x7ff6521a7e04,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,605194,0x7ff6521a7e24,12,SegmentsPrototypeContaining
code-creation,Builtin,2,605221,0x7ff6521a7e44,12,SegmentsPrototypeIterator
code-creation,Builtin,2,605246,0x7ff6521a7e64,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,605267,0x7ff6521a7e84,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,605289,0x7ff6521a7ea4,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,605310,0x7ff6521a7ec4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,605330,0x7ff6521a7fa4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,605351,0x7ff6521a7fc4,636,StringToLowerCaseIntl
code-creation,Builtin,2,605372,0x7ff6521a8244,12,V8BreakIteratorConstructor
code-creation,Builtin,2,605392,0x7ff6521a8264,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,605413,0x7ff6521a8284,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,605434,0x7ff6521a82a4,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,605455,0x7ff6521a82c4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,605476,0x7ff6521a82e4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,605496,0x7ff6521a8304,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,605517,0x7ff6521a8324,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,605539,0x7ff6521a8344,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,605560,0x7ff6521a8364,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,605580,0x7ff6521a8384,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,605601,0x7ff6521a83a4,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,605622,0x7ff6521a83c4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,605645,0x7ff6521a83e4,24,Wide
code-creation,BytecodeHandler,0,605665,0x7ff6521a8404,24,ExtraWide
code-creation,BytecodeHandler,0,605686,0x7ff6521a8424,104,DebugBreakWide
code-creation,BytecodeHandler,0,605707,0x7ff6521a84a4,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,605729,0x7ff6521a8524,164,DebugBreak0
code-creation,BytecodeHandler,0,605749,0x7ff6521a85e4,104,DebugBreak1
code-creation,BytecodeHandler,0,605769,0x7ff6521a8664,104,DebugBreak2
code-creation,BytecodeHandler,0,605789,0x7ff6521a86e4,104,DebugBreak3
code-creation,BytecodeHandler,0,605809,0x7ff6521a8764,104,DebugBreak4
code-creation,BytecodeHandler,0,605829,0x7ff6521a87e4,104,DebugBreak5
code-creation,BytecodeHandler,0,605848,0x7ff6521a8864,104,DebugBreak6
code-creation,BytecodeHandler,0,605868,0x7ff6521a88e4,32,Ldar
code-creation,BytecodeHandler,0,605887,0x7ff6521a8924,68,LdaZero
code-creation,BytecodeHandler,0,605907,0x7ff6521a8984,76,LdaSmi
code-creation,BytecodeHandler,0,605926,0x7ff6521a89e4,68,LdaUndefined
code-creation,BytecodeHandler,0,605946,0x7ff6521a8a44,68,LdaNull
code-creation,BytecodeHandler,0,605966,0x7ff6521a8aa4,68,LdaTheHole
code-creation,BytecodeHandler,0,605990,0x7ff6521a8b04,20,LdaTrue
code-creation,BytecodeHandler,0,606010,0x7ff6521a8b24,20,LdaFalse
code-creation,BytecodeHandler,0,606029,0x7ff6521a8b44,76,LdaConstant
code-creation,BytecodeHandler,0,606049,0x7ff6521a8ba4,132,LdaContextSlot
code-creation,BytecodeHandler,0,606070,0x7ff6521a8c44,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,606091,0x7ff6521a8ce4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,606112,0x7ff6521a8d44,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,606134,0x7ff6521a8da4,32,Star
code-creation,BytecodeHandler,0,606153,0x7ff6521a8de4,40,Mov
code-creation,BytecodeHandler,0,606172,0x7ff6521a8e24,40,PushContext
code-creation,BytecodeHandler,0,606192,0x7ff6521a8e64,36,PopContext
code-creation,BytecodeHandler,0,606212,0x7ff6521a8ea4,48,TestReferenceEqual
code-creation,BytecodeHandler,0,606233,0x7ff6521a8ee4,52,TestUndetectable
code-creation,BytecodeHandler,0,606254,0x7ff6521a8f24,36,TestNull
code-creation,BytecodeHandler,0,606286,0x7ff6521a8f64,36,TestUndefined
code-creation,BytecodeHandler,0,606307,0x7ff6521a8fa4,336,TestTypeOf
code-creation,BytecodeHandler,0,606327,0x7ff6521a9104,6036,LdaGlobal
code-creation,BytecodeHandler,0,606348,0x7ff6521aa8a4,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,606369,0x7ff6521aba64,168,StaGlobal
code-creation,BytecodeHandler,0,606394,0x7ff6521abb24,160,StaContextSlot
code-creation,BytecodeHandler,0,606418,0x7ff6521abbe4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,606439,0x7ff6521abc64,124,LdaLookupSlot
code-creation,BytecodeHandler,0,606460,0x7ff6521abce4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,606480,0x7ff6521abde4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,606501,0x7ff6521ad0a4,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,606524,0x7ff6521ad124,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,606546,0x7ff6521ad224,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,606568,0x7ff6521ae4c4,220,StaLookupSlot
code-creation,BytecodeHandler,0,606589,0x7ff6521ae5a4,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,606610,0x7ff6521afa24,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,606631,0x7ff6521afae4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,606652,0x7ff6521afbc4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,606673,0x7ff6521afc84,292,StaModuleVariable
code-creation,BytecodeHandler,0,606694,0x7ff6521afdc4,172,StaNamedProperty
code-creation,BytecodeHandler,0,606714,0x7ff6521afe84,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,606735,0x7ff6521aff44,164,StaKeyedProperty
code-creation,BytecodeHandler,0,606756,0x7ff6521b0004,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,606776,0x7ff6521b00c4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,606798,0x7ff6521b01a4,160,CollectTypeProfile
code-creation,BytecodeHandler,0,606819,0x7ff6521b0264,1028,Add
code-creation,BytecodeHandler,0,606838,0x7ff6521b0684,1064,Sub
code-creation,BytecodeHandler,0,606857,0x7ff6521b0ac4,1024,Mul
code-creation,BytecodeHandler,0,606876,0x7ff6521b0ee4,988,Div
code-creation,BytecodeHandler,0,606896,0x7ff6521b12c4,912,Mod
code-creation,BytecodeHandler,0,606915,0x7ff6521b1664,964,Exp
code-creation,BytecodeHandler,0,606934,0x7ff6521b1a44,876,BitwiseOr
code-creation,BytecodeHandler,0,606956,0x7ff6521b1dc4,888,BitwiseXor
code-creation,BytecodeHandler,0,606991,0x7ff6521b2144,888,BitwiseAnd
code-creation,BytecodeHandler,0,607062,0x7ff6521b24c4,900,ShiftLeft
code-creation,BytecodeHandler,0,607097,0x7ff6521b2864,900,ShiftRight
code-creation,BytecodeHandler,0,607129,0x7ff6521b2c04,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,607163,0x7ff6521b3004,960,AddSmi
code-creation,BytecodeHandler,0,607197,0x7ff6521b33e4,1000,SubSmi
code-creation,BytecodeHandler,0,607241,0x7ff6521b37e4,916,MulSmi
code-creation,BytecodeHandler,0,607277,0x7ff6521b3b84,920,DivSmi
code-creation,BytecodeHandler,0,607297,0x7ff6521b3f24,816,ModSmi
code-creation,BytecodeHandler,0,607317,0x7ff6521b4264,872,ExpSmi
code-creation,BytecodeHandler,0,607336,0x7ff6521b45e4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,607357,0x7ff6521b47e4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,607377,0x7ff6521b49e4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,607397,0x7ff6521b4be4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,607417,0x7ff6521b4de4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,607437,0x7ff6521b4fe4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,607458,0x7ff6521b5284,656,Inc
code-creation,BytecodeHandler,0,607477,0x7ff6521b5524,656,Dec
code-creation,BytecodeHandler,0,607496,0x7ff6521b57c4,640,Negate
code-creation,BytecodeHandler,0,607515,0x7ff6521b5a64,480,BitwiseNot
code-creation,BytecodeHandler,0,607535,0x7ff6521b5c64,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,607556,0x7ff6521b5ce4,36,LogicalNot
code-creation,BytecodeHandler,0,607576,0x7ff6521b5d24,208,TypeOf
code-creation,BytecodeHandler,0,607596,0x7ff6521b5e04,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,607617,0x7ff6521b5e84,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,607638,0x7ff6521b5f04,40,GetSuperConstructor
code-creation,BytecodeHandler,0,607658,0x7ff6521b5f44,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,607679,0x7ff6521b63c4,1132,CallProperty
code-creation,BytecodeHandler,0,607705,0x7ff6521b6844,1012,CallProperty0
code-creation,BytecodeHandler,0,607729,0x7ff6521b6c44,1028,CallProperty1
code-creation,BytecodeHandler,0,607750,0x7ff6521b7064,1040,CallProperty2
code-creation,BytecodeHandler,0,607770,0x7ff6521b7484,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,607792,0x7ff6521b7884,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,607814,0x7ff6521b7ca4,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,607835,0x7ff6521b80a4,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,607856,0x7ff6521b84c4,1132,CallWithSpread
code-creation,BytecodeHandler,0,607876,0x7ff6521b8944,124,CallRuntime
code-creation,BytecodeHandler,0,607896,0x7ff6521b89c4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,607917,0x7ff6521b8a64,80,CallJSRuntime
code-creation,BytecodeHandler,0,607937,0x7ff6521b8ac4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,607957,0x7ff6521b8fa4,1020,Construct
code-creation,BytecodeHandler,0,607980,0x7ff6521b93a4,536,ConstructWithSpread
code-creation,BytecodeHandler,0,608041,0x7ff6521b95c4,1936,TestEqual
code-creation,BytecodeHandler,0,608054,0x7ff6521b9d64,1064,TestEqualStrict
code-creation,BytecodeHandler,0,608066,0x7ff6521ba1a4,1624,TestLessThan
code-creation,BytecodeHandler,0,608078,0x7ff6521ba804,1624,TestGreaterThan
code-creation,BytecodeHandler,0,608091,0x7ff6521bae64,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,608103,0x7ff6521bb4c4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,608116,0x7ff6521bbb24,860,TestInstanceOf
code-creation,BytecodeHandler,0,608128,0x7ff6521bbe84,156,TestIn
code-creation,BytecodeHandler,0,608140,0x7ff6521bbf24,112,ToName
code-creation,BytecodeHandler,0,608152,0x7ff6521bbfa4,212,ToNumber
code-creation,BytecodeHandler,0,608164,0x7ff6521bc084,232,ToNumeric
code-creation,BytecodeHandler,0,608175,0x7ff6521bc184,112,ToObject
code-creation,BytecodeHandler,0,608187,0x7ff6521bc204,116,ToString
code-creation,BytecodeHandler,0,608199,0x7ff6521bc284,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,608211,0x7ff6521bc424,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,608224,0x7ff6521bc9e4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,608236,0x7ff6521bca44,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,608249,0x7ff6521bcd64,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,608262,0x7ff6521bd5c4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,608275,0x7ff6521bd6c4,168,CloneObject
code-creation,BytecodeHandler,0,608287,0x7ff6521bd784,212,GetTemplateObject
code-creation,BytecodeHandler,0,608299,0x7ff6521bd864,328,CreateClosure
code-creation,BytecodeHandler,0,608311,0x7ff6521bd9c4,120,CreateBlockContext
code-creation,BytecodeHandler,0,608323,0x7ff6521bda44,132,CreateCatchContext
code-creation,BytecodeHandler,0,608336,0x7ff6521bdae4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,608348,0x7ff6521bdc04,256,CreateEvalContext
code-creation,BytecodeHandler,0,608360,0x7ff6521bdd24,132,CreateWithContext
code-creation,BytecodeHandler,0,608373,0x7ff6521bddc4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,608385,0x7ff6521be404,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,608398,0x7ff6521be664,632,CreateRestParameter
code-creation,BytecodeHandler,0,608410,0x7ff6521be8e4,424,JumpLoop
code-creation,BytecodeHandler,0,608422,0x7ff6521beaa4,44,Jump
code-creation,BytecodeHandler,0,608433,0x7ff6521beae4,56,JumpConstant
code-creation,BytecodeHandler,0,608445,0x7ff6521beb24,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,608457,0x7ff6521beb84,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,608470,0x7ff6521bebe4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,608482,0x7ff6521bec44,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,608495,0x7ff6521beca4,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,608508,0x7ff6521bed04,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,608520,0x7ff6521bed64,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,608533,0x7ff6521bedc4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,608548,0x7ff6521bee24,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,608563,0x7ff6521beec4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,608576,0x7ff6521bef64,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,608589,0x7ff6521bf004,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,608601,0x7ff6521bf0a4,64,JumpIfTrue
code-creation,BytecodeHandler,0,608613,0x7ff6521bf104,64,JumpIfFalse
code-creation,BytecodeHandler,0,608625,0x7ff6521bf164,64,JumpIfNull
code-creation,BytecodeHandler,0,608636,0x7ff6521bf1c4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,608648,0x7ff6521bf224,64,JumpIfUndefined
code-creation,BytecodeHandler,0,608660,0x7ff6521bf284,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,608672,0x7ff6521bf2e4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,608685,0x7ff6521bf344,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,608697,0x7ff6521bf3a4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,608710,0x7ff6521bf424,464,ForInEnumerate
code-creation,BytecodeHandler,0,608722,0x7ff6521bf604,252,ForInPrepare
code-creation,BytecodeHandler,0,608734,0x7ff6521bf704,60,ForInContinue
code-creation,BytecodeHandler,0,608746,0x7ff6521bf744,256,ForInNext
code-creation,BytecodeHandler,0,608758,0x7ff6521bf864,48,ForInStep
code-creation,BytecodeHandler,0,608769,0x7ff6521bf8a4,36,SetPendingMessage
code-creation,BytecodeHandler,0,608782,0x7ff6521bf8e4,116,Throw
code-creation,BytecodeHandler,0,608793,0x7ff6521bf964,116,ReThrow
code-creation,BytecodeHandler,0,608805,0x7ff6521bf9e4,112,Return
code-creation,BytecodeHandler,0,608817,0x7ff6521bfa64,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,608829,0x7ff6521bfb44,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,608842,0x7ff6521bfbe4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,608855,0x7ff6521bfc84,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,608868,0x7ff6521bfd24,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,608886,0x7ff6521bfda4,512,SuspendGenerator
code-creation,BytecodeHandler,0,608899,0x7ff6521bffc4,128,ResumeGenerator
code-creation,BytecodeHandler,0,608912,0x7ff6521c0064,152,GetIterator
code-creation,BytecodeHandler,0,608924,0x7ff6521c0104,116,Debugger
code-creation,BytecodeHandler,0,608936,0x7ff6521c0184,124,IncBlockCounter
code-creation,BytecodeHandler,0,608948,0x7ff6521c0204,56,Abort
code-creation,BytecodeHandler,0,608959,0x7ff6521c0244,32,Star0
code-creation,BytecodeHandler,0,608972,0x7ff6521c0284,60,Illegal
code-creation,BytecodeHandler,0,608985,0x7ff6521c02c4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,608997,0x7ff6521c0344,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,609010,0x7ff6521c03c4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,609022,0x7ff6521c0444,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,609034,0x7ff6521c04c4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,609047,0x7ff6521c0544,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,609059,0x7ff6521c05c4,32,Ldar.Wide
code-creation,BytecodeHandler,0,609071,0x7ff6521c0604,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,609083,0x7ff6521c0644,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,609096,0x7ff6521c0684,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,609109,0x7ff6521c06e4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,609122,0x7ff6521c0744,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,609135,0x7ff6521c0784,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,609149,0x7ff6521c07c4,32,Star.Wide
code-creation,BytecodeHandler,0,609160,0x7ff6521c0804,40,Mov.Wide
code-creation,BytecodeHandler,0,609172,0x7ff6521c0844,40,PushContext.Wide
code-creation,BytecodeHandler,0,609185,0x7ff6521c0884,36,PopContext.Wide
code-creation,BytecodeHandler,0,609197,0x7ff6521c08c4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,609209,0x7ff6521c0904,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,609221,0x7ff6521c1b44,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,609236,0x7ff6521c2d44,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,609251,0x7ff6521c2e04,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,609263,0x7ff6521c2ec4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,609277,0x7ff6521c2f44,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,609289,0x7ff6521c2fe4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,609302,0x7ff6521c30e4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,609315,0x7ff6521c43e4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,609328,0x7ff6521c4484,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,609342,0x7ff6521c4584,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,609356,0x7ff6521c5864,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,609368,0x7ff6521c5944,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,609381,0x7ff6521c6dc4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,609394,0x7ff6521c6e84,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,609407,0x7ff6521c6f44,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,609419,0x7ff6521c7004,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,609432,0x7ff6521c7144,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,609445,0x7ff6521c7204,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,609457,0x7ff6521c72c4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,609470,0x7ff6521c7384,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,609482,0x7ff6521c7444,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,609496,0x7ff6521c7524,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,609508,0x7ff6521c75e4,984,Add.Wide
code-creation,BytecodeHandler,0,609520,0x7ff6521c79c4,1020,Sub.Wide
code-creation,BytecodeHandler,0,609531,0x7ff6521c7dc4,972,Mul.Wide
code-creation,BytecodeHandler,0,609543,0x7ff6521c81a4,988,Div.Wide
code-creation,BytecodeHandler,0,609555,0x7ff6521c8584,916,Mod.Wide
code-creation,BytecodeHandler,0,609566,0x7ff6521c8924,988,Exp.Wide
code-creation,BytecodeHandler,0,609578,0x7ff6521c8d04,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,609590,0x7ff6521c90a4,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,609602,0x7ff6521c9444,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,609614,0x7ff6521c97e4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,609625,0x7ff6521c9ba4,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,609638,0x7ff6521c9f64,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,609650,0x7ff6521ca384,916,AddSmi.Wide
code-creation,BytecodeHandler,0,609662,0x7ff6521ca724,960,SubSmi.Wide
code-creation,BytecodeHandler,0,609674,0x7ff6521cab04,912,MulSmi.Wide
code-creation,BytecodeHandler,0,609685,0x7ff6521caea4,920,DivSmi.Wide
code-creation,BytecodeHandler,0,609697,0x7ff6521cb244,816,ModSmi.Wide
code-creation,BytecodeHandler,0,609709,0x7ff6521cb584,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,609721,0x7ff6521cb904,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,609733,0x7ff6521cbb04,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,609746,0x7ff6521cbd04,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,609758,0x7ff6521cbf04,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,609770,0x7ff6521cc104,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,609783,0x7ff6521cc304,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,609795,0x7ff6521cc5a4,616,Inc.Wide
code-creation,BytecodeHandler,0,609807,0x7ff6521cc824,616,Dec.Wide
code-creation,BytecodeHandler,0,609818,0x7ff6521ccaa4,648,Negate.Wide
code-creation,BytecodeHandler,0,609830,0x7ff6521ccd44,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,609842,0x7ff6521ccf44,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,609855,0x7ff6521ccfc4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,609868,0x7ff6521cd044,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,609881,0x7ff6521cd084,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,609896,0x7ff6521cd504,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,609910,0x7ff6521cd984,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,609923,0x7ff6521cdd84,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,609936,0x7ff6521ce1a4,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,609948,0x7ff6521ce5c4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,609961,0x7ff6521ce9c4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,609977,0x7ff6521cede4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,609990,0x7ff6521cf204,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,610003,0x7ff6521cf624,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,610016,0x7ff6521cfaa4,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,610028,0x7ff6521cfb44,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,610041,0x7ff6521cfc04,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,610054,0x7ff6521cfc64,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,610066,0x7ff6521d0144,968,Construct.Wide
code-creation,BytecodeHandler,0,610078,0x7ff6521d0524,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,610090,0x7ff6521d0704,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,610103,0x7ff6521d0ec4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,610115,0x7ff6521d1304,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,610128,0x7ff6521d1904,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,610140,0x7ff6521d1f04,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,610153,0x7ff6521d2504,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,610166,0x7ff6521d2b04,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,610179,0x7ff6521d2e84,160,TestIn.Wide
code-creation,BytecodeHandler,0,610191,0x7ff6521d2f44,116,ToName.Wide
code-creation,BytecodeHandler,0,610203,0x7ff6521d2fc4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,610215,0x7ff6521d30a4,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,610227,0x7ff6521d31a4,116,ToObject.Wide
code-creation,BytecodeHandler,0,610239,0x7ff6521d3224,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,610252,0x7ff6521d33c4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,610265,0x7ff6521d3944,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,610278,0x7ff6521d3c64,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,610290,0x7ff6521d4464,172,CloneObject.Wide
code-creation,BytecodeHandler,0,610303,0x7ff6521d4524,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,610315,0x7ff6521d45e4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,610328,0x7ff6521d4744,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,610341,0x7ff6521d47c4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,610353,0x7ff6521d4864,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,610366,0x7ff6521d4984,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,610379,0x7ff6521d4aa4,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,610391,0x7ff6521d4b44,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,610403,0x7ff6521d4d04,44,Jump.Wide
code-creation,BytecodeHandler,0,610415,0x7ff6521d4d44,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,610427,0x7ff6521d4d84,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,610440,0x7ff6521d4de4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,610453,0x7ff6521d4e44,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,610466,0x7ff6521d4ea4,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,610479,0x7ff6521d4f04,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,610492,0x7ff6521d4f64,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,610505,0x7ff6521d4fc4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,610518,0x7ff6521d5024,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,610531,0x7ff6521d5084,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,610547,0x7ff6521d5124,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,610562,0x7ff6521d51c4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,610575,0x7ff6521d5264,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,610588,0x7ff6521d5304,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,610600,0x7ff6521d5364,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,610612,0x7ff6521d53c4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,610624,0x7ff6521d5424,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,610636,0x7ff6521d5484,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,610649,0x7ff6521d54e4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,610661,0x7ff6521d5544,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,610674,0x7ff6521d55a4,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,610687,0x7ff6521d5604,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,610700,0x7ff6521d5684,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,610712,0x7ff6521d5864,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,610725,0x7ff6521d5964,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,610737,0x7ff6521d59a4,260,ForInNext.Wide
code-creation,BytecodeHandler,0,610749,0x7ff6521d5ac4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,610761,0x7ff6521d5b04,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,610774,0x7ff6521d5ba4,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,610787,0x7ff6521d5c64,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,610800,0x7ff6521d5ce4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,610813,0x7ff6521d5f04,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,610825,0x7ff6521d5fa4,156,GetIterator.Wide
code-creation,BytecodeHandler,0,610838,0x7ff6521d6044,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,610850,0x7ff6521d60e4,56,Abort.Wide
code-creation,BytecodeHandler,0,610862,0x7ff6521d6124,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,610875,0x7ff6521d61a4,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,610887,0x7ff6521d6224,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,610900,0x7ff6521d62a4,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,610912,0x7ff6521d6324,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,610925,0x7ff6521d63a4,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,610937,0x7ff6521d6424,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,610949,0x7ff6521d6464,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,610961,0x7ff6521d6484,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,610976,0x7ff6521d64c4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,610989,0x7ff6521d6524,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,611003,0x7ff6521d6584,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,611016,0x7ff6521d65c4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,611029,0x7ff6521d6604,28,Star.ExtraWide
code-creation,BytecodeHandler,0,611041,0x7ff6521d6624,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,611053,0x7ff6521d6664,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,611066,0x7ff6521d66a4,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,611078,0x7ff6521d66e4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,611091,0x7ff6521d6724,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,611104,0x7ff6521d7964,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,611117,0x7ff6521d8b64,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,611130,0x7ff6521d8c24,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,611142,0x7ff6521d8cc4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,611156,0x7ff6521d8d44,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,611168,0x7ff6521d8de4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,611181,0x7ff6521d8ee4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,611197,0x7ff6521da1e4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,611212,0x7ff6521da284,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,611227,0x7ff6521da384,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,611240,0x7ff6521db664,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,611253,0x7ff6521db744,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,611266,0x7ff6521dcba4,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,611280,0x7ff6521dcc64,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,611292,0x7ff6521dcd04,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,611305,0x7ff6521dcdc4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,611318,0x7ff6521dcf04,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,611331,0x7ff6521dcfc4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,611344,0x7ff6521dd084,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,611357,0x7ff6521dd144,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,611370,0x7ff6521dd204,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,611384,0x7ff6521dd2e4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,611397,0x7ff6521dd3a4,980,Add.ExtraWide
code-creation,BytecodeHandler,0,611409,0x7ff6521dd784,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,611421,0x7ff6521ddb84,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,611433,0x7ff6521ddf64,988,Div.ExtraWide
code-creation,BytecodeHandler,0,611445,0x7ff6521de344,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,611457,0x7ff6521de6e4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,611470,0x7ff6521deac4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,611483,0x7ff6521dee64,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,611495,0x7ff6521df204,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,611508,0x7ff6521df5a4,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,611520,0x7ff6521df964,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,611533,0x7ff6521dfd24,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,611546,0x7ff6521e0144,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,611558,0x7ff6521e04e4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,611570,0x7ff6521e08c4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,611582,0x7ff6521e0c64,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,611595,0x7ff6521e1004,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,611607,0x7ff6521e1344,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,611619,0x7ff6521e16c4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,611632,0x7ff6521e18c4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,611645,0x7ff6521e1ac4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,611657,0x7ff6521e1cc4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,611670,0x7ff6521e1ec4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,611683,0x7ff6521e20c4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,611695,0x7ff6521e2364,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,611707,0x7ff6521e25e4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,611719,0x7ff6521e2864,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,611732,0x7ff6521e2b04,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,611744,0x7ff6521e2d04,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,611757,0x7ff6521e2d84,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,611770,0x7ff6521e2e04,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,611783,0x7ff6521e2e44,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,611796,0x7ff6521e32c4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,611809,0x7ff6521e3744,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,611821,0x7ff6521e3b44,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,611837,0x7ff6521e3f64,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,611851,0x7ff6521e4384,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,611865,0x7ff6521e4784,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,611878,0x7ff6521e4ba4,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,611892,0x7ff6521e4fa4,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,611905,0x7ff6521e53c4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,611918,0x7ff6521e5844,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,611930,0x7ff6521e58e4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,611943,0x7ff6521e59a4,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,611956,0x7ff6521e5a04,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,611971,0x7ff6521e5ee4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,611983,0x7ff6521e62c4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,611997,0x7ff6521e64a4,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,612009,0x7ff6521e6c64,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,612022,0x7ff6521e70a4,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,612035,0x7ff6521e76a4,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,612048,0x7ff6521e7ca4,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,612062,0x7ff6521e82a4,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,612075,0x7ff6521e88a4,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,612088,0x7ff6521e8c24,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,612100,0x7ff6521e8cc4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,612112,0x7ff6521e8d44,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,612125,0x7ff6521e8e24,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,612137,0x7ff6521e8f24,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,612150,0x7ff6521e8fa4,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,612163,0x7ff6521e9144,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,612176,0x7ff6521e96c4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,612189,0x7ff6521e99e4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,612202,0x7ff6521ea1e4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,612215,0x7ff6521ea2a4,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,612228,0x7ff6521ea364,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,612241,0x7ff6521ea4c4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,612254,0x7ff6521ea544,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,612267,0x7ff6521ea5e4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,612280,0x7ff6521ea704,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,612293,0x7ff6521ea824,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,612306,0x7ff6521ea8c4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,612318,0x7ff6521eaa84,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,612331,0x7ff6521eaac4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,612343,0x7ff6521eab04,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,612356,0x7ff6521eab64,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,612370,0x7ff6521eabc4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,612383,0x7ff6521eac24,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,612397,0x7ff6521eac84,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,612410,0x7ff6521eace4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,612423,0x7ff6521ead44,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,612436,0x7ff6521eada4,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,612450,0x7ff6521eae04,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,612526,0x7ff6521eaea4,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,612546,0x7ff6521eaf44,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,612559,0x7ff6521eafe4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,612573,0x7ff6521eb084,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,612586,0x7ff6521eb0e4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,612598,0x7ff6521eb144,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,612612,0x7ff6521eb1a4,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,612625,0x7ff6521eb204,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,612638,0x7ff6521eb264,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,612651,0x7ff6521eb2c4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,612664,0x7ff6521eb324,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,612677,0x7ff6521eb384,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,612690,0x7ff6521eb404,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,612703,0x7ff6521eb5e4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,612716,0x7ff6521eb6e4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,612729,0x7ff6521eb724,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,612742,0x7ff6521eb844,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,612754,0x7ff6521eb884,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,612768,0x7ff6521eb924,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,612782,0x7ff6521eb9e4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,612795,0x7ff6521eba64,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,612808,0x7ff6521ebc84,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,612820,0x7ff6521ebd04,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,612833,0x7ff6521ebda4,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,612846,0x7ff6521ebe24,56,Abort.ExtraWide
new,MemoryChunk,0x634cb40000,262144
new,MemoryChunk,0x31875600000,262144
new,MemoryChunk,0x3c95d2c0000,262144
new,MemoryChunk,0x3b7f4b00000,262144
tick,0x7ff651c47003,619036,0,0x0,5
code-creation,Eval,10,621182,0x3b7f4b3ee8e,5, node:internal/main/run_main_module:1:1,0x3b7f4b3ed48,~
script-source,94,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x3b7f4b3ee8e,94,0,649,C0O0C4O649,,
code-creation,Function,10,621314,0x3b7f4b3ef36,58, node:internal/main/run_main_module:1:1,0x3b7f4b3ee08,~
code-source-info,0x3b7f4b3ef36,94,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,621773,0x3b7f4b3f176,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3151220fd30,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x3b7f4b3f176,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,622927,0x3b7f4b3fe86,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3151220fc60,~
code-source-info,0x3b7f4b3fe86,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
new,MemoryChunk,0xa117100000,262144
code-creation,Eval,10,623618,0xa117101ede,5, node:internal/bootstrap/pre_execution:1:1,0xa117101b48,~
script-source,95,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0xa117101ede,95,0,16254,C0O0C4O16254,,
code-creation,Function,10,625072,0xa1171029de,426, node:internal/bootstrap/pre_execution:1:1,0xa117101e58,~
code-source-info,0xa1171029de,95,0,16254,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O15839C324O15861C330O15884C336O15907C342O15931C348O15949C354O15968C360O15999C366O16026C372O16050C378O16081C384O16114C390O16137C396O16165C402O16189C408O16210C414O16234C420O15854C425O16253,,
code-creation,Eval,10,625451,0xa11710432e,5, node:internal/options:1:1,0xa117104158,~
script-source,96,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0xa11710432e,96,0,1892,C0O0C4O1892,,
code-creation,Function,10,625675,0xa1171046fe,154, node:internal/options:1:1,0xa1171042a8,~
code-source-info,0xa1171046fe,96,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
code-creation,LazyCompile,10,625858,0xa117104c0e,69,internalBinding node:internal/bootstrap/loaders:164:45,0x3151220f7b0,~
code-source-info,0xa117104c0e,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,626208,0xa11710545e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0xa117101f10,~
code-source-info,0xa11710545e,95,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,626451,0xa11710664e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x8ef938bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0xa11710664e,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,629612,0xa117108e86,397,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0xa117101f60,~
code-source-info,0xa117108e
code-creation,LazyCompile,10,629899,0xa11710931e,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x8ef9398538,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0xa11710931e,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,631810,0xa11710a3de,832,resolve node:path:158:10,0x41d4e0d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0xa11710a3de
tick,0x7ff65165054f,636452,0,0x0,3,0x7ff651c84800,0xa117108f48,0xa117105473,0x3b7f4b3ef45
code-creation,LazyCompile,10,636533,0xa11710d9f6,30,validateString node:internal/validators:118:24,0x3151223c958,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0xa11710d9f6,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,637480,0xa11710e396,17,isPathSeparator node:path:52:25,0x41d4e0cf90,~
code-source-info,0xa11710e396,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,637558,0xa11710e496,35,isWindowsDeviceRoot node:path:60:29,0x41d4e0d408,~
code-source-info,0xa11710e496,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,637660,0xa11710e5b6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3151223e030,~
script-source,93,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0xa11710e5b6,93,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,638250,0xa11710ec1e,442,normalizeString node:path:66:25,0x41d4e0d458,~
code-source-info,0xa11710ec1e
code-creation,LazyCompile,10,638567,0xa11710f33e,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:122:33,0xa117101fb0,~
code-source-info,0xa11710f33e,95,4177,4412,C16O4230C21O4230C26O4257C28O4275C36O4305C43O4371C49O4390C56O4275C62O4411,,
code-creation,LazyCompile,10,638679,0xa11710f4be,82,getOptionValue node:internal/options:39:24,0xa117104450,~
code-source-info,0xa11710f4be,96,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,638773,0xa11710f86e,33,getCLIOptionsFromBinding node:internal/options:18:34,0xa117104360,~
code-source-info,0xa11710f86e,96,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,639280,0xa11710f9ee,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:214:33,0xa117102258,~
code-source-info,0xa11710f9ee,95,6737,6968,C0O6780C6O6780C11O6753C16O6853C22O6853C27O6824C32O6896C35O6921C40O6896C45O6967,,
code-creation,LazyCompile,10,639389,0xa11710fb86,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x8ef9398c58,~
code-source-info,0xa11710fb86,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,639482,0xa11710fd36,42,setupPerfHooks node:internal/bootstrap/pre_execution:220:24,0xa1171022a8,~
code-source-info,0xa11710fd36,95,6995,7118,C0O7003C6O7003C11O7039C16O7040C20O7064C26O7064C31O7094C36O7095C41O7117,,
code-creation,LazyCompile,10,639587,0xa11710feb6,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x100917ab760,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0xa11710feb6,73,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,640104,0xa1171105c6,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x41d4e22148,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0xa1171105c6,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,640264,0xa117110836,62,setupInspectorHooks node:internal/bootstrap/pre_execution:225:29,0xa1171022f8,~
code-source-info,0xa117110836,95,7150,7716,C0O7499C6O7503C11O7528C17O7597C23O7597C28O7565C33O7580C38O7644C44O7644C49O7672C54O7673C61O7715,,
code-creation,Eval,10,644694,0xa117110be6,5, node:internal/inspector_async_hook:1:1,0xa117110a30,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0xa117110be6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,644947,0xa117110e06,79, node:internal/inspector_async_hook:1:1,0xa117110b60,~
code-source-info,0xa117110e06,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,645160,0xa11711147e,69,setupWarningHandler node:internal/bootstrap/pre_execution:134:29,0xa117102000,~
code-source-info,0xa11711147e,95,4444,4649,C0O4482C6O4482C11O4465C16O4522C24O4526C33O4571C38O4575C45O4592C50O4608C53O4616C61O4616C68O4648,,
code-creation,LazyCompile,10,645374,0xa1171115de,20,addListener node:events:622:58,0x3de4d12b738,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0xa1171115de,23,18981,19055,C0O19003C14O19010C19O19052,,
code-creation,LazyCompile,10,648965,0xa117113c7e,387,_addListener node:events:554:22,0x3de4d12b698,~
code-source-info,0xa117113c7e
tick,0x7ff651e4badc,649314,0,0x0,3,0x7ff651c84800,0xa1171115ec,0xa1171114bb,0xa11710548c,0x3b7f4b3ef45
code-creation,LazyCompile,10,649372,0xa117113fb6,15,checkListener node:events:257:23,0x3de4d12aff8,~
code-source-info,0xa117113fb6,23,7863,7921,C0O7879C8O7879C14O7920,,
code-creation,LazyCompile,10,649508,0xa1171140a6,30, node:internal/validators:236:42,0x3151223cdf0,~
code-source-info,0xa1171140a6,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,649751,0xa117114326,380,emit node:events:474:44,0x3de4d12b5d8,~
code-source-info,0xa
code-creation,LazyCompile,10,650005,0xa1171146ce,172,startListeningIfSignal node:internal/process/signal:22:32,0x31c2e23f7a8,~
script-source,92,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0xa1171146ce,92,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,650262,0xa117114a8e,19,isSignal node:internal/process/signal:17:18,0x31c2e23f5f0,~
code-source-info,0xa117114a8e,92,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,650370,0xa117114c2e,75,setupDebugEnv node:internal/bootstrap/pre_execution:186:23,0xa117102168,~
code-source-info,0xa117114c2e,95,5959,6174,C0O5967C6O5967C11O6000C19O6028C24O6032C29O6001C34O6048C42O6052C48O6097C54O6097C59O6134C64O6147C69O6148C74O6173,,
code-creation,LazyCompile,10,650527,0xa117114fc6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x3de4d121680,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0xa117114fc6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x206f4d40000,262144
code-creation,Function,11,651049,0x206f4d43060,572,getOptionValue node:internal/options:39:24,0xa117104450,^
code-source-info,0x206f4d43060,96,940,1190,,,
code-creation,Function,11,651104,0x206f4d43300,216,isPathSeparator node:path:52:25,0x41d4e0cf90,^
code-source-info,0x206f4d43300,41,1794,1876,,,
code-creation,Function,11,651202,0x206f4d43440,3076,normalizeString node:path:66:25,0x41d4e0d458,^
code-source-info,0x206f4d43440,41,2226,4212,,,
code-creation,LazyCompile,10,651305,0xa11711590e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:165:40,0xa1171020a0,~
code-source-info,0xa11711590e,95,5502,5696,C0O5510C8O5515C14O5556C15O5563C16O5599C22O5599C27O5580C32O5651C38O5685C43O5685C48O5695,,
code-creation,LazyCompile,10,651423,0xa117115b7e,62,initializeReport node:internal/bootstrap/pre_execution:175:26,0xa1171020f0,~
code-source-info,0xa117115b7e,95,5725,5933,C0O5725C8O5752C16O5752C21O5741C27O5791C42O5812C47O5887C55O5791C61O5932,,
code-creation,Eval,10,651717,0xa1171160ee,5, node:internal/process/report:1:1,0xa117115ef8,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0xa1171160ee,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,652032,0xa117116bfe,306, node:internal/process/report:1:1,0xa117116068,~
code-source-info,0xa117116bfe,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,652386,0xa1171188d6,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:194:40,0xa1171021b8,~
code-source-info,0xa1171188d6,95,6278,6378,C0O6315C6O6315C11O6294C16O6356C20O6377,,
code-creation,LazyCompile,10,652496,0xa117118a1e,57,addSignalHandler node:internal/process/report:98:26,0xa117116120,~
code-source-info,0xa117118a1e,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,652605,0xa117118fe6,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:200:46,0xa117102208,~
code-source-info,0xa117118fe6,95,6427,6701,C0O6427C8O6450C18O6450C23O6496C25O6514C26O6521C27O6527C35O6527C40O6557C45O6558C50O6619C58O6619C63O6597C69O6639C74O6647C79O6650C84O6647C91O6700,,
code-creation,LazyCompile,10,652734,0xa117119276,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:330:37,0xa1171023d8,~
code-source-info,0xa117119276,95,10571,11117,C0O10579C3O10591C8O10595C14O10634C20O10634C25O10680C33O10703C38O10707C46O10680C52O10734C53O10744C57O10734C61O10828C64O10843C73O10904C76O10912C81O10916C90O10964C93O10979C102O11023C108O11023C113O11047C118O11048C124O11088C127O11103C132O11088C137O11116,,
code-creation,LazyCompile,10,652980,0xa11711966e,455,initializePolicy node:internal/bootstrap/pre_execution:358:26,0xa117102478,~
code-source-info,0xa11711966e,95,11427,13272,C0O11462C10O11462C15O11506C17O11537C21O11545C35O11545C41O11672C49O11672C55O11649C60O11664C65O11794C67O11812C75O11816C81O11831C87O11832C94O11873C100O11905C108O11887C116O11964C120O11986C126O11986C132O11964C138O12001C149O12017C153O12032C161O12046C167O12106C175O12106C180O12141C190O12141C197O12217C207O12217C212O12260C214O12314C222O12314C227O12393C235O12393C241O12361C246O12373C251O12443C257O12443C263O12494C269O12494C275O12554C277O12581C279O12605C283O12586C288O12699C290O12715C295O12648C300O12677C305O12742C311O12779C317O12779C322O12821C328O12821C334O12851C340O12871C344O12858C349O12892C356O12940C358O12970C360O13013C366O13035C376O13035C383O13013C389O12614C394O12568C397O13072C401O13100C415O13106C420O13100C421O13192C429O13192C435O13234C441O13258C447O13235C454O13271,,
code-creation,LazyCompile,10,653200,0xa117119a5e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:349:30,0xa117102428,~
code-source-info,0xa117119a5e,95,11150,11398,C0O11158C3O11170C10O11174C18O11189C23O11193C29O11232C35O11232C40O11265C45O11265C49O11356C52O11371C62O11397,,
code-creation,LazyCompile,10,653298,0xa117119bce,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:453:38,0xa1171025b8,~
code-source-info,0xa117119bce,95,15053,15206,C0O15099C6O15099C11O15069C16O15151C21O15180C26O15205,,
code-creation,Eval,10,653715,0xa11711a54e,5, node:internal/source_map/source_map_cache:1:1,0xa11711a1e8,~
script-source,99,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xa11711a54e,99,0,7905,C0O0C4O7905,,
code-creation,Function,10,654461,0xa11711abc6,435, node:internal/source_map/source_map_cache:1:1,0xa11711a4c8,~
code-source-info,0xa11711abc6,99,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,LazyCompile,10,654773,0xa11711b9ae,82,debuglog node:internal/util/debuglog:71:18,0x3de4d1219d0,~
code-source-info,0xa11711b9ae,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,659006,0xa11711bf2e,5, node:internal/util/iterable_weak_map:1:1,0xa11711bce0,~
script-source,100,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0xa11711bf2e,100,0,2042,C0O0C4O2042,,
code-creation,Function,10,659274,0xa11711c68e,196, node:internal/util/iterable_weak_map:1:1,0xa11711bea8,~
code-source-info,0xa11711c68e,100,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,659326,0xa11711c80e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0xa11711c1b8,~
code-source-info,0xa11711c80e,100,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,660107,0xa11711d4f6,5, node:internal/modules/cjs/helpers:1:1,0xa11711d240,~
script-source,101,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xa11711d4f6,101,0,6975,C0O0C4O6975,,
code-creation,Function,10,660782,0xa11711da76,536, node:internal/modules/cjs/helpers:1:1,0xa11711d470,~
code-source-info,0xa11711da76,101,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,661143,0xa11711e6b6,27,SafeSet node:internal/per_context/primordials:364:16,0x3151220a1a0,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0xa11711e6b6,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
code-creation,LazyCompile,10,662431,0xa11711f4f6,27,SafeMap node:internal/per_context/primordials:351:16,0x3151220a018,~
code-source-info,0xa11711f4f6,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,662544,0xa11711f68e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xa11711bfb0,~
code-source-info,0xa11711f68e,100,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,662614,0xa11711fa16,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x3151220a0d8,~
code-source-info,0xa11711fa16,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,662688,0xa11711fb1e,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x3151220a328,~
code-source-info,0xa11711fb1e,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,662940,0xa117120306,492,initializeDeprecations node:internal/bootstrap/pre_execution:243:32,0xa117102348,~
code-source-info,0xa
code-creation,LazyCompile,10,663173,0xa117120bc6,53,initializeWASI node:internal/bootstrap/pre_execution:407:24,0xa1171024c8,~
code-source-info,0xa117120bc6,95,13299,13510,C0O13332C6O13332C11O13315C16O13399C21O13403C29O13403C35O13419C37O13451C43O13451C47O13444C52O13509,,
code-creation,LazyCompile,10,663279,0xa117120dc6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:414:29,0xa117102518,~
code-source-info,0xa117120dc6,95,13542,13865,C0O13568C6O13568C11O13611C16O13616C20O13636C26O13675C31O13682C36O13682C40O13781C51O13803C56O13839C60O13796C65O13864,,
tick,0x7ff652067200,664974,1,0x7ff65170d620,2,0x7ff6520560e0,0x3b7f4b3fecc,0x3b7f4b3f1bd,0xa117120dcc,0xa117105502,0x3b7f4b3ef45
code-creation,Eval,10,665421,0xa117122d6e,5, node:internal/modules/cjs/loader:1:1,0xa117122488,~
script-source,102,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xa117122d6e,102,0,41663,C0O0C4O41663,,
code-creation,Function,10,669208,0xa117124b0e,2547, node:internal/modules/cjs/loader:1:1,0xa117122ce8,~
code-source-info,0xa117124b0e
code-creation,Eval,10,670244,0xa117128b8e,5, node:internal/modules/package_json_reader:1:1,0xa1171289e8,~
script-source,103,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xa117128b8e,103,0,1024,C0O0C4O1024,,
code-creation,Function,10,670400,0xa117128cde,113, node:internal/modules/package_json_reader:1:1,0xa117128b08,~
code-source-info,0xa117128cde,103,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,671088,0xa1171294ae,5, node:internal/process/esm_loader:1:1,0xa1171292b8,~
script-source,104,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xa1171294ae,104,0,2982,C0O0C4O2982,,
code-creation,Function,10,671407,0xa11712974e,182, node:internal/process/esm_loader:1:1,0xa117129428,~
code-source-info,0xa11712974e,104,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,672387,0xa11712a9be,5, node:internal/modules/esm/loader:1:1,0xa11712a550,~
script-source,105,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(\x0d\n        url\x2C { format\x2C importAssertions });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL\x2C\x0d\n                importAssertions = ObjectCreate(null)) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0xa11712a9be,105,0,17034,C0O0C4O17034,,
code-creation,Function,10,674092,0xa11712b206,624, node:internal/modules/esm/loader:1:1,0xa11712a938,~
code-source-info,0xa11712b
code-creation,Function,10,674226,0xa11712b67e,154,<instance_members_initializer> node:internal/modules/esm/loader:64:3,0xa11712ad60,~
code-source-info,0xa11712b67e,105,1844,2727,C3O1864C17O2026C28O2033C45O2215C56O2222C73O2274C88O2373C95O2373C109O2496C119O2588C126O2588C140O2716C153O2727,,
code-creation,Eval,10,674570,0xa11712cea6,5, node:internal/modules/esm/module_map:1:1,0xa11712ccb8,~
script-source,106,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0xa11712cea6,106,0,1487,C0O0C4O1487,,
code-creation,Function,10,674751,0xa11712d2de,175, node:internal/modules/esm/module_map:1:1,0xa11712ce20,~
code-source-info,0xa11712d2de,106,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,675416,0xa11712dd86,5, node:internal/modules/esm/module_job:1:1,0xa11712da90,~
script-source,107,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0xa11712dd86,107,0,8407,C0O0C4O8407,,
code-creation,Function,10,676200,0xa11712e27e,343, node:internal/modules/esm/module_job:1:1,0xa11712dd00,~
code-source-info,0xa11712e27e,107,0,8407,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8359C330O8328C335O8378C337O8393C342O8406,,
code-creation,Eval,10,676700,0xa11712fece,5, node:internal/modules/esm/assert:1:1,0xa11712fcd8,~
script-source,108,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0xa11712fece,108,0,3734,C0O0C4O3734,,
code-creation,Function,10,677102,0xa1171301a6,201, node:internal/modules/esm/assert:1:1,0xa11712fe48,~
code-source-info,0xa1171301a6,108,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,677314,0xa1171307b6,9, node:internal/modules/esm/assert:43:3,0xa11712ffa0,~
code-source-info,0xa1171307b6,108,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,678942,0xa1171321d6,5, node:internal/modules/esm/resolve:1:1,0xa117131ab0,~
script-source,109,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined)\x0d\n        continue;\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    url: `${url}`\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0xa1171321d6,109,0,37756,C0O0C4O37756,,
tick,0x7ff651e4fba4,683043,1,0x7ff65170d620,3,0x7ff6520560e0,0x3b7f4b3fecc,0x3b7f4b3f1bd,0xa11712b36e,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa11712979c,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa117124fb9,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa117120dcc,0xa117105502,0x3b7f4b3ef45
code-creation,Function,10,683146,0xa1171331de,1110, node:internal/modules/esm/resolve:1:1,0xa117132150,~
code-source-info,0xa1171331de
code-creation,Eval,10,684060,0xa1171365ee,5, node:internal/modules/esm/get_format:1:1,0xa1171363a8,~
script-source,110,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null]; // eslint-disable-line no-sparse-arrays\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  if (\x0d\n    experimentalSpecifierResolution === 'node' &&\x0d\n    !experimentalSpecifierResolutionWarned\x0d\n  ) {\x0d\n    process.emitWarning(\x0d\n      'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n      'ExperimentalWarning');\x0d\n    experimentalSpecifierResolutionWarned = true;\x0d\n  }\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nfunction getFileProtocolModuleFormat(url\x2C ignoreErrors) {\x0d\n  const ext = extname(url.pathname);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors)\x0d\n      return undefined;\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n  }\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C true);\x0d\n}\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0xa1171365ee,110,0,3433,C0O0C4O3433,,
code-creation,Function,10,684421,0xa117136ae6,340, node:internal/modules/esm/get_format:1:1,0xa117136568,~
code-source-info,0xa117136ae6,110,0,3433,C0O0C72O26C77O43C82O60C88O94C94O154C97O154C102O142C108O199C111O199C116O180C121O263C124O263C128O263C130O354C133O354C137O354C139O442C142O442C146O442C148O517C151O517C156O498C162O590C165O590C170O567C176O572C182O655C185O655C190O681C195O624C201O719C205O719C207O846C211O846C213O1034C214O1034C216O1044C220O1076C229O1140C235O1104C239O1153C243O1185C252O1249C258O1213C262O1287C264O1300C274O1325C284O1804C288O1836C296O1287C301O1287C303O3302C310O3324C316O3345C322O3379C328O3402C334O3317C339O3432,,
code-creation,Eval,10,684794,0xa11713761e,5, node:internal/modules/esm/initialize_import_meta:1:1,0xa117137488,~
script-source,111,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\ngetOptionValue('--experimental-import-meta-resolve');\x0d\nconst { PromisePrototypeThen\x2C PromiseReject } = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0xa11713761e,111,0,932,C0O0C4O932,,
code-creation,Function,10,684935,0xa1171377e6,90, node:internal/modules/esm/initialize_import_meta:1:1,0xa117137598,~
code-source-info,0xa1171377e6,111,0,932,C0O0C28O44C31O44C36O25C41O113C44O113C48O113C50O176C56O198C62O247C65O247C69O247C71O884C78O906C84O899C89O931,,
code-creation,Eval,10,685154,0xa117137d86,5, node:internal/modules/esm/load:1:1,0xa117137c10,~
script-source,112,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n  const { importAssertions } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = defaultGetFormat(url);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0xa117137d86,112,0,891,C0O0C4O891,,
code-creation,Function,10,685292,0xa117137ece,80, node:internal/modules/esm/load:1:1,0xa117137d00,~
code-source-info,0xa117137ece,112,0,891,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O851C68O873C74O866C79O890,,
code-creation,Eval,10,685527,0xa11713848e,5, node:internal/modules/esm/get_source:1:1,0xa1171382b8,~
script-source,113,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0xa11713848e,113,0,1394,C0O0C4O1394,,
code-creation,Function,10,685699,0xa1171385fe,169, node:internal/modules/esm/get_source:1:1,0xa117138408,~
code-source-info,0xa1171385fe,113,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,687253,0xa117139976,5, node:internal/fs/promises:1:1,0xa1171391d8,~
script-source,114,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = bufferOrOptions.length ?? buffer.byteLength;\x0d\n    position = bufferOrOptions.position ?? null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0xa117139976,114,0,23741,C0O0C4O23741,,
code-creation,Function,10,689509,0xa11713c0ae,1659, node:internal/fs/promises:1:1,0xa1171398f0,~
code-source-info,0xa11713c0ae
code-creation,Function,10,689835,0xa11713ca5e,27,<instance_members_initializer> node:internal/fs/promises:189:3,0xa11713af50,~
code-source-info,0xa11713ca5e,114,4390,5219,C0O4390C12O4398C26O5219,,
new,MemoryChunk,0x9e59100000,262144
code-creation,Eval,10,690901,0xa11713f4fe,5, node:internal/fs/rimraf:1:1,0xa11713f198,~
script-source,115,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0xa11713f4fe,115,0,7392,C0O0C4O7392,,
code-creation,Function,10,691716,0xa11713fafe,409, node:internal/fs/rimraf:1:1,0xa11713f478,~
code-source-info,0xa11713fafe,115,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,692182,0x9e59101d3e,188,from node:buffer:296:28,0x3de4d136c40,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x9e59101d3e,24,8723,9706,C3O8762C9O8798C12O8805C17O8841C18O8847C28O8903C33O8907C39O8939C51O8946C56O8995C57O9025C63O9042C68O9042C73O9058C78O9098C95O9191C104O9198C109O9238C110O9263C113O9263C118O9287C120O9301C122O9310C123O9318C125O9335C127O9334C134O9397C136O9403C138O9402C145O9421C151O9440C155O9486C158O9493C163O9533C164O9560C182O9566C187O9560,,
code-creation,LazyCompile,10,695741,0x9e5910474e,110,fromString node:buffer:432:20,0x3de4d137028,~
code-source-info,0x9e5910474e,24,12910,13359,C0O12938C2O12946C8O12991C14O12998C19O13023C25O13030C30O13044C35O13051C40O13068C41O13074C46O13092C51O13103C56O13142C59O13148C64O13179C66O13209C73O13215C78O13209C79O13267C85O13274C90O13288C95O13295C100O13312C101O13321C104O13328C109O13356,,
code-creation,LazyCompile,10,695901,0x9e59104906,177,fromStringFast node:buffer:413:24,0x3de4d136f88,~
code-source-info,0x9e59104906,24,12347,12887,C0O12385C5O12385C11O12410C14O12432C18O12441C21O12421C26O12454C31O12490C36O12461C41O12503C42O12509C44O12523C49O12534C51O12532C54O12520C59O12552C62O12552C65O12577C72O12592C77O12603C85O12577C91O12646C110O12646C116O12678C118O12689C123O12775C130O12794C135O12805C143O12779C149O12834C156O12848C162O12845C168O12859C171O12859C174O12875C176O12884,,
code-creation,LazyCompile,10,696032,0x9e59104af6,36,FastBuffer node:internal/buffer:958:14,0x8ef938bb00,~
code-source-info,0x9e59104af6,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,696103,0x9e59104bf6,23,write node:buffer:593:12,0x3de4d137398,~
code-source-info,0x9e59104bf6,24,17139,17203,C0O17173C17O17173C22O17203,,
code-creation,LazyCompile,10,696183,0x9e59104ce6,42,alignPool node:buffer:159:19,0x3de4d1369c0,~
code-source-info,0x9e59104ce6,24,4178,4288,C0O4214C4O4229C9O4243C19O4254C25O4267C34O4277C41O4287,,
code-creation,LazyCompile,10,696470,0x9e591050a6,251,promisify node:internal/util:324:19,0x3de4d105f48,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x9e591050a6,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
tick,0x7ff6523d5a15,698450,0,0x0,3,0x7ff651c84800,0xa11713c55d,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa117138662,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa117137ef2,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa11712b396,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa11712979c,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa117124fb9,0x3b7f4b3feed,0x3b7f4b3f1bd,0xa117120dcc,0xa117105502,0x3b7f4b3ef45
code-creation,LazyCompile,10,698772,0x9e591066ce,65,EventEmitterMixin node:internal/event_target:966:27,0x41d4e1e3a8,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x9e591066ce,44,26757,27191,C0O26810C23O27001C30O27033C33O27046C38O27001C43O27061C47O27095C52O27136C57O27095C62O27163C64O27188,,
code-creation,Eval,10,702221,0x9e591090e6,5, node:internal/modules/esm/translators:1:1,0x9e59108c80,~
script-source,116,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x9e591090e6,116,0,11025,C0O0C4O11025,,
code-creation,Function,10,703308,0x9e59109886,715, node:internal/modules/esm/translators:1:1,0x9e59109060,~
code-source-info,0x9e
code-creation,Eval,10,703837,0x9e5910ad7e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x9e5910aba8,~
script-source,117,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x9e5910ad7e,117,0,1828,C0O0C4O1828,,
code-creation,Function,10,704063,0x9e5910afa6,111, node:internal/modules/esm/create_dynamic_module:1:1,0x9e5910acf8,~
code-source-info,0x9e5910afa6,117,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,704902,0x9e5910c20e,5, node:internal/vm/module:1:1,0x9e5910bcc8,~
script-source,118,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x9e5910c20e,118,0,12768,C0O0C4O12768,,
code-creation,Function,10,706256,0x9e5910d46e,872, node:internal/vm/module:1:1,0x9e5910c188,~
code-source-info,0x9e5910d46e
code-creation,Function,10,706463,0x9e5910d9ae,30,<instance_members_initializer> node:internal/vm/module:256:3,0x9e5910c7f8,~
code-source-info,0x9e5910d9ae,118,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,706888,0x9e5910ee76,30,ESMLoader node:internal/modules/esm/loader:57:1,0xa11712aa40,~
code-source-info,0x9e5910ee76,105,1618,1618,C9O1618C29O1618,,
code-creation,LazyCompile,10,707004,0x9e5911019e,27,ModuleMap node:internal/modules/esm/module_map:17:14,0xa11712cf28,~
code-source-info,0x9e5911019e,106,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,707106,0x9e59110446,13,desc.value node:internal/per_context/primordials:325:32,0x31512209f70,~
code-source-info,0x9e59110446,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,707183,0x9e5911054e,13,SafeIterator node:internal/per_context/primordials:270:16,0x315122099c0,~
code-source-info,0x9e5911054e,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,707267,0x9e59110686,13,next node:internal/per_context/primordials:273:9,0x31512209a88,~
code-source-info,0x9e59110686,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,707622,0x9e59110906,152,deprecate node:internal/util:96:19,0x3de4d1057f8,~
code-source-info,0x9e59110906,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,LazyCompile,10,707825,0x9e59110ee6,28,getEmbedderOptions node:internal/options:32:28,0xa117104400,~
code-source-info,0x9e59110ee6,96,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,708105,0x9e5911118e,315,Module._initPaths node:internal/modules/cjs/loader:1231:29,0xa117123ff0,~
code-source-info,0x9e5911118e
code-creation,Eval,10,708539,0x9e59114096,5, node:internal/modules/run_main:1:1,0x9e59113e70,~
script-source,119,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x9e59114096,119,0,2621,C0O0C4O2621,,
code-creation,Function,10,708900,0x9e5911437e,178, node:internal/modules/run_main:1:1,0x9e59114010,~
code-source-info,0x9e5911437e,119,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,709137,0x9e59114b4e,163,initializeESMLoader node:internal/bootstrap/pre_execution:424:29,0xa117102568,~
code-source-info,0x9e59114b4e,95,13897,15012,C0O13981C6O13981C13O14030C16O14026C21O14024C25O14050C30O14054C34O14074C40O14103C41O14110C42O14215C48O14215C53O14129C58O14170C63O14262C69O14262C74O14466C79O14424C83O14537C88O14498C92O14707C100O14711C106O14830C112O14830C117O14778C122O14786C127O14804C132O14877C138O14877C143O14897C145O14907C149O14922C151O14942C155O14967C157O14986C162O15011,,
code-creation,LazyCompile,10,709281,0x9e59114d66,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xa1171234e0,~
code-source-info,0x9e59114d66,102,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,709357,0x9e59114e0e,21,assert node:internal/assert:11:16,0x3de4d120658,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x9e59114e0e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,LazyCompile,10,709537,0x9e5911500e,53,loadPreloadModules node:internal/bootstrap/pre_execution:467:28,0xa117102658,~
code-source-info,0x9e5911500e,95,15504,15835,C0O15593C8O15593C13O15625C15O15662C21O15669C26O15750C32O15750C37O15750C42O15715C47O15795C52O15834,,
code-creation,LazyCompile,10,709645,0x9e591151fe,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:459:36,0xa117102608,~
code-source-info,0x9e591151fe,95,15245,15473,C0O15253C8O15257C14O15303C17O15311C28O15311C34O15425C40O15425C45O15462C49O15472,,
code-creation,LazyCompile,10,709761,0x9e59115326,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x9e59114208,~
code-source-info,0x9e59115326,119,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,709868,0x9e59115756,68,resolveMainPath node:internal/modules/run_main:15:25,0x9e591140c8,~
code-source-info,0x9e59115756,119,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,710018,0x206f4d440c0,412,isWindowsDeviceRoot node:path:60:29,0x41d4e0d408,^
code-source-info,0x206f4d440c0,41,1991,2136,,,
code-creation,Function,11,710077,0x206f4d442c0,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3151220fd30,^
code-source-info,0x206f4d442c0,9,10647,11000,,,
code-creation,Function,11,710138,0x206f4d445c0,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3151220fc60,^
code-source-info,0x206f4d445c0,9,9827,10410,,,
code-creation,Function,11,710186,0x206f4d44b20,432,getCLIOptionsFromBinding node:internal/options:18:34,0xa117104360,^
code-source-info,0x206f4d44b20,96,514,620,,,
code-creation,Function,11,710224,0x206f4d44d40,104,next node:internal/per_context/primordials:273:9,0x31512209a88,^
code-source-info,0x206f4d44d40,6,8126,8173,,,
code-creation,Function,11,710267,0x206f4d44e20,252,SafeMap node:internal/per_context/primordials:351:16,0x3151220a018,^
code-source-info,0x206f4d44e20,6,10550,10567,,,
code-creation,LazyCompile,10,710539,0x9e59115cb6,436,Module._findPath node:internal/modules/cjs/loader:494:28,0xa117123800,~
code-source-info,0x9e59115cb
code-creation,LazyCompile,10,710840,0x9e59116066,109,isAbsolute node:path:402:13,0x41d4e0d5d0,~
code-source-info,0x9e59116066,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,711100,0x9e591162f6,85,stat node:internal/modules/cjs/loader:151:14,0xa117122da0,~
code-source-info,0x9e591162f6,102,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,711256,0x9e59116506,232,toNamespacedPath node:path:618:19,0x41d4e0d6f8,~
code-source-info,0x9e59116506,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,711596,0x9e59116766,42,toRealPath node:internal/modules/cjs/loader:393:20,0xa117123070,~
code-source-info,0x9e59116766,102,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,712224,0x9e59116b96,1036,realpathSync node:fs:2412:22,0x31c2e219320,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x9e59116b
tick,0x7ff65263b5f3,722199,0,0x0,3,0x7ff651c84800,0x9e59116789,0x9e59115de1,0x9e59115774,0x9e5911533f,0x3b7f4b3ef69
code-creation,LazyCompile,10,722396,0x9e5911d25e,123,getOptions node:internal/fs/utils:314:20,0x31c2e221a88,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x9e5911d25e,81,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
code-creation,LazyCompile,10,724935,0x9e5911f1b6,48,assertEncoding node:internal/fs/utils:151:24,0x31c2e221490,~
code-source-info,0x9e5911f1b6,81,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,725139,0x9e5911f2ce,20,toPathIfFileURL node:internal/url:1496:25,0x8ef93b9088,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x9e5911f2ce,39,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
tick,0x7ff6515d2140,729560,0,0x0,3,0x7ff651c84800,0x9e59116baf,0x9e59116789,0x9e59115de1,0x9e59115774,0x9e5911533f,0x3b7f4b3ef69
code-creation,LazyCompile,10,729667,0x9e591223fe,17,isURLInstance node:internal/url:1492:23,0x8ef93b9038,~
code-source-info,0x9e591223fe,39,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
code-creation,LazyCompile,10,729804,0x9e5912255e,81, node:internal/fs/utils:668:38,0x31c2e2224b0,~
code-source-info,0x9e5912255e,81,18830,19110,C14O18864C22O18897C25O18897C31O18924C36O18955C49O18930C54O18924C55O19023C68O19023C74O19062C76O19092C78O19092C80O19109,,
code-creation,LazyCompile,10,729931,0x9e5912276e,110, node:internal/fs/utils:357:35,0x31c2e221b28,~
code-source-info,0x9e5912276e,81,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,730035,0x9e591228e6,16,isUint8Array node:internal/util/types:13:22,0x3de4d107088,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x9e591228e6,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,730602,0x9e59122d4e,23,splitRoot node:fs:2362:33,0x31c2e2191d8,~
code-source-info,0x9e59122d4e,80,65151,65217,C0O65164C9O65191C12O65171C19O65208C22O65212,,
code-creation,LazyCompile,10,730975,0x9e59122f76,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x31c2e221ad8,~
code-source-info,0x9e59122f76,81,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,731181,0x9e591230ee,53,nextPart node:fs:2388:31,0x31c2e2192d0,~
code-source-info,0x9e591230ee,80,65908,66159,C0O65935C4O65931C9O65968C14O65968C20O66052C22O66063C24O66059C31O66093C33O66089C38O66122C40O66131C41O65945C47O65922C50O66144C52O66154,,
code-creation,LazyCompile,10,731711,0x9e5912324e,34,isFileType node:fs:205:20,0x31c2e216f40,~
code-source-info,0x9e5912324e,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,732800,0x206f4d44f80,6232,resolve node:path:158:10,0x41d4e0d510,^
code-source-info,0x206f4d44f80,41,4875,9786,,,
code-creation,Function,11,732892,0x206f4d46840,544,nextPart node:fs:2388:31,0x31c2e2192d0,^
code-source-info,0x206f4d46840,80,65908,66159,,,
code-creation,LazyCompile,10,733288,0x9e59123cce,72,encodeRealpathResult node:fs:2375:30,0x31c2e219280,~
code-source-info,0x9e59123cce,80,65497,65763,C0O65520C4O65545C10O65565C17O65574C22O65591C24O65605C25O65626C30O65633C35O65633C41O65662C48O65671C53O65692C55O65708C56O65733C61O65750C66O65733C71O65760,,
code-creation,LazyCompile,10,733474,0x9e59123e7e,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x9e59114118,~
code-source-info,0x9e59123e7e,119,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,733646,0x9e5912409e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0xa117122f80,~
code-source-info,0x9e5912409e,102,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,733839,0x9e591243fe,234,readPackage node:internal/modules/cjs/loader:290:21,0xa117122f30,~
code-source-info,0x9e591243fe,102,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,734069,0x9e59124706,199,read node:internal/modules/package_json_reader:16:14,0xa117128bc0,~
code-source-info,0x9e59124706,103,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,734854,0x9e59125436,619,Module._load node:internal/modules/cjs/loader:757:24,0xa117123ae0,~
code-source-info,0x9e59125436,102,23964,26971,C0O23999C2O24029C6O24048C14O24108C23O24048C28O24342C42O24353C47O24386C54O24406C58O24440C60O24498C63O24505C70O24511C74O24530C76O24573C88O24573C93O24644C99O24663C102O24670C106O24713C107O24743C111O24751C112O24768C119O24796C121O24858C124O24865C138O24865C144O24911C152O24915C159O25008C167O25008C173O25065C178O25065C184O25101C189O25112C198O25145C205O25151C210O25145C211O25221C215O25229C216O25261C219O25268C226O25274C230O25289C232O25328C244O25328C249O25395C255O25438C260O25452C265O25452C271O25478C273O25522C279O25539C282O25546C286O25589C287O25597C288O25622C294O25671C298O25679C299O25709C304O25709C310O25749C315O25756C324O25791C328O25799C329O25888C344O25904C350O25939C354O25958C359O25977C363O25992C365O26002C369O26019C372O26026C379O26043C383O26056C387O26089C394O26137C398O26171C403O26198C409O26198C414O26219C426O26225C427O26254C432O26274C436O26288C444O26295C446O26313C450O26350C458O26378C460O26432C467O26438C475O26459C481O26463C487O26514C493O26514C499O26566C501O26576C506O26599C522O26599C529O26697C537O26725C541O26740C547O26725C555O26768C559O26796C565O26768C573O26827C575O26805C580O26874C586O26902C594O26911C598O26874C614O26960C618O26968,,
code-creation,LazyCompile,10,735376,0x9e59125b9e,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0xa117123b68,~
code-source-info,0x9e59125b9e
code-creation,LazyCompile,10,735702,0x9e5912615e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3151220fa90,~
code-source-info,0x9e5912615e,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,735862,0x9e59126416,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0xa1171239b0,~
code-source-info,0x9e
code-creation,LazyCompile,10,736044,0x9e591266de,89,logger node:internal/util/debuglog:95:18,0x3de4d121c20,~
code-source-info,0x9e591266de,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,736142,0x9e5912681e,3, node:internal/per_context/primordials:276:21,0x31512209b30,~
code-source-info,0x9e5912681e,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,736256,0x9e591268f6,140,debug node:internal/util/debuglog:76:15,0x3de4d121b80,~
code-source-info,0x9e591268f6,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,736364,0x9e59126aa6,41,init node:internal/util/debuglog:72:16,0x3de4d121b30,~
code-source-info,0x9e59126aa6,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,736429,0x9e59126b96,2,testEnabled node:internal/util/debuglog:32:19,0xa117114ea0,~
code-source-info,0x9e59126b96,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,736555,0x9e59126d2e,116,debuglogImpl node:internal/util/debuglog:49:22,0x3de4d121980,~
code-source-info,0x9e59126d2e,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,736656,0x9e59126ee6,10, node:internal/modules/cjs/loader:272:66,0xa1171237b0,~
code-source-info,0x9e59126ee6,102,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,736718,0x9e59126f96,2,noop node:internal/util/debuglog:47:14,0x3de4d121930,~
code-source-info,0x9e59126f96,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,736810,0x9e591270d6,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0xa117123160,~
code-source-info,0x9e591270d6,102,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,736980,0x9e59127316,235,trySelf node:internal/modules/cjs/loader:441:17,0xa1171231b0,~
code-source-info,0x9e59127316,102,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,737182,0x9e591275ae,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0xa11711d528,~
code-source-info,0x9e591275ae,101,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,737296,0x9e59127e6e,94,Module node:internal/modules/cjs/loader:172:16,0xa117122e40,~
code-source-info,0x9e59127e6e,102,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,737543,0x9e59128066,449,dirname node:path:653:10,0x41d4e0d768,~
code-source-info,0x9e
code-creation,LazyCompile,10,737820,0x9e5912841e,45,updateChildren node:internal/modules/cjs/loader:165:24,0xa117122df0,~
code-source-info,0x9e5912841e,102,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,737984,0x9e59128616,246,Module.load node:internal/modules/cjs/loader:969:33,0xa117123bf8,~
code-source-info,0x9e59128616,102,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,738217,0x9e5912891e,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0xa117123890,~
code-source-info,0x9e5912891e
code-creation,Function,11,738502,0x206f4d46ac0,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0xa117123890,^
code-source-info,0x206f4d46ac0,102,17765,19316,,,
code-creation,Function,11,738558,0x206f4d47340,320,isFileType node:fs:205:20,0x31c2e216f40,^
code-source-info,0x206f4d47340,80,5489,5737,,,
code-creation,Function,11,738607,0x206f4d474e0,272,validateString node:internal/validators:118:24,0x3151223c958,^
code-source-info,0x206f4d474e0,15,3534,3646,,,
code-creation,Function,11,738676,0x206f4d47660,1936,toNamespacedPath node:path:618:19,0x41d4e0d6f8,^
code-source-info,0x206f4d47660,41,20086,21201,,,
code-creation,LazyCompile,10,738829,0x9e59128fee,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0xa117123110,~
code-source-info,0x9e59128fee,102,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,739063,0x9e591291ce,415,basename node:path:749:11,0x41d4e0d7d0,~
code-source-info,0x9e591291ce
code-creation,LazyCompile,10,739435,0x9e591296ee,485,Module._extensions..js node:internal/modules/cjs/loader:1112:37,0xa117123d98,~
code-source-info,0x9e591296ee
code-creation,LazyCompile,10,739752,0x9e59129b4e,376,readFileSync node:fs:450:22,0x31c2e2173f8,~
code-source-info,0x9e59129b4e
code-creation,LazyCompile,10,739965,0x9e59129e6e,30,isEncoding node:buffer:530:40,0x3de4d137270,~
code-source-info,0x9e59129e6e,24,15325,15460,C0O15341C6O15389C12O15396C20O15415C23O15415C28O15443C29O15457,,
code-creation,LazyCompile,10,740047,0x9e59129f76,30,normalizeEncoding node:internal/util:160:27,0x3de4d105aa8,~
code-source-info,0x9e59129f76,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,740128,0x9e5912a05e,9,isUint32 node:internal/validators:40:18,0x3151223c7a8,~
code-source-info,0x9e5912a05e,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,740228,0x9e5912a1b6,113,openSync node:fs:576:18,0x31c2e2175e0,~
code-source-info,0x9e5912a1b6,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,740328,0x9e5912a336,37, node:internal/fs/utils:680:42,0x31c2e222500,~
code-source-info,0x9e5912a336,81,19157,19296,C14O19213C19O19213C24O19248C29O19248C34O19281C36O19293,,
code-creation,LazyCompile,10,740488,0x9e5912a70e,515,stringToFlags node:internal/fs/utils:555:23,0x31c2e222320,~
code-source-info,0x9e5912a70e
code-creation,LazyCompile,10,740737,0x9e5912aafe,97,parseFileMode node:internal/validators:59:23,0x3151223c7f8,~
code-source-info,0x9e5912aafe,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,740863,0x9e5912acce,206, node:internal/validators:84:3,0x3151223c8b8,~
code-source-info,0x9e5912acce,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,740967,0x9e5912ae96,9,isInt32 node:internal/validators:36:17,0x3151223c298,~
code-source-info,0x9e5912ae96,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,741216,0x9e5912af9e,66,tryStatSync node:fs:404:21,0x31c2e217308,~
code-source-info,0x9e5912af9e,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,741374,0x9e5912b116,96,tryCreateBuffer node:fs:414:25,0x31c2e217358,~
code-source-info,0x9e5912b116,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,741470,0x9e5912b26e,17,allocUnsafe node:buffer:373:42,0x3de4d136de8,~
code-source-info,0x9e5912b26e,24,11265,11323,C0O11277C5O11277C9O11298C12O11305C16O11320,,
code-creation,LazyCompile,10,741548,0x9e5912b376,54, node:buffer:349:36,0x3de4d136d30,~
code-source-info,0x9e5912b376,24,10539,10699,C0O10554C8O10554C13O10587C14O10598C21O10614C23O10611C28O10634C33O10666C46O10640C51O10634C53O10698,,
code-creation,LazyCompile,10,741630,0x9e5912b49e,30,validateNumber node:internal/validators:123:24,0x3151223c9f8,~
code-source-info,0x9e5912b49e,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,741727,0x9e5912b5b6,119,allocate node:buffer:398:18,0x3de4d136f38,~
code-source-info,0x9e5912b5b6,24,11992,12320,C0O12004C1O12013C6O12026C11O12033C16O12050C17O12059C20O12078C24O12087C27O12068C32O12102C34O12114C39O12125C41O12123C44O12111C49O12145C52O12145C55O12174C62O12189C67O12200C75O12174C81O12224C88O12238C94O12235C100O12249C103O12249C106O12267C108O12276C109O12285C114O12292C118O12317,,
code-creation,LazyCompile,10,741866,0x9e5912b776,86,tryReadSync node:fs:429:21,0x31c2e2173a8,~
code-source-info,0x9e5912b776,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,742019,0x9e5912b95e,239,readSync node:fs:684:18,0x31c2e2176b0,~
code-source-info,0x9e5912b95e,80,17803,18775,C0O17803C2O17847C7O17852C13O17877C18O17877C22O17920C29O17927C34O18000C40O18024C52O18036C58O18052C64O18064C70O18097C75O18124C80O18153C93O18153C98O18201C105O18219C106O18230C111O18244C112O18253C113O18275C119O18286C124O18300C140O18306C145O18300C146O18432C151O18480C162O18432C167O18498C172O18525C176O18545C184O18545C189O18602C191O18624C196O18632C221O18632C227O18726C232O18726C236O18758C238O18772,,
code-creation,LazyCompile,10,742158,0x9e5912bbb6,52, node:internal/fs/utils:686:40,0x31c2e222550,~
code-source-info,0x9e5912bbb6,81,19341,19470,C14O19371C22O19375C29O19400C30O19409C31O19420C44O19420C49O19457C51O19467,,
code-creation,LazyCompile,10,742245,0x9e5912bd26,51, node:internal/validators:191:40,0x3151223cc20,~
code-source-info,0x9e5912bd26,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,742346,0x9e5912be7e,151, node:internal/validators:73:3,0x3151223c868,~
code-source-info,0x9e5912be7e,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,742474,0x9e5912c086,103, node:internal/fs/utils:636:3,0x31c2e222410,~
code-source-info,0x9e5912c086,81,17915,18305,C0O17956C1O17967C6O17981C22O17987C27O17981C28O18047C29O18058C34O18072C50O18078C55O18072C56O18138C58O18149C64O18158C69O18183C82O18273C95O18189C100O18183C102O18304,,
code-creation,LazyCompile,10,742604,0x9e5912c38e,151, node:internal/fs/utils:886:42,0x31c2e222870,~
code-source-info,0x9e5912c38e,81,24872,25444,C0O24897C6O24938C14O24938C21O24987C27O25028C32O25051C35O25046C37O25043C47O25077C53O25084C56O25071C61O25100C77O25184C80O25179C98O25204C104O25211C117O25106C122O25100C125O25288C143O25294C148O25288C150O25443,,
code-creation,LazyCompile,10,742782,0x9e5912c546,47,closeSync node:fs:526:19,0x31c2e217508,~
code-source-info,0x9e5912c546,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,742954,0x9e5912c67e,162,toString node:buffer:783:46,0x3de4d138c70,~
code-source-info,0x9e5912c67e,24,24068,24660,C0O24068C2O24110C8O24117C13O24143C20O24161C25O24143C31O24169C32O24197C37O24210C38O24220C43O24231C48O24250C50O24260C55O24273C57O24283C58O24297C65O24314C71O24343C76O24355C83O24379C90O24394C92O24402C97O24417C99O24427C100O24433C104O24478C109O24478C115O24500C116O24518C119O24518C124O24547C126O24575C133O24581C138O24575C139O24633C156O24633C161O24657,,
code-creation,LazyCompile,10,743180,0x9e5912c93e,499,getEncodingOps node:buffer:679:24,0x3de4d138ac8,~
code-source-info,0x9e5912c93e
code-creation,LazyCompile,10,743443,0x9e5912cd26,12,slice node:buffer:594:12,0x3de4d137490,~
code-source-info,0x9e5912cd26,24,17217,17263,C0O17242C5O17242C11O17263,,
code-creation,LazyCompile,10,743727,0x9e5912cfa6,499,Module._compile node:internal/modules/cjs/loader:1057:37,0xa117123d08,~
code-source-info,0x9e5912cfa
code-creation,LazyCompile,10,744023,0x9e5912d516,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0xa11711a670,~
code-source-info,0x9e5912d516,99,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,744164,0x9e5912df76,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0xa11711a5d0,~
code-source-info,0x9e5912df76,99,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,744274,0x9e5912e0ee,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0xa11711a620,~
code-source-info,0x9e5912e0ee,99,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,744384,0x9e5912e266,30,validateBoolean node:internal/validators:139:25,0x3151223ca98,~
code-source-info,0x9e5912e266,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,744547,0x9e5912e65e,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0xa117123390,~
code-source-info,0x9e5912e65e,102,32708,33738,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33180C74O33200C81O33210C86O33226C98O33348C102O33365C113O33210C118O33607C130O33632C135O33644C142O33655C147O33685C157O33685C162O33720C164O33720,,
tick,0x7ff6526507b9,744772,0,0x0,3,0x7ff651c84800,0x9e5912d00d,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
code-creation,LazyCompile,10,745174,0x9e5912ee66,472,compileFunction node:vm:308:25,0x31c2e234360,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x9e5912ee
code-creation,LazyCompile,10,746612,0x9e5913002e,95, node:internal/validators:168:39,0x3151223cb58,~
code-source-info,0x9e5913002e,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,746708,0x9e5913018e,27, node:vm:313:27,0x9e5912eb38,~
code-source-info,0x9e5913018e,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,LazyCompile,10,746871,0x9e5913031e,149, node:internal/validators:101:40,0x3151223c908,~
code-source-info,0x9e5913031e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,Eval,10,747321,0x9e591308ae,5, C:\\Users\\anthony\\Desktop\\code\\todoList Dapp\\node_modules\\gun\\examples\\http.js:1:1,0x9e591306d8,~
script-source,120,C:\\Users\\anthony\\Desktop\\code\\todoList Dapp\\node_modules\\gun\\examples\\http.js,;(function(){\n\x09var cluster = require('cluster');\n\x09if(cluster.isMaster){\n\x09  return cluster.fork() && cluster.on('exit'\x2C function(){ cluster.fork(); require('../lib/crashed'); });\n\x09}\n\n\x09var fs = require('fs');\n\x09var config = {\n\x09\x09port: process.env.OPENSHIFT_NODEJS_PORT || process.env.VCAP_APP_PORT || process.env.PORT || process.argv[2] || 8765\x2C\n\x09\x09peers: process.env.PEERS && process.env.PEERS.split('\x2C') || []\n\x09};\n\x09var Gun = require('../'); // require('gun')\n\n\x09if(process.env.HTTPS_KEY){\n\x09\x09config.key = fs.readFileSync(process.env.HTTPS_KEY);\n\x09\x09config.cert = fs.readFileSync(process.env.HTTPS_CERT);\n\x09\x09config.server = require('https').createServer(config\x2C Gun.serve(__dirname));\n\x09} else {\n\x09\x09config.server = require('http').createServer(Gun.serve(__dirname));\n\x09}\n\n\x09var gun = Gun({web: config.server.listen(config.port)\x2C peers: config.peers});\n\n\x09console.log('Relay peer started on port ' + config.port + ' with /gun');\n\n\x09module.exports = gun;\n}());
code-source-info,0x9e591308ae,120,0,943,C0O0C4O943,,
code-creation,Function,10,747567,0x9e5913096e,27, C:\\Users\\anthony\\Desktop\\code\\todoList Dapp\\node_modules\\gun\\examples\\http.js:1:1,0x9e59130828,~
code-source-info,0x9e5913096e,120,0,943,C0O0C17O1C22O939C26O942,,
code-creation,Function,10,747643,0x9e59130c06,464, C:\\Users\\anthony\\Desktop\\code\\todoList Dapp\\node_modules\\gun\\examples\\http.js:1:11,0x9e591308e0,~
code-source-info,0x9e59130c06,120,10,939,C0O10C5O29C13O29C17O29C19O50C22O61C28O75C31O90C36O90C45O108C58O108C64O177C65O192C73O192C78O221C83O231C87O239C92O243C98O268C102O276C107O280C113O297C117O305C122O309C128O317C132O325C139O329C152O351C156O359C161O363C167O372C171O380C176O384C181O390C189O390C205O422C213O422C218O458C222O469C227O473C233O503C238O516C242O524C247O528C252O503C257O498C261O559C266O572C270O580C275O584C280O559C285O554C289O599C297O615C302O631C307O657C317O657C323O632C329O613C335O688C343O704C348O719C353O737C363O737C369O720C374O702C378O771C383O788C388O795C393O809C398O795C407O830C415O771C420O841C424O849C432O892C436O883C442O897C446O849C451O916C458O931C463O938,,
code-creation,LazyCompile,10,748079,0x9e591311be,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x9e5910c240,~
code-source-info,0x9e591311be,118,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,748287,0x9e59132396,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0xa11711d578,~
code-source-info,0x9e59132396,101,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,748441,0x9e59132756,14,require node:internal/modules/cjs/helpers:101:31,0x9e59132268,~
code-source-info,0x9e59132756,101,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,748544,0x9e591328d6,127,Module.require node:internal/modules/cjs/loader:997:36,0xa117123c80,~
code-source-info,0x9e591328d6,102,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,748660,0x9e59132aa6,10, node:internal/modules/cjs/helpers:29:66,0xa11711d748,~
code-source-info,0x9e59132aa6,101,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,748768,0x9e59132c1e,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x3151220fb08,~
code-source-info,0x9e59132c1e,9,7789,8477,C0O7809C6O7956C16O7999C33O7962C38O7956C39O8038C44O8038C48O8081C54O8273C61O8304C69O8273C75O8329C80O8347C90O8363C93O8379C98O8363C102O8345C106O8406C111O8406C115O8432C120O8432C124O8464C128O8472,,
code-creation,Eval,10,748927,0x9e59132f7e,5, node:cluster:1:1,0x9e59132e38,~
script-source,121,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x9e59132f7e,121,0,1316,C0O0C4O1316,,
code-creation,Function,10,749081,0x9e59133026,39, node:cluster:1:1,0x9e59132ef8,~
code-source-info,0x9e59133026,121,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,758473,0x9e59133c26,5, node:internal/cluster/primary:1:1,0x9e591338a0,~
script-source,122,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x9e59133c26,122,0,11181,C0O0C4O11181,,
code-creation,Function,10,759640,0x9e591345ee,640, node:internal/cluster/primary:1:1,0x9e59133ba0,~
code-source-info,0x9e591345ee
tick,0x7ff8da09a9a0,759985,1,0x7ff65170d620,6,0x7ff6520560e0,0x206f4d447fb,0x206f4d44545,0x9e59133043,0x206f4d448c3,0x9e59132c4a,0x9e591275e3,0x9e59125566,0x9e59132922,0x9e5913275e,0x9e59130c13,0x9e59130984,0x9e5912d171,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
code-creation,Eval,10,761133,0x9e591364ce,5, node:child_process:1:1,0x9e59135ff8,~
script-source,123,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x9e591364ce,123,0,25520,C0O0C4O25520,,
code-creation,Function,10,763582,0x9e59136f2e,748, node:child_process:1:1,0x9e59136448,~
code-source-info,0x9e59136f2e
tick,0x7ff6519fd87a,775108,1,0x7ff65170d620,2,0x7ff6520560e0,0x206f4d447fb,0x206f4d44545,0x9e59137172,0x206f4d448c3,0x206f4d44545,0x9e591346c9,0x206f4d448c3,0x206f4d44545,0x9e59133043,0x206f4d448c3,0x9e59132c4a,0x9e591275e3,0x9e59125566,0x9e59132922,0x9e5913275e,0x9e59130c13,0x9e59130984,0x9e5912d171,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
new,MemoryChunk,0x35fa9c0000,262144
code-creation,Eval,10,775709,0x9e5913c1ce,5, node:internal/child_process:1:1,0x9e5913bad0,~
script-source,124,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x9e5913c1ce,124,0,32650,C0O0C4O32650,,
code-creation,Function,10,778903,0x9e5913d7ee,1265, node:internal/child_process:1:1,0x9e5913c148,~
code-source-info,0x9e5913d7ee
code-creation,Function,10,779205,0x9e5913df66,35,<instance_members_initializer> node:internal/child_process:525:3,0x9e5913ceb0,~
code-source-info,0x9e5913df66,124,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,781524,0x35fa9c52b6,5, node:net:1:1,0x35fa9c4ad8,~
script-source,125,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x35fa9c52b6,125,0,49462,C0O0C4O49462,,
code-creation,Function,10,786493,0x35fa9c8186,2513, node:net:1:1,0x35fa9c5230,~
code-source-info,0x35fa9c8186,125,0,49462,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33157C1831O33185C1843O33209C1852O33157C1862O33222C1868O33222C1878O37343C1881O37350C1892O37369C1900O38873C1903O38880C1916O38897C1924O42966C1930O42994C1951O43028C1963O42966C1973O43126C1976O43133C1989O43151C1997O44273C2000O44280C2013O44305C2021O45102C2024O45109C2037O45125C2045O46036C2048O46043C2061O46073C2069O46573C2072O46580C2084O46603C2097O46627C2105O46960C2111O46985C2132O47010C2144O47051C2156O46960C2166O47101C2172O47129C2189O47156C2201O47192C2213O47101C2223O47237C2226O47244C2239O47267C2247O47522C2250O47529C2263O47543C2271O47655C2274O47662C2287O47678C2295O47795C2297O47851C2298O47851C2300O47860C2311O47884C2312O47884C2314O47910C2323O48640C2328O48922C2338O48965C2348O49004C2358O49022C2368O49290C2378O49320C2388O49332C2398O49355C2408O49372C2418O49391C2428O49402C2438O49413C2448O49432C2503O48937C2512O49461,,
code-creation,Eval,10,787722,0x35fa9cd93e,5, node:internal/net:1:1,0x35fa9cd778,~
script-source,126,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x35fa9cd93e,126,0,1818,C0O0C4O1818,,
code-creation,Function,10,787951,0x35fa9cdd2e,617, node:internal/net:1:1,0x35fa9cd8b8,~
code-source-info,0x35fa9cdd2e,126,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,788526,0x35fa9cf69e,5, node:internal/dtrace:1:1,0x35fa9cf558,~
script-source,127,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x35fa9cf69e,127,0,589,C0O0C4O589,,
code-creation,Function,10,788646,0x35fa9cfb76,140, node:internal/dtrace:1:1,0x35fa9cf618,~
code-source-info,0x35fa9cfb76,127,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,789068,0x35fa9d0a06,34,protoGetter node:net:718:21,0x35fa9c56f8,~
code-source-info,0x35fa9d0a06,125,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
tick,0x7ff651c2d070,791158,1,0x7ff65170d620,2,0x7ff6520560e0,0x206f4d447fb,0x206f4d44545,0x9e5913d9e8,0x206f4d448c3,0x206f4d44545,0x9e59137172,0x206f4d448c3,0x206f4d44545,0x9e591346c9,0x206f4d448c3,0x206f4d44545,0x9e59133043,0x206f4d448c3,0x9e59132c4a,0x9e591275e3,0x9e59125566,0x9e59132922,0x9e5913275e,0x9e59130c13,0x9e59130984,0x9e5912d171,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
code-creation,Eval,10,802017,0x35fa9d5ba6,5, node:dgram:1:1,0x35fa9d5640,~
script-source,128,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x35fa9d5ba6,128,0,28325,C0O0C4O28325,,
code-creation,Function,10,805117,0x35fa9d7ab6,1501, node:dgram:1:1,0x35fa9d5b20,~
code-source-info,0x35fa9d7ab
code-creation,Eval,10,805939,0x35fa9daebe,5, node:internal/dgram:1:1,0x35fa9dacb8,~
script-source,129,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x35fa9daebe,129,0,1941,C0O0C4O1941,,
code-creation,Function,10,806190,0x35fa9db186,196, node:internal/dgram:1:1,0x35fa9dae38,~
code-source-info,0x35fa9db186,129,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
tick,0x7ff651c2d057,807327,1,0x7ff65170d620,2,0x7ff6520560e0,0x206f4d447fb,0x206f4d44545,0x9e5913da83,0x206f4d448c3,0x206f4d44545,0x9e59137172,0x206f4d448c3,0x206f4d44545,0x9e591346c9,0x206f4d448c3,0x206f4d44545,0x9e59133043,0x206f4d448c3,0x9e59132c4a,0x9e591275e3,0x9e59125566,0x9e59132922,0x9e5913275e,0x9e59130c13,0x9e59130984,0x9e5912d171,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
code-creation,Eval,10,811730,0x35fa9deb76,5, node:internal/socket_list:1:1,0x35fa9dea20,~
script-source,130,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x35fa9deb76,130,0,2813,C0O0C4O2813,,
code-creation,Function,10,812065,0x35fa9df1b6,126, node:internal/socket_list:1:1,0x35fa9deaf0,~
code-source-info,0x35fa9df1b6,130,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,812521,0x35fa9dff86,14,customPromiseExecFunction node:child_process:230:35,0x9e59136ab0,~
code-source-info,0x35fa9dff86,123,6792,7172,C0O6792C9O6807C13O7169,,
code-creation,Eval,10,812835,0x35fa9e21ee,5, node:internal/cluster/round_robin_handle:1:1,0x35fa9e1fd8,~
script-source,131,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x35fa9e21ee,131,0,3380,C0O0C4O3380,,
code-creation,Function,10,813206,0x35fa9e25b6,217, node:internal/cluster/round_robin_handle:1:1,0x35fa9e2168,~
code-source-info,0x35fa9e25b6,131,0,3380,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1264C172O1278C176O1956C185O1973C189O2376C198O2397C202O2764C211O2782C216O3379,,
code-creation,Eval,10,813798,0x35fa9e2ece,5, node:internal/cluster/utils:1:1,0x35fa9e2d58,~
script-source,132,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x35fa9e2ece,132,0,1104,C0O0C4O1104,,
code-creation,Function,10,813979,0x35fa9e308e,72, node:internal/cluster/utils:1:1,0x35fa9e2e48,~
code-source-info,0x35fa9e308e,132,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,814391,0x35fa9e369e,5, node:internal/cluster/shared_handle:1:1,0x35fa9e3518,~
script-source,133,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x35fa9e369e,133,0,1147,C0O0C4O1147,,
code-creation,Function,10,814689,0x35fa9e38d6,89, node:internal/cluster/shared_handle:1:1,0x35fa9e3618,~
code-source-info,0x35fa9e38d6,133,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,814982,0x35fa9e3ebe,5, node:internal/cluster/worker:1:1,0x35fa9e3d48,~
script-source,134,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x35fa9e3ebe,134,0,1370,C0O0C4O1370,,
code-creation,Function,10,815172,0x35fa9e4226,141, node:internal/cluster/worker:1:1,0x35fa9e3e38,~
code-source-info,0x35fa9e4226,134,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,815356,0x35fa9e4776,21,EventEmitter node:events:207:22,0x3de4d12aeb0,~
code-source-info,0x35fa9e4776,23,6453,6503,C0O6465C3O6478C8O6483C13O6483C20O6502,,
code-creation,LazyCompile,10,815481,0x35fa9e48be,149,EventEmitter.init node:events:326:29,0x3de4d12b2a8,~
code-source-info,0x35fa9e48be,23,9985,10593,C0O10008C6O10045C13O10057C16O10057C21O10083C25O10053C30O10100C32O10115C37O10115C41O10113C45O10140C46O10158C50O10199C60O10192C64O10234C71O10242C80O10270C85O10291C93O10270C98O10345C100O10350C105O10362C108O10375C113O10362C117O10360C123O10535C125O10540C131O10565C138O10575C140O10574C143O10550C148O10592,,
code-creation,LazyCompile,10,815774,0x35fa9e4cd6,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x3151220fb80,~
code-source-info,0x35fa9e4cd6,9,8495,9141,C0O8495C8O8514C14O8534C18O8541C19O8570C29O8570C34O8555C39O8619C42O8632C51O8664C53O8664C55O8695C62O8720C67O8695C72O8738C82O8738C87O8787C89O8840C102O8801C107O8799C111O9052C116O9059C121O9059C125O9084C130O9091C140O9091C146O9129C150O9136,,
code-creation,LazyCompile,10,815954,0x35fa9e50be,40, node:internal/bootstrap/loaders:273:15,0x35fa9e4bd0,~
code-source-info,0x35fa9e50be,9,8868,8976,C0O8882C5O8895C10O8895C14O8924C24O8945C27O8958C32O8924C39O8975,,
code-creation,LazyCompile,10,816065,0x35fa9e5216,89,syncExports node:internal/bootstrap/loaders:287:14,0x3151220fbf0,~
code-source-info,0x35fa9e5216,9,9454,9797,C0O9483C5O9509C11O9539C13O9552C17O9544C22O9595C24O9600C28O9614C30O9629C35O9644C37O9668C42O9675C51O9728C54O9740C59O9766C67O9728C73O9675C79O9561C84O9526C88O9796,,
code-creation,LazyCompile,10,816169,0x35fa9e537e,35,getOwn node:internal/bootstrap/loaders:180:16,0x3151220f888,~
code-source-info,0x35fa9e537e,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
code-creation,LazyCompile,10,816435,0x35fa9e5816,262,cluster.fork node:internal/cluster/primary:176:24,0x9e591340d8,~
code-source-info,0x35fa9e5816,122,5591,7249,C0O5591C8O5602C15O5610C20O5610C24O5640C37O5642C46O5672C51O5672C57O5720C71O5742C77O5760C83O5720C88O5720C90O5786C93O5793C106O5793C112O5900C115O5907C120O5915C133O5915C139O6434C142O6441C147O6449C160O6449C166O7081C169O7088C174O7096C186O7118C197O7118C203O7096C209O7151C214O7159C227O7159C233O7192C240O7200C248O7215C255O7219C259O7232C261O7246,,
code-creation,LazyCompile,10,816678,0x35fa9e69ce,310,cluster.setupPrimary node:internal/cluster/primary:61:32,0x9e59134018,~
code-source-info,0x35fa9e69ce,122,1894,3550,C0O1926C7O1939C13O1967C21O1939C33O1996C40O2000C50O2028C60O2066C63O2074C78O2092C85O2377C90O2409C100O2381C109O2503C112O2531C122O2503C129O2660C133O2660C148O2645C152O2704C159O2721C163O2738C169O2754C174O2769C177O2784C185O2784C191O2820C192O2826C196O2838C202O2849C207O2876C214O2866C220O2916C227O2923C232O2944C234O2940C241O2958C246O2979C248O2975C257O3032C264O2916C269O3058C272O3066C280O3066C286O3108C289O3116C302O3116C309O3549,,
code-creation,LazyCompile,10,816853,0x35fa9e6dde,14, node:internal/cluster/primary:76:26,0x35fa9e6780,~
code-source-info,0x35fa9e6dde,122,2445,2490,C0O2452C8O2452C13O2490,,
code-creation,LazyCompile,10,816917,0x35fa9e6ece,14, node:internal/cluster/primary:78:27,0x35fa9e67d0,~
code-source-info,0x35fa9e6ece,122,2568,2617,C0O2575C8O2575C13O2617,,
code-creation,LazyCompile,10,817113,0x35fa9e7136,368,nextTick node:internal/process/task_queues:104:18,0x8ef939a9f0,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x35fa9e
code-creation,LazyCompile,10,817696,0x35fa9e79a6,21, node:internal/validators:222:42,0x3151223cd50,~
code-source-info,0x35fa9e79a6,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,817778,0x35fa9e7aa6,15,isEmpty node:internal/fixed_queue:95:10,0x8ef939fc20,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x35fa9e7aa6,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,818201,0x35fa9e7f5e,13,isEmpty node:internal/fixed_queue:67:10,0x8ef939f9b0,~
code-source-info,0x35fa9e7f5e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,818274,0x35fa9e804e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x8ef939a900,~
code-source-info,0x35fa9e804e,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,818395,0x35fa9e8146,23,newAsyncId node:internal/async_hooks:417:20,0x31512238320,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x35fa9e8146,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,820202,0x35fa9e9626,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x315122383c0,~
code-source-info,0x35fa9e9626,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,820298,0x35fa9e9736,13,initHooksExist node:internal/async_hooks:479:24,0x315122385b0,~
code-source-info,0x35fa9e9736,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,820363,0x35fa9e981e,16,hasHooks node:internal/async_hooks:471:18,0x31512238510,~
code-source-info,0x35fa9e981e,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,820444,0x35fa9e992e,59,push node:internal/fixed_queue:99:7,0x8ef939fc70,~
code-source-info,0x35fa9e992e,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,820524,0x35fa9e9a76,24,isFull node:internal/fixed_queue:71:9,0x8ef939fa00,~
code-source-info,0x35fa9e9a76,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,820599,0x35fa9e9b86,37,push node:internal/fixed_queue:75:7,0x8ef939fa68,~
code-source-info,0x35fa9e9b86,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,820816,0x35fa9e9efe,522,createWorkerProcess node:internal/cluster/primary:117:29,0x9e59133ca8,~
code-source-info,0x35fa9e9efe
code-creation,LazyCompile,10,822062,0x35fa9eb1ee,18, node:internal/cluster/primary:124:26,0x35fa9e9cc8,~
code-source-info,0x35fa9eb1ee,122,4082,4130,C0O4091C9O4111C12O4091C17O4130,,
code-creation,RegExp,3,822325,0x206f4d47e60,1296,--inspect(?:-brk|-port)?|--debug-port
tick,0x7ff651cebb76,822548,0,0x0,2,0x7ff651c84800,0x35fa9ea102,0x35fa9e5849,0x9e59130c2a,0x9e59130984,0x9e5912d171,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
code-creation,LazyCompile,10,822723,0x35fa9eb486,455,fork node:child_process:114:14,0x9e59136500,~
code-source-info,0x35fa9eb
code-creation,LazyCompile,10,823095,0x35fa9eb81e,119,stdioStringToArray node:internal/child_process:235:28,0x9e5913c200,~
code-source-info,0x35fa9eb81e,124,6377,6780,C0O6415C3O6424C36O6503C53O6503C58O6553C60O6581C76O6581C81O6619C83O6647C96O6653C101O6647C102O6706C106O6719C111O6719C116O6762C118O6777,,
code-creation,LazyCompile,10,823311,0x35fa9edf8e,299,spawn node:child_process:692:15,0x9e591367b0,~
code-source-info,0x35fa9edf8e,123,18679,19880,C0O18679C11O18706C25O18716C32O18765C37O18789C42O18765C46O18802C53O18830C61O18802C66O18879C71O18906C76O18879C80O18879C82O18936C89O18936C94O18936C96O18961C106O18961C111O18989C114O18995C119O18995C124O19028C130O19036C142O19064C154O19282C159O19064C164O19064C166O19299C171O19305C184O19305C192O19451C211O19489C215O19481C217O19502C220O19513C226O19531C231O19539C239O19539C246O19587C249O19594C260O19620C265O19594C270O19661C275O19667C288O19667C296O19864C298O19877,,
code-creation,LazyCompile,10,823761,0x35fa9ee8be,1130,normalizeSpawnArguments node:child_process:504:33,0x9e59136710,~
code-source-info,0x35fa9ee8be
code-creation,LazyCompile,10,824166,0x35fa9ef07e,99, node:internal/validators:154:3,0x3151223cb08,~
code-source-info,0x35fa9ef07e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,824373,0x35fa9ef20e,48, node:child_process:627:7,0x35fa9ee4c8,~
code-source-info,0x35fa9ef20e,123,17185,17401,C0O17226C7O17226C12O17268C17O17279C22O17279C29O17311C30O17324C31O17345C36O17352C41O17352C46O17380C47O17392,,
code-creation,Function,11,824518,0x206f4d483e0,428, node:child_process:627:7,0x35fa9ee4c8,^
code-source-info,0x206f4d483e0,123,17185,17401,,,
code-creation,Function,11,824574,0x206f4d48600,548,internalBinding node:internal/bootstrap/loaders:164:45,0x3151220f7b0,^
code-source-info,0x206f4d48600,9,5278,5523,,,
code-creation,Function,11,824637,0x206f4d488a0,1344,deprecate node:internal/util:96:19,0x3de4d1057f8,^
code-source-info,0x206f4d488a0,16,2503,3720,,,
code-creation,Function,11,824681,0x206f4d48e40,304,getOwn node:internal/bootstrap/loaders:180:16,0x3151220f888,^
code-source-info,0x206f4d48e40,9,5677,5835,,,
code-creation,Function,11,824736,0x206f4d48fe0,672,syncExports node:internal/bootstrap/loaders:287:14,0x3151220fbf0,^
code-source-info,0x206f4d48fe0,9,9454,9797,,,
code-creation,Function,11,825098,0x206f4d492e0,9416,normalizeSpawnArguments node:child_process:504:33,0x9e59136710,^
code-source-info,0x206f4d492e0,123,13372,17874,,,
code-creation,LazyCompile,10,825207,0x35fa9eff56,46,validateTimeout node:child_process:911:25,0x9e59136970,~
code-source-info,0x35fa9eff56,123,24546,24714,C0O24561C7O24586C10O24586C17O24622C22O24636C38O24642C43O24636C45O24713,,
code-creation,LazyCompile,10,825306,0x35fa9f0076,48, node:internal/validators:227:45,0x3151223cda0,~
code-source-info,0x35fa9f0076,15,7190,7414,C0O7213C19O7326C24O7346C40O7352C45O7346C47O7413,,
code-creation,LazyCompile,10,825394,0x35fa9f01fe,53,sanitizeKillSignal node:child_process:927:28,0x9e59136a10,~
code-source-info,0x35fa9f01fe,123,25032,25376,C0O25050C12O25127C17O25134C21O25167C22O25178C27O25209C45O25215C50O25209C52O25375,,
code-creation,LazyCompile,10,825548,0x35fa9f0506,146,ChildProcess node:internal/child_process:252:22,0x9e5913c250,~
code-source-info,0x35fa9f0506,124,6805,8214,C0O6805C9O6813C20O6835C26O6813C31O6861C36O6880C40O6888C44O6904C48O6912C52O6927C56O6941C60O6957C64O6968C68O6982C72O6993C76O7005C80O7017C84O7032C88O7045C95O7064C98O7060C103O7058C107O7078C110O7083C119O7091C124O7105C128O7118C131O7123C140O7138C145O8213,,
code-creation,LazyCompile,10,825742,0x35fa9f0816,10, node:child_process:55:3,0x9e59136a60,~
code-source-info,0x35fa9f0816,123,1911,1942,C0O1926C2O1932C9O1941,,
code-creation,LazyCompile,10,826078,0x35fa9f0c76,1045,ChildProcess.spawn node:internal/child_process:347:40,0x9e5913ca98,~
code-source-info,0x35fa9f0c
code-creation,LazyCompile,10,826601,0x35fa9f14fe,154,getValidStdio node:internal/child_process:973:23,0x9e5913c5b8,~
code-source-info,0x35fa9f14fe,124,28281,31280,C0O28281C15O28304C16O28304C18O28316C19O28316C21O28365C27O28403C32O28411C40O28448C47O28453C53O28481C68O28487C73O28481C74O28772C81O28779C86O28784C95O28784C100O28759C103O28902C110O28931C121O28910C128O31248C135O31257C141O31264C147O31269C153O31277,,
code-creation,LazyCompile,10,826868,0x35fa9f19de,628, node:internal/child_process:992:39,0x35fa9f13c8,~
code-source-info,0x35fa9f19de
code-creation,LazyCompile,10,827199,0x35fa9f1f96,75, node:internal/validators:128:39,0x3151223ca48,~
code-source-info,0x35fa9f1f96,15,3827,4169,C0O3856C5O3861C12O3922C19O3949C22O3967C27O3949C36O3922C42O4073C47O4092C51O4108C67O4114C72O4108C74O4168,,
tick,0x7ff8d7bc7007,837682,1,0x7ff651687860,6,0x7ff6520560e0,0x35fa9f0da0,0x35fa9ee005,0x35fa9eb647,0x35fa9ea102,0x35fa9e5849,0x9e59130c2a,0x9e59130984,0x9e5912d171,0x9e591298cb,0x9e591286a6,0x9e591255cf,0x9e5911536f,0x3b7f4b3ef69
code-creation,LazyCompile,10,842731,0x35fa9f290e,396,setupChannel node:internal/child_process:571:22,0x9e5913c480,~
code-source-info,0x35fa9f290e,124,15404,27866,C0O15404C37O15462C49O15462C54O15462C56O15487C61O15502C65O15516C72O15523C77O15539C81O15555C94O15576C103O15608C115O15664C121O15608C134O15709C146O15767C152O15709C161O15555C166O15862C170O15882C174O15893C178O15916C182O15929C190O15967C198O15983C207O15981C215O16127C224O16140C228O16048C233O16073C239O16100C245O16186C246O16186C248O16195C251O16195C255O16227C259O16249C263O16260C270O16275C274O17538C281O17554C285O17620C288O17627C301O17627C307O20062C310O20069C323O20069C329O20516C336O20528C340O21281C347O21294C351O26126C355O26143C359O26156C366O26174C370O26621C377O26640C381O27824C384O27832C389O27832C393O27848C395O27863,,
code-creation,LazyCompile,10,843111,0x35fa9f2d9e,72,Control node:internal/child_process:529:14,0x9e5913ccb8,~
code-source-info,0x35fa9f2d9e,124,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,Eval,10,844100,0x35fa9f35b6,5, node:internal/child_process/serialization:1:1,0x35fa9f32d0,~
script-source,135,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x35fa9f35b6,135,0,4335,C0O0C4O4335,,
code-creation,Function,10,845018,0x35fa9f3e1e,369, node:internal/child_process/serialization:1:1,0x35fa9f3530,~
code-source-info,0x35fa9f3e1e,135,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,845637,0x35fa9f476e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x35fa9f3818,~
code-source-info,0x35fa9f476e,135,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,846062,0x35fa9f4f86,182,Worker node:internal/cluster/worker:13:16,0x35fa9e3ef0,~
code-source-info,0x35fa9f4f86,134,255,845,C0O255C9O270C16O281C21O306C28O313C33O333C34O339C45O352C54O339C59O382C69O440C72O459C76O486C80O504C83O525C91O515C95O545C98O563C102O566C105O553C109O588C115O604C118O627C122O617C126O641C129O646C134O654C147O654C153O737C156O742C161O750C174O750C181O844,,
code-creation,LazyCompile,10,846385,0x35fa9f5426,22, node:internal/child_process:706:36,0x35fa9f2428,~
code-source-info,0x35fa9f5426,124,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,846590,0x35fa9f554e,39,once node:events:664:44,0x3de4d12b910,~
code-source-info,0x35fa9f554e,23,20199,20317,C0O20221C3O20221C7O20256C24O20265C30O20256C36O20302C38O20314,,
code-creation,LazyCompile,10,846840,0x35fa9f56fe,60,_onceWrap node:events:650:19,0x3de4d12b8c0,~
code-source-info,0x35fa9f56fe,23,19758,19987,C0O19802C6O19826C12O19837C18O19845C24O19851C31O19882C34O19894C39O19894C45O19910C47O19927C51O19942C53O19955C57O19969C59O19984,,
code-creation,LazyCompile,10,847162,0x35fa9f592e,18,internal node:internal/cluster/utils:33:18,0x35fa9e2f50,~
code-source-info,0x35fa9f592e,132,692,1102,C0O692C13O710C17O1099,,
code-creation,LazyCompile,10,847335,0x35fa9f5c0e,19,_getMaxListeners node:events:403:26,0x3de4d12b478,~
code-source-info,0x35fa9f5c0e,23,12251,12379,C0O12272C6O12306C9O12326C13O12346C14O12362C18O12376,,
code-creation,LazyCompile,10,847450,0x35fa9f5d06,5,get node:events:263:16,0x3de4d12b098,~
code-source-info,0x35fa9f5d06,23,8022,8064,C0O8032C4O8059,,
code-creation,LazyCompile,10,847811,0x35fa9f5e6e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x8ef939a9a0,~
code-source-info,0x35fa9f5e6e
code-creation,LazyCompile,10,848149,0x35fa9f6146,43,shift node:internal/fixed_queue:108:8,0x8ef939fcc0,~
code-source-info,0x35fa9f6146,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,848335,0x35fa9f628e,54,shift node:internal/fixed_queue:80:8,0x8ef939fad0,~
code-source-info,0x35fa9f628e,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,848562,0x35fa9f641e,42,emitBeforeScript node:internal/async_hooks:510:26,0x31512238760,~
code-source-info,0x35fa9f641e,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,848781,0x35fa9f656e,180,pushAsyncContext node:internal/async_hooks:540:26,0x31512238908,~
code-source-info,0x35fa9f656e,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,849070,0x35fa9f67ae,21,setupSettingsNT node:internal/cluster/primary:113:25,0x9e59133c58,~
code-source-info,0x35fa9f67ae,122,3676,3727,C0O3692C5O3700C13O3700C20O3726,,
code-creation,LazyCompile,10,849197,0x35fa9f689e,13,destroyHooksExist node:internal/async_hooks:487:27,0x31512238670,~
code-source-info,0x35fa9f689e,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,849329,0x35fa9f698e,32,emitAfterScript node:internal/async_hooks:518:25,0x315122387b0,~
code-source-info,0x35fa9f698e,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,849552,0x35fa9f6af6,167,popAsyncContext node:internal/async_hooks:554:25,0x31512238958,~
code-source-info,0x35fa9f6af6,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,849784,0x35fa9f6cd6,13,enabledHooksExist node:internal/async_hooks:475:27,0x31512238560,~
code-source-info,0x35fa9f6cd6,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,849965,0x35fa9f6dc6,15,onSpawnNT node:internal/child_process:482:19,0x9e5913c430,~
code-source-info,0x35fa9f6dc6,124,13238,13272,C0O13255C8O13255C14O13271,,
code-creation,LazyCompile,10,850192,0x35fa9f6ede,125, node:internal/child_process:708:22,0x35fa9f5380,~
code-source-info,0x35fa9f6ede,124,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,850427,0x35fa9f709e,31,listenerCount node:events:858:23,0x3de4d12bc80,~
code-source-info,0x35fa9f709e,23,25642,25924,C0O25674C5O25688C7O25740C9O25746C13O25761C17O25808C19O25817C20O25830C24O25887C28O25894C29O25912C30O25921,,
code-creation,LazyCompile,10,850709,0x35fa9f71b6,21,emitForkNT node:internal/cluster/primary:234:20,0x9e59133d98,~
code-source-info,0x35fa9f71b6,122,7273,7319,C0O7287C5O7295C13O7295C20O7318,,
code-creation,LazyCompile,10,851200,0x35fa9f75a6,627,processPromiseRejections node:internal/process/promises:211:34,0x8ef939e3d8,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x35fa9f75a6,33,6650,9869,C0O6696C6O6719C13O6726C17O6773C23O6766C30O6773C35O6814C43O6834C47O6814C53O6793C58O6802C64O6864C68O6877C78O6877C86O6921C90O6929C96O6929C101O6736C104O6978C110O7005C115O7026C126O7026C128O7053C136O7073C140O7053C145O7127C151O7150C157O7150C163O7169C165O7209C167O7231C168O7250C172O7271C177O7279C182O7284C187O7327C189O7451C198O7344C203O7371C215O7419C227O7630C233O7682C248O7682C256O7809C264O7858C273O8529C282O8649C291O8828C300O9283C309O7911C313O7911C327O7955C332O8073C341O8073C346O8139C352O8197C360O8238C362O8237C369O8278C371O8277C379O8197C384O8381C393O8381C399O8428C401O8442C405O8442C410O8497C412O8570C421O8570C426O8617C428O8694C437O8694C442O8741C446O8741C451O8796C453O8884C462O8884C468O8931C470O8972C474O8972C488O9018C493O9142C502O9142C507O9210C509O9251C511O9351C520O9351C526O9398C528O9427C532O9427C537O9484C543O9501C547O9530C564O9581C570O9605C576O9661C582O9661C597O9726C599O7016C605O9774C611O9826C615O9853C622O9860C626O9866,,
tick,0x7ff651f88771,853801,0,0x0,3,0x7ff651c84800,0x35fa9f5fa6
code-creation,LazyCompile,10,853888,0x35fa9f84fe,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x8ef939d948,~
code-source-info,0x35fa9f84fe,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
tick,0x7ff8da10fb34,868569,0,0x0,8
tick,0x7ff8da10fb34,883544,0,0x0,8
tick,0x7ff8da10fb34,898718,0,0x0,8
tick,0x7ff8da10fb34,914731,0,0x0,8
tick,0x7ff8da10fb34,930720,0,0x0,8
tick,0x7ff8da10fb34,945740,0,0x0,8
tick,0x7ff8da10fb34,960737,0,0x0,8
tick,0x7ff8da10fb34,975710,0,0x0,8
tick,0x7ff8da10fb34,991722,0,0x0,8
tick,0x7ff8da10fb34,1006768,0,0x0,8
tick,0x7ff8da10fb34,1021711,0,0x0,8
tick,0x7ff8da10fb34,1037715,0,0x0,8
tick,0x7ff8da10fb34,1052712,0,0x0,8
tick,0x7ff8da10fb34,1067726,0,0x0,8
tick,0x7ff8da10fb34,1082681,0,0x0,8
tick,0x7ff8da10fb34,1098579,0,0x0,8
tick,0x7ff8da10fb34,1113608,0,0x0,8
tick,0x7ff8da10fb34,1128560,0,0x0,8
tick,0x7ff8da10fb34,1144295,0,0x0,8
tick,0x7ff8da10fb34,1160277,0,0x0,8
tick,0x7ff8da10fb34,1176500,0,0x0,8
tick,0x7ff8da10fb34,1192084,0,0x0,8
tick,0x7ff8da10fb34,1208141,0,0x0,8
tick,0x7ff8da10fb34,1224095,0,0x0,8
tick,0x7ff8da10fb34,1239190,0,0x0,8
tick,0x7ff8da10fb34,1254075,0,0x0,8
code-creation,LazyCompile,10,1260200,0x35fa9f86f6,383,channel.onread node:internal/child_process:601:28,0x35fa9f2350,~
code-source-info,0x35fa9f86f6,124,16285,17489,C0O16325C3O16333C8O16353C12O16375C16O16388C20O16428C31O16444C33O16443C37O16486C48O16502C50O16501C54O16543C72O16543C78O16594C82O16619C84O16633C90O16678C98O16678C128O16667C156O16667C159O16949C164O16953C173O16999C180O17003C185O17037C190O17060C200O17037C205O17095C209O17109C217O17150C229O17150C236O17233C248O17233C253O16656C319O17316C320O17331C324O17347C327O17354C332O17354C336O17375C343O17392C345O17390C349O17404C352O17412C357O17412C361O17428C365O17443C369O17458C377O17458C382O17488,,
code-creation,LazyCompile,10,1260460,0x35fa9f8a4e,277,parseChannelMessages node:internal/child_process/serialization:105:24,0x35fa9f3868,~
code-source-info,0x35fa9f8a4e,135,3333,4115,C10O3333C15O3333C35O3333C39O3373C45O3380C50O3387C51O3394C52O3402C54O3414C56O3413C61O3452C63O3460C68O3482C76O3478C81O3476C85O3532C92O3561C94O3560C98O3577C103O3577C112O3532C118O3639C122O3646C126O3731C128O3737C132O3763C133O3785C138O3801C140O3809C149O3825C152O3822C158O3863C162O3883C164O3882C169O3904C172O3896C175O3873C179O3929C181O3934C183O3934C188O3969C195O3991C199O3975C210O3969C230O3969C234O3956C239O3916C242O4004C244O4012C249O4025C253O4056C255O4084C257O4083C261O4097C267O4104C271O4074C276O4114,,
code-creation,LazyCompile,10,1260682,0x35fa9f8d06,71,StringDecoder node:string_decoder:83:23,0x10091792f20,~
script-source,61,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n  encodings\x0d\n} = internalBinding('string_decoder');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[internalUtil.kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n *\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = internalUtil.normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\nconst encodingsMap = {};\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n *\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x35fa9f8d06,61,2793,2974,C0O2809C3O2825C7O2823C11O2857C13O2862C18O2880C21O2887C28O2893C31O2887C36O2878C40O2904C42O2909C44O2908C50O2925C55O2943C58O2961C62O2955C65O2941C70O2973,,
code-creation,LazyCompile,10,1261277,0x35fa9f93be,73,normalizeEncoding node:string_decoder:62:27,0x10091792c20,~
code-source-info,0x35fa9f93be,61,2197,2441,C0O2221C5O2234C10O2234C16O2261C18O2292C23O2303C30O2318C32O2314C39O2333C42O2340C47O2340C54O2364C61O2370C66O2364C67O2406C69O2417C70O2426C72O2438,,
code-creation,LazyCompile,10,1261416,0x35fa9f9556,73,alloc node:buffer:360:30,0x3de4d136d80,~
code-source-info,0x35fa9f9556,24,10822,11060,C0O10850C5O10850C9O10871C14O10902C20O10916C25O10940C30O10940C35O10971C40O11002C54O10978C59O11020C60O11029C67O11036C72O11057,,
code-creation,LazyCompile,10,1261541,0x35fa9f96fe,63,write node:string_decoder:97:47,0x10091792f70,~
code-source-info,0x35fa9f96fe,61,3324,3619,C0O3335C6O3369C8O3380C9O3384C14O3389C20O3418C38O3424C43O3418C44O3575C51O3594C53O3593C57O3582C62O3616,,
code-creation,LazyCompile,10,1261690,0x35fa9f9a36,80,isInternal node:internal/child_process:962:20,0x9e5913c568,~
code-source-info,0x35fa9f9a36,124,27923,28221,C0O27938C3O27954C12O28034C20O28073C25O28077C32O28086C35O28102C39O28084C46O28123C49O28152C58O28160C61O28176C66O28123C74O28201C76O28184C79O28218,,
code-creation,LazyCompile,10,1261806,0x35fa9f9b96,51,handleMessage node:internal/child_process:948:25,0x35fa9f2260,~
code-source-info,0x35fa9f9b96,124,27615,27818,C0O27650C3O27662C9O27678C10O27685C11O27711C22O27762C27O27770C44O27770C50O27817,,
code-creation,Function,11,1261967,0x206f4d4b820,148,initHooksExist node:internal/async_hooks:479:24,0x315122385b0,^
code-source-info,0x206f4d4b820,13,16671,16705,,,
code-creation,Function,11,1262021,0x206f4d4b920,160,checkListener node:events:257:23,0x3de4d12aff8,^
code-source-info,0x206f4d4b920,23,7863,7921,,,
code-creation,Function,11,1262061,0x206f4d4ba20,128,addListener node:events:622:58,0x3de4d12b738,^
code-source-info,0x206f4d4ba20,23,18981,19055,,,
code-creation,Function,11,1262099,0x206f4d4bb00,108,isEmpty node:internal/fixed_queue:67:10,0x8ef939f9b0,^
code-source-info,0x206f4d4bb00,34,3150,3197,,,
code-creation,Function,11,1262138,0x206f4d4bbe0,152,hasHooks node:internal/async_hooks:471:18,0x31512238510,^
code-source-info,0x206f4d4bbe0,13,16531,16579,,,
code-creation,Function,11,1262182,0x206f4d4bce0,412,shift node:internal/fixed_queue:80:8,0x8ef939fad0,^
code-source-info,0x206f4d4bce0,34,3379,3596,,,
code-creation,Function,11,1262221,0x206f4d4bee0,116,isEmpty node:internal/fixed_queue:95:10,0x8ef939fc20,^
code-source-info,0x206f4d4bee0,34,3731,3773,,,
code-creation,Function,11,1262272,0x206f4d4bfc0,228,newAsyncId node:internal/async_hooks:417:20,0x31512238320,^
code-source-info,0x206f4d4bfc0,13,14929,14982,,,
code-creation,Function,11,1262317,0x206f4d4c120,392,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x315122383c0,^
code-source-info,0x206f4d4c120,13,15404,15667,,,
code-creation,LazyCompile,10,1262499,0x35fa9fa43e,115,emit node:internal/child_process:936:16,0x35fa9f2210,~
code-source-info,0x35fa9fa43e,124,27307,27587,C0O27339C5O27361C13O27381C21O27381C28O27416C31O27423C45O27423C50O27460C51O27467C52O27482C62O27516C71O27524C73O27523C86O27551C95O27558C104O27567C108O27482C114O27586,,
code-creation,LazyCompile,10,1262640,0x35fa9fa756,322,arrayClone node:events:883:20,0x3de4d12bd40,~
code-source-info,0x35fa9fa756,23,26206,26671,C0O26348C42O26371C50O26382C62O26390C71O26395C72O26409C80O26420C92O26428C104O26436C113O26441C114O26455C122O26466C134O26474C146O26482C158O26490C167O26495C168O26509C176O26520C188O26528C200O26536C212O26544C224O26552C233O26557C234O26571C242O26582C254O26590C266O26598C278O26606C290O26614C302O26622C311O26627C312O26636C317O26643C321O26668,,
code-creation,LazyCompile,10,1262906,0x35fa9fac86,554, node:internal/child_process:640:40,0x35fa9f23d8,~
code-source-info,0x35fa9fac
code-creation,LazyCompile,10,1263279,0x35fa9fb10e,98,onInternalMessage node:internal/cluster/utils:34:36,0x35fa9f5888,~
code-source-info,0x35fa9fb10e,132,743,1098,C0O743C2O780C9O784C14O811C15O818C16O835C19O858C25O903C32O913C37O925C42O913C48O940C50O979C53O1003C60O1013C65O1028C70O1019C75O1057C91O1057C97O1097,,
code-creation,LazyCompile,10,1263481,0x35fa9fb27e,27,onmessage node:internal/cluster/primary:263:19,0x9e59133de8,~
code-source-info,0x35fa9fb27e,122,7868,8026,C0O7906C3O7928C8O7957C12O7948C16O7968C20O8003C26O8025,,
code-creation,LazyCompile,10,1263628,0x35fa9fb396,40,online node:internal/cluster/primary:272:16,0x9e59133e38,~
code-source-info,0x35fa9fb396,122,8045,8147,C0O8059C2O8072C6O8094C14O8094C19O8113C24O8121C32O8121C39O8146,,
code-creation,Function,11,1263894,0x206f4d4c320,1516,popAsyncContext node:internal/async_hooks:554:25,0x31512238958,^
code-source-info,0x206f4d4c320,13,18694,19296,,,
code-creation,Function,11,1263977,0x206f4d4c980,216,isFull node:internal/fixed_queue:71:9,0x8ef939fa00,^
code-source-info,0x206f4d4c980,34,3209,3272,,,
code-creation,Function,11,1264045,0x206f4d4cac0,288,push node:internal/fixed_queue:75:7,0x8ef939fa68,^
code-source-info,0x206f4d4cac0,34,3282,3368,,,
code-creation,Function,11,1264162,0x206f4d4cc40,1640,pushAsyncContext node:internal/async_hooks:540:26,0x31512238908,^
code-source-info,0x206f4d4cc40,13,18046,18601,,,
code-creation,Function,11,1264234,0x206f4d4d320,148,destroyHooksExist node:internal/async_hooks:487:27,0x31512238670,^
code-source-info,0x206f4d4d320,13,16798,16835,,,
code-creation,Function,11,1264274,0x206f4d4d420,148,enabledHooksExist node:internal/async_hooks:475:27,0x31512238560,^
code-source-info,0x206f4d4d420,13,16609,16644,,,
tick,0x7ff8da10fb34,1270092,0,0x0,8
tick,0x7ff8da10fb34,1285076,0,0x0,8
tick,0x7ff8da10fb34,1300058,0,0x0,8
tick,0x7ff8da10fb34,1316069,0,0x0,8
tick,0x7ff8da10fb34,1332120,0,0x0,8
tick,0x7ff8da10fb34,1348065,0,0x0,8
tick,0x7ff8da10fb34,1364089,0,0x0,8
tick,0x7ff8da10fb34,1379485,0,0x0,8
tick,0x7ff8da10fb34,1395178,0,0x0,8
tick,0x7ff8da10fb34,1410228,0,0x0,8
tick,0x7ff8da10fb34,1425656,0,0x0,8
tick,0x7ff8da10fb34,1441173,0,0x0,8
tick,0x7ff8da10fb34,1456633,0,0x0,8
tick,0x7ff8da10fb34,1472608,0,0x0,8
tick,0x7ff8da10fb34,1487819,0,0x0,8
tick,0x7ff8da10fb34,1503169,0,0x0,8
tick,0x7ff8da10fb34,1518746,0,0x0,8
tick,0x7ff8da10fb34,1534219,0,0x0,8
tick,0x7ff8da10fb34,1550192,0,0x0,8
tick,0x7ff8da10fb34,1566475,0,0x0,8
tick,0x7ff8da10fb34,1582070,0,0x0,8
tick,0x7ff8da10fb34,1598078,0,0x0,8
tick,0x7ff8da10fb34,1614168,0,0x0,8
tick,0x7ff8da10fb34,1630036,0,0x0,8
tick,0x7ff8da10fb34,1645989,0,0x0,8
tick,0x7ff8da10fb34,1662003,0,0x0,8
tick,0x7ff8da10fb34,1677208,0,0x0,8
tick,0x7ff8da10fb34,1691985,0,0x0,8
tick,0x7ff8da10fb34,1707287,0,0x0,8
tick,0x7ff8da10fb34,1722395,0,0x0,8
tick,0x7ff8da10fb34,1738164,0,0x0,8
tick,0x7ff8da10fb34,1753648,0,0x0,8
tick,0x7ff8da10fb34,1769678,0,0x0,8
tick,0x7ff8da10fb34,1785633,0,0x0,8
tick,0x7ff8da10fb34,1800626,0,0x0,8
tick,0x7ff8da10fb34,1815668,0,0x0,8
tick,0x7ff8da10fb34,1830701,0,0x0,8
tick,0x7ff8da10fb34,1846785,0,0x0,8
tick,0x7ff8da10fb34,1861678,0,0x0,8
tick,0x7ff8da10fb34,1877176,0,0x0,8
tick,0x7ff8da10fb34,1892535,0,0x0,8
tick,0x7ff8da10fb34,1908247,0,0x0,8
tick,0x7ff8da10fb34,1924426,0,0x0,8
tick,0x7ff8da10fb34,1940360,0,0x0,8
tick,0x7ff8da10fb34,1955233,0,0x0,8
tick,0x7ff8da10fb34,1969952,0,0x0,8
tick,0x7ff8da10fb34,1985961,0,0x0,8
tick,0x7ff8da10fb34,2001851,0,0x0,8
code-creation,LazyCompile,10,2004515,0x35fa9fbbfe,398,queryServer node:internal/cluster/primary:283:21,0x9e59133ed8,~
code-source-info,0x35fa9fbbfe
code-creation,LazyCompile,10,2004770,0x35fa9fbfbe,158,SharedHandle node:internal/cluster/shared_handle:9:22,0x35fa9e36d0,~
code-source-info,0x35fa9fbfbe,133,221,694,C6O238C11O244C16O257C21O261C26O275C28O284C32O294C34O313C37O309C42O307C46O327C47O339C51O350C52O361C56O375C58O384C60O400C67O426C72O443C77O456C97O456C105O529C110O540C130O540C136O605C142O640C144O651C150O672C152O684C157O693,,
code-creation,LazyCompile,10,2005037,0x35fa9fc4ce,379,createServerHandle node:net:1225:28,0x35fa9c5a18,~
code-source-info,0x35fa9fc4ce
code-creation,LazyCompile,10,2005269,0x35fa9fc7fe,10, node:net:39:63,0x35fa9c5ce8,~
code-source-info,0x35fa9fc7fe,125,1511,1538,C0O1524C2O1530C9O1537,,
code-creation,LazyCompile,10,2005608,0x35fa9fc8fe,71,SharedHandle.add node:internal/cluster/shared_handle:27:38,0x35fa9e3720,~
code-source-info,0x35fa9fc8fe,133,735,875,C0O755C5O768C10O776C15O787C20O776C27O755C31O801C36O809C41O820C46O809C52O846C59O864C64O836C70O874,,
code-creation,LazyCompile,10,2005733,0x35fa9fcade,118, node:internal/cluster/primary:323:22,0x35fa9fba98,~
code-source-info,0x35fa9fcade,122,9627,9907,C0O9677C7O9685C14O9689C17O9685C23O9668C28O9702C32O9720C39O9728C46O9735C49O9734C54O9791C62O9796C69O9813C75O9827C84O9852C94O9864C104O9880C111O9791C117O9906,,
code-creation,LazyCompile,10,2005852,0x35fa9fcd9e,25,send node:internal/cluster/primary:362:14,0x9e59133fc8,~
code-source-info,0x35fa9fcd9e,122,10551,10644,C0O10586C5O10611C19O10593C24O10641,,
code-creation,LazyCompile,10,2005947,0x35fa9fcee6,93,sendHelper node:internal/cluster/utils:16:20,0x35fa9e2f00,~
code-source-info,0x35fa9fcee6,132,197,537,C0O240C6O256C7O269C8O366C19O402C28O411C38O423C44O458C49O468C56O472C59O468C65O487C75O491C81O512C86O512C92O534,,
code-creation,LazyCompile,10,2006114,0x35fa9fd166,178,target.send node:internal/child_process:724:25,0x35fa9f2478,~
code-source-info,0x35fa9fd166,124,20538,21274,C0O20538C12O20582C18O20625C21O20651C24O20678C29O20711C35O20755C38O20782C43O20815C47O20851C57O20851C62O20901C73O20938C80O20956C83O20965C89O20985C92O20997C109O20997C114O21039C115O21063C122O21063C127O21063C129O21098C135O21143C140O21151C148O21151C156O21196C161O21204C171O21204C176O21256C177O21269,,
code-creation,LazyCompile,10,2006653,0x35fa9fd82e,925,target._send node:internal/child_process:750:26,0x35fa9f2500,~
code-source-info,0x35fa9fd82e,124,21304,25589,C0O21304C13O21348C23O21360C32O21378C37O21348C41O21395C45O21429C57O21435C62O21429C63O21726C87O21889C107O21895C112O21889C113O22050C119O22093C126O22120C135O22149C137O22207C141O22303C148O22379C155O22406C159O22428C162O22432C166O22417C171O22451C173O22464C179O22494C183O22516C186O22520C190O22505C195O22539C197O22552C203O22582C207O22604C209O22593C218O22629C220O22618C225O22646C227O22659C233O22689C237O22711C240O22717C244O22700C249O22736C251O22749C257O22781C261O22803C263O22792C268O22819C270O22832C276O22875C283O22881C288O22875C289O23000C292O23009C298O23034C308O23058C320O23095C326O23124C332O23152C336O23189C344O23034C349O23216C352O23228C357O23241C364O23248C367O23254C368O23273C375O23304C379O23295C383O23373C394O23395C397O23420C401O23411C405O23426C415O23461C424O23470C433O23479C442O23487C449O23382C456O23643C458O23683C464O23754C475O23785C482O23794C487O23825C494O23825C501O23876C504O23885C512O23919C514O23939C521O23943C526O24006C533O24010C538O24108C548O24132C560O24167C566O24218C572O24245C576O24108C581O24272C584O24284C589O24297C596O24304C599O24310C600O24337C607O24337C613O24373C634O24373C640O24452C651O24468C653O24467C657O24496C658O24504C663O24520C667O24543C670O24553C676O24578C681O24596C685O24611C689O24626C695O24651C720O24651C725O24723C729O24753C733O24768C737O24910C744O24918C749O24918C755O24946C761O24993C766O25001C776O25001C784O25091C788O25106C794O25129C814O25129C819O25197C832O25234C842O25234C847O25234C849O25273C857O25322C862O25330C875O25330C883O25383C888O25391C898O25391C905O25540C910O25555C921O25570C924O25584,,
code-creation,LazyCompile,10,2007353,0x35fa9fdeee,3,send node:internal/child_process:92:9,0x9e5913c728,~
code-source-info,0x35fa9fdeee,124,2474,2531,C0O2510C2O2524,,
code-creation,LazyCompile,10,2007542,0x35fa9fdfbe,39,writeChannelMessage node:internal/child_process/serialization:126:22,0x35fa9f38b8,~
code-source-info,0x35fa9fdfbe,135,4141,4288,C0O4195C5O4195C12O4218C16O4246C33O4246C38O4283,,
tick,0x7ff8d6f612e0,2017435,1,0x7ff65167ef70,6,0x7ff6520560e0,0x35fa9fdfdf,0x35fa9fdaa8,0x35fa9fd1d3,0x35fa9fcf3c,0x35fa9fcdb1,0x35fa9fcb4d,0x35fa9fc93e,0x35fa9fbd84,0x35fa9fb292,0x35fa9fb169,0xa117114477,0x35fa9fa46b,0x35fa9f5f0a
code-creation,LazyCompile,10,2019626,0x35fa9fe15e,44,refCounted node:internal/child_process:539:13,0x9e5913cd08,~
code-source-info,0x35fa9fe15e,124,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,2019858,0x35fa9fe2de,33,req.oncomplete node:internal/child_process:851:26,0x35fa9fd378,~
code-source-info,0x35fa9fe2de,124,24770,24899,C0O24789C7O24797C12O24797C16O24824C22O24873C27O24873C32O24898,,
code-creation,LazyCompile,10,2019960,0x35fa9fe3ee,56,unrefCounted node:internal/child_process:545:15,0x9e5913cd58,~
code-source-info,0x35fa9fe3ee,124,14852,14983,C0O14862C3O14872C9O14873C14O14879C21O14894C26O14922C28O14927C32O14936C37O14936C41O14957C49O14957C55O14982,,
tick,0x7ff8da10fb34,2032630,0,0x0,8
tick,0x7ff8da10fb34,2048255,0,0x0,8
tick,0x7ff8da10fb34,2064182,0,0x0,8
tick,0x7ff8da10fb34,2080282,0,0x0,8
tick,0x7ff8da10fb34,2095148,0,0x0,8
tick,0x7ff8da10fb34,2109893,0,0x0,8
tick,0x7ff8da10fb34,2128989,0,0x0,8
code-creation,LazyCompile,10,2130428,0x35fa9fe64e,86,listening node:internal/cluster/primary:339:19,0x9e59133f28,~
code-source-info,0x35fa9fe64e,122,9934,10207,C0O9970C5O9998C13O10033C21O10061C29O10084C40O10098C42O10111C46O10136C54O10136C60O10164C65O10172C79O10172C85O10206,,
tick,0x7ff8da10fb34,2142487,0,0x0,8
tick,0x7ff8da10fb34,2156995,0,0x0,8
tick,0x7ff8da10fb34,2172197,0,0x0,8
tick,0x7ff8da10fb34,2188267,0,0x0,8
tick,0x7ff8da10fb34,2203531,0,0x0,8
tick,0x7ff8da10fb34,2218555,0,0x0,8
tick,0x7ff8da10fb34,2234293,0,0x0,8
tick,0x7ff8da10fb34,2250428,0,0x0,8
tick,0x7ff8da10fb34,2266174,0,0x0,8
tick,0x7ff8da10fb34,2281377,0,0x0,8
tick,0x7ff8da10fb34,2297377,0,0x0,8
tick,0x7ff8da10fb34,2312365,0,0x0,8
tick,0x7ff8da10fb34,2328399,0,0x0,8
tick,0x7ff8da10fb34,2344400,0,0x0,8
tick,0x7ff8da10fb34,2359825,0,0x0,8
tick,0x7ff8da10fb34,2375285,0,0x0,8
tick,0x7ff8da10fb34,2390480,0,0x0,8
tick,0x7ff8da10fb34,2405248,0,0x0,8
tick,0x7ff8da10fb34,2420258,0,0x0,8
tick,0x7ff8da10fb34,2435281,0,0x0,8
tick,0x7ff8da10fb34,2450732,0,0x0,8
tick,0x7ff8da10fb34,2466005,0,0x0,8
tick,0x7ff8da10fb34,2481666,0,0x0,8
tick,0x7ff8da10fb34,2497418,0,0x0,8
tick,0x7ff8da10fb34,2513372,0,0x0,8
tick,0x7ff8da10fb34,2528294,0,0x0,8
tick,0x7ff8da10fb34,2543415,0,0x0,8
tick,0x7ff8da10fb34,2558723,0,0x0,8
tick,0x7ff8da10fb34,2574331,0,0x0,8
tick,0x7ff8da10fb34,2589251,0,0x0,8
tick,0x7ff8da10fb34,2604700,0,0x0,8
tick,0x7ff8da10fb34,2619834,0,0x0,8
tick,0x7ff8da10fb34,2635003,0,0x0,8
tick,0x7ff8da10fb34,2650305,0,0x0,8
tick,0x7ff8da10fb34,2665951,0,0x0,8
tick,0x7ff8da10fb34,2681611,0,0x0,8
tick,0x7ff8da10fb34,2696515,0,0x0,8
tick,0x7ff8da10fb34,2711454,0,0x0,8
tick,0x7ff8da10fb34,2727619,0,0x0,8
tick,0x7ff8da10fb34,2742705,0,0x0,8
tick,0x7ff8da10fb34,2758409,0,0x0,8
tick,0x7ff8da10fb34,2774334,0,0x0,8
tick,0x7ff8da10fb34,2789868,0,0x0,8
tick,0x7ff8da10fb34,2805330,0,0x0,8
tick,0x7ff8da10fb34,2820377,0,0x0,8
tick,0x7ff8da10fb34,2836322,0,0x0,8
tick,0x7ff8da10fb34,2851111,0,0x0,8
tick,0x7ff8da10fb34,2866203,0,0x0,8
tick,0x7ff8da10fb34,2882226,0,0x0,8
tick,0x7ff8da10fb34,2898538,0,0x0,8
tick,0x7ff8da10fb34,2913420,0,0x0,8
tick,0x7ff8da10fb34,2929426,0,0x0,8
tick,0x7ff8da10fb34,2948473,0,0x0,8
tick,0x7ff8da10fb34,2961031,0,0x0,8
tick,0x7ff8da10fb34,2976259,0,0x0,8
tick,0x7ff8da10fb34,2991800,0,0x0,8
tick,0x7ff8da10fb34,3007231,0,0x0,8
tick,0x7ff8da10fb34,3022476,0,0x0,8
tick,0x7ff8da10fb34,3038215,0,0x0,8
tick,0x7ff8da10fb34,3053499,0,0x0,8
tick,0x7ff8da10fb34,3068865,0,0x0,8
tick,0x7ff8da10fb34,3084810,0,0x0,8
tick,0x7ff8da10fb34,3100767,0,0x0,8
tick,0x7ff8da10fb34,3117276,0,0x0,8
tick,0x7ff8da10fb34,3132714,0,0x0,8
tick,0x7ff8da10fb34,3147880,0,0x0,8
tick,0x7ff8da10fb34,3162914,0,0x0,8
tick,0x7ff8da10fb34,3178080,0,0x0,8
tick,0x7ff8da10fb34,3194043,0,0x0,8
tick,0x7ff8da10fb34,3209139,0,0x0,8
tick,0x7ff8da10fb34,3224025,0,0x0,8
tick,0x7ff8da10fb34,3240041,0,0x0,8
tick,0x7ff8da10fb34,3255081,0,0x0,8
tick,0x7ff8da10fb34,3270993,0,0x0,8
tick,0x7ff8da10fb34,3286380,0,0x0,8
tick,0x7ff8da10fb34,3301972,0,0x0,8
tick,0x7ff8da10fb34,3316840,0,0x0,8
tick,0x7ff8da10fb34,3332011,0,0x0,8
tick,0x7ff8da10fb34,3347972,0,0x0,8
tick,0x7ff8da10fb34,3363983,0,0x0,8
tick,0x7ff8da10fb34,3379984,0,0x0,8
tick,0x7ff8da10fb34,3396053,0,0x0,8
tick,0x7ff8da10fb34,3410972,0,0x0,8
tick,0x7ff8da10fb34,3426053,0,0x0,8
tick,0x7ff8da10fb34,3441968,0,0x0,8
tick,0x7ff8da10fb34,3457979,0,0x0,8
tick,0x7ff8da10fb34,3473974,0,0x0,8
tick,0x7ff8da10fb34,3488646,0,0x0,8
tick,0x7ff8da10fb34,3503751,0,0x0,8
tick,0x7ff8da10fb34,3519228,0,0x0,8
tick,0x7ff8da10fb34,3534717,0,0x0,8
tick,0x7ff8da10fb34,3549998,0,0x0,8
tick,0x7ff8da10fb34,3565666,0,0x0,8
tick,0x7ff8da10fb34,3581477,0,0x0,8
tick,0x7ff8da10fb34,3597471,0,0x0,8
tick,0x7ff8da10fb34,3613468,0,0x0,8
tick,0x7ff8da10fb34,3628789,0,0x0,8
tick,0x7ff8da10fb34,3644464,0,0x0,8
tick,0x7ff8da10fb34,3660318,0,0x0,8
tick,0x7ff8da10fb34,3676385,0,0x0,8
tick,0x7ff8da10fb34,3692393,0,0x0,8
tick,0x7ff8da10fb34,3707570,0,0x0,8
tick,0x7ff8da10fb34,3722500,0,0x0,8
tick,0x7ff8da10fb34,3737486,0,0x0,8
tick,0x7ff8da10fb34,3752884,0,0x0,8
tick,0x7ff8da10fb34,3768136,0,0x0,8
tick,0x7ff8da10fb34,3783673,0,0x0,8
tick,0x7ff8da10fb34,3798691,0,0x0,8
tick,0x7ff8da10fb34,3814653,0,0x0,8
tick,0x7ff8da10fb34,3829606,0,0x0,8
tick,0x7ff8da10fb34,3844614,0,0x0,8
tick,0x7ff8da10fb34,3860615,0,0x0,8
tick,0x7ff8da10fb34,3875688,0,0x0,8
tick,0x7ff8da10fb34,3890627,0,0x0,8
tick,0x7ff8da10fb34,3906639,0,0x0,8
tick,0x7ff8da10fb34,3921596,0,0x0,8
tick,0x7ff8da10fb34,3936511,0,0x0,8
tick,0x7ff8da10fb34,3952688,0,0x0,8
tick,0x7ff8da10fb34,3967558,0,0x0,8
tick,0x7ff8da10fb34,3983101,0,0x0,8
tick,0x7ff8da10fb34,3998547,0,0x0,8
tick,0x7ff8da10fb34,4013443,0,0x0,8
tick,0x7ff8da10fb34,4028454,0,0x0,8
tick,0x7ff8da10fb34,4044959,0,0x0,8
tick,0x7ff8da10fb34,4059588,0,0x0,8
tick,0x7ff8da10fb34,4075485,0,0x0,8
tick,0x7ff8da10fb34,4091455,0,0x0,8
tick,0x7ff8da10fb34,4106672,0,0x0,8
tick,0x7ff8da10fb34,4121509,0,0x0,8
tick,0x7ff8da10fb34,4137477,0,0x0,8
tick,0x7ff8da10fb34,4153515,0,0x0,8
tick,0x7ff8da10fb34,4169411,0,0x0,8
tick,0x7ff8da10fb34,4185436,0,0x0,8
tick,0x7ff8da10fb34,4200189,0,0x0,8
tick,0x7ff8da10fb34,4215163,0,0x0,8
tick,0x7ff8da10fb34,4231220,0,0x0,8
tick,0x7ff8da10fb34,4246854,0,0x0,8
tick,0x7ff8da10fb34,4261232,0,0x0,8
tick,0x7ff8da10fb34,4277145,0,0x0,8
tick,0x7ff8da10fb34,4293220,0,0x0,8
tick,0x7ff8da10fb34,4308242,0,0x0,8
tick,0x7ff8da10fb34,4323731,0,0x0,8
tick,0x7ff8da10fb34,4339114,0,0x0,8
tick,0x7ff8da10fb34,4355162,0,0x0,8
tick,0x7ff8da10fb34,4370290,0,0x0,8
tick,0x7ff8da10fb34,4385327,0,0x0,8
tick,0x7ff8da10fb34,4400893,0,0x0,8
tick,0x7ff8da10fb34,4416343,0,0x0,8
tick,0x7ff8da10fb34,4431960,0,0x0,8
tick,0x7ff8da10fb34,4448136,0,0x0,8
tick,0x7ff8da10fb34,4463764,0,0x0,8
tick,0x7ff8da10fb34,4479808,0,0x0,8
tick,0x7ff8da10fb34,4495582,0,0x0,8
tick,0x7ff8da10fb34,4511604,0,0x0,8
tick,0x7ff8da10fb34,4527556,0,0x0,8
tick,0x7ff8da10fb34,4543512,0,0x0,8
tick,0x7ff8da10fb34,4558487,0,0x0,8
tick,0x7ff8da10fb34,4573479,0,0x0,8
tick,0x7ff8da10fb34,4588626,0,0x0,8
tick,0x7ff8da10fb34,4603844,0,0x0,8
tick,0x7ff8da10fb34,4619620,0,0x0,8
tick,0x7ff8da10fb34,4635467,0,0x0,8
tick,0x7ff8da10fb34,4649883,0,0x0,8
tick,0x7ff8da10fb34,4664817,0,0x0,8
tick,0x7ff8da10fb34,4680803,0,0x0,8
tick,0x7ff8da10fb34,4695535,0,0x0,8
tick,0x7ff8da10fb34,4711247,0,0x0,8
tick,0x7ff8da10fb34,4727214,0,0x0,8
tick,0x7ff8da10fb34,4742412,0,0x0,8
tick,0x7ff8da10fb34,4757180,0,0x0,8
tick,0x7ff8da10fb34,4772237,0,0x0,8
tick,0x7ff8da10fb34,4787250,0,0x0,8
tick,0x7ff8da10fb34,4803185,0,0x0,8
tick,0x7ff8da10fb34,4818269,0,0x0,8
tick,0x7ff8da10fb34,4833591,0,0x0,8
tick,0x7ff8da10fb34,4849200,0,0x0,8
tick,0x7ff8da10fb34,4865145,0,0x0,8
tick,0x7ff8da10fb34,4881160,0,0x0,8
tick,0x7ff8da10fb34,4897229,0,0x0,8
tick,0x7ff8da10fb34,4913169,0,0x0,8
tick,0x7ff8da10fb34,4929298,0,0x0,8
tick,0x7ff8da10fb34,4945131,0,0x0,8
tick,0x7ff8da10fb34,4961281,0,0x0,8
tick,0x7ff8da10fb34,4976322,0,0x0,8
tick,0x7ff8da10fb34,4991437,0,0x0,8
tick,0x7ff8da10fb34,5006871,0,0x0,8
tick,0x7ff8da10fb34,5022563,0,0x0,8
tick,0x7ff8da10fb34,5037465,0,0x0,8
tick,0x7ff8da10fb34,5052342,0,0x0,8
tick,0x7ff8da10fb34,5068134,0,0x0,8
tick,0x7ff8da10fb34,5083589,0,0x0,8
tick,0x7ff8da10fb34,5099409,0,0x0,8
tick,0x7ff8da10fb34,5114992,0,0x0,8
tick,0x7ff8da10fb34,5130840,0,0x0,8
tick,0x7ff8da10fb34,5146665,0,0x0,8
tick,0x7ff8da10fb34,5161482,0,0x0,8
tick,0x7ff8da10fb34,5177121,0,0x0,8
tick,0x7ff8da10fb34,5192454,0,0x0,8
tick,0x7ff8da10fb34,5208548,0,0x0,8
tick,0x7ff8da10fb34,5224464,0,0x0,8
tick,0x7ff8da10fb34,5239744,0,0x0,8
tick,0x7ff8da10fb34,5255112,0,0x0,8
tick,0x7ff8da10fb34,5270410,0,0x0,8
tick,0x7ff8da10fb34,5286377,0,0x0,8
tick,0x7ff8da10fb34,5302105,0,0x0,8
tick,0x7ff8da10fb34,5318124,0,0x0,8
tick,0x7ff8da10fb34,5332765,0,0x0,8
tick,0x7ff8da10fb34,5348603,0,0x0,8
tick,0x7ff8da10fb34,5364101,0,0x0,8
tick,0x7ff8da10fb34,5379446,0,0x0,8
tick,0x7ff8da10fb34,5395218,0,0x0,8
tick,0x7ff8da10fb34,5410689,0,0x0,8
tick,0x7ff8da10fb34,5426472,0,0x0,8
tick,0x7ff8da10fb34,5441729,0,0x0,8
tick,0x7ff8da10fb34,5457461,0,0x0,8
tick,0x7ff8da10fb34,5472992,0,0x0,8
tick,0x7ff8da10fb34,5488242,0,0x0,8
tick,0x7ff8da10fb34,5503863,0,0x0,8
tick,0x7ff8da10fb34,5519398,0,0x0,8
tick,0x7ff8da10fb34,5534519,0,0x0,8
tick,0x7ff8da10fb34,5549932,0,0x0,8
tick,0x7ff8da10fb34,5565111,0,0x0,8
tick,0x7ff8da10fb34,5581073,0,0x0,8
tick,0x7ff8da10fb34,5596630,0,0x0,8
tick,0x7ff8da10fb34,5611764,0,0x0,8
tick,0x7ff8da10fb34,5627209,0,0x0,8
tick,0x7ff8da10fb34,5642485,0,0x0,8
tick,0x7ff8da10fb34,5657695,0,0x0,8
tick,0x7ff8da10fb34,5673496,0,0x0,8
tick,0x7ff8da10fb34,5689225,0,0x0,8
tick,0x7ff8da10fb34,5704405,0,0x0,8
tick,0x7ff8da10fb34,5719592,0,0x0,8
tick,0x7ff8da10fb34,5734757,0,0x0,8
tick,0x7ff8da10fb34,5750076,0,0x0,8
tick,0x7ff8da10fb34,5765397,0,0x0,8
tick,0x7ff8da10fb34,5781508,0,0x0,8
tick,0x7ff8da10fb34,5797703,0,0x0,8
tick,0x7ff8da10fb34,5812155,0,0x0,8
tick,0x7ff8da10fb34,5827257,0,0x0,8
tick,0x7ff8da10fb34,5843534,0,0x0,8
tick,0x7ff8da10fb34,5858805,0,0x0,8
tick,0x7ff8da10fb34,5874399,0,0x0,8
tick,0x7ff8da10fb34,5889653,0,0x0,8
tick,0x7ff8da10fb34,5905298,0,0x0,8
tick,0x7ff8da10fb34,5921410,0,0x0,8
tick,0x7ff8da10fb34,5936937,0,0x0,8
tick,0x7ff8da10fb34,5952368,0,0x0,8
tick,0x7ff8da10fb34,5967606,0,0x0,8
tick,0x7ff8da10fb34,5982633,0,0x0,8
tick,0x7ff8da10fb34,5998657,0,0x0,8
tick,0x7ff8da10fb34,6014492,0,0x0,8
tick,0x7ff8da10fb34,6030782,0,0x0,8
tick,0x7ff8da10fb34,6046631,0,0x0,8
tick,0x7ff8da10fb34,6061626,0,0x0,8
tick,0x7ff8da10fb34,6077358,0,0x0,8
tick,0x7ff8da10fb34,6092433,0,0x0,8
tick,0x7ff8da10fb34,6108201,0,0x0,8
tick,0x7ff8da10fb34,6123476,0,0x0,8
tick,0x7ff8da10fb34,6138756,0,0x0,8
tick,0x7ff8da10fb34,6153477,0,0x0,8
tick,0x7ff8da10fb34,6168344,0,0x0,8
tick,0x7ff8da10fb34,6183547,0,0x0,8
tick,0x7ff8da10fb34,6199514,0,0x0,8
tick,0x7ff8da10fb34,6215545,0,0x0,8
tick,0x7ff8da10fb34,6231174,0,0x0,8
tick,0x7ff8da10fb34,6246863,0,0x0,8
tick,0x7ff8da10fb34,6261357,0,0x0,8
tick,0x7ff8da10fb34,6277601,0,0x0,8
tick,0x7ff8da10fb34,6292506,0,0x0,8
tick,0x7ff8da10fb34,6307412,0,0x0,8
tick,0x7ff8da10fb34,6322370,0,0x0,8
tick,0x7ff8da10fb34,6338160,0,0x0,8
tick,0x7ff8da10fb34,6353333,0,0x0,8
tick,0x7ff8da10fb34,6369178,0,0x0,8
tick,0x7ff8da10fb34,6384419,0,0x0,8
tick,0x7ff8da10fb34,6399492,0,0x0,8
tick,0x7ff8da10fb34,6415412,0,0x0,8
tick,0x7ff8da10fb34,6431058,0,0x0,8
tick,0x7ff8da10fb34,6447281,0,0x0,8
tick,0x7ff8da10fb34,6461463,0,0x0,8
tick,0x7ff8da10fb34,6476877,0,0x0,8
tick,0x7ff8da10fb34,6492565,0,0x0,8
tick,0x7ff8da10fb34,6508331,0,0x0,8
tick,0x7ff8da10fb34,6523543,0,0x0,8
tick,0x7ff8da10fb34,6538808,0,0x0,8
tick,0x7ff8da10fb34,6554419,0,0x0,8
tick,0x7ff8da10fb34,6569605,0,0x0,8
tick,0x7ff8da10fb34,6585303,0,0x0,8
tick,0x7ff8da10fb34,6600410,0,0x0,8
tick,0x7ff8da10fb34,6616452,0,0x0,8
tick,0x7ff8da10fb34,6631957,0,0x0,8
tick,0x7ff8da10fb34,6647498,0,0x0,8
tick,0x7ff8da10fb34,6663006,0,0x0,8
tick,0x7ff8da10fb34,6678283,0,0x0,8
tick,0x7ff8da10fb34,6693407,0,0x0,8
tick,0x7ff8da10fb34,6708681,0,0x0,8
tick,0x7ff8da10fb34,6724456,0,0x0,8
tick,0x7ff8da10fb34,6740319,0,0x0,8
tick,0x7ff8da10fb34,6756434,0,0x0,8
tick,0x7ff8da10fb34,6772366,0,0x0,8
tick,0x7ff8da10fb34,6788214,0,0x0,8
tick,0x7ff8da10fb34,6803394,0,0x0,8
tick,0x7ff8da10fb34,6819455,0,0x0,8
tick,0x7ff8da10fb34,6834936,0,0x0,8
tick,0x7ff8da10fb34,6850503,0,0x0,8
tick,0x7ff8da10fb34,6865476,0,0x0,8
tick,0x7ff8da10fb34,6881355,0,0x0,8
tick,0x7ff8da10fb34,6897198,0,0x0,8
tick,0x7ff8da10fb34,6913501,0,0x0,8
tick,0x7ff8da10fb34,6929364,0,0x0,8
tick,0x7ff8da10fb34,6944494,0,0x0,8
tick,0x7ff8da10fb34,6959778,0,0x0,8
tick,0x7ff8da10fb34,6975310,0,0x0,8
tick,0x7ff8da10fb34,6991387,0,0x0,8
tick,0x7ff8da10fb34,7006874,0,0x0,8
tick,0x7ff8da10fb34,7022425,0,0x0,8
tick,0x7ff8da10fb34,7037628,0,0x0,8
tick,0x7ff8da10fb34,7053143,0,0x0,8
tick,0x7ff8da10fb34,7069050,0,0x0,8
tick,0x7ff8da10fb34,7084103,0,0x0,8
tick,0x7ff8da10fb34,7099733,0,0x0,8
tick,0x7ff8da10fb34,7115328,0,0x0,8
tick,0x7ff8da10fb34,7131463,0,0x0,8
tick,0x7ff8da10fb34,7147213,0,0x0,8
tick,0x7ff8da10fb34,7163231,0,0x0,8
tick,0x7ff8da10fb34,7178613,0,0x0,8
tick,0x7ff8da10fb34,7194646,0,0x0,8
tick,0x7ff8da10fb34,7210542,0,0x0,8
tick,0x7ff8da10fb34,7226217,0,0x0,8
tick,0x7ff8da10fb34,7242447,0,0x0,8
tick,0x7ff8da10fb34,7257623,0,0x0,8
tick,0x7ff8da10fb34,7272406,0,0x0,8
tick,0x7ff8da10fb34,7287433,0,0x0,8
tick,0x7ff8da10fb34,7302470,0,0x0,8
tick,0x7ff8da10fb34,7318502,0,0x0,8
tick,0x7ff8da10fb34,7334306,0,0x0,8
tick,0x7ff8da10fb34,7350466,0,0x0,8
tick,0x7ff8da10fb34,7366356,0,0x0,8
tick,0x7ff8da10fb34,7381541,0,0x0,8
tick,0x7ff8da10fb34,7397224,0,0x0,8
tick,0x7ff8da10fb34,7413310,0,0x0,8
tick,0x7ff8da10fb34,7428563,0,0x0,8
tick,0x7ff8da10fb34,7444429,0,0x0,8
tick,0x7ff8da10fb34,7459416,0,0x0,8
tick,0x7ff8da10fb34,7475050,0,0x0,8
tick,0x7ff8da10fb34,7489633,0,0x0,8
tick,0x7ff8da10fb34,7505384,0,0x0,8
tick,0x7ff8da10fb34,7521408,0,0x0,8
tick,0x7ff8da10fb34,7537540,0,0x0,8
tick,0x7ff8da10fb34,7553444,0,0x0,8
tick,0x7ff8da10fb34,7569097,0,0x0,8
tick,0x7ff8da10fb34,7584395,0,0x0,8
tick,0x7ff8da10fb34,7599861,0,0x0,8
tick,0x7ff8da10fb34,7615295,0,0x0,8
tick,0x7ff8da10fb34,7630867,0,0x0,8
tick,0x7ff8da10fb34,7645988,0,0x0,8
tick,0x7ff8da10fb34,7661522,0,0x0,8
tick,0x7ff8da10fb34,7677539,0,0x0,8
tick,0x7ff8da10fb34,7692485,0,0x0,8
tick,0x7ff8da10fb34,7707374,0,0x0,8
tick,0x7ff8da10fb34,7722521,0,0x0,8
tick,0x7ff8da10fb34,7737710,0,0x0,8
tick,0x7ff8da10fb34,7753395,0,0x0,8
tick,0x7ff8da10fb34,7769359,0,0x0,8
tick,0x7ff8da10fb34,7787221,0,0x0,8
tick,0x7ff8da10fb34,7800579,0,0x0,8
tick,0x7ff8da10fb34,7815257,0,0x0,8
tick,0x7ff8da10fb34,7830654,0,0x0,8
tick,0x7ff8da10fb34,7846359,0,0x0,8
tick,0x7ff8da10fb34,7861478,0,0x0,8
tick,0x7ff8da10fb34,7876466,0,0x0,8
tick,0x7ff8da10fb34,7891443,0,0x0,8
tick,0x7ff8da10fb34,7907470,0,0x0,8
tick,0x7ff8da10fb34,7923503,0,0x0,8
tick,0x7ff8da10fb34,7939281,0,0x0,8
tick,0x7ff8da10fb34,7954253,0,0x0,8
tick,0x7ff8da10fb34,7969550,0,0x0,8
tick,0x7ff8da10fb34,7985095,0,0x0,8
tick,0x7ff8da10fb34,7999996,0,0x0,8
tick,0x7ff8da10fb34,8015230,0,0x0,8
tick,0x7ff8da10fb34,8030777,0,0x0,8
tick,0x7ff8da10fb34,8046461,0,0x0,8
tick,0x7ff8da10fb34,8061423,0,0x0,8
tick,0x7ff8da10fb34,8076742,0,0x0,8
tick,0x7ff8da10fb34,8092316,0,0x0,8
tick,0x7ff8da10fb34,8108848,0,0x0,8
tick,0x7ff8da10fb34,8122825,0,0x0,8
tick,0x7ff8da10fb34,8138159,0,0x0,8
tick,0x7ff8da10fb34,8153810,0,0x0,8
tick,0x7ff8da10fb34,8168791,0,0x0,8
tick,0x7ff8da10fb34,8184318,0,0x0,8
tick,0x7ff8da10fb34,8199281,0,0x0,8
tick,0x7ff8da10fb34,8215255,0,0x0,8
tick,0x7ff8da10fb34,8231236,0,0x0,8
tick,0x7ff8da10fb34,8247251,0,0x0,8
tick,0x7ff8da10fb34,8263195,0,0x0,8
tick,0x7ff8da10fb34,8279276,0,0x0,8
tick,0x7ff8da10fb34,8295292,0,0x0,8
tick,0x7ff8da10fb34,8311279,0,0x0,8
tick,0x7ff8da10fb34,8327336,0,0x0,8
tick,0x7ff8da10fb34,8343219,0,0x0,8
tick,0x7ff8da10fb34,8359195,0,0x0,8
tick,0x7ff8da10fb34,8375203,0,0x0,8
tick,0x7ff8da10fb34,8391182,0,0x0,8
tick,0x7ff8da10fb34,8407214,0,0x0,8
tick,0x7ff8da10fb34,8423147,0,0x0,8
tick,0x7ff8da10fb34,8439155,0,0x0,8
tick,0x7ff8da10fb34,8455173,0,0x0,8
tick,0x7ff8da10fb34,8471147,0,0x0,8
tick,0x7ff8da10fb34,8486210,0,0x0,8
tick,0x7ff8da10fb34,8501109,0,0x0,8
tick,0x7ff8da10fb34,8516166,0,0x0,8
tick,0x7ff8da10fb34,8531968,0,0x0,8
tick,0x7ff8da10fb34,8547952,0,0x0,8
tick,0x7ff8da10fb34,8563501,0,0x0,8
tick,0x7ff8da10fb34,8579154,0,0x0,8
tick,0x7ff8da10fb34,8594509,0,0x0,8
tick,0x7ff8da10fb34,8610500,0,0x0,8
tick,0x7ff8da10fb34,8626665,0,0x0,8
tick,0x7ff8da10fb34,8642257,0,0x0,8
tick,0x7ff8da10fb34,8658113,0,0x0,8
tick,0x7ff8da10fb34,8673335,0,0x0,8
tick,0x7ff8da10fb34,8689279,0,0x0,8
tick,0x7ff8da10fb34,8704873,0,0x0,8
tick,0x7ff8da10fb34,8719771,0,0x0,8
tick,0x7ff8da10fb34,8734887,0,0x0,8
tick,0x7ff8da10fb34,8750225,0,0x0,8
tick,0x7ff8da10fb34,8765313,0,0x0,8
tick,0x7ff8da10fb34,8780909,0,0x0,8
tick,0x7ff8da10fb34,8796607,0,0x0,8
tick,0x7ff8da10fb34,8812713,0,0x0,8
tick,0x7ff8da10fb34,8827971,0,0x0,8
tick,0x7ff8da10fb34,8842876,0,0x0,8
tick,0x7ff8da10fb34,8858489,0,0x0,8
tick,0x7ff8da10fb34,8874451,0,0x0,8
tick,0x7ff8da10fb34,8890218,0,0x0,8
tick,0x7ff8da10fb34,8905357,0,0x0,8
tick,0x7ff8da10fb34,8920121,0,0x0,8
tick,0x7ff8da10fb34,8935177,0,0x0,8
tick,0x7ff8da10fb34,8950379,0,0x0,8
tick,0x7ff8da10fb34,8966112,0,0x0,8
tick,0x7ff8da10fb34,8981540,0,0x0,8
tick,0x7ff8da10fb34,8997840,0,0x0,8
tick,0x7ff8da10fb34,9013056,0,0x0,8
tick,0x7ff8da10fb34,9028408,0,0x0,8
tick,0x7ff8da10fb34,9043553,0,0x0,8
tick,0x7ff8da10fb34,9059131,0,0x0,8
tick,0x7ff8da10fb34,9074425,0,0x0,8
tick,0x7ff8da10fb34,9089588,0,0x0,8
tick,0x7ff8da10fb34,9104784,0,0x0,8
tick,0x7ff8da10fb34,9120329,0,0x0,8
tick,0x7ff8da10fb34,9136456,0,0x0,8
tick,0x7ff8da10fb34,9152441,0,0x0,8
tick,0x7ff8da10fb34,9168137,0,0x0,8
tick,0x7ff8da10fb34,9183311,0,0x0,8
tick,0x7ff8da10fb34,9198609,0,0x0,8
tick,0x7ff8da10fb34,9214240,0,0x0,8
tick,0x7ff8da10fb34,9229390,0,0x0,8
tick,0x7ff8da10fb34,9245948,0,0x0,8
tick,0x7ff8da10fb34,9260638,0,0x0,8
tick,0x7ff8da10fb34,9276372,0,0x0,8
tick,0x7ff8da10fb34,9292439,0,0x0,8
tick,0x7ff8da10fb34,9307794,0,0x0,8
tick,0x7ff8da10fb34,9323589,0,0x0,8
tick,0x7ff8da10fb34,9339173,0,0x0,8
tick,0x7ff8da10fb34,9353423,0,0x0,8
tick,0x7ff8da10fb34,9369417,0,0x0,8
tick,0x7ff8da10fb34,9384837,0,0x0,8
tick,0x7ff8da10fb34,9400415,0,0x0,8
tick,0x7ff8da10fb34,9416393,0,0x0,8
tick,0x7ff8da10fb34,9431073,0,0x0,8
tick,0x7ff8da10fb34,9446422,0,0x0,8
tick,0x7ff8da10fb34,9462179,0,0x0,8
tick,0x7ff8da10fb34,9477577,0,0x0,8
tick,0x7ff8da10fb34,9492953,0,0x0,8
tick,0x7ff8da10fb34,9508940,0,0x0,8
tick,0x7ff8da10fb34,9524021,0,0x0,8
tick,0x7ff8da10fb34,9539501,0,0x0,8
tick,0x7ff8da10fb34,9554742,0,0x0,8
tick,0x7ff8da10fb34,9570108,0,0x0,8
tick,0x7ff8da10fb34,9585302,0,0x0,8
tick,0x7ff8da10fb34,9600629,0,0x0,8
tick,0x7ff8da10fb34,9616385,0,0x0,8
tick,0x7ff8da10fb34,9631992,0,0x0,8
tick,0x7ff8da10fb34,9647412,0,0x0,8
tick,0x7ff8da10fb34,9663031,0,0x0,8
tick,0x7ff8da10fb34,9678339,0,0x0,8
tick,0x7ff8da10fb34,9694270,0,0x0,8
tick,0x7ff8da10fb34,9709684,0,0x0,8
tick,0x7ff8da10fb34,9724701,0,0x0,8
tick,0x7ff8da10fb34,9740394,0,0x0,8
tick,0x7ff8da10fb34,9756383,0,0x0,8
tick,0x7ff8da10fb34,9772370,0,0x0,8
tick,0x7ff8da10fb34,9788348,0,0x0,8
tick,0x7ff8da10fb34,9803488,0,0x0,8
tick,0x7ff8da10fb34,9818734,0,0x0,8
tick,0x7ff8da10fb34,9834058,0,0x0,8
tick,0x7ff8da10fb34,9849405,0,0x0,8
tick,0x7ff8da10fb34,9865340,0,0x0,8
tick,0x7ff8da10fb34,9880727,0,0x0,8
tick,0x7ff8da10fb34,9896358,0,0x0,8
tick,0x7ff8da10fb34,9912276,0,0x0,8
tick,0x7ff8da10fb34,9928641,0,0x0,8
tick,0x7ff8da10fb34,9942520,0,0x0,8
tick,0x7ff8da10fb34,9958273,0,0x0,8
tick,0x7ff8da10fb34,9973339,0,0x0,8
tick,0x7ff8da10fb34,9988745,0,0x0,8
tick,0x7ff8da10fb34,10004301,0,0x0,8
tick,0x7ff8da10fb34,10020180,0,0x0,8
tick,0x7ff8da10fb34,10035357,0,0x0,8
tick,0x7ff8da10fb34,10050398,0,0x0,8
tick,0x7ff8da10fb34,10066394,0,0x0,8
tick,0x7ff8da10fb34,10081441,0,0x0,8
tick,0x7ff8da10fb34,10097244,0,0x0,8
tick,0x7ff8da10fb34,10112431,0,0x0,8
tick,0x7ff8da10fb34,10128616,0,0x0,8
tick,0x7ff8da10fb34,10144113,0,0x0,8
tick,0x7ff8da10fb34,10159338,0,0x0,8
tick,0x7ff8da10fb34,10174489,0,0x0,8
tick,0x7ff8da10fb34,10189801,0,0x0,8
tick,0x7ff8da10fb34,10204929,0,0x0,8
tick,0x7ff8da10fb34,10220429,0,0x0,8
tick,0x7ff8da10fb34,10237302,0,0x0,8
tick,0x7ff8da10fb34,10252360,0,0x0,8
tick,0x7ff8da10fb34,10267733,0,0x0,8
tick,0x7ff8da10fb34,10283010,0,0x0,8
tick,0x7ff8da10fb34,10298276,0,0x0,8
tick,0x7ff8da10fb34,10313790,0,0x0,8
tick,0x7ff8da10fb34,10329763,0,0x0,8
tick,0x7ff8da10fb34,10345821,0,0x0,8
tick,0x7ff8da10fb34,10361848,0,0x0,8
tick,0x7ff8da10fb34,10377803,0,0x0,8
tick,0x7ff8da10fb34,10393504,0,0x0,8
tick,0x7ff8da10fb34,10408921,0,0x0,8
tick,0x7ff8da10fb34,10424416,0,0x0,8
tick,0x7ff8da10fb34,10439639,0,0x0,8
tick,0x7ff8da10fb34,10455377,0,0x0,8
tick,0x7ff8da10fb34,10471456,0,0x0,8
tick,0x7ff8da10fb34,10486527,0,0x0,8
tick,0x7ff8da10fb34,10501138,0,0x0,8
tick,0x7ff8da10fb34,10517503,0,0x0,8
tick,0x7ff8da10fb34,10532846,0,0x0,8
tick,0x7ff8da10fb34,10548439,0,0x0,8
tick,0x7ff8da10fb34,10564231,0,0x0,8
tick,0x7ff8da10fb34,10579400,0,0x0,8
tick,0x7ff8da10fb34,10595177,0,0x0,8
tick,0x7ff8da10fb34,10610410,0,0x0,8
tick,0x7ff8da10fb34,10626425,0,0x0,8
tick,0x7ff8da10fb34,10641832,0,0x0,8
tick,0x7ff8da10fb34,10657474,0,0x0,8
tick,0x7ff8da10fb34,10672450,0,0x0,8
tick,0x7ff8da10fb34,10687610,0,0x0,8
tick,0x7ff8da10fb34,10702930,0,0x0,8
tick,0x7ff8da10fb34,10718281,0,0x0,8
tick,0x7ff8da10fb34,10733580,0,0x0,8
tick,0x7ff8da10fb34,10749743,0,0x0,8
tick,0x7ff8da10fb34,10765043,0,0x0,8
tick,0x7ff8da10fb34,10780095,0,0x0,8
tick,0x7ff8da10fb34,10795814,0,0x0,8
tick,0x7ff8da10fb34,10811510,0,0x0,8
tick,0x7ff8da10fb34,10827407,0,0x0,8
tick,0x7ff8da10fb34,10843013,0,0x0,8
tick,0x7ff8da10fb34,10858428,0,0x0,8
tick,0x7ff8da10fb34,10873464,0,0x0,8
tick,0x7ff8da10fb34,10888818,0,0x0,8
tick,0x7ff8da10fb34,10904715,0,0x0,8
tick,0x7ff8da10fb34,10919638,0,0x0,8
tick,0x7ff8da10fb34,10934525,0,0x0,8
tick,0x7ff8da10fb34,10949928,0,0x0,8
tick,0x7ff8da10fb34,10965279,0,0x0,8
tick,0x7ff8da10fb34,10980676,0,0x0,8
tick,0x7ff8da10fb34,10995875,0,0x0,8
tick,0x7ff8da10fb34,11011737,0,0x0,8
tick,0x7ff8da10fb34,11028219,0,0x0,8
tick,0x7ff8da10fb34,11043531,0,0x0,8
tick,0x7ff8da10fb34,11058745,0,0x0,8
tick,0x7ff8da10fb34,11074240,0,0x0,8
tick,0x7ff8da10fb34,11089439,0,0x0,8
tick,0x7ff8da10fb34,11104581,0,0x0,8
tick,0x7ff8da10fb34,11119917,0,0x0,8
tick,0x7ff8da10fb34,11135106,0,0x0,8
tick,0x7ff8da10fb34,11150400,0,0x0,8
tick,0x7ff8da10fb34,11166328,0,0x0,8
tick,0x7ff8da10fb34,11181097,0,0x0,8
tick,0x7ff8da10fb34,11196736,0,0x0,8
tick,0x7ff8da10fb34,11212426,0,0x0,8
tick,0x7ff8da10fb34,11228138,0,0x0,8
tick,0x7ff8da10fb34,11243488,0,0x0,8
tick,0x7ff8da10fb34,11258302,0,0x0,8
tick,0x7ff8da10fb34,11273445,0,0x0,8
tick,0x7ff8da10fb34,11288705,0,0x0,8
tick,0x7ff8da10fb34,11304445,0,0x0,8
tick,0x7ff8da10fb34,11319526,0,0x0,8
tick,0x7ff8da10fb34,11334415,0,0x0,8
tick,0x7ff8da10fb34,11349543,0,0x0,8
tick,0x7ff8da10fb34,11365116,0,0x0,8
tick,0x7ff8da10fb34,11380818,0,0x0,8
tick,0x7ff8da10fb34,11395545,0,0x0,8
tick,0x7ff8da10fb34,11411254,0,0x0,8
tick,0x7ff8da10fb34,11426626,0,0x0,8
tick,0x7ff8da10fb34,11442485,0,0x0,8
tick,0x7ff8da10fb34,11457375,0,0x0,8
tick,0x7ff8da10fb34,11472397,0,0x0,8
tick,0x7ff8da10fb34,11487916,0,0x0,8
tick,0x7ff8da10fb34,11503212,0,0x0,8
tick,0x7ff8da10fb34,11519145,0,0x0,8
tick,0x7ff8da10fb34,11534436,0,0x0,8
tick,0x7ff8da10fb34,11549567,0,0x0,8
tick,0x7ff8da10fb34,11564716,0,0x0,8
tick,0x7ff8da10fb34,11579992,0,0x0,8
tick,0x7ff8da10fb34,11595576,0,0x0,8
tick,0x7ff8da10fb34,11611426,0,0x0,8
tick,0x7ff8da10fb34,11626358,0,0x0,8
tick,0x7ff8da10fb34,11642449,0,0x0,8
tick,0x7ff8da10fb34,11657398,0,0x0,8
tick,0x7ff8da10fb34,11672471,0,0x0,8
tick,0x7ff8da10fb34,11687755,0,0x0,8
tick,0x7ff8da10fb34,11703060,0,0x0,8
tick,0x7ff8da10fb34,11718490,0,0x0,8
tick,0x7ff8da10fb34,11733851,0,0x0,8
tick,0x7ff8da10fb34,11749919,0,0x0,8
tick,0x7ff8da10fb34,11765386,0,0x0,8
tick,0x7ff8da10fb34,11780334,0,0x0,8
tick,0x7ff8da10fb34,11795518,0,0x0,8
tick,0x7ff8da10fb34,11811336,0,0x0,8
tick,0x7ff8da10fb34,11826640,0,0x0,8
tick,0x7ff8da10fb34,11841456,0,0x0,8
tick,0x7ff8da10fb34,11856835,0,0x0,8
tick,0x7ff8da10fb34,11872184,0,0x0,8
tick,0x7ff8da10fb34,11887501,0,0x0,8
tick,0x7ff8da10fb34,11902760,0,0x0,8
tick,0x7ff8da10fb34,11917882,0,0x0,8
tick,0x7ff8da10fb34,11933085,0,0x0,8
tick,0x7ff8da10fb34,11948464,0,0x0,8
tick,0x7ff8da10fb34,11964030,0,0x0,8
tick,0x7ff8da10fb34,11979720,0,0x0,8
tick,0x7ff8da10fb34,11995460,0,0x0,8
tick,0x7ff8da10fb34,12011330,0,0x0,8
tick,0x7ff8da10fb34,12026600,0,0x0,8
tick,0x7ff8da10fb34,12042451,0,0x0,8
tick,0x7ff8da10fb34,12057709,0,0x0,8
tick,0x7ff8da10fb34,12073410,0,0x0,8
tick,0x7ff8da10fb34,12088332,0,0x0,8
tick,0x7ff8da10fb34,12103236,0,0x0,8
tick,0x7ff8da10fb34,12118698,0,0x0,8
tick,0x7ff8da10fb34,12134628,0,0x0,8
tick,0x7ff8da10fb34,12150327,0,0x0,8
tick,0x7ff8da10fb34,12166406,0,0x0,8
tick,0x7ff8da10fb34,12181597,0,0x0,8
tick,0x7ff8da10fb34,12197105,0,0x0,8
tick,0x7ff8da10fb34,12212691,0,0x0,8
tick,0x7ff8da10fb34,12228453,0,0x0,8
tick,0x7ff8da10fb34,12244526,0,0x0,8
tick,0x7ff8da10fb34,12259806,0,0x0,8
tick,0x7ff8da10fb34,12275295,0,0x0,8
tick,0x7ff8da10fb34,12290534,0,0x0,8
tick,0x7ff8da10fb34,12306376,0,0x0,8
tick,0x7ff8da10fb34,12322481,0,0x0,8
tick,0x7ff8da10fb34,12338336,0,0x0,8
tick,0x7ff8da10fb34,12354356,0,0x0,8
tick,0x7ff8da10fb34,12369676,0,0x0,8
tick,0x7ff8da10fb34,12385731,0,0x0,8
tick,0x7ff8da10fb34,12399948,0,0x0,8
tick,0x7ff8da10fb34,12415218,0,0x0,8
tick,0x7ff8da10fb34,12430963,0,0x0,8
tick,0x7ff8da10fb34,12446144,0,0x0,8
tick,0x7ff8da10fb34,12461752,0,0x0,8
tick,0x7ff8da10fb34,12477943,0,0x0,8
tick,0x7ff8da10fb34,12493205,0,0x0,8
tick,0x7ff8da10fb34,12508972,0,0x0,8
tick,0x7ff8da10fb34,12524437,0,0x0,8
tick,0x7ff8da10fb34,12539676,0,0x0,8
tick,0x7ff8da10fb34,12554800,0,0x0,8
tick,0x7ff8da10fb34,12570419,0,0x0,8
tick,0x7ff8da10fb34,12586376,0,0x0,8
tick,0x7ff8da10fb34,12601773,0,0x0,8
tick,0x7ff8da10fb34,12617052,0,0x0,8
tick,0x7ff8da10fb34,12632339,0,0x0,8
tick,0x7ff8da10fb34,12647567,0,0x0,8
tick,0x7ff8da10fb34,12663047,0,0x0,8
tick,0x7ff8da10fb34,12678318,0,0x0,8
tick,0x7ff8da10fb34,12694356,0,0x0,8
tick,0x7ff8da10fb34,12709592,0,0x0,8
tick,0x7ff8da10fb34,12725292,0,0x0,8
tick,0x7ff8da10fb34,12740236,0,0x0,8
tick,0x7ff8da10fb34,12755294,0,0x0,8
tick,0x7ff8da10fb34,12771385,0,0x0,8
tick,0x7ff8da10fb34,12786396,0,0x0,8
tick,0x7ff8da10fb34,12801598,0,0x0,8
tick,0x7ff8da10fb34,12817313,0,0x0,8
tick,0x7ff8da10fb34,12832326,0,0x0,8
tick,0x7ff8da10fb34,12847055,0,0x0,8
tick,0x7ff8da10fb34,12862920,0,0x0,8
tick,0x7ff8da10fb34,12878266,0,0x0,8
tick,0x7ff8da10fb34,12894186,0,0x0,8
tick,0x7ff8da10fb34,12909363,0,0x0,8
tick,0x7ff8da10fb34,12924302,0,0x0,8
tick,0x7ff8da10fb34,12939574,0,0x0,8
tick,0x7ff8da10fb34,12955352,0,0x0,8
tick,0x7ff8da10fb34,12970449,0,0x0,8
tick,0x7ff8da10fb34,12986437,0,0x0,8
tick,0x7ff8da10fb34,13002168,0,0x0,8
tick,0x7ff8da10fb34,13018171,0,0x0,8
tick,0x7ff8da10fb34,13033429,0,0x0,8
tick,0x7ff8da10fb34,13048628,0,0x0,8
tick,0x7ff8da10fb34,13064390,0,0x0,8
tick,0x7ff8da10fb34,13079540,0,0x0,8
tick,0x7ff8da10fb34,13094710,0,0x0,8
tick,0x7ff8da10fb34,13112354,0,0x0,8
tick,0x7ff8da10fb34,13125771,0,0x0,8
tick,0x7ff8da10fb34,13141111,0,0x0,8
tick,0x7ff8da10fb34,13156476,0,0x0,8
tick,0x7ff8da10fb34,13171451,0,0x0,8
tick,0x7ff8da10fb34,13186891,0,0x0,8
tick,0x7ff8da10fb34,13202798,0,0x0,8
tick,0x7ff8da10fb34,13217769,0,0x0,8
tick,0x7ff8da10fb34,13232774,0,0x0,8
tick,0x7ff8da10fb34,13248310,0,0x0,8
tick,0x7ff8da10fb34,13263934,0,0x0,8
tick,0x7ff8da10fb34,13278943,0,0x0,8
tick,0x7ff8da10fb34,13293955,0,0x0,8
tick,0x7ff8da10fb34,13309936,0,0x0,8
tick,0x7ff8da10fb34,13324990,0,0x0,8
tick,0x7ff8da10fb34,13339963,0,0x0,8
tick,0x7ff8da10fb34,13354917,0,0x0,8
tick,0x7ff8da10fb34,13369925,0,0x0,8
tick,0x7ff8da10fb34,13385970,0,0x0,8
tick,0x7ff8da10fb34,13400913,0,0x0,8
tick,0x7ff8da10fb34,13415925,0,0x0,8
tick,0x7ff8da10fb34,13431899,0,0x0,8
tick,0x7ff8da10fb34,13447922,0,0x0,8
tick,0x7ff8da10fb34,13463868,0,0x0,8
tick,0x7ff8da10fb34,13479085,0,0x0,8
tick,0x7ff8da10fb34,13494543,0,0x0,8
tick,0x7ff8da10fb34,13510235,0,0x0,8
tick,0x7ff8da10fb34,13526542,0,0x0,8
tick,0x7ff8da10fb34,13541913,0,0x0,8
tick,0x7ff8da10fb34,13557121,0,0x0,8
tick,0x7ff8da10fb34,13572467,0,0x0,8
tick,0x7ff8da10fb34,13587922,0,0x0,8
tick,0x7ff8da10fb34,13603948,0,0x0,8
tick,0x7ff8da10fb34,13619556,0,0x0,8
tick,0x7ff8da10fb34,13634810,0,0x0,8
tick,0x7ff8da10fb34,13650160,0,0x0,8
tick,0x7ff8da10fb34,13665244,0,0x0,8
tick,0x7ff8da10fb34,13680232,0,0x0,8
tick,0x7ff8da10fb34,13695685,0,0x0,8
tick,0x7ff8da10fb34,13711335,0,0x0,8
tick,0x7ff8da10fb34,13727422,0,0x0,8
tick,0x7ff8da10fb34,13742549,0,0x0,8
tick,0x7ff8da10fb34,13757778,0,0x0,8
tick,0x7ff8da10fb34,13773374,0,0x0,8
tick,0x7ff8da10fb34,13789166,0,0x0,8
tick,0x7ff8da10fb34,13804766,0,0x0,8
tick,0x7ff8da10fb34,13820179,0,0x0,8
tick,0x7ff8da10fb34,13835294,0,0x0,8
tick,0x7ff8da10fb34,13851353,0,0x0,8
tick,0x7ff8da10fb34,13866716,0,0x0,8
tick,0x7ff8da10fb34,13882029,0,0x0,8
tick,0x7ff8da10fb34,13897725,0,0x0,8
tick,0x7ff8da10fb34,13913430,0,0x0,8
tick,0x7ff8da10fb34,13928800,0,0x0,8
tick,0x7ff8da10fb34,13944375,0,0x0,8
tick,0x7ff8da10fb34,13960398,0,0x0,8
tick,0x7ff8da10fb34,13977789,0,0x0,8
tick,0x7ff8da10fb34,13991846,0,0x0,8
tick,0x7ff8da10fb34,14007272,0,0x0,8
tick,0x7ff8da10fb34,14022379,0,0x0,8
tick,0x7ff8da10fb34,14037658,0,0x0,8
tick,0x7ff8da10fb34,14053358,0,0x0,8
tick,0x7ff8da10fb34,14068368,0,0x0,8
tick,0x7ff8da10fb34,14083193,0,0x0,8
tick,0x7ff8da10fb34,14098796,0,0x0,8
tick,0x7ff8da10fb34,14114701,0,0x0,8
tick,0x7ff8da10fb34,14130165,0,0x0,8
tick,0x7ff8da10fb34,14145270,0,0x0,8
tick,0x7ff8da10fb34,14160778,0,0x0,8
tick,0x7ff8da10fb34,14176431,0,0x0,8
tick,0x7ff8da10fb34,14193890,0,0x0,8
tick,0x7ff8da10fb34,14207698,0,0x0,8
tick,0x7ff8da10fb34,14223388,0,0x0,8
tick,0x7ff8da10fb34,14238624,0,0x0,8
tick,0x7ff8da10fb34,14254599,0,0x0,8
tick,0x7ff8da10fb34,14270685,0,0x0,8
tick,0x7ff8da10fb34,14286637,0,0x0,8
tick,0x7ff8da10fb34,14302615,0,0x0,8
tick,0x7ff8da10fb34,14318608,0,0x0,8
tick,0x7ff8da10fb34,14334644,0,0x0,8
tick,0x7ff8da10fb34,14350553,0,0x0,8
tick,0x7ff8da10fb34,14366360,0,0x0,8
tick,0x7ff8da10fb34,14381273,0,0x0,8
tick,0x7ff8da10fb34,14396479,0,0x0,8
tick,0x7ff8da10fb34,14411701,0,0x0,8
tick,0x7ff8da10fb34,14427180,0,0x0,8
tick,0x7ff8da10fb34,14443618,0,0x0,8
tick,0x7ff8da10fb34,14458912,0,0x0,8
tick,0x7ff8da10fb34,14474427,0,0x0,8
tick,0x7ff8da10fb34,14489580,0,0x0,8
tick,0x7ff8da10fb34,14504698,0,0x0,8
tick,0x7ff8da10fb34,14519898,0,0x0,8
tick,0x7ff8da10fb34,14535406,0,0x0,8
tick,0x7ff8da10fb34,14551405,0,0x0,8
tick,0x7ff8da10fb34,14567365,0,0x0,8
tick,0x7ff8da10fb34,14582308,0,0x0,8
tick,0x7ff8da10fb34,14599289,0,0x0,8
tick,0x7ff8da10fb34,14613708,0,0x0,8
tick,0x7ff8da10fb34,14629974,0,0x0,8
tick,0x7ff8da10fb34,14645579,0,0x0,8
tick,0x7ff8da10fb34,14660673,0,0x0,8
tick,0x7ff8da10fb34,14677207,0,0x0,8
tick,0x7ff8da10fb34,14701130,0,0x0,8
tick,0x7ff8da10fb34,14707253,0,0x0,8
tick,0x7ff8da10fb34,14723456,0,0x0,8
tick,0x7ff8da10fb34,14738285,0,0x0,8
tick,0x7ff8da10fb34,14753323,0,0x0,8
tick,0x7ff8da10fb34,14768427,0,0x0,8
tick,0x7ff8da10fb34,14783864,0,0x0,8
tick,0x7ff8da10fb34,14799117,0,0x0,8
tick,0x7ff8da10fb34,14814727,0,0x0,8
tick,0x7ff8da10fb34,14830162,0,0x0,8
tick,0x7ff8da10fb34,14845079,0,0x0,8
tick,0x7ff8da10fb34,14860723,0,0x0,8
tick,0x7ff8da10fb34,14876426,0,0x0,8
tick,0x7ff8da10fb34,14892033,0,0x0,8
tick,0x7ff8da10fb34,14907465,0,0x0,8
tick,0x7ff8da10fb34,14922471,0,0x0,8
tick,0x7ff8da10fb34,14937853,0,0x0,8
tick,0x7ff8da10fb34,14953403,0,0x0,8
tick,0x7ff8da10fb34,14968497,0,0x0,8
tick,0x7ff8da10fb34,14984527,0,0x0,8
tick,0x7ff8da10fb34,14999682,0,0x0,8
tick,0x7ff8da10fb34,15014818,0,0x0,8
tick,0x7ff8da10fb34,15029651,0,0x0,8
tick,0x7ff8da10fb34,15045049,0,0x0,8
tick,0x7ff8da10fb34,15059781,0,0x0,8
tick,0x7ff8da10fb34,15075265,0,0x0,8
tick,0x7ff8da10fb34,15090486,0,0x0,8
tick,0x7ff8da10fb34,15106583,0,0x0,8
tick,0x7ff8da10fb34,15121863,0,0x0,8
tick,0x7ff8da10fb34,15137197,0,0x0,8
tick,0x7ff8da10fb34,15153024,0,0x0,8
tick,0x7ff8da10fb34,15168599,0,0x0,8
tick,0x7ff8da10fb34,15184034,0,0x0,8
tick,0x7ff8da10fb34,15199605,0,0x0,8
tick,0x7ff8da10fb34,15215910,0,0x0,8
tick,0x7ff8da10fb34,15231372,0,0x0,8
tick,0x7ff8da10fb34,15247297,0,0x0,8
tick,0x7ff8da10fb34,15262557,0,0x0,8
tick,0x7ff8da10fb34,15278201,0,0x0,8
tick,0x7ff8da10fb34,15294101,0,0x0,8
tick,0x7ff8da10fb34,15309904,0,0x0,8
tick,0x7ff8da10fb34,15327629,0,0x0,8
tick,0x7ff8da10fb34,15342580,0,0x0,8
tick,0x7ff8da10fb34,15357188,0,0x0,8
tick,0x7ff8da10fb34,15373178,0,0x0,8
tick,0x7ff8da10fb34,15388370,0,0x0,8
tick,0x7ff8da10fb34,15404188,0,0x0,8
tick,0x7ff8da10fb34,15419470,0,0x0,8
tick,0x7ff8da10fb34,15434590,0,0x0,8
tick,0x7ff8da10fb34,15450006,0,0x0,8
tick,0x7ff8da10fb34,15465315,0,0x0,8
tick,0x7ff8da10fb34,15481455,0,0x0,8
tick,0x7ff8da10fb34,15497641,0,0x0,8
tick,0x7ff8da10fb34,15511896,0,0x0,8
tick,0x7ff8da10fb34,15527566,0,0x0,8
tick,0x7ff8da10fb34,15543370,0,0x0,8
tick,0x7ff8da10fb34,15558814,0,0x0,8
tick,0x7ff8da10fb34,15574471,0,0x0,8
tick,0x7ff8da10fb34,15589563,0,0x0,8
tick,0x7ff8da10fb34,15604813,0,0x0,8
tick,0x7ff8da10fb34,15620185,0,0x0,8
tick,0x7ff8da10fb34,15635344,0,0x0,8
tick,0x7ff8da10fb34,15650635,0,0x0,8
tick,0x7ff8da10fb34,15666274,0,0x0,8
tick,0x7ff8da10fb34,15681511,0,0x0,8
tick,0x7ff8da10fb34,15697233,0,0x0,8
tick,0x7ff8da10fb34,15712377,0,0x0,8
tick,0x7ff8da10fb34,15727571,0,0x0,8
tick,0x7ff8da10fb34,15743811,0,0x0,8
tick,0x7ff8da10fb34,15759790,0,0x0,8
tick,0x7ff8da10fb34,15775009,0,0x0,8
tick,0x7ff8da10fb34,15790317,0,0x0,8
tick,0x7ff8da10fb34,15806596,0,0x0,8
tick,0x7ff8da10fb34,15822374,0,0x0,8
tick,0x7ff8da10fb34,15837760,0,0x0,8
tick,0x7ff8da10fb34,15853417,0,0x0,8
tick,0x7ff8da10fb34,15869315,0,0x0,8
tick,0x7ff8da10fb34,15884516,0,0x0,8
tick,0x7ff8da10fb34,15900763,0,0x0,8
tick,0x7ff8da10fb34,15915251,0,0x0,8
tick,0x7ff8da10fb34,15931428,0,0x0,8
tick,0x7ff8da10fb34,15947171,0,0x0,8
tick,0x7ff8da10fb34,15963158,0,0x0,8
tick,0x7ff8da10fb34,15978688,0,0x0,8
tick,0x7ff8da10fb34,15993812,0,0x0,8
tick,0x7ff8da10fb34,16009943,0,0x0,8
tick,0x7ff8da10fb34,16025668,0,0x0,8
tick,0x7ff8da10fb34,16040148,0,0x0,8
tick,0x7ff8da10fb34,16056192,0,0x0,8
tick,0x7ff8da10fb34,16072196,0,0x0,8
tick,0x7ff8da10fb34,16087508,0,0x0,8
tick,0x7ff8da10fb34,16103229,0,0x0,8
tick,0x7ff8da10fb34,16118247,0,0x0,8
tick,0x7ff8da10fb34,16133564,0,0x0,8
tick,0x7ff8da10fb34,16148794,0,0x0,8
tick,0x7ff8da10fb34,16164127,0,0x0,8
tick,0x7ff8da10fb34,16179376,0,0x0,8
tick,0x7ff8da10fb34,16194859,0,0x0,8
tick,0x7ff8da10fb34,16209790,0,0x0,8
tick,0x7ff8da10fb34,16225854,0,0x0,8
tick,0x7ff8da10fb34,16241632,0,0x0,8
tick,0x7ff8da10fb34,16256677,0,0x0,8
tick,0x7ff8da10fb34,16272385,0,0x0,8
tick,0x7ff8da10fb34,16288364,0,0x0,8
tick,0x7ff8da10fb34,16304045,0,0x0,8
tick,0x7ff8da10fb34,16319981,0,0x0,8
tick,0x7ff8da10fb34,16335191,0,0x0,8
tick,0x7ff8da10fb34,16351307,0,0x0,8
tick,0x7ff8da10fb34,16366362,0,0x0,8
tick,0x7ff8da10fb34,16381330,0,0x0,8
tick,0x7ff8da10fb34,16397101,0,0x0,8
tick,0x7ff8da10fb34,16412278,0,0x0,8
tick,0x7ff8da10fb34,16427669,0,0x0,8
tick,0x7ff8da10fb34,16443434,0,0x0,8
tick,0x7ff8da10fb34,16459145,0,0x0,8
tick,0x7ff8da10fb34,16473424,0,0x0,8
tick,0x7ff8da10fb34,16488515,0,0x0,8
tick,0x7ff8da10fb34,16503657,0,0x0,8
tick,0x7ff8da10fb34,16519630,0,0x0,8
tick,0x7ff8da10fb34,16535595,0,0x0,8
tick,0x7ff8da10fb34,16550599,0,0x0,8
tick,0x7ff8da10fb34,16566619,0,0x0,8
tick,0x7ff8da10fb34,16581865,0,0x0,8
tick,0x7ff8da10fb34,16597433,0,0x0,8
tick,0x7ff8da10fb34,16612816,0,0x0,8
tick,0x7ff8da10fb34,16628668,0,0x0,8
tick,0x7ff8da10fb34,16643573,0,0x0,8
tick,0x7ff8da10fb34,16659381,0,0x0,8
tick,0x7ff8da10fb34,16674404,0,0x0,8
tick,0x7ff8da10fb34,16690636,0,0x0,8
tick,0x7ff8da10fb34,16705287,0,0x0,8
tick,0x7ff8da10fb34,16720646,0,0x0,8
tick,0x7ff8da10fb34,16736503,0,0x0,8
tick,0x7ff8da10fb34,16752364,0,0x0,8
tick,0x7ff8da10fb34,16767641,0,0x0,8
tick,0x7ff8da10fb34,16783326,0,0x0,8
tick,0x7ff8da10fb34,16798632,0,0x0,8
tick,0x7ff8da10fb34,16813731,0,0x0,8
tick,0x7ff8da10fb34,16829766,0,0x0,8
tick,0x7ff8da10fb34,16846037,0,0x0,8
tick,0x7ff8da10fb34,16861791,0,0x0,8
tick,0x7ff8da10fb34,16878161,0,0x0,8
tick,0x7ff8da10fb34,16893742,0,0x0,8
tick,0x7ff8da10fb34,16910822,0,0x0,8
tick,0x7ff8da10fb34,16925704,0,0x0,8
tick,0x7ff8da10fb34,16941230,0,0x0,8
tick,0x7ff8da10fb34,16957985,0,0x0,8
tick,0x7ff8da10fb34,16972548,0,0x0,8
tick,0x7ff8da10fb34,16988033,0,0x0,8
tick,0x7ff8da10fb34,17003368,0,0x0,8
tick,0x7ff8da10fb34,17019134,0,0x0,8
tick,0x7ff8da10fb34,17034478,0,0x0,8
tick,0x7ff8da10fb34,17049860,0,0x0,8
tick,0x7ff8da10fb34,17064619,0,0x0,8
tick,0x7ff8da10fb34,17079544,0,0x0,8
tick,0x7ff8da10fb34,17095273,0,0x0,8
tick,0x7ff8da10fb34,17110649,0,0x0,8
tick,0x7ff8da10fb34,17126541,0,0x0,8
tick,0x7ff8da10fb34,17142248,0,0x0,8
tick,0x7ff8da10fb34,17158394,0,0x0,8
tick,0x7ff8da10fb34,17174104,0,0x0,8
tick,0x7ff8da10fb34,17189700,0,0x0,8
tick,0x7ff8da10fb34,17204714,0,0x0,8
tick,0x7ff8da10fb34,17220215,0,0x0,8
tick,0x7ff8da10fb34,17234966,0,0x0,8
tick,0x7ff8da10fb34,17250724,0,0x0,8
tick,0x7ff8da10fb34,17266558,0,0x0,8
tick,0x7ff8da10fb34,17282504,0,0x0,8
tick,0x7ff8da10fb34,17298114,0,0x0,8
tick,0x7ff8da10fb34,17312918,0,0x0,8
tick,0x7ff8da10fb34,17328067,0,0x0,8
tick,0x7ff8da10fb34,17344345,0,0x0,8
tick,0x7ff8da10fb34,17359846,0,0x0,8
tick,0x7ff8da10fb34,17376190,0,0x0,8
tick,0x7ff8da10fb34,17392450,0,0x0,8
tick,0x7ff8da10fb34,17407852,0,0x0,8
tick,0x7ff8da10fb34,17423645,0,0x0,8
tick,0x7ff8da10fb34,17438861,0,0x0,8
tick,0x7ff8da10fb34,17453712,0,0x0,8
tick,0x7ff8da10fb34,17469525,0,0x0,8
tick,0x7ff8da10fb34,17484824,0,0x0,8
tick,0x7ff8da10fb34,17499498,0,0x0,8
tick,0x7ff8da10fb34,17514820,0,0x0,8
tick,0x7ff8da10fb34,17529570,0,0x0,8
tick,0x7ff8da10fb34,17544820,0,0x0,8
tick,0x7ff8da10fb34,17560496,0,0x0,8
tick,0x7ff8da10fb34,17576450,0,0x0,8
tick,0x7ff8da10fb34,17592504,0,0x0,8
tick,0x7ff8da10fb34,17608995,0,0x0,8
tick,0x7ff8da10fb34,17624454,0,0x0,8
tick,0x7ff8da10fb34,17639303,0,0x0,8
tick,0x7ff8da10fb34,17654444,0,0x0,8
tick,0x7ff8da10fb34,17669869,0,0x0,8
tick,0x7ff8da10fb34,17686078,0,0x0,8
tick,0x7ff8da10fb34,17701487,0,0x0,8
tick,0x7ff8da10fb34,17718335,0,0x0,8
tick,0x7ff8da10fb34,17732606,0,0x0,8
tick,0x7ff8da10fb34,17748250,0,0x0,8
tick,0x7ff8da10fb34,17763762,0,0x0,8
tick,0x7ff8da10fb34,17778506,0,0x0,8
tick,0x7ff8da10fb34,17793729,0,0x0,8
tick,0x7ff8da10fb34,17809621,0,0x0,8
tick,0x7ff8da10fb34,17825302,0,0x0,8
tick,0x7ff8da10fb34,17840394,0,0x0,8
tick,0x7ff8da10fb34,17856707,0,0x0,8
tick,0x7ff8da10fb34,17872536,0,0x0,8
tick,0x7ff8da10fb34,17888348,0,0x0,8
tick,0x7ff8da10fb34,17904050,0,0x0,8
tick,0x7ff8da10fb34,17919816,0,0x0,8
tick,0x7ff8da10fb34,17935379,0,0x0,8
tick,0x7ff8da10fb34,17951566,0,0x0,8
tick,0x7ff8da10fb34,17967427,0,0x0,8
tick,0x7ff8da10fb34,17982556,0,0x0,8
tick,0x7ff8da10fb34,17998313,0,0x0,8
tick,0x7ff8da10fb34,18013863,0,0x0,8
tick,0x7ff8da10fb34,18030063,0,0x0,8
tick,0x7ff8da10fb34,18045987,0,0x0,8
tick,0x7ff8da10fb34,18061961,0,0x0,8
tick,0x7ff8da10fb34,18077698,0,0x0,8
tick,0x7ff8da10fb34,18092605,0,0x0,8
tick,0x7ff8da10fb34,18112199,0,0x0,8
tick,0x7ff8da10fb34,18125878,0,0x0,8
tick,0x7ff8da10fb34,18140957,0,0x0,8
tick,0x7ff8da10fb34,18157148,0,0x0,8
tick,0x7ff8da10fb34,18172061,0,0x0,8
tick,0x7ff8da10fb34,18186955,0,0x0,8
tick,0x7ff8da10fb34,18203552,0,0x0,8
tick,0x7ff8da10fb34,18218201,0,0x0,8
tick,0x7ff8da10fb34,18233088,0,0x0,8
tick,0x7ff8da10fb34,18249014,0,0x0,8
tick,0x7ff8da10fb34,18263985,0,0x0,8
tick,0x7ff8da10fb34,18279969,0,0x0,8
tick,0x7ff8da10fb34,18295922,0,0x0,8
tick,0x7ff8da10fb34,18311961,0,0x0,8
tick,0x7ff8da10fb34,18330218,0,0x0,8
tick,0x7ff8da10fb34,18343028,0,0x0,8
tick,0x7ff8da10fb34,18358960,0,0x0,8
tick,0x7ff8da10fb34,18373989,0,0x0,8
tick,0x7ff8da10fb34,18389044,0,0x0,8
tick,0x7ff8da10fb34,18404997,0,0x0,8
tick,0x7ff8da10fb34,18419987,0,0x0,8
tick,0x7ff8da10fb34,18434873,0,0x0,8
tick,0x7ff8da10fb34,18451046,0,0x0,8
tick,0x7ff8da10fb34,18465940,0,0x0,8
tick,0x7ff8da10fb34,18480994,0,0x0,8
tick,0x7ff8da10fb34,18497248,0,0x0,8
tick,0x7ff8da10fb34,18511994,0,0x0,8
tick,0x7ff8da10fb34,18527304,0,0x0,8
tick,0x7ff8da10fb34,18542571,0,0x0,8
tick,0x7ff8da10fb34,18558335,0,0x0,8
tick,0x7ff8da10fb34,18573806,0,0x0,8
tick,0x7ff8da10fb34,18588931,0,0x0,8
tick,0x7ff8da10fb34,18605251,0,0x0,8
tick,0x7ff8da10fb34,18620031,0,0x0,8
tick,0x7ff8da10fb34,18634992,0,0x0,8
tick,0x7ff8da10fb34,18649746,0,0x0,8
tick,0x7ff8da10fb34,18665264,0,0x0,8
tick,0x7ff8da10fb34,18680896,0,0x0,8
tick,0x7ff8da10fb34,18696343,0,0x0,8
tick,0x7ff8da10fb34,18711032,0,0x0,8
tick,0x7ff8da10fb34,18726771,0,0x0,8
tick,0x7ff8da10fb34,18742619,0,0x0,8
tick,0x7ff8da10fb34,18757992,0,0x0,8
tick,0x7ff8da10fb34,18773410,0,0x0,8
tick,0x7ff8da10fb34,18788788,0,0x0,8
tick,0x7ff8da10fb34,18804403,0,0x0,8
tick,0x7ff8da10fb34,18819535,0,0x0,8
tick,0x7ff8da10fb34,18835328,0,0x0,8
tick,0x7ff8da10fb34,18850925,0,0x0,8
tick,0x7ff8da10fb34,18866316,0,0x0,8
tick,0x7ff8da10fb34,18881819,0,0x0,8
tick,0x7ff8da10fb34,18898161,0,0x0,8
tick,0x7ff8da10fb34,18913261,0,0x0,8
tick,0x7ff8da10fb34,18928888,0,0x0,8
tick,0x7ff8da10fb34,18944533,0,0x0,8
tick,0x7ff8da10fb34,18959904,0,0x0,8
tick,0x7ff8da10fb34,18975868,0,0x0,8
tick,0x7ff8da10fb34,18991629,0,0x0,8
tick,0x7ff8da10fb34,19005732,0,0x0,8
tick,0x7ff8da10fb34,19021906,0,0x0,8
tick,0x7ff8da10fb34,19037162,0,0x0,8
tick,0x7ff8da10fb34,19052040,0,0x0,8
tick,0x7ff8da10fb34,19066542,0,0x0,8
tick,0x7ff8da10fb34,19081745,0,0x0,8
tick,0x7ff8da10fb34,19096795,0,0x0,8
tick,0x7ff8da10fb34,19113048,0,0x0,8
tick,0x7ff8da10fb34,19127726,0,0x0,8
tick,0x7ff8da10fb34,19143394,0,0x0,8
tick,0x7ff8da10fb34,19158760,0,0x0,8
tick,0x7ff8da10fb34,19175240,0,0x0,8
tick,0x7ff8da10fb34,19191681,0,0x0,8
tick,0x7ff8da10fb34,19208454,0,0x0,8
tick,0x7ff8da10fb34,19220909,0,0x0,8
tick,0x7ff8da10fb34,19238537,0,0x0,8
tick,0x7ff8da10fb34,19252256,0,0x0,8
tick,0x7ff8da10fb34,19267876,0,0x0,8
tick,0x7ff8da10fb34,19283044,0,0x0,8
tick,0x7ff8da10fb34,19298253,0,0x0,8
tick,0x7ff8da10fb34,19313572,0,0x0,8
tick,0x7ff8da10fb34,19329965,0,0x0,8
tick,0x7ff8da10fb34,19344581,0,0x0,8
tick,0x7ff8da10fb34,19360234,0,0x0,8
tick,0x7ff8da10fb34,19376688,0,0x0,8
tick,0x7ff8da10fb34,19392166,0,0x0,8
tick,0x7ff8da10fb34,19407747,0,0x0,8
tick,0x7ff8da10fb34,19424408,0,0x0,8
tick,0x7ff8da10fb34,19440557,0,0x0,8
tick,0x7ff8da10fb34,19454611,0,0x0,8
tick,0x7ff8da10fb34,19470115,0,0x0,8
tick,0x7ff8da10fb34,19485707,0,0x0,8
tick,0x7ff8da10fb34,19501516,0,0x0,8
tick,0x7ff8da10fb34,19518078,0,0x0,8
tick,0x7ff8da10fb34,19532691,0,0x0,8
tick,0x7ff8da10fb34,19548097,0,0x0,8
tick,0x7ff8da10fb34,19564865,0,0x0,8
tick,0x7ff8da10fb34,19578884,0,0x0,8
tick,0x7ff8da10fb34,19594968,0,0x0,8
tick,0x7ff8da10fb34,19610718,0,0x0,8
tick,0x7ff8da10fb34,19626881,0,0x0,8
tick,0x7ff8da10fb34,19642134,0,0x0,8
tick,0x7ff8da10fb34,19658133,0,0x0,8
tick,0x7ff8da10fb34,19673257,0,0x0,8
tick,0x7ff8da10fb34,19687699,0,0x0,8
tick,0x7ff8da10fb34,19703409,0,0x0,8
tick,0x7ff8da10fb34,19718712,0,0x0,8
tick,0x7ff8da10fb34,19735104,0,0x0,8
tick,0x7ff8da10fb34,19750974,0,0x0,8
tick,0x7ff8da10fb34,19765606,0,0x0,8
tick,0x7ff8da10fb34,19781512,0,0x0,8
tick,0x7ff8da10fb34,19796413,0,0x0,8
tick,0x7ff8da10fb34,19811889,0,0x0,8
tick,0x7ff8da10fb34,19827359,0,0x0,8
tick,0x7ff8da10fb34,19842723,0,0x0,8
tick,0x7ff8da10fb34,19858599,0,0x0,8
tick,0x7ff8da10fb34,19874953,0,0x0,8
tick,0x7ff8da10fb34,19889751,0,0x0,8
tick,0x7ff8da10fb34,19905222,0,0x0,8
tick,0x7ff8da10fb34,19920875,0,0x0,8
tick,0x7ff8da10fb34,19936427,0,0x0,8
tick,0x7ff8da10fb34,19952481,0,0x0,8
tick,0x7ff8da10fb34,19967805,0,0x0,8
tick,0x7ff8da10fb34,19983368,0,0x0,8
tick,0x7ff8da10fb34,19998396,0,0x0,8
tick,0x7ff8da10fb34,20013585,0,0x0,8
tick,0x7ff8da10fb34,20029652,0,0x0,8
tick,0x7ff8da10fb34,20044608,0,0x0,8
tick,0x7ff8da10fb34,20060212,0,0x0,8
tick,0x7ff8da10fb34,20076457,0,0x0,8
tick,0x7ff8da10fb34,20091872,0,0x0,8
tick,0x7ff8da10fb34,20107888,0,0x0,8
tick,0x7ff8da10fb34,20123446,0,0x0,8
tick,0x7ff8da10fb34,20139170,0,0x0,8
tick,0x7ff8da10fb34,20153717,0,0x0,8
tick,0x7ff8da10fb34,20169053,0,0x0,8
tick,0x7ff8da10fb34,20185411,0,0x0,8
tick,0x7ff8da10fb34,20199583,0,0x0,8
tick,0x7ff8da10fb34,20218877,0,0x0,8
tick,0x7ff8da10fb34,20229674,0,0x0,8
tick,0x7ff8da10fb34,20245406,0,0x0,8
tick,0x7ff8da10fb34,20260480,0,0x0,8
tick,0x7ff8da10fb34,20276706,0,0x0,8
tick,0x7ff8da10fb34,20291988,0,0x0,8
tick,0x7ff8da10fb34,20311788,0,0x0,8
tick,0x7ff8da10fb34,20331300,0,0x0,8
tick,0x7ff8da10fb34,20343367,0,0x0,8
tick,0x7ff8da10fb34,20363507,0,0x0,8
tick,0x7ff8da10fb34,20370463,0,0x0,8
tick,0x7ff8da10fb34,20384223,0,0x0,8
tick,0x7ff8da10fb34,20400109,0,0x0,8
tick,0x7ff8da10fb34,20415711,0,0x0,8
tick,0x7ff8da10fb34,20430917,0,0x0,8
tick,0x7ff8da10fb34,20446331,0,0x0,8
tick,0x7ff8da10fb34,20461487,0,0x0,8
tick,0x7ff8da10fb34,20476962,0,0x0,8
tick,0x7ff8da10fb34,20491956,0,0x0,8
tick,0x7ff8da10fb34,20507788,0,0x0,8
tick,0x7ff8da10fb34,20523119,0,0x0,8
tick,0x7ff8da10fb34,20538339,0,0x0,8
tick,0x7ff8da10fb34,20553774,0,0x0,8
tick,0x7ff8da10fb34,20569579,0,0x0,8
tick,0x7ff8da10fb34,20607543,0,0x0,8
tick,0x7ff8da10fb34,20617560,0,0x0,8
tick,0x7ff8da10fb34,20632510,0,0x0,8
tick,0x7ff8da10fb34,20648534,0,0x0,8
tick,0x7ff8da10fb34,20663598,0,0x0,8
tick,0x7ff8da10fb34,20679487,0,0x0,8
tick,0x7ff8da10fb34,20694042,0,0x0,8
tick,0x7ff8da10fb34,20709217,0,0x0,8
tick,0x7ff8da10fb34,20724516,0,0x0,8
tick,0x7ff8da10fb34,20743007,0,0x0,8
tick,0x7ff8da10fb34,20756273,0,0x0,8
tick,0x7ff8da10fb34,20771237,0,0x0,8
tick,0x7ff8da10fb34,20786194,0,0x0,8
tick,0x7ff8da10fb34,20801347,0,0x0,8
tick,0x7ff8da10fb34,20817007,0,0x0,8
tick,0x7ff8da10fb34,20832546,0,0x0,8
tick,0x7ff8da10fb34,20848362,0,0x0,8
tick,0x7ff8da10fb34,20863417,0,0x0,8
tick,0x7ff8da10fb34,20878549,0,0x0,8
tick,0x7ff8da10fb34,20894116,0,0x0,8
tick,0x7ff8da10fb34,20910193,0,0x0,8
tick,0x7ff8da10fb34,20926178,0,0x0,8
tick,0x7ff8da10fb34,20941352,0,0x0,8
tick,0x7ff8da10fb34,20956644,0,0x0,8
tick,0x7ff8da10fb34,20971252,0,0x0,8
tick,0x7ff8da10fb34,20986329,0,0x0,8
tick,0x7ff8da10fb34,21001307,0,0x0,8
tick,0x7ff8da10fb34,21016700,0,0x0,8
tick,0x7ff8da10fb34,21032505,0,0x0,8
tick,0x7ff8da10fb34,21048227,0,0x0,8
tick,0x7ff8da10fb34,21064141,0,0x0,8
tick,0x7ff8da10fb34,21079478,0,0x0,8
tick,0x7ff8da10fb34,21095199,0,0x0,8
tick,0x7ff8da10fb34,21110224,0,0x0,8
tick,0x7ff8da10fb34,21126192,0,0x0,8
tick,0x7ff8da10fb34,21142100,0,0x0,8
tick,0x7ff8da10fb34,21158337,0,0x0,8
tick,0x7ff8da10fb34,21174563,0,0x0,8
tick,0x7ff8da10fb34,21189897,0,0x0,8
tick,0x7ff8da10fb34,21204008,0,0x0,8
tick,0x7ff8da10fb34,21219600,0,0x0,8
tick,0x7ff8da10fb34,21235212,0,0x0,8
tick,0x7ff8da10fb34,21251436,0,0x0,8
tick,0x7ff8da10fb34,21266275,0,0x0,8
tick,0x7ff8da10fb34,21281340,0,0x0,8
tick,0x7ff8da10fb34,21297317,0,0x0,8
tick,0x7ff8da10fb34,21312662,0,0x0,8
tick,0x7ff8da10fb34,21329831,0,0x0,8
tick,0x7ff8da10fb34,21344762,0,0x0,8
tick,0x7ff8da10fb34,21359780,0,0x0,8
tick,0x7ff8da10fb34,21374973,0,0x0,8
tick,0x7ff8da10fb34,21390761,0,0x0,8
tick,0x7ff8da10fb34,21407423,0,0x0,8
tick,0x7ff8da10fb34,21421039,0,0x0,8
tick,0x7ff8da10fb34,21436191,0,0x0,8
tick,0x7ff8da10fb34,21451489,0,0x0,8
tick,0x7ff8da10fb34,21467034,0,0x0,8
tick,0x7ff8da10fb34,21482521,0,0x0,8
tick,0x7ff8da10fb34,21498275,0,0x0,8
tick,0x7ff8da10fb34,21514171,0,0x0,8
tick,0x7ff8da10fb34,21529843,0,0x0,8
tick,0x7ff8da10fb34,21544666,0,0x0,8
tick,0x7ff8da10fb34,21560156,0,0x0,8
tick,0x7ff8da10fb34,21575547,0,0x0,8
tick,0x7ff8da10fb34,21591202,0,0x0,8
tick,0x7ff8da10fb34,21608058,0,0x0,8
tick,0x7ff8da10fb34,21623656,0,0x0,8
tick,0x7ff8da10fb34,21640154,0,0x0,8
tick,0x7ff8da10fb34,21654603,0,0x0,8
tick,0x7ff8da10fb34,21670664,0,0x0,8
tick,0x7ff8da10fb34,21686201,0,0x0,8
tick,0x7ff8da10fb34,21702224,0,0x0,8
tick,0x7ff8da10fb34,21717224,0,0x0,8
tick,0x7ff8da10fb34,21732210,0,0x0,8
tick,0x7ff8da10fb34,21747643,0,0x0,8
tick,0x7ff8da10fb34,21763188,0,0x0,8
tick,0x7ff8da10fb34,21778926,0,0x0,8
tick,0x7ff8da10fb34,21794092,0,0x0,8
tick,0x7ff8da10fb34,21809197,0,0x0,8
tick,0x7ff8da10fb34,21824670,0,0x0,8
tick,0x7ff8da10fb34,21840705,0,0x0,8
tick,0x7ff8da10fb34,21859779,0,0x0,8
tick,0x7ff8da10fb34,21871870,0,0x0,8
tick,0x7ff8da10fb34,21887192,0,0x0,8
tick,0x7ff8da10fb34,21903066,0,0x0,8
tick,0x7ff8da10fb34,21918805,0,0x0,8
tick,0x7ff8da10fb34,21934325,0,0x0,8
tick,0x7ff8da10fb34,21949947,0,0x0,8
tick,0x7ff8da10fb34,21966051,0,0x0,8
tick,0x7ff8da10fb34,21982110,0,0x0,8
tick,0x7ff8da10fb34,21998222,0,0x0,8
tick,0x7ff8da10fb34,22013938,0,0x0,8
tick,0x7ff8da10fb34,22030038,0,0x0,8
tick,0x7ff8da10fb34,22046819,0,0x0,8
tick,0x7ff8da10fb34,22062154,0,0x0,8
tick,0x7ff8da10fb34,22078228,0,0x0,8
tick,0x7ff8da10fb34,22093869,0,0x0,8
tick,0x7ff8da10fb34,22108859,0,0x0,8
tick,0x7ff8da10fb34,22123692,0,0x0,8
tick,0x7ff8da10fb34,22139031,0,0x0,8
tick,0x7ff8da10fb34,22156984,0,0x0,8
tick,0x7ff8da10fb34,22173066,0,0x0,8
tick,0x7ff8da10fb34,22186217,0,0x0,8
tick,0x7ff8da10fb34,22201875,0,0x0,8
tick,0x7ff8da10fb34,22217628,0,0x0,8
tick,0x7ff8da10fb34,22233593,0,0x0,8
tick,0x7ff8da10fb34,22248377,0,0x0,8
tick,0x7ff8da10fb34,22263464,0,0x0,8
tick,0x7ff8da10fb34,22278857,0,0x0,8
tick,0x7ff8da10fb34,22294314,0,0x0,8
tick,0x7ff8da10fb34,22310060,0,0x0,8
tick,0x7ff8da10fb34,22326599,0,0x0,8
tick,0x7ff8da10fb34,22341243,0,0x0,8
tick,0x7ff8da10fb34,22356768,0,0x0,8
tick,0x7ff8da10fb34,22372627,0,0x0,8
tick,0x7ff8da10fb34,22388021,0,0x0,8
tick,0x7ff8da10fb34,22403450,0,0x0,8
tick,0x7ff8da10fb34,22419148,0,0x0,8
tick,0x7ff8da10fb34,22435185,0,0x0,8
tick,0x7ff8da10fb34,22450222,0,0x0,8
tick,0x7ff8da10fb34,22465206,0,0x0,8
tick,0x7ff8da10fb34,22480597,0,0x0,8
tick,0x7ff8da10fb34,22496593,0,0x0,8
tick,0x7ff8da10fb34,22511927,0,0x0,8
tick,0x7ff8da10fb34,22527200,0,0x0,8
tick,0x7ff8da10fb34,22543253,0,0x0,8
tick,0x7ff8da10fb34,22559178,0,0x0,8
tick,0x7ff8da10fb34,22575298,0,0x0,8
tick,0x7ff8da10fb34,22590956,0,0x0,8
tick,0x7ff8da10fb34,22632568,0,0x0,8
tick,0x7ff8da10fb34,22644040,0,0x0,8
tick,0x7ff8da10fb34,22656865,0,0x0,8
tick,0x7ff8da10fb34,22674449,0,0x0,8
tick,0x7ff8da10fb34,22702060,0,0x0,8
tick,0x7ff8da10fb34,22715532,0,0x0,8
tick,0x7ff8da10fb34,22750583,0,0x0,8
tick,0x7ff8da10fb34,22763529,0,0x0,8
tick,0x7ff8da10fb34,22778507,0,0x0,8
tick,0x7ff8da10fb34,22794464,0,0x0,8
tick,0x7ff8da10fb34,22810462,0,0x0,8
tick,0x7ff8da10fb34,22826595,0,0x0,8
tick,0x7ff8da10fb34,22841789,0,0x0,8
tick,0x7ff8da10fb34,22857937,0,0x0,8
tick,0x7ff8da10fb34,22874733,0,0x0,8
tick,0x7ff8da10fb34,22893701,0,0x0,8
tick,0x7ff8da10fb34,22903878,0,0x0,8
tick,0x7ff8da10fb34,22918890,0,0x0,8
tick,0x7ff8da10fb34,22934099,0,0x0,8
tick,0x7ff8da10fb34,22950164,0,0x0,8
tick,0x7ff8da10fb34,22965524,0,0x0,8
tick,0x7ff8da10fb34,22981124,0,0x0,8
tick,0x7ff8da10fb34,22996564,0,0x0,8
tick,0x7ff8da10fb34,23011817,0,0x0,8
tick,0x7ff8da10fb34,23027421,0,0x0,8
tick,0x7ff8da10fb34,23042887,0,0x0,8
tick,0x7ff8da10fb34,23058395,0,0x0,8
tick,0x7ff8da10fb34,23075094,0,0x0,8
tick,0x7ff8da10fb34,23090382,0,0x0,8
tick,0x7ff8da10fb34,23107374,0,0x0,8
tick,0x7ff8da10fb34,23133895,0,0x0,8
tick,0x7ff8da10fb34,23141003,0,0x0,8
tick,0x7ff8da10fb34,23154613,0,0x0,8
tick,0x7ff8da10fb34,23170088,0,0x0,8
tick,0x7ff8da10fb34,23184885,0,0x0,8
tick,0x7ff8da10fb34,23200371,0,0x0,8
tick,0x7ff8da10fb34,23216292,0,0x0,8
tick,0x7ff8da10fb34,23231306,0,0x0,8
tick,0x7ff8da10fb34,23246890,0,0x0,8
tick,0x7ff8da10fb34,23261354,0,0x0,8
tick,0x7ff8da10fb34,23276269,0,0x0,8
tick,0x7ff8da10fb34,23291239,0,0x0,8
tick,0x7ff8da10fb34,23307277,0,0x0,8
tick,0x7ff8da10fb34,23325149,0,0x0,8
tick,0x7ff8da10fb34,23340205,0,0x0,8
tick,0x7ff8da10fb34,23355318,0,0x0,8
tick,0x7ff8da10fb34,23372873,0,0x0,8
tick,0x7ff8da10fb34,23385571,0,0x0,8
tick,0x7ff8da10fb34,23401329,0,0x0,8
tick,0x7ff8da10fb34,23417139,0,0x0,8
tick,0x7ff8da10fb34,23431654,0,0x0,8
tick,0x7ff8da10fb34,23450829,0,0x0,8
tick,0x7ff8da10fb34,23462384,0,0x0,8
tick,0x7ff8da10fb34,23478319,0,0x0,8
tick,0x7ff8da10fb34,23494229,0,0x0,8
tick,0x7ff8da10fb34,23509864,0,0x0,8
tick,0x7ff8da10fb34,23525909,0,0x0,8
tick,0x7ff8da10fb34,23541625,0,0x0,8
tick,0x7ff8da10fb34,23557671,0,0x0,8
tick,0x7ff8da10fb34,23573931,0,0x0,8
tick,0x7ff8da10fb34,23589773,0,0x0,8
tick,0x7ff8da10fb34,23605570,0,0x0,8
tick,0x7ff8da10fb34,23623214,0,0x0,8
tick,0x7ff8da10fb34,23637651,0,0x0,8
tick,0x7ff8da10fb34,23652200,0,0x0,8
tick,0x7ff8da10fb34,23668200,0,0x0,8
tick,0x7ff8da10fb34,23683453,0,0x0,8
tick,0x7ff8da10fb34,23699111,0,0x0,8
tick,0x7ff8da10fb34,23714536,0,0x0,8
tick,0x7ff8da10fb34,23729423,0,0x0,8
tick,0x7ff8da10fb34,23744508,0,0x0,8
tick,0x7ff8da10fb34,23759706,0,0x0,8
tick,0x7ff8da10fb34,23775298,0,0x0,8
tick,0x7ff8da10fb34,23791249,0,0x0,8
tick,0x7ff8da10fb34,23807413,0,0x0,8
tick,0x7ff8da10fb34,23822999,0,0x0,8
tick,0x7ff8da10fb34,23838620,0,0x0,8
tick,0x7ff8da10fb34,23854939,0,0x0,8
tick,0x7ff8da10fb34,23869347,0,0x0,8
tick,0x7ff8da10fb34,23884501,0,0x0,8
tick,0x7ff8da10fb34,23900162,0,0x0,8
tick,0x7ff8da10fb34,23915282,0,0x0,8
tick,0x7ff8da10fb34,23930468,0,0x0,8
tick,0x7ff8da10fb34,23945949,0,0x0,8
tick,0x7ff8da10fb34,23961996,0,0x0,8
tick,0x7ff8da10fb34,23977426,0,0x0,8
tick,0x7ff8da10fb34,23993433,0,0x0,8
tick,0x7ff8da10fb34,24009512,0,0x0,8
tick,0x7ff8da10fb34,24025240,0,0x0,8
tick,0x7ff8da10fb34,24041337,0,0x0,8
tick,0x7ff8da10fb34,24056876,0,0x0,8
tick,0x7ff8da10fb34,24073298,0,0x0,8
tick,0x7ff8da10fb34,24089230,0,0x0,8
tick,0x7ff8da10fb34,24105255,0,0x0,8
tick,0x7ff8da10fb34,24120322,0,0x0,8
tick,0x7ff8da10fb34,24135626,0,0x0,8
tick,0x7ff8da10fb34,24150699,0,0x0,8
tick,0x7ff8da10fb34,24166348,0,0x0,8
tick,0x7ff8da10fb34,24181726,0,0x0,8
tick,0x7ff8da10fb34,24197460,0,0x0,8
tick,0x7ff8da10fb34,24212710,0,0x0,8
tick,0x7ff8da10fb34,24228469,0,0x0,8
tick,0x7ff8da10fb34,24243369,0,0x0,8
tick,0x7ff8da10fb34,24258895,0,0x0,8
tick,0x7ff8da10fb34,24274624,0,0x0,8
tick,0x7ff8da10fb34,24290588,0,0x0,8
tick,0x7ff8da10fb34,24307035,0,0x0,8
tick,0x7ff8da10fb34,24323623,0,0x0,8
tick,0x7ff8da10fb34,24340280,0,0x0,8
tick,0x7ff8da10fb34,24354505,0,0x0,8
tick,0x7ff8da10fb34,24370685,0,0x0,8
tick,0x7ff8da10fb34,24386340,0,0x0,8
tick,0x7ff8da10fb34,24402810,0,0x0,8
tick,0x7ff8da10fb34,24418495,0,0x0,8
tick,0x7ff8da10fb34,24434380,0,0x0,8
tick,0x7ff8da10fb34,24451055,0,0x0,8
tick,0x7ff8da10fb34,24466400,0,0x0,8
tick,0x7ff8da10fb34,24481218,0,0x0,8
tick,0x7ff8da10fb34,24496641,0,0x0,8
tick,0x7ff8da10fb34,24511159,0,0x0,8
tick,0x7ff8da10fb34,24527175,0,0x0,8
tick,0x7ff8da10fb34,24542341,0,0x0,8
tick,0x7ff8da10fb34,24558320,0,0x0,8
tick,0x7ff8da10fb34,24573745,0,0x0,8
tick,0x7ff8da10fb34,24589603,0,0x0,8
tick,0x7ff8da10fb34,24605567,0,0x0,8
tick,0x7ff8da10fb34,24621725,0,0x0,8
tick,0x7ff8da10fb34,24636234,0,0x0,8
tick,0x7ff8da10fb34,24652235,0,0x0,8
tick,0x7ff8da10fb34,24668218,0,0x0,8
tick,0x7ff8da10fb34,24684470,0,0x0,8
tick,0x7ff8da10fb34,24700649,0,0x0,8
tick,0x7ff8da10fb34,24715904,0,0x0,8
tick,0x7ff8da10fb34,24730378,0,0x0,8
tick,0x7ff8da10fb34,24745038,0,0x0,8
tick,0x7ff8da10fb34,24761058,0,0x0,8
tick,0x7ff8da10fb34,24776306,0,0x0,8
tick,0x7ff8da10fb34,24791580,0,0x0,8
tick,0x7ff8da10fb34,24807090,0,0x0,8
tick,0x7ff8da10fb34,24822705,0,0x0,8
tick,0x7ff8da10fb34,24838501,0,0x0,8
tick,0x7ff8da10fb34,24854205,0,0x0,8
tick,0x7ff8da10fb34,24868852,0,0x0,8
tick,0x7ff8da10fb34,24884481,0,0x0,8
tick,0x7ff8da10fb34,24899547,0,0x0,8
tick,0x7ff8da10fb34,24914928,0,0x0,8
tick,0x7ff8da10fb34,24930165,0,0x0,8
tick,0x7ff8da10fb34,24945341,0,0x0,8
tick,0x7ff8da10fb34,24961313,0,0x0,8
tick,0x7ff8da10fb34,24977245,0,0x0,8
tick,0x7ff8da10fb34,24992238,0,0x0,8
tick,0x7ff8da10fb34,25008176,0,0x0,8
tick,0x7ff8da10fb34,25023301,0,0x0,8
tick,0x7ff8da10fb34,25038812,0,0x0,8
tick,0x7ff8da10fb34,25054426,0,0x0,8
tick,0x7ff8da10fb34,25069468,0,0x0,8
tick,0x7ff8da10fb34,25084815,0,0x0,8
tick,0x7ff8da10fb34,25100085,0,0x0,8
tick,0x7ff8da10fb34,25115292,0,0x0,8
tick,0x7ff8da10fb34,25131702,0,0x0,8
tick,0x7ff8da10fb34,25147736,0,0x0,8
tick,0x7ff8da10fb34,25163729,0,0x0,8
tick,0x7ff8da10fb34,25182795,0,0x0,8
tick,0x7ff8da10fb34,25195699,0,0x0,8
tick,0x7ff8da10fb34,25225372,0,0x0,8
tick,0x7ff8da10fb34,25230598,0,0x0,8
tick,0x7ff8da10fb34,25243238,0,0x0,8
tick,0x7ff8da10fb34,25261591,0,0x0,8
tick,0x7ff8da10fb34,25275383,0,0x0,8
tick,0x7ff8da10fb34,25290331,0,0x0,8
tick,0x7ff8da10fb34,25305977,0,0x0,8
tick,0x7ff8da10fb34,25321883,0,0x0,8
tick,0x7ff8da10fb34,25336294,0,0x0,8
tick,0x7ff8da10fb34,25351394,0,0x0,8
tick,0x7ff8da10fb34,25366228,0,0x0,8
tick,0x7ff8da10fb34,25381864,0,0x0,8
tick,0x7ff8da10fb34,25397185,0,0x0,8
tick,0x7ff8da10fb34,25412221,0,0x0,8
tick,0x7ff8da10fb34,25427359,0,0x0,8
tick,0x7ff8da10fb34,25443225,0,0x0,8
tick,0x7ff8da10fb34,25458557,0,0x0,8
tick,0x7ff8da10fb34,25474207,0,0x0,8
tick,0x7ff8da10fb34,25489594,0,0x0,8
tick,0x7ff8da10fb34,25504734,0,0x0,8
tick,0x7ff8da10fb34,25519948,0,0x0,8
tick,0x7ff8da10fb34,25535331,0,0x0,8
tick,0x7ff8da10fb34,25550349,0,0x0,8
tick,0x7ff8da10fb34,25566398,0,0x0,8
tick,0x7ff8da10fb34,25581337,0,0x0,8
tick,0x7ff8da10fb34,25596405,0,0x0,8
tick,0x7ff8da10fb34,25611410,0,0x0,8
tick,0x7ff8da10fb34,25627350,0,0x0,8
tick,0x7ff8da10fb34,25642063,0,0x0,8
tick,0x7ff8da10fb34,25657457,0,0x0,8
tick,0x7ff8da10fb34,25673035,0,0x0,8
tick,0x7ff8da10fb34,25688855,0,0x0,8
tick,0x7ff8da10fb34,25704198,0,0x0,8
tick,0x7ff8da10fb34,25719407,0,0x0,8
tick,0x7ff8da10fb34,25735330,0,0x0,8
tick,0x7ff8da10fb34,25751322,0,0x0,8
tick,0x7ff8da10fb34,25766304,0,0x0,8
tick,0x7ff8da10fb34,25781427,0,0x0,8
tick,0x7ff8da10fb34,25796765,0,0x0,8
tick,0x7ff8da10fb34,25813119,0,0x0,8
tick,0x7ff8da10fb34,25826641,0,0x0,8
tick,0x7ff8da10fb34,25842535,0,0x0,8
tick,0x7ff8da10fb34,25858641,0,0x0,8
tick,0x7ff8da10fb34,25874464,0,0x0,8
tick,0x7ff8da10fb34,25890730,0,0x0,8
tick,0x7ff8da10fb34,25906527,0,0x0,8
tick,0x7ff8da10fb34,25922571,0,0x0,8
tick,0x7ff8da10fb34,25938436,0,0x0,8
tick,0x7ff8da10fb34,25954990,0,0x0,8
tick,0x7ff8da10fb34,25970834,0,0x0,8
tick,0x7ff8da10fb34,25987841,0,0x0,8
tick,0x7ff8da10fb34,26002562,0,0x0,8
tick,0x7ff8da10fb34,26017133,0,0x0,8
tick,0x7ff8da10fb34,26032308,0,0x0,8
tick,0x7ff8da10fb34,26048334,0,0x0,8
tick,0x7ff8da10fb34,26063800,0,0x0,8
tick,0x7ff8da10fb34,26080041,0,0x0,8
tick,0x7ff8da10fb34,26095933,0,0x0,8
tick,0x7ff8da10fb34,26111810,0,0x0,8
tick,0x7ff8da10fb34,26127291,0,0x0,8
tick,0x7ff8da10fb34,26142948,0,0x0,8
tick,0x7ff8da10fb34,26158782,0,0x0,8
tick,0x7ff8da10fb34,26174477,0,0x0,8
tick,0x7ff8da10fb34,26189297,0,0x0,8
tick,0x7ff8da10fb34,26205252,0,0x0,8
tick,0x7ff8da10fb34,26220692,0,0x0,8
tick,0x7ff8da10fb34,26236954,0,0x0,8
tick,0x7ff8da10fb34,26252367,0,0x0,8
tick,0x7ff8da10fb34,26268030,0,0x0,8
tick,0x7ff8da10fb34,26283360,0,0x0,8
tick,0x7ff8da10fb34,26298694,0,0x0,8
tick,0x7ff8da10fb34,26314387,0,0x0,8
tick,0x7ff8da10fb34,26330215,0,0x0,8
tick,0x7ff8da10fb34,26346520,0,0x0,8
tick,0x7ff8da10fb34,26361198,0,0x0,8
tick,0x7ff8da10fb34,26377140,0,0x0,8
tick,0x7ff8da10fb34,26392110,0,0x0,8
tick,0x7ff8da10fb34,26408173,0,0x0,8
tick,0x7ff8da10fb34,26424223,0,0x0,8
tick,0x7ff8da10fb34,26440101,0,0x0,8
tick,0x7ff8da10fb34,26456270,0,0x0,8
tick,0x7ff8da10fb34,26472024,0,0x0,8
tick,0x7ff8da10fb34,26487618,0,0x0,8
tick,0x7ff8da10fb34,26502155,0,0x0,8
tick,0x7ff8da10fb34,26518800,0,0x0,8
tick,0x7ff8da10fb34,26532981,0,0x0,8
tick,0x7ff8da10fb34,26547940,0,0x0,8
tick,0x7ff8da10fb34,26563395,0,0x0,8
tick,0x7ff8da10fb34,26578381,0,0x0,8
tick,0x7ff8da10fb34,26594324,0,0x0,8
tick,0x7ff8da10fb34,26609787,0,0x0,8
tick,0x7ff8da10fb34,26626198,0,0x0,8
tick,0x7ff8da10fb34,26641093,0,0x0,8
tick,0x7ff8da10fb34,26657012,0,0x0,8
tick,0x7ff8da10fb34,26671931,0,0x0,8
tick,0x7ff8da10fb34,26688588,0,0x0,8
tick,0x7ff8da10fb34,26703400,0,0x0,8
tick,0x7ff8da10fb34,26718625,0,0x0,8
tick,0x7ff8da10fb34,26733366,0,0x0,8
tick,0x7ff8da10fb34,26748451,0,0x0,8
tick,0x7ff8da10fb34,26764314,0,0x0,8
tick,0x7ff8da10fb34,26779881,0,0x0,8
tick,0x7ff8da10fb34,26795013,0,0x0,8
tick,0x7ff8da10fb34,26810416,0,0x0,8
tick,0x7ff8da10fb34,26826309,0,0x0,8
tick,0x7ff8da10fb34,26841209,0,0x0,8
tick,0x7ff8da10fb34,26856756,0,0x0,8
tick,0x7ff8da10fb34,26872568,0,0x0,8
tick,0x7ff8da10fb34,26888402,0,0x0,8
tick,0x7ff8da10fb34,26903363,0,0x0,8
tick,0x7ff8da10fb34,26919543,0,0x0,8
tick,0x7ff8da10fb34,26934943,0,0x0,8
tick,0x7ff8da10fb34,26950518,0,0x0,8
tick,0x7ff8da10fb34,26967683,0,0x0,8
tick,0x7ff8da10fb34,26981586,0,0x0,8
tick,0x7ff8da10fb34,26996721,0,0x0,8
tick,0x7ff8da10fb34,27011682,0,0x0,8
tick,0x7ff8da10fb34,27027473,0,0x0,8
tick,0x7ff8da10fb34,27042473,0,0x0,8
tick,0x7ff8da10fb34,27057561,0,0x0,8
tick,0x7ff8da10fb34,27072418,0,0x0,8
tick,0x7ff8da10fb34,27088445,0,0x0,8
tick,0x7ff8da10fb34,27104514,0,0x0,8
tick,0x7ff8da10fb34,27120527,0,0x0,8
tick,0x7ff8da10fb34,27139185,0,0x0,8
tick,0x7ff8da10fb34,27151772,0,0x0,8
tick,0x7ff8da10fb34,27167963,0,0x0,8
tick,0x7ff8da10fb34,27181790,0,0x0,8
tick,0x7ff8da10fb34,27197561,0,0x0,8
tick,0x7ff8da10fb34,27212587,0,0x0,8
tick,0x7ff8da10fb34,27227261,0,0x0,8
tick,0x7ff8da10fb34,27242727,0,0x0,8
tick,0x7ff8da10fb34,27258209,0,0x0,8
tick,0x7ff8da10fb34,27273903,0,0x0,8
tick,0x7ff8da10fb34,27288902,0,0x0,8
tick,0x7ff8da10fb34,27305107,0,0x0,8
tick,0x7ff8da10fb34,27321048,0,0x0,8
tick,0x7ff8da10fb34,27337920,0,0x0,8
tick,0x7ff8da10fb34,27351193,0,0x0,8
tick,0x7ff8da10fb34,27367220,0,0x0,8
tick,0x7ff8da10fb34,27382529,0,0x0,8
tick,0x7ff8da10fb34,27398169,0,0x0,8
tick,0x7ff8da10fb34,27413779,0,0x0,8
tick,0x7ff8da10fb34,27428781,0,0x0,8
tick,0x7ff8da10fb34,27444275,0,0x0,8
tick,0x7ff8da10fb34,27459906,0,0x0,8
tick,0x7ff8da10fb34,27475230,0,0x0,8
tick,0x7ff8da10fb34,27489764,0,0x0,8
tick,0x7ff8da10fb34,27507261,0,0x0,8
tick,0x7ff8da10fb34,27520538,0,0x0,8
tick,0x7ff8da10fb34,27535656,0,0x0,8
tick,0x7ff8da10fb34,27551688,0,0x0,8
tick,0x7ff8da10fb34,27566751,0,0x0,8
tick,0x7ff8da10fb34,27581722,0,0x0,8
tick,0x7ff8da10fb34,27597603,0,0x0,8
tick,0x7ff8da10fb34,27613022,0,0x0,8
tick,0x7ff8da10fb34,27627144,0,0x0,8
tick,0x7ff8da10fb34,27642493,0,0x0,8
tick,0x7ff8da10fb34,27658120,0,0x0,8
tick,0x7ff8da10fb34,27673093,0,0x0,8
tick,0x7ff8da10fb34,27688676,0,0x0,8
tick,0x7ff8da10fb34,27704809,0,0x0,8
tick,0x7ff8da10fb34,27719854,0,0x0,8
tick,0x7ff8da10fb34,27735321,0,0x0,8
tick,0x7ff8da10fb34,27750482,0,0x0,8
tick,0x7ff8da10fb34,27766371,0,0x0,8
tick,0x7ff8da10fb34,27782447,0,0x0,8
tick,0x7ff8da10fb34,27797183,0,0x0,8
tick,0x7ff8da10fb34,27812518,0,0x0,8
tick,0x7ff8da10fb34,27827751,0,0x0,8
tick,0x7ff8da10fb34,27843290,0,0x0,8
tick,0x7ff8da10fb34,27858394,0,0x0,8
tick,0x7ff8da10fb34,27873496,0,0x0,8
tick,0x7ff8da10fb34,27888669,0,0x0,8
tick,0x7ff8da10fb34,27904372,0,0x0,8
tick,0x7ff8da10fb34,27921344,0,0x0,8
tick,0x7ff8da10fb34,27938351,0,0x0,8
tick,0x7ff8da10fb34,27952924,0,0x0,8
tick,0x7ff8da10fb34,27968565,0,0x0,8
tick,0x7ff8da10fb34,27984722,0,0x0,8
tick,0x7ff8da10fb34,27999592,0,0x0,8
tick,0x7ff8da10fb34,28015220,0,0x0,8
tick,0x7ff8da10fb34,28031240,0,0x0,8
tick,0x7ff8da10fb34,28047112,0,0x0,8
tick,0x7ff8da10fb34,28062345,0,0x0,8
tick,0x7ff8da10fb34,28077221,0,0x0,8
tick,0x7ff8da10fb34,28092311,0,0x0,8
tick,0x7ff8da10fb34,28108585,0,0x0,8
tick,0x7ff8da10fb34,28123961,0,0x0,8
tick,0x7ff8da10fb34,28141111,0,0x0,8
tick,0x7ff8da10fb34,28155567,0,0x0,8
tick,0x7ff8da10fb34,28170914,0,0x0,8
tick,0x7ff8da10fb34,28186890,0,0x0,8
tick,0x7ff8da10fb34,28202373,0,0x0,8
tick,0x7ff8da10fb34,28217161,0,0x0,8
tick,0x7ff8da10fb34,28233643,0,0x0,8
tick,0x7ff8da10fb34,28249186,0,0x0,8
tick,0x7ff8da10fb34,28264853,0,0x0,8
tick,0x7ff8da10fb34,28280880,0,0x0,8
tick,0x7ff8da10fb34,28296761,0,0x0,8
tick,0x7ff8da10fb34,28311933,0,0x0,8
tick,0x7ff8da10fb34,28328409,0,0x0,8
tick,0x7ff8da10fb34,28342653,0,0x0,8
tick,0x7ff8da10fb34,28357639,0,0x0,8
tick,0x7ff8da10fb34,28372655,0,0x0,8
tick,0x7ff8da10fb34,28387641,0,0x0,8
tick,0x7ff8da10fb34,28403659,0,0x0,8
tick,0x7ff8da10fb34,28419865,0,0x0,8
tick,0x7ff8da10fb34,28434829,0,0x0,8
tick,0x7ff8da10fb34,28449823,0,0x0,8
tick,0x7ff8da10fb34,28465856,0,0x0,8
tick,0x7ff8da10fb34,28481837,0,0x0,8
tick,0x7ff8da10fb34,28497792,0,0x0,8
tick,0x7ff8da10fb34,28513675,0,0x0,8
tick,0x7ff8da10fb34,28530073,0,0x0,8
tick,0x7ff8da10fb34,28544752,0,0x0,8
tick,0x7ff8da10fb34,28559690,0,0x0,8
tick,0x7ff8da10fb34,28575789,0,0x0,8
tick,0x7ff8da10fb34,28591585,0,0x0,8
tick,0x7ff8da10fb34,28607978,0,0x0,8
tick,0x7ff8da10fb34,28624208,0,0x0,8
tick,0x7ff8da10fb34,28639974,0,0x0,8
tick,0x7ff8da10fb34,28654652,0,0x0,8
tick,0x7ff8da10fb34,28670044,0,0x0,8
tick,0x7ff8da10fb34,28688524,0,0x0,8
tick,0x7ff8da10fb34,28701540,0,0x0,8
tick,0x7ff8da10fb34,28717916,0,0x0,8
tick,0x7ff8da10fb34,28733672,0,0x0,8
tick,0x7ff8da10fb34,28748643,0,0x0,8
tick,0x7ff8da10fb34,28763589,0,0x0,8
tick,0x7ff8da10fb34,28779696,0,0x0,8
tick,0x7ff8da10fb34,28794412,0,0x0,8
tick,0x7ff8da10fb34,28809300,0,0x0,8
tick,0x7ff8da10fb34,28824778,0,0x0,8
tick,0x7ff8da10fb34,28840136,0,0x0,8
tick,0x7ff8da10fb34,28855674,0,0x0,8
tick,0x7ff8da10fb34,28871661,0,0x0,8
tick,0x7ff8da10fb34,28886483,0,0x0,8
tick,0x7ff8da10fb34,28901397,0,0x0,8
tick,0x7ff8da10fb34,28916968,0,0x0,8
tick,0x7ff8da10fb34,28932338,0,0x0,8
tick,0x7ff8da10fb34,28947272,0,0x0,8
tick,0x7ff8da10fb34,28962308,0,0x0,8
tick,0x7ff8da10fb34,28978262,0,0x0,8
tick,0x7ff8da10fb34,28993492,0,0x0,8
tick,0x7ff8da10fb34,29009374,0,0x0,8
tick,0x7ff8da10fb34,29024238,0,0x0,8
tick,0x7ff8da10fb34,29039758,0,0x0,8
tick,0x7ff8da10fb34,29055632,0,0x0,8
tick,0x7ff8da10fb34,29071501,0,0x0,8
tick,0x7ff8da10fb34,29086783,0,0x0,8
tick,0x7ff8da10fb34,29101629,0,0x0,8
tick,0x7ff8da10fb34,29117411,0,0x0,8
tick,0x7ff8da10fb34,29133298,0,0x0,8
tick,0x7ff8da10fb34,29148745,0,0x0,8
tick,0x7ff8da10fb34,29165674,0,0x0,8
tick,0x7ff8da10fb34,29180705,0,0x0,8
tick,0x7ff8da10fb34,29197246,0,0x0,8
tick,0x7ff8da10fb34,29212684,0,0x0,8
tick,0x7ff8da10fb34,29228393,0,0x0,8
tick,0x7ff8da10fb34,29242716,0,0x0,8
tick,0x7ff8da10fb34,29258766,0,0x0,8
tick,0x7ff8da10fb34,29274731,0,0x0,8
tick,0x7ff8da10fb34,29291449,0,0x0,8
tick,0x7ff8da10fb34,29306515,0,0x0,8
tick,0x7ff8da10fb34,29321894,0,0x0,8
tick,0x7ff8da10fb34,29338134,0,0x0,8
tick,0x7ff8da10fb34,29353497,0,0x0,8
tick,0x7ff8da10fb34,29369103,0,0x0,8
tick,0x7ff8da10fb34,29384070,0,0x0,8
tick,0x7ff8da10fb34,29399616,0,0x0,8
tick,0x7ff8da10fb34,29415263,0,0x0,8
tick,0x7ff8da10fb34,29431331,0,0x0,8
tick,0x7ff8da10fb34,29447221,0,0x0,8
tick,0x7ff8da10fb34,29462341,0,0x0,8
tick,0x7ff8da10fb34,29477377,0,0x0,8
tick,0x7ff8da10fb34,29492417,0,0x0,8
tick,0x7ff8da10fb34,29507163,0,0x0,8
tick,0x7ff8da10fb34,29522661,0,0x0,8
tick,0x7ff8da10fb34,29538270,0,0x0,8
tick,0x7ff8da10fb34,29553865,0,0x0,8
tick,0x7ff8da10fb34,29569186,0,0x0,8
tick,0x7ff8da10fb34,29584343,0,0x0,8
tick,0x7ff8da10fb34,29599641,0,0x0,8
tick,0x7ff8da10fb34,29615284,0,0x0,8
tick,0x7ff8da10fb34,29630655,0,0x0,8
tick,0x7ff8da10fb34,29645807,0,0x0,8
tick,0x7ff8da10fb34,29660842,0,0x0,8
tick,0x7ff8da10fb34,29677239,0,0x0,8
tick,0x7ff8da10fb34,29692540,0,0x0,8
tick,0x7ff8da10fb34,29711104,0,0x0,8
tick,0x7ff8da10fb34,29723895,0,0x0,8
tick,0x7ff8da10fb34,29740200,0,0x0,8
tick,0x7ff8da10fb34,29754735,0,0x0,8
tick,0x7ff8da10fb34,29769768,0,0x0,8
tick,0x7ff8da10fb34,29786782,0,0x0,8
tick,0x7ff8da10fb34,29800670,0,0x0,8
tick,0x7ff8da10fb34,29816533,0,0x0,8
tick,0x7ff8da10fb34,29832177,0,0x0,8
tick,0x7ff8da10fb34,29847407,0,0x0,8
tick,0x7ff8da10fb34,29863393,0,0x0,8
tick,0x7ff8da10fb34,29879153,0,0x0,8
tick,0x7ff8da10fb34,29894154,0,0x0,8
tick,0x7ff8da10fb34,29910219,0,0x0,8
tick,0x7ff8da10fb34,29925108,0,0x0,8
tick,0x7ff8da10fb34,29940177,0,0x0,8
tick,0x7ff8da10fb34,29956515,0,0x0,8
tick,0x7ff8da10fb34,29971033,0,0x0,8
tick,0x7ff8da10fb34,29987245,0,0x0,8
tick,0x7ff8da10fb34,30001853,0,0x0,8
tick,0x7ff8da10fb34,30017994,0,0x0,8
tick,0x7ff8da10fb34,30033942,0,0x0,8
tick,0x7ff8da10fb34,30049270,0,0x0,8
tick,0x7ff8da10fb34,30065061,0,0x0,8
tick,0x7ff8da10fb34,30080523,0,0x0,8
tick,0x7ff8da10fb34,30095273,0,0x0,8
tick,0x7ff8da10fb34,30110370,0,0x0,8
tick,0x7ff8da10fb34,30126526,0,0x0,8
tick,0x7ff8da10fb34,30141497,0,0x0,8
tick,0x7ff8da10fb34,30157330,0,0x0,8
tick,0x7ff8da10fb34,30172454,0,0x0,8
tick,0x7ff8da10fb34,30187301,0,0x0,8
tick,0x7ff8da10fb34,30202253,0,0x0,8
tick,0x7ff8da10fb34,30217781,0,0x0,8
tick,0x7ff8da10fb34,30233498,0,0x0,8
tick,0x7ff8da10fb34,30248655,0,0x0,8
tick,0x7ff8da10fb34,30265313,0,0x0,8
tick,0x7ff8da10fb34,30279567,0,0x0,8
tick,0x7ff8da10fb34,30296063,0,0x0,8
tick,0x7ff8da10fb34,30312781,0,0x0,8
tick,0x7ff8da10fb34,30328363,0,0x0,8
tick,0x7ff8da10fb34,30348677,0,0x0,8
tick,0x7ff8da10fb34,30359830,0,0x0,8
tick,0x7ff8da10fb34,30374595,0,0x0,8
tick,0x7ff8da10fb34,30389596,0,0x0,8
tick,0x7ff8da10fb34,30404500,0,0x0,8
tick,0x7ff8da10fb34,30419546,0,0x0,8
tick,0x7ff8da10fb34,30434672,0,0x0,8
tick,0x7ff8da10fb34,30451071,0,0x0,8
tick,0x7ff8da10fb34,30466721,0,0x0,8
tick,0x7ff8da10fb34,30481462,0,0x0,8
tick,0x7ff8da10fb34,30496677,0,0x0,8
tick,0x7ff8da10fb34,30512257,0,0x0,8
tick,0x7ff8da10fb34,30528091,0,0x0,8
tick,0x7ff8da10fb34,30543343,0,0x0,8
tick,0x7ff8da10fb34,30558487,0,0x0,8
tick,0x7ff8da10fb34,30574000,0,0x0,8
tick,0x7ff8da10fb34,30589338,0,0x0,8
tick,0x7ff8da10fb34,30605284,0,0x0,8
tick,0x7ff8da10fb34,30621192,0,0x0,8
tick,0x7ff8da10fb34,30637390,0,0x0,8
tick,0x7ff8da10fb34,30653678,0,0x0,8
tick,0x7ff8da10fb34,30669490,0,0x0,8
tick,0x7ff8da10fb34,30685598,0,0x0,8
tick,0x7ff8da10fb34,30700753,0,0x0,8
tick,0x7ff8da10fb34,30715891,0,0x0,8
tick,0x7ff8da10fb34,30731937,0,0x0,8
tick,0x7ff8da10fb34,30747049,0,0x0,8
tick,0x7ff8da10fb34,30762036,0,0x0,8
tick,0x7ff8da10fb34,30777815,0,0x0,8
tick,0x7ff8da10fb34,30792679,0,0x0,8
tick,0x7ff8da10fb34,30808201,0,0x0,8
tick,0x7ff8da10fb34,30823331,0,0x0,8
tick,0x7ff8da10fb34,30839275,0,0x0,8
tick,0x7ff8da10fb34,30855190,0,0x0,8
tick,0x7ff8da10fb34,30871165,0,0x0,8
tick,0x7ff8da10fb34,30887527,0,0x0,8
tick,0x7ff8da10fb34,30903298,0,0x0,8
tick,0x7ff8da10fb34,30919514,0,0x0,8
tick,0x7ff8da10fb34,30935249,0,0x0,8
tick,0x7ff8da10fb34,30950653,0,0x0,8
tick,0x7ff8da10fb34,30966817,0,0x0,8
tick,0x7ff8da10fb34,30982245,0,0x0,8
tick,0x7ff8da10fb34,30997776,0,0x0,8
tick,0x7ff8da10fb34,31012372,0,0x0,8
tick,0x7ff8da10fb34,31028607,0,0x0,8
tick,0x7ff8da10fb34,31044450,0,0x0,8
tick,0x7ff8da10fb34,31060254,0,0x0,8
tick,0x7ff8da10fb34,31076448,0,0x0,8
tick,0x7ff8da10fb34,31091496,0,0x0,8
tick,0x7ff8da10fb34,31106691,0,0x0,8
tick,0x7ff8da10fb34,31122043,0,0x0,8
tick,0x7ff8da10fb34,31137383,0,0x0,8
tick,0x7ff8da10fb34,31153414,0,0x0,8
tick,0x7ff8da10fb34,31168926,0,0x0,8
tick,0x7ff8da10fb34,31184523,0,0x0,8
tick,0x7ff8da10fb34,31199411,0,0x0,8
tick,0x7ff8da10fb34,31214863,0,0x0,8
tick,0x7ff8da10fb34,31230595,0,0x0,8
tick,0x7ff8da10fb34,31272542,0,0x0,8
tick,0x7ff8da10fb34,31284602,0,0x0,8
tick,0x7ff8da10fb34,31315017,0,0x0,8
tick,0x7ff8da10fb34,31335224,0,0x0,8
tick,0x7ff8da10fb34,31362147,0,0x0,8
tick,0x7ff8da10fb34,31386114,0,0x0,8
tick,0x7ff8da10fb34,31388366,0,0x0,8
tick,0x7ff8da10fb34,31404721,0,0x0,8
tick,0x7ff8da10fb34,31420782,0,0x0,8
tick,0x7ff8da10fb34,31440174,0,0x0,8
tick,0x7ff8da10fb34,31451216,0,0x0,8
tick,0x7ff8da10fb34,31466478,0,0x0,8
tick,0x7ff8da10fb34,31481171,0,0x0,8
tick,0x7ff8da10fb34,31496321,0,0x0,8
tick,0x7ff8da10fb34,31511588,0,0x0,8
tick,0x7ff8da10fb34,31526219,0,0x0,8
tick,0x7ff8da10fb34,31542494,0,0x0,8
tick,0x7ff8da10fb34,31557201,0,0x0,8
tick,0x7ff8da10fb34,31572641,0,0x0,8
tick,0x7ff8da10fb34,31588290,0,0x0,8
tick,0x7ff8da10fb34,31603346,0,0x0,8
tick,0x7ff8da10fb34,31619329,0,0x0,8
tick,0x7ff8da10fb34,31635191,0,0x0,8
tick,0x7ff8da10fb34,31650984,0,0x0,8
tick,0x7ff8da10fb34,31666683,0,0x0,8
tick,0x7ff8da10fb34,31681630,0,0x0,8
tick,0x7ff8da10fb34,31697596,0,0x0,8
tick,0x7ff8da10fb34,31712540,0,0x0,8
tick,0x7ff8da10fb34,31727510,0,0x0,8
tick,0x7ff8da10fb34,31744009,0,0x0,8
tick,0x7ff8da10fb34,31758469,0,0x0,8
tick,0x7ff8da10fb34,31774361,0,0x0,8
tick,0x7ff8da10fb34,31790332,0,0x0,8
tick,0x7ff8da10fb34,31806248,0,0x0,8
tick,0x7ff8da10fb34,31821249,0,0x0,8
tick,0x7ff8da10fb34,31836322,0,0x0,8
tick,0x7ff8da10fb34,31851444,0,0x0,8
tick,0x7ff8da10fb34,31866609,0,0x0,8
tick,0x7ff8da10fb34,31882453,0,0x0,8
tick,0x7ff8da10fb34,31898191,0,0x0,8
tick,0x7ff8da10fb34,31913449,0,0x0,8
tick,0x7ff8da10fb34,31928662,0,0x0,8
tick,0x7ff8da10fb34,31943796,0,0x0,8
tick,0x7ff8da10fb34,31958617,0,0x0,8
tick,0x7ff8da10fb34,31973771,0,0x0,8
tick,0x7ff8da10fb34,31989818,0,0x0,8
tick,0x7ff8da10fb34,32005720,0,0x0,8
tick,0x7ff8da10fb34,32021446,0,0x0,8
tick,0x7ff8da10fb34,32037779,0,0x0,8
tick,0x7ff8da10fb34,32053448,0,0x0,8
tick,0x7ff8da10fb34,32069473,0,0x0,8
tick,0x7ff8da10fb34,32085523,0,0x0,8
tick,0x7ff8da10fb34,32101758,0,0x0,8
tick,0x7ff8da10fb34,32117898,0,0x0,8
tick,0x7ff8da10fb34,32133410,0,0x0,8
tick,0x7ff8da10fb34,32149538,0,0x0,8
tick,0x7ff8da10fb34,32165684,0,0x0,8
tick,0x7ff8da10fb34,32180898,0,0x0,8
tick,0x7ff8da10fb34,32196178,0,0x0,8
tick,0x7ff8da10fb34,32212343,0,0x0,8
tick,0x7ff8da10fb34,32227227,0,0x0,8
tick,0x7ff8da10fb34,32242351,0,0x0,8
tick,0x7ff8da10fb34,32257647,0,0x0,8
tick,0x7ff8da10fb34,32272924,0,0x0,8
tick,0x7ff8da10fb34,32288488,0,0x0,8
tick,0x7ff8da10fb34,32304006,0,0x0,8
tick,0x7ff8da10fb34,32319324,0,0x0,8
tick,0x7ff8da10fb34,32334419,0,0x0,8
tick,0x7ff8da10fb34,32349018,0,0x0,8
tick,0x7ff8da10fb34,32364617,0,0x0,8
tick,0x7ff8da10fb34,32380794,0,0x0,8
tick,0x7ff8da10fb34,32397417,0,0x0,8
tick,0x7ff8da10fb34,32412759,0,0x0,8
tick,0x7ff8da10fb34,32427632,0,0x0,8
tick,0x7ff8da10fb34,32443474,0,0x0,8
tick,0x7ff8da10fb34,32458544,0,0x0,8
tick,0x7ff8da10fb34,32473436,0,0x0,8
tick,0x7ff8da10fb34,32489813,0,0x0,8
tick,0x7ff8da10fb34,32504600,0,0x0,8
tick,0x7ff8da10fb34,32519468,0,0x0,8
tick,0x7ff8da10fb34,32535580,0,0x0,8
tick,0x7ff8da10fb34,32550945,0,0x0,8
tick,0x7ff8da10fb34,32565462,0,0x0,8
tick,0x7ff8da10fb34,32581499,0,0x0,8
tick,0x7ff8da10fb34,32597178,0,0x0,8
tick,0x7ff8da10fb34,32612261,0,0x0,8
tick,0x7ff8da10fb34,32627651,0,0x0,8
tick,0x7ff8da10fb34,32643241,0,0x0,8
tick,0x7ff8da10fb34,32658243,0,0x0,8
tick,0x7ff8da10fb34,32673369,0,0x0,8
tick,0x7ff8da10fb34,32688717,0,0x0,8
tick,0x7ff8da10fb34,32704699,0,0x0,8
tick,0x7ff8da10fb34,32720647,0,0x0,8
tick,0x7ff8da10fb34,32735922,0,0x0,8
tick,0x7ff8da10fb34,32751442,0,0x0,8
tick,0x7ff8da10fb34,32766322,0,0x0,8
tick,0x7ff8da10fb34,32781571,0,0x0,8
tick,0x7ff8da10fb34,32796770,0,0x0,8
tick,0x7ff8da10fb34,32813356,0,0x0,8
tick,0x7ff8da10fb34,32827686,0,0x0,8
tick,0x7ff8da10fb34,32842483,0,0x0,8
tick,0x7ff8da10fb34,32859036,0,0x0,8
tick,0x7ff8da10fb34,32874450,0,0x0,8
tick,0x7ff8da10fb34,32890580,0,0x0,8
tick,0x7ff8da10fb34,32906750,0,0x0,8
tick,0x7ff8da10fb34,32922722,0,0x0,8
tick,0x7ff8da10fb34,32938423,0,0x0,8
tick,0x7ff8da10fb34,32954584,0,0x0,8
tick,0x7ff8da10fb34,32970392,0,0x0,8
tick,0x7ff8da10fb34,32985815,0,0x0,8
tick,0x7ff8da10fb34,33000816,0,0x0,8
tick,0x7ff8da10fb34,33015149,0,0x0,8
tick,0x7ff8da10fb34,33030743,0,0x0,8
tick,0x7ff8da10fb34,33046499,0,0x0,8
tick,0x7ff8da10fb34,33062478,0,0x0,8
tick,0x7ff8da10fb34,33078267,0,0x0,8
tick,0x7ff8da10fb34,33093538,0,0x0,8
tick,0x7ff8da10fb34,33108785,0,0x0,8
tick,0x7ff8da10fb34,33123722,0,0x0,8
tick,0x7ff8da10fb34,33148739,0,0x0,8
tick,0x7ff8da10fb34,33158844,0,0x0,8
tick,0x7ff8da10fb34,33169833,0,0x0,8
tick,0x7ff8da10fb34,33184514,0,0x0,8
tick,0x7ff8da10fb34,33200737,0,0x0,8
tick,0x7ff8da10fb34,33216213,0,0x0,8
tick,0x7ff8da10fb34,33232083,0,0x0,8
tick,0x7ff8da10fb34,33252190,0,0x0,8
tick,0x7ff8da10fb34,33263988,0,0x0,8
tick,0x7ff8da10fb34,33280614,0,0x0,8
tick,0x7ff8da10fb34,33296103,0,0x0,8
tick,0x7ff8da10fb34,33312029,0,0x0,8
tick,0x7ff8da10fb34,33328568,0,0x0,8
tick,0x7ff8da10fb34,33345586,0,0x0,8
tick,0x7ff8da10fb34,33358990,0,0x0,8
tick,0x7ff8da10fb34,33375097,0,0x0,8
tick,0x7ff8da10fb34,33390020,0,0x0,8
tick,0x7ff8da10fb34,33405421,0,0x0,8
tick,0x7ff8da10fb34,33421010,0,0x0,8
tick,0x7ff8da10fb34,33436146,0,0x0,8
tick,0x7ff8da10fb34,33451173,0,0x0,8
tick,0x7ff8da10fb34,33467178,0,0x0,8
tick,0x7ff8da10fb34,33481929,0,0x0,8
tick,0x7ff8da10fb34,33497136,0,0x0,8
tick,0x7ff8da10fb34,33513027,0,0x0,8
tick,0x7ff8da10fb34,33527953,0,0x0,8
tick,0x7ff8da10fb34,33543069,0,0x0,8
tick,0x7ff8da10fb34,33558906,0,0x0,8
tick,0x7ff8da10fb34,33574209,0,0x0,8
tick,0x7ff8da10fb34,33589229,0,0x0,8
tick,0x7ff8da10fb34,33604424,0,0x0,8
tick,0x7ff8da10fb34,33619901,0,0x0,8
tick,0x7ff8da10fb34,33635741,0,0x0,8
tick,0x7ff8da10fb34,33652401,0,0x0,8
tick,0x7ff8da10fb34,33668313,0,0x0,8
tick,0x7ff8da10fb34,33683708,0,0x0,8
tick,0x7ff8da10fb34,33701385,0,0x0,8
tick,0x7ff8da10fb34,33715766,0,0x0,8
tick,0x7ff8da10fb34,33731577,0,0x0,8
tick,0x7ff8da10fb34,33746920,0,0x0,8
tick,0x7ff8da10fb34,33762202,0,0x0,8
tick,0x7ff8da10fb34,33778207,0,0x0,8
tick,0x7ff8da10fb34,33794381,0,0x0,8
tick,0x7ff8da10fb34,33809811,0,0x0,8
tick,0x7ff8da10fb34,33825618,0,0x0,8
tick,0x7ff8da10fb34,33841416,0,0x0,8
tick,0x7ff8da10fb34,33857369,0,0x0,8
tick,0x7ff8da10fb34,33871971,0,0x0,8
tick,0x7ff8da10fb34,33887452,0,0x0,8
tick,0x7ff8da10fb34,33902838,0,0x0,8
tick,0x7ff8da10fb34,33918726,0,0x0,8
tick,0x7ff8da10fb34,33934442,0,0x0,8
tick,0x7ff8da10fb34,33949283,0,0x0,8
tick,0x7ff8da10fb34,33964359,0,0x0,8
tick,0x7ff8da10fb34,33979731,0,0x0,8
tick,0x7ff8da10fb34,33995525,0,0x0,8
tick,0x7ff8da10fb34,34010440,0,0x0,8
tick,0x7ff8da10fb34,34026521,0,0x0,8
tick,0x7ff8da10fb34,34041672,0,0x0,8
tick,0x7ff8da10fb34,34057629,0,0x0,8
tick,0x7ff8da10fb34,34073741,0,0x0,8
tick,0x7ff8da10fb34,34089791,0,0x0,8
tick,0x7ff8da10fb34,34105341,0,0x0,8
tick,0x7ff8da10fb34,34120746,0,0x0,8
tick,0x7ff8da10fb34,34137140,0,0x0,8
tick,0x7ff8da10fb34,34152649,0,0x0,8
tick,0x7ff8da10fb34,34168895,0,0x0,8
tick,0x7ff8da10fb34,34184493,0,0x0,8
tick,0x7ff8da10fb34,34199520,0,0x0,8
tick,0x7ff8da10fb34,34215560,0,0x0,8
tick,0x7ff8da10fb34,34233756,0,0x0,8
tick,0x7ff8da10fb34,34247250,0,0x0,8
tick,0x7ff8da10fb34,34263314,0,0x0,8
tick,0x7ff8da10fb34,34279223,0,0x0,8
tick,0x7ff8da10fb34,34294406,0,0x0,8
tick,0x7ff8da10fb34,34309769,0,0x0,8
tick,0x7ff8da10fb34,34327861,0,0x0,8
tick,0x7ff8da10fb34,34341727,0,0x0,8
tick,0x7ff8da10fb34,34357438,0,0x0,8
tick,0x7ff8da10fb34,34372742,0,0x0,8
tick,0x7ff8da10fb34,34388640,0,0x0,8
tick,0x7ff8da10fb34,34404007,0,0x0,8
tick,0x7ff8da10fb34,34419234,0,0x0,8
tick,0x7ff8da10fb34,34435863,0,0x0,8
tick,0x7ff8da10fb34,34450578,0,0x0,8
tick,0x7ff8da10fb34,34466679,0,0x0,8
tick,0x7ff8da10fb34,34481827,0,0x0,8
tick,0x7ff8da10fb34,34497443,0,0x0,8
tick,0x7ff8da10fb34,34512543,0,0x0,8
tick,0x7ff8da10fb34,34528435,0,0x0,8
tick,0x7ff8da10fb34,34544556,0,0x0,8
tick,0x7ff8da10fb34,34561018,0,0x0,8
tick,0x7ff8da10fb34,34575161,0,0x0,8
tick,0x7ff8da10fb34,34590439,0,0x0,8
tick,0x7ff8da10fb34,34606477,0,0x0,8
tick,0x7ff8da10fb34,34621242,0,0x0,8
tick,0x7ff8da10fb34,34637313,0,0x0,8
tick,0x7ff8da10fb34,34653136,0,0x0,8
tick,0x7ff8da10fb34,34669222,0,0x0,8
tick,0x7ff8da10fb34,34685627,0,0x0,8
tick,0x7ff8da10fb34,34700960,0,0x0,8
tick,0x7ff8da10fb34,34717150,0,0x0,8
tick,0x7ff8da10fb34,34732657,0,0x0,8
tick,0x7ff8da10fb34,34747042,0,0x0,8
tick,0x7ff8da10fb34,34762475,0,0x0,8
tick,0x7ff8da10fb34,34777839,0,0x0,8
tick,0x7ff8da10fb34,34793502,0,0x0,8
tick,0x7ff8da10fb34,34808884,0,0x0,8
tick,0x7ff8da10fb34,34823618,0,0x0,8
tick,0x7ff8da10fb34,34839681,0,0x0,8
tick,0x7ff8da10fb34,34856251,0,0x0,8
tick,0x7ff8da10fb34,34871636,0,0x0,8
tick,0x7ff8da10fb34,34887536,0,0x0,8
tick,0x7ff8da10fb34,34903830,0,0x0,8
tick,0x7ff8da10fb34,34919793,0,0x0,8
tick,0x7ff8da10fb34,34935733,0,0x0,8
tick,0x7ff8da10fb34,34950990,0,0x0,8
tick,0x7ff8da10fb34,34967842,0,0x0,8
tick,0x7ff8da10fb34,34981194,0,0x0,8
tick,0x7ff8da10fb34,34996802,0,0x0,8
tick,0x7ff8da10fb34,35010485,0,0x0,8
tick,0x7ff8da10fb34,35026318,0,0x0,8
tick,0x7ff8da10fb34,35041784,0,0x0,8
tick,0x7ff8da10fb34,35057465,0,0x0,8
tick,0x7ff8da10fb34,35073482,0,0x0,8
tick,0x7ff8da10fb34,35089549,0,0x0,8
tick,0x7ff8da10fb34,35105554,0,0x0,8
tick,0x7ff8da10fb34,35122075,0,0x0,8
tick,0x7ff8da10fb34,35137350,0,0x0,8
tick,0x7ff8da10fb34,35153319,0,0x0,8
tick,0x7ff8da10fb34,35168809,0,0x0,8
tick,0x7ff8da10fb34,35183750,0,0x0,8
tick,0x7ff8da10fb34,35199238,0,0x0,8
tick,0x7ff8da10fb34,35214386,0,0x0,8
tick,0x7ff8da10fb34,35229728,0,0x0,8
tick,0x7ff8da10fb34,35245288,0,0x0,8
tick,0x7ff8da10fb34,35260349,0,0x0,8
tick,0x7ff8da10fb34,35276546,0,0x0,8
tick,0x7ff8da10fb34,35292369,0,0x0,8
tick,0x7ff8da10fb34,35307134,0,0x0,8
tick,0x7ff8da10fb34,35322148,0,0x0,8
tick,0x7ff8da10fb34,35337801,0,0x0,8
tick,0x7ff8da10fb34,35353120,0,0x0,8
tick,0x7ff8da10fb34,35369437,0,0x0,8
tick,0x7ff8da10fb34,35384782,0,0x0,8
tick,0x7ff8da10fb34,35399847,0,0x0,8
tick,0x7ff8da10fb34,35415426,0,0x0,8
tick,0x7ff8da10fb34,35430756,0,0x0,8
tick,0x7ff8da10fb34,35446699,0,0x0,8
tick,0x7ff8da10fb34,35461575,0,0x0,8
tick,0x7ff8da10fb34,35476762,0,0x0,8
tick,0x7ff8da10fb34,35491497,0,0x0,8
tick,0x7ff8da10fb34,35507207,0,0x0,8
tick,0x7ff8da10fb34,35522575,0,0x0,8
tick,0x7ff8da10fb34,35537923,0,0x0,8
tick,0x7ff8da10fb34,35553275,0,0x0,8
tick,0x7ff8da10fb34,35568770,0,0x0,8
tick,0x7ff8da10fb34,35584732,0,0x0,8
tick,0x7ff8da10fb34,35599777,0,0x0,8
tick,0x7ff8da10fb34,35615401,0,0x0,8
tick,0x7ff8da10fb34,35630736,0,0x0,8
tick,0x7ff8da10fb34,35646419,0,0x0,8
tick,0x7ff8da10fb34,35662367,0,0x0,8
tick,0x7ff8da10fb34,35678005,0,0x0,8
tick,0x7ff8da10fb34,35693409,0,0x0,8
tick,0x7ff8da10fb34,35709346,0,0x0,8
tick,0x7ff8da10fb34,35725120,0,0x0,8
tick,0x7ff8da10fb34,35740548,0,0x0,8
tick,0x7ff8da10fb34,35755289,0,0x0,8
tick,0x7ff8da10fb34,35770535,0,0x0,8
tick,0x7ff8da10fb34,35786550,0,0x0,8
tick,0x7ff8da10fb34,35802193,0,0x0,8
tick,0x7ff8da10fb34,35818055,0,0x0,8
tick,0x7ff8da10fb34,35833424,0,0x0,8
tick,0x7ff8da10fb34,35848883,0,0x0,8
tick,0x7ff8da10fb34,35864374,0,0x0,8
tick,0x7ff8da10fb34,35880070,0,0x0,8
tick,0x7ff8da10fb34,35895280,0,0x0,8
tick,0x7ff8da10fb34,35911218,0,0x0,8
tick,0x7ff8da10fb34,35926459,0,0x0,8
tick,0x7ff8da10fb34,35941403,0,0x0,8
tick,0x7ff8da10fb34,35957522,0,0x0,8
tick,0x7ff8da10fb34,35972489,0,0x0,8
tick,0x7ff8da10fb34,35988487,0,0x0,8
tick,0x7ff8da10fb34,36003846,0,0x0,8
tick,0x7ff8da10fb34,36019708,0,0x0,8
tick,0x7ff8da10fb34,36035358,0,0x0,8
tick,0x7ff8da10fb34,36051068,0,0x0,8
tick,0x7ff8da10fb34,36066735,0,0x0,8
tick,0x7ff8da10fb34,36082326,0,0x0,8
tick,0x7ff8da10fb34,36097406,0,0x0,8
tick,0x7ff8da10fb34,36113617,0,0x0,8
tick,0x7ff8da10fb34,36128641,0,0x0,8
tick,0x7ff8da10fb34,36144493,0,0x0,8
tick,0x7ff8da10fb34,36159730,0,0x0,8
tick,0x7ff8da10fb34,36175502,0,0x0,8
tick,0x7ff8da10fb34,36191382,0,0x0,8
tick,0x7ff8da10fb34,36207331,0,0x0,8
tick,0x7ff8da10fb34,36223233,0,0x0,8
tick,0x7ff8da10fb34,36238567,0,0x0,8
tick,0x7ff8da10fb34,36253881,0,0x0,8
tick,0x7ff8da10fb34,36269348,0,0x0,8
tick,0x7ff8da10fb34,36285982,0,0x0,8
tick,0x7ff8da10fb34,36301880,0,0x0,8
tick,0x7ff8da10fb34,36318461,0,0x0,8
tick,0x7ff8da10fb34,36334336,0,0x0,8
tick,0x7ff8da10fb34,36348307,0,0x0,8
tick,0x7ff8da10fb34,36363483,0,0x0,8
tick,0x7ff8da10fb34,36378843,0,0x0,8
tick,0x7ff8da10fb34,36393982,0,0x0,8
tick,0x7ff8da10fb34,36409124,0,0x0,8
tick,0x7ff8da10fb34,36425188,0,0x0,8
tick,0x7ff8da10fb34,36441275,0,0x0,8
tick,0x7ff8da10fb34,36457499,0,0x0,8
tick,0x7ff8da10fb34,36473329,0,0x0,8
tick,0x7ff8da10fb34,36489185,0,0x0,8
tick,0x7ff8da10fb34,36504377,0,0x0,8
tick,0x7ff8da10fb34,36520156,0,0x0,8
tick,0x7ff8da10fb34,36535283,0,0x0,8
tick,0x7ff8da10fb34,36551306,0,0x0,8
tick,0x7ff8da10fb34,36567195,0,0x0,8
tick,0x7ff8da10fb34,36583235,0,0x0,8
tick,0x7ff8da10fb34,36598008,0,0x0,8
tick,0x7ff8da10fb34,36613648,0,0x0,8
tick,0x7ff8da10fb34,36629597,0,0x0,8
tick,0x7ff8da10fb34,36645793,0,0x0,8
tick,0x7ff8da10fb34,36661664,0,0x0,8
tick,0x7ff8da10fb34,36677749,0,0x0,8
tick,0x7ff8da10fb34,36693676,0,0x0,8
tick,0x7ff8da10fb34,36709549,0,0x0,8
tick,0x7ff8da10fb34,36724384,0,0x0,8
tick,0x7ff8da10fb34,36739653,0,0x0,8
tick,0x7ff8da10fb34,36754703,0,0x0,8
tick,0x7ff8da10fb34,36769193,0,0x0,8
tick,0x7ff8da10fb34,36784424,0,0x0,8
tick,0x7ff8da10fb34,36800663,0,0x0,8
tick,0x7ff8da10fb34,36817577,0,0x0,8
tick,0x7ff8da10fb34,36833042,0,0x0,8
tick,0x7ff8da10fb34,36847123,0,0x0,8
tick,0x7ff8da10fb34,36862382,0,0x0,8
tick,0x7ff8da10fb34,36877697,0,0x0,8
tick,0x7ff8da10fb34,36893539,0,0x0,8
tick,0x7ff8da10fb34,36909334,0,0x0,8
tick,0x7ff8da10fb34,36925190,0,0x0,8
tick,0x7ff8da10fb34,36940313,0,0x0,8
tick,0x7ff8da10fb34,36955446,0,0x0,8
tick,0x7ff8da10fb34,36970452,0,0x0,8
tick,0x7ff8da10fb34,36986957,0,0x0,8
tick,0x7ff8da10fb34,37001515,0,0x0,8
tick,0x7ff8da10fb34,37017759,0,0x0,8
tick,0x7ff8da10fb34,37031197,0,0x0,8
tick,0x7ff8da10fb34,37046661,0,0x0,8
tick,0x7ff8da10fb34,37062423,0,0x0,8
tick,0x7ff8da10fb34,37077787,0,0x0,8
tick,0x7ff8da10fb34,37092677,0,0x0,8
tick,0x7ff8da10fb34,37108099,0,0x0,8
tick,0x7ff8da10fb34,37123906,0,0x0,8
tick,0x7ff8da10fb34,37138811,0,0x0,8
tick,0x7ff8da10fb34,37154305,0,0x0,8
tick,0x7ff8da10fb34,37170420,0,0x0,8
tick,0x7ff8da10fb34,37185736,0,0x0,8
tick,0x7ff8da10fb34,37201768,0,0x0,8
tick,0x7ff8da10fb34,37218818,0,0x0,8
tick,0x7ff8da10fb34,37231477,0,0x0,8
tick,0x7ff8da10fb34,37247198,0,0x0,8
tick,0x7ff8da10fb34,37262281,0,0x0,8
tick,0x7ff8da10fb34,37278281,0,0x0,8
tick,0x7ff8da10fb34,37293487,0,0x0,8
tick,0x7ff8da10fb34,37308598,0,0x0,8
tick,0x7ff8da10fb34,37323972,0,0x0,8
tick,0x7ff8da10fb34,37338702,0,0x0,8
tick,0x7ff8da10fb34,37354252,0,0x0,8
tick,0x7ff8da10fb34,37369447,0,0x0,8
tick,0x7ff8da10fb34,37384692,0,0x0,8
tick,0x7ff8da10fb34,37400668,0,0x0,8
tick,0x7ff8da10fb34,37416765,0,0x0,8
tick,0x7ff8da10fb34,37431364,0,0x0,8
tick,0x7ff8da10fb34,37447453,0,0x0,8
tick,0x7ff8da10fb34,37462464,0,0x0,8
tick,0x7ff8da10fb34,37477918,0,0x0,8
tick,0x7ff8da10fb34,37493439,0,0x0,8
tick,0x7ff8da10fb34,37508605,0,0x0,8
tick,0x7ff8da10fb34,37524261,0,0x0,8
tick,0x7ff8da10fb34,37539978,0,0x0,8
tick,0x7ff8da10fb34,37555502,0,0x0,8
tick,0x7ff8da10fb34,37571359,0,0x0,8
tick,0x7ff8da10fb34,37586689,0,0x0,8
tick,0x7ff8da10fb34,37602459,0,0x0,8
tick,0x7ff8da10fb34,37617547,0,0x0,8
tick,0x7ff8da10fb34,37632740,0,0x0,8
tick,0x7ff8da10fb34,37647779,0,0x0,8
tick,0x7ff8da10fb34,37663522,0,0x0,8
tick,0x7ff8da10fb34,37678520,0,0x0,8
tick,0x7ff8da10fb34,37693505,0,0x0,8
tick,0x7ff8da10fb34,37708906,0,0x0,8
tick,0x7ff8da10fb34,37724955,0,0x0,8
tick,0x7ff8da10fb34,37740475,0,0x0,8
tick,0x7ff8da10fb34,37756538,0,0x0,8
tick,0x7ff8da10fb34,37772206,0,0x0,8
tick,0x7ff8da10fb34,37787355,0,0x0,8
tick,0x7ff8da10fb34,37802660,0,0x0,8
tick,0x7ff8da10fb34,37818456,0,0x0,8
tick,0x7ff8da10fb34,37833909,0,0x0,8
tick,0x7ff8da10fb34,37848995,0,0x0,8
tick,0x7ff8da10fb34,37864366,0,0x0,8
tick,0x7ff8da10fb34,37879993,0,0x0,8
tick,0x7ff8da10fb34,37894918,0,0x0,8
tick,0x7ff8da10fb34,37909835,0,0x0,8
tick,0x7ff8da10fb34,37924698,0,0x0,8
tick,0x7ff8da10fb34,37939743,0,0x0,8
tick,0x7ff8da10fb34,37955121,0,0x0,8
tick,0x7ff8da10fb34,37970307,0,0x0,8
tick,0x7ff8da10fb34,37987621,0,0x0,8
tick,0x7ff8da10fb34,38001983,0,0x0,8
tick,0x7ff8da10fb34,38016658,0,0x0,8
tick,0x7ff8da10fb34,38031421,0,0x0,8
tick,0x7ff8da10fb34,38047105,0,0x0,8
tick,0x7ff8da10fb34,38062593,0,0x0,8
tick,0x7ff8da10fb34,38078640,0,0x0,8
tick,0x7ff8da10fb34,38094442,0,0x0,8
tick,0x7ff8da10fb34,38110020,0,0x0,8
tick,0x7ff8da10fb34,38125352,0,0x0,8
tick,0x7ff8da10fb34,38142028,0,0x0,8
tick,0x7ff8da10fb34,38155852,0,0x0,8
tick,0x7ff8da10fb34,38170610,0,0x0,8
tick,0x7ff8da10fb34,38186651,0,0x0,8
tick,0x7ff8da10fb34,38201743,0,0x0,8
tick,0x7ff8da10fb34,38217093,0,0x0,8
tick,0x7ff8da10fb34,38232926,0,0x0,8
tick,0x7ff8da10fb34,38247994,0,0x0,8
tick,0x7ff8da10fb34,38262916,0,0x0,8
tick,0x7ff8da10fb34,38278211,0,0x0,8
tick,0x7ff8da10fb34,38294170,0,0x0,8
tick,0x7ff8da10fb34,38309958,0,0x0,8
tick,0x7ff8da10fb34,38325852,0,0x0,8
tick,0x7ff8da10fb34,38341329,0,0x0,8
tick,0x7ff8da10fb34,38357307,0,0x0,8
tick,0x7ff8da10fb34,38373396,0,0x0,8
tick,0x7ff8da10fb34,38389417,0,0x0,8
tick,0x7ff8da10fb34,38405374,0,0x0,8
tick,0x7ff8da10fb34,38421464,0,0x0,8
tick,0x7ff8da10fb34,38437440,0,0x0,8
tick,0x7ff8da10fb34,38453378,0,0x0,8
tick,0x7ff8da10fb34,38468279,0,0x0,8
tick,0x7ff8da10fb34,38483319,0,0x0,8
tick,0x7ff8da10fb34,38498969,0,0x0,8
tick,0x7ff8da10fb34,38513180,0,0x0,8
tick,0x7ff8da10fb34,38528611,0,0x0,8
tick,0x7ff8da10fb34,38543977,0,0x0,8
tick,0x7ff8da10fb34,38560106,0,0x0,8
tick,0x7ff8da10fb34,38575453,0,0x0,8
tick,0x7ff8da10fb34,38591390,0,0x0,8
tick,0x7ff8da10fb34,38608003,0,0x0,8
tick,0x7ff8da10fb34,38623514,0,0x0,8
tick,0x7ff8da10fb34,38638897,0,0x0,8
tick,0x7ff8da10fb34,38654584,0,0x0,8
tick,0x7ff8da10fb34,38669389,0,0x0,8
tick,0x7ff8da10fb34,38684797,0,0x0,8
tick,0x7ff8da10fb34,38700831,0,0x0,8
tick,0x7ff8da10fb34,38716818,0,0x0,8
tick,0x7ff8da10fb34,38732407,0,0x0,8
tick,0x7ff8da10fb34,38747586,0,0x0,8
tick,0x7ff8da10fb34,38763574,0,0x0,8
tick,0x7ff8da10fb34,38778769,0,0x0,8
tick,0x7ff8da10fb34,38794464,0,0x0,8
tick,0x7ff8da10fb34,38809919,0,0x0,8
tick,0x7ff8da10fb34,38825297,0,0x0,8
tick,0x7ff8da10fb34,38841343,0,0x0,8
tick,0x7ff8da10fb34,38857163,0,0x0,8
tick,0x7ff8da10fb34,38873195,0,0x0,8
tick,0x7ff8da10fb34,38889305,0,0x0,8
tick,0x7ff8da10fb34,38905199,0,0x0,8
tick,0x7ff8da10fb34,38922291,0,0x0,8
tick,0x7ff8da10fb34,38936291,0,0x0,8
tick,0x7ff8da10fb34,38951550,0,0x0,8
tick,0x7ff8da10fb34,38967449,0,0x0,8
tick,0x7ff8da10fb34,38984379,0,0x0,8
tick,0x7ff8da10fb34,39000581,0,0x0,8
tick,0x7ff8da10fb34,39018450,0,0x0,8
tick,0x7ff8da10fb34,39029373,0,0x0,8
tick,0x7ff8da10fb34,39045085,0,0x0,8
tick,0x7ff8da10fb34,39061213,0,0x0,8
tick,0x7ff8da10fb34,39076762,0,0x0,8
tick,0x7ff8da10fb34,39092234,0,0x0,8
tick,0x7ff8da10fb34,39107188,0,0x0,8
tick,0x7ff8da10fb34,39123299,0,0x0,8
tick,0x7ff8da10fb34,39138510,0,0x0,8
tick,0x7ff8da10fb34,39153598,0,0x0,8
tick,0x7ff8da10fb34,39168843,0,0x0,8
tick,0x7ff8da10fb34,39184395,0,0x0,8
tick,0x7ff8da10fb34,39199840,0,0x0,8
tick,0x7ff8da10fb34,39215082,0,0x0,8
tick,0x7ff8da10fb34,39229463,0,0x0,8
tick,0x7ff8da10fb34,39245573,0,0x0,8
tick,0x7ff8da10fb34,39261378,0,0x0,8
tick,0x7ff8da10fb34,39276875,0,0x0,8
tick,0x7ff8da10fb34,39292391,0,0x0,8
tick,0x7ff8da10fb34,39308614,0,0x0,8
tick,0x7ff8da10fb34,39324693,0,0x0,8
tick,0x7ff8da10fb34,39340372,0,0x0,8
tick,0x7ff8da10fb34,39356241,0,0x0,8
tick,0x7ff8da10fb34,39371715,0,0x0,8
tick,0x7ff8da10fb34,39386356,0,0x0,8
tick,0x7ff8da10fb34,39401584,0,0x0,8
tick,0x7ff8da10fb34,39419290,0,0x0,8
tick,0x7ff8da10fb34,39433718,0,0x0,8
tick,0x7ff8da10fb34,39449092,0,0x0,8
tick,0x7ff8da10fb34,39465235,0,0x0,8
tick,0x7ff8da10fb34,39480006,0,0x0,8
tick,0x7ff8da10fb34,39495209,0,0x0,8
tick,0x7ff8da10fb34,39510418,0,0x0,8
tick,0x7ff8da10fb34,39525512,0,0x0,8
tick,0x7ff8da10fb34,39541168,0,0x0,8
tick,0x7ff8da10fb34,39556285,0,0x0,8
tick,0x7ff8da10fb34,39571166,0,0x0,8
tick,0x7ff8da10fb34,39587471,0,0x0,8
tick,0x7ff8da10fb34,39602556,0,0x0,8
tick,0x7ff8da10fb34,39618740,0,0x0,8
tick,0x7ff8da10fb34,39635279,0,0x0,8
tick,0x7ff8da10fb34,39650236,0,0x0,8
tick,0x7ff8da10fb34,39665960,0,0x0,8
tick,0x7ff8da10fb34,39682005,0,0x0,8
tick,0x7ff8da10fb34,39698106,0,0x0,8
tick,0x7ff8da10fb34,39713528,0,0x0,8
tick,0x7ff8da10fb34,39729164,0,0x0,8
tick,0x7ff8da10fb34,39744336,0,0x0,8
tick,0x7ff8da10fb34,39759517,0,0x0,8
tick,0x7ff8da10fb34,39774251,0,0x0,8
tick,0x7ff8da10fb34,39790221,0,0x0,8
tick,0x7ff8da10fb34,39808798,0,0x0,8
tick,0x7ff8da10fb34,39820680,0,0x0,8
tick,0x7ff8da10fb34,39836832,0,0x0,8
tick,0x7ff8da10fb34,39851162,0,0x0,8
tick,0x7ff8da10fb34,39866220,0,0x0,8
tick,0x7ff8da10fb34,39882249,0,0x0,8
tick,0x7ff8da10fb34,39896915,0,0x0,8
tick,0x7ff8da10fb34,39912168,0,0x0,8
tick,0x7ff8da10fb34,39928147,0,0x0,8
tick,0x7ff8da10fb34,39943377,0,0x0,8
tick,0x7ff8da10fb34,39958678,0,0x0,8
tick,0x7ff8da10fb34,39974658,0,0x0,8
tick,0x7ff8da10fb34,39990232,0,0x0,8
tick,0x7ff8da10fb34,40005676,0,0x0,8
tick,0x7ff8da10fb34,40021881,0,0x0,8
tick,0x7ff8da10fb34,40037227,0,0x0,8
tick,0x7ff8da10fb34,40053080,0,0x0,8
tick,0x7ff8da10fb34,40068691,0,0x0,8
tick,0x7ff8da10fb34,40084306,0,0x0,8
tick,0x7ff8da10fb34,40100754,0,0x0,8
tick,0x7ff8da10fb34,40118970,0,0x0,8
tick,0x7ff8da10fb34,40133671,0,0x0,8
tick,0x7ff8da10fb34,40149547,0,0x0,8
tick,0x7ff8da10fb34,40162396,0,0x0,8
tick,0x7ff8da10fb34,40178511,0,0x0,8
tick,0x7ff8da10fb34,40194607,0,0x0,8
tick,0x7ff8da10fb34,40209887,0,0x0,8
tick,0x7ff8da10fb34,40226607,0,0x0,8
tick,0x7ff8da10fb34,40240679,0,0x0,8
tick,0x7ff8da10fb34,40256644,0,0x0,8
tick,0x7ff8da10fb34,40272469,0,0x0,8
tick,0x7ff8da10fb34,40288027,0,0x0,8
tick,0x7ff8da10fb34,40303643,0,0x0,8
tick,0x7ff8da10fb34,40318934,0,0x0,8
tick,0x7ff8da10fb34,40334789,0,0x0,8
tick,0x7ff8da10fb34,40350557,0,0x0,8
tick,0x7ff8da10fb34,40367075,0,0x0,8
tick,0x7ff8da10fb34,40382917,0,0x0,8
tick,0x7ff8da10fb34,40399015,0,0x0,8
tick,0x7ff8da10fb34,40418469,0,0x0,8
tick,0x7ff8da10fb34,40432604,0,0x0,8
tick,0x7ff8da10fb34,40445572,0,0x0,8
tick,0x7ff8da10fb34,40461492,0,0x0,8
tick,0x7ff8da10fb34,40477662,0,0x0,8
tick,0x7ff8da10fb34,40493455,0,0x0,8
tick,0x7ff8da10fb34,40509521,0,0x0,8
tick,0x7ff8da10fb34,40525473,0,0x0,8
tick,0x7ff8da10fb34,40540514,0,0x0,8
tick,0x7ff8da10fb34,40555960,0,0x0,8
tick,0x7ff8da10fb34,40572031,0,0x0,8
tick,0x7ff8da10fb34,40586948,0,0x0,8
tick,0x7ff8da10fb34,40601987,0,0x0,8
tick,0x7ff8da10fb34,40617634,0,0x0,8
tick,0x7ff8da10fb34,40632961,0,0x0,8
tick,0x7ff8da10fb34,40649612,0,0x0,8
tick,0x7ff8da10fb34,40665780,0,0x0,8
tick,0x7ff8da10fb34,40679037,0,0x0,8
tick,0x7ff8da10fb34,40694191,0,0x0,8
tick,0x7ff8da10fb34,40709147,0,0x0,8
tick,0x7ff8da10fb34,40724087,0,0x0,8
tick,0x7ff8da10fb34,40739695,0,0x0,8
tick,0x7ff8da10fb34,40755158,0,0x0,8
tick,0x7ff8da10fb34,40771256,0,0x0,8
tick,0x7ff8da10fb34,40787229,0,0x0,8
tick,0x7ff8da10fb34,40803297,0,0x0,8
tick,0x7ff8da10fb34,40819446,0,0x0,8
tick,0x7ff8da10fb34,40835308,0,0x0,8
tick,0x7ff8da10fb34,40851251,0,0x0,8
tick,0x7ff8da10fb34,40866938,0,0x0,8
tick,0x7ff8da10fb34,40882377,0,0x0,8
tick,0x7ff8da10fb34,40898812,0,0x0,8
tick,0x7ff8da10fb34,40917899,0,0x0,8
tick,0x7ff8da10fb34,40929686,0,0x0,8
tick,0x7ff8da10fb34,40945031,0,0x0,8
tick,0x7ff8da10fb34,40961098,0,0x0,8
tick,0x7ff8da10fb34,40977137,0,0x0,8
tick,0x7ff8da10fb34,40992356,0,0x0,8
tick,0x7ff8da10fb34,41008001,0,0x0,8
tick,0x7ff8da10fb34,41023775,0,0x0,8
tick,0x7ff8da10fb34,41040737,0,0x0,8
tick,0x7ff8da10fb34,41059233,0,0x0,8
tick,0x7ff8da10fb34,41070856,0,0x0,8
tick,0x7ff8da10fb34,41087442,0,0x0,8
tick,0x7ff8da10fb34,41101501,0,0x0,8
tick,0x7ff8da10fb34,41117413,0,0x0,8
tick,0x7ff8da10fb34,41132719,0,0x0,8
tick,0x7ff8da10fb34,41147641,0,0x0,8
tick,0x7ff8da10fb34,41162811,0,0x0,8
tick,0x7ff8da10fb34,41178996,0,0x0,8
tick,0x7ff8da10fb34,41194846,0,0x0,8
tick,0x7ff8da10fb34,41210528,0,0x0,8
tick,0x7ff8da10fb34,41226042,0,0x0,8
tick,0x7ff8da10fb34,41241395,0,0x0,8
tick,0x7ff8da10fb34,41256659,0,0x0,8
tick,0x7ff8da10fb34,41272416,0,0x0,8
tick,0x7ff8da10fb34,41287855,0,0x0,8
tick,0x7ff8da10fb34,41303340,0,0x0,8
tick,0x7ff8da10fb34,41319644,0,0x0,8
tick,0x7ff8da10fb34,41335210,0,0x0,8
tick,0x7ff8da10fb34,41351482,0,0x0,8
tick,0x7ff8da10fb34,41367136,0,0x0,8
tick,0x7ff8da10fb34,41383090,0,0x0,8
tick,0x7ff8da10fb34,41398846,0,0x0,8
tick,0x7ff8da10fb34,41413905,0,0x0,8
tick,0x7ff8da10fb34,41430494,0,0x0,8
tick,0x7ff8da10fb34,41445486,0,0x0,8
tick,0x7ff8da10fb34,41461099,0,0x0,8
tick,0x7ff8da10fb34,41476546,0,0x0,8
tick,0x7ff8da10fb34,41492742,0,0x0,8
tick,0x7ff8da10fb34,41507494,0,0x0,8
tick,0x7ff8da10fb34,41522362,0,0x0,8
tick,0x7ff8da10fb34,41538077,0,0x0,8
tick,0x7ff8da10fb34,41553491,0,0x0,8
tick,0x7ff8da10fb34,41570607,0,0x0,8
tick,0x7ff8da10fb34,41585553,0,0x0,8
tick,0x7ff8da10fb34,41599540,0,0x0,8
tick,0x7ff8da10fb34,41616055,0,0x0,8
tick,0x7ff8da10fb34,41631403,0,0x0,8
tick,0x7ff8da10fb34,41648172,0,0x0,8
tick,0x7ff8da10fb34,41662327,0,0x0,8
tick,0x7ff8da10fb34,41677753,0,0x0,8
tick,0x7ff8da10fb34,41693509,0,0x0,8
tick,0x7ff8da10fb34,41708784,0,0x0,8
tick,0x7ff8da10fb34,41724025,0,0x0,8
tick,0x7ff8da10fb34,41739062,0,0x0,8
tick,0x7ff8da10fb34,41754218,0,0x0,8
tick,0x7ff8da10fb34,41769573,0,0x0,8
tick,0x7ff8da10fb34,41784967,0,0x0,8
tick,0x7ff8da10fb34,41800422,0,0x0,8
tick,0x7ff8da10fb34,41816047,0,0x0,8
tick,0x7ff8da10fb34,41831979,0,0x0,8
tick,0x7ff8da10fb34,41847537,0,0x0,8
tick,0x7ff8da10fb34,41863497,0,0x0,8
tick,0x7ff8da10fb34,41878732,0,0x0,8
tick,0x7ff8da10fb34,41894607,0,0x0,8
tick,0x7ff8da10fb34,41909928,0,0x0,8
tick,0x7ff8da10fb34,41925234,0,0x0,8
tick,0x7ff8da10fb34,41940421,0,0x0,8
tick,0x7ff8da10fb34,41956312,0,0x0,8
tick,0x7ff8da10fb34,41972469,0,0x0,8
tick,0x7ff8da10fb34,41987435,0,0x0,8
tick,0x7ff8da10fb34,42002601,0,0x0,8
tick,0x7ff8da10fb34,42018268,0,0x0,8
tick,0x7ff8da10fb34,42033644,0,0x0,8
tick,0x7ff8da10fb34,42049379,0,0x0,8
tick,0x7ff8da10fb34,42065384,0,0x0,8
tick,0x7ff8da10fb34,42080768,0,0x0,8
tick,0x7ff8da10fb34,42097254,0,0x0,8
tick,0x7ff8da10fb34,42112601,0,0x0,8
tick,0x7ff8da10fb34,42128037,0,0x0,8
tick,0x7ff8da10fb34,42143609,0,0x0,8
tick,0x7ff8da10fb34,42158736,0,0x0,8
tick,0x7ff8da10fb34,42174671,0,0x0,8
tick,0x7ff8da10fb34,42189631,0,0x0,8
tick,0x7ff8da10fb34,42205099,0,0x0,8
tick,0x7ff8da10fb34,42220355,0,0x0,8
tick,0x7ff8da10fb34,42236958,0,0x0,8
tick,0x7ff8da10fb34,42252561,0,0x0,8
tick,0x7ff8da10fb34,42268370,0,0x0,8
tick,0x7ff8da10fb34,42283858,0,0x0,8
tick,0x7ff8da10fb34,42299168,0,0x0,8
tick,0x7ff8da10fb34,42315244,0,0x0,8
tick,0x7ff8da10fb34,42332403,0,0x0,8
tick,0x7ff8da10fb34,42344791,0,0x0,8
tick,0x7ff8da10fb34,42359916,0,0x0,8
tick,0x7ff8da10fb34,42375459,0,0x0,8
tick,0x7ff8da10fb34,42391621,0,0x0,8
tick,0x7ff8da10fb34,42406751,0,0x0,8
tick,0x7ff8da10fb34,42422625,0,0x0,8
tick,0x7ff8da10fb34,42438811,0,0x0,8
tick,0x7ff8da10fb34,42454769,0,0x0,8
tick,0x7ff8da10fb34,42470828,0,0x0,8
tick,0x7ff8da10fb34,42487161,0,0x0,8
tick,0x7ff8da10fb34,42502014,0,0x0,8
tick,0x7ff8da10fb34,42518321,0,0x0,8
tick,0x7ff8da10fb34,42532502,0,0x0,8
tick,0x7ff8da10fb34,42549228,0,0x0,8
tick,0x7ff8da10fb34,42564544,0,0x0,8
tick,0x7ff8da10fb34,42580562,0,0x0,8
tick,0x7ff8da10fb34,42594390,0,0x0,8
tick,0x7ff8da10fb34,42609480,0,0x0,8
tick,0x7ff8da10fb34,42624752,0,0x0,8
tick,0x7ff8da10fb34,42639620,0,0x0,8
tick,0x7ff8da10fb34,42654945,0,0x0,8
tick,0x7ff8da10fb34,42670280,0,0x0,8
tick,0x7ff8da10fb34,42685470,0,0x0,8
tick,0x7ff8da10fb34,42701158,0,0x0,8
tick,0x7ff8da10fb34,42716873,0,0x0,8
tick,0x7ff8da10fb34,42732650,0,0x0,8
tick,0x7ff8da10fb34,42748726,0,0x0,8
tick,0x7ff8da10fb34,42763605,0,0x0,8
tick,0x7ff8da10fb34,42780732,0,0x0,8
tick,0x7ff8da10fb34,42794112,0,0x0,8
tick,0x7ff8da10fb34,42809622,0,0x0,8
tick,0x7ff8da10fb34,42824600,0,0x0,8
tick,0x7ff8da10fb34,42840030,0,0x0,8
tick,0x7ff8da10fb34,42855582,0,0x0,8
tick,0x7ff8da10fb34,42871636,0,0x0,8
tick,0x7ff8da10fb34,42887827,0,0x0,8
tick,0x7ff8da10fb34,42902836,0,0x0,8
tick,0x7ff8da10fb34,42918248,0,0x0,8
tick,0x7ff8da10fb34,42934383,0,0x0,8
tick,0x7ff8da10fb34,42950385,0,0x0,8
tick,0x7ff8da10fb34,42965545,0,0x0,8
tick,0x7ff8da10fb34,42981493,0,0x0,8
tick,0x7ff8da10fb34,42996823,0,0x0,8
tick,0x7ff8da10fb34,43012618,0,0x0,8
tick,0x7ff8da10fb34,43027545,0,0x0,8
tick,0x7ff8da10fb34,43042388,0,0x0,8
tick,0x7ff8da10fb34,43058657,0,0x0,8
tick,0x7ff8da10fb34,43074526,0,0x0,8
tick,0x7ff8da10fb34,43089468,0,0x0,8
tick,0x7ff8da10fb34,43104941,0,0x0,8
tick,0x7ff8da10fb34,43120121,0,0x0,8
tick,0x7ff8da10fb34,43134806,0,0x0,8
tick,0x7ff8da10fb34,43150876,0,0x0,8
tick,0x7ff8da10fb34,43167689,0,0x0,8
tick,0x7ff8da10fb34,43180627,0,0x0,8
tick,0x7ff8da10fb34,43196411,0,0x0,8
tick,0x7ff8da10fb34,43211290,0,0x0,8
tick,0x7ff8da10fb34,43226756,0,0x0,8
tick,0x7ff8da10fb34,43242642,0,0x0,8
tick,0x7ff8da10fb34,43258674,0,0x0,8
tick,0x7ff8da10fb34,43274672,0,0x0,8
tick,0x7ff8da10fb34,43290677,0,0x0,8
tick,0x7ff8da10fb34,43306906,0,0x0,8
tick,0x7ff8da10fb34,43321701,0,0x0,8
tick,0x7ff8da10fb34,43336808,0,0x0,8
tick,0x7ff8da10fb34,43352754,0,0x0,8
tick,0x7ff8da10fb34,43368883,0,0x0,8
tick,0x7ff8da10fb34,43384757,0,0x0,8
tick,0x7ff8da10fb34,43400716,0,0x0,8
tick,0x7ff8da10fb34,43416809,0,0x0,8
tick,0x7ff8da10fb34,43431751,0,0x0,8
tick,0x7ff8da10fb34,43447069,0,0x0,8
tick,0x7ff8da10fb34,43462746,0,0x0,8
tick,0x7ff8da10fb34,43479073,0,0x0,8
tick,0x7ff8da10fb34,43494693,0,0x0,8
tick,0x7ff8da10fb34,43510650,0,0x0,8
tick,0x7ff8da10fb34,43526255,0,0x0,8
tick,0x7ff8da10fb34,43542135,0,0x0,8
tick,0x7ff8da10fb34,43557905,0,0x0,8
tick,0x7ff8da10fb34,43573466,0,0x0,8
tick,0x7ff8da10fb34,43589081,0,0x0,8
tick,0x7ff8da10fb34,43604593,0,0x0,8
tick,0x7ff8da10fb34,43619994,0,0x0,8
tick,0x7ff8da10fb34,43635475,0,0x0,8
tick,0x7ff8da10fb34,43650352,0,0x0,8
tick,0x7ff8da10fb34,43665604,0,0x0,8
tick,0x7ff8da10fb34,43681833,0,0x0,8
tick,0x7ff8da10fb34,43696757,0,0x0,8
tick,0x7ff8da10fb34,43712670,0,0x0,8
tick,0x7ff8da10fb34,43727496,0,0x0,8
tick,0x7ff8da10fb34,43742342,0,0x0,8
tick,0x7ff8da10fb34,43757284,0,0x0,8
tick,0x7ff8da10fb34,43772426,0,0x0,8
tick,0x7ff8da10fb34,43787494,0,0x0,8
tick,0x7ff8da10fb34,43803672,0,0x0,8
tick,0x7ff8da10fb34,43818888,0,0x0,8
tick,0x7ff8da10fb34,43833809,0,0x0,8
tick,0x7ff8da10fb34,43849624,0,0x0,8
tick,0x7ff8da10fb34,43865189,0,0x0,8
tick,0x7ff8da10fb34,43880988,0,0x0,8
tick,0x7ff8da10fb34,43896587,0,0x0,8
tick,0x7ff8da10fb34,43911729,0,0x0,8
tick,0x7ff8da10fb34,43928312,0,0x0,8
tick,0x7ff8da10fb34,43943204,0,0x0,8
tick,0x7ff8da10fb34,43958134,0,0x0,8
tick,0x7ff8da10fb34,43973528,0,0x0,8
tick,0x7ff8da10fb34,43988806,0,0x0,8
tick,0x7ff8da10fb34,44004161,0,0x0,8
tick,0x7ff8da10fb34,44019435,0,0x0,8
tick,0x7ff8da10fb34,44034614,0,0x0,8
tick,0x7ff8da10fb34,44049677,0,0x0,8
tick,0x7ff8da10fb34,44065127,0,0x0,8
tick,0x7ff8da10fb34,44081288,0,0x0,8
tick,0x7ff8da10fb34,44096804,0,0x0,8
tick,0x7ff8da10fb34,44112675,0,0x0,8
tick,0x7ff8da10fb34,44128208,0,0x0,8
tick,0x7ff8da10fb34,44143475,0,0x0,8
tick,0x7ff8da10fb34,44158518,0,0x0,8
tick,0x7ff8da10fb34,44174445,0,0x0,8
tick,0x7ff8da10fb34,44189993,0,0x0,8
tick,0x7ff8da10fb34,44205356,0,0x0,8
tick,0x7ff8da10fb34,44221513,0,0x0,8
tick,0x7ff8da10fb34,44237554,0,0x0,8
tick,0x7ff8da10fb34,44252120,0,0x0,8
tick,0x7ff8da10fb34,44267171,0,0x0,8
tick,0x7ff8da10fb34,44282877,0,0x0,8
tick,0x7ff8da10fb34,44298300,0,0x0,8
tick,0x7ff8da10fb34,44314272,0,0x0,8
tick,0x7ff8da10fb34,44331653,0,0x0,8
tick,0x7ff8da10fb34,44347389,0,0x0,8
tick,0x7ff8da10fb34,44361188,0,0x0,8
tick,0x7ff8da10fb34,44376911,0,0x0,8
tick,0x7ff8da10fb34,44392541,0,0x0,8
tick,0x7ff8da10fb34,44407732,0,0x0,8
tick,0x7ff8da10fb34,44422434,0,0x0,8
tick,0x7ff8da10fb34,44438090,0,0x0,8
tick,0x7ff8da10fb34,44453372,0,0x0,8
tick,0x7ff8da10fb34,44468545,0,0x0,8
tick,0x7ff8da10fb34,44484339,0,0x0,8
tick,0x7ff8da10fb34,44499328,0,0x0,8
tick,0x7ff8da10fb34,44515089,0,0x0,8
tick,0x7ff8da10fb34,44530951,0,0x0,8
tick,0x7ff8da10fb34,44545708,0,0x0,8
tick,0x7ff8da10fb34,44560456,0,0x0,8
tick,0x7ff8da10fb34,44576124,0,0x0,8
tick,0x7ff8da10fb34,44591348,0,0x0,8
tick,0x7ff8da10fb34,44607415,0,0x0,8
tick,0x7ff8da10fb34,44622350,0,0x0,8
tick,0x7ff8da10fb34,44638093,0,0x0,8
tick,0x7ff8da10fb34,44652509,0,0x0,8
tick,0x7ff8da10fb34,44668379,0,0x0,8
tick,0x7ff8da10fb34,44683734,0,0x0,8
tick,0x7ff8da10fb34,44699402,0,0x0,8
tick,0x7ff8da10fb34,44714830,0,0x0,8
tick,0x7ff8da10fb34,44731030,0,0x0,8
tick,0x7ff8da10fb34,44746347,0,0x0,8
tick,0x7ff8da10fb34,44761357,0,0x0,8
tick,0x7ff8da10fb34,44777763,0,0x0,8
tick,0x7ff8da10fb34,44792592,0,0x0,8
tick,0x7ff8da10fb34,44808522,0,0x0,8
tick,0x7ff8da10fb34,44824560,0,0x0,8
tick,0x7ff8da10fb34,44839729,0,0x0,8
tick,0x7ff8da10fb34,44855391,0,0x0,8
tick,0x7ff8da10fb34,44870308,0,0x0,8
tick,0x7ff8da10fb34,44886496,0,0x0,8
tick,0x7ff8da10fb34,44902520,0,0x0,8
tick,0x7ff8da10fb34,44918219,0,0x0,8
tick,0x7ff8da10fb34,44933874,0,0x0,8
tick,0x7ff8da10fb34,44949382,0,0x0,8
tick,0x7ff8da10fb34,44964779,0,0x0,8
tick,0x7ff8da10fb34,44980672,0,0x0,8
tick,0x7ff8da10fb34,44996725,0,0x0,8
tick,0x7ff8da10fb34,45012069,0,0x0,8
tick,0x7ff8da10fb34,45027248,0,0x0,8
tick,0x7ff8da10fb34,45042388,0,0x0,8
tick,0x7ff8da10fb34,45057554,0,0x0,8
tick,0x7ff8da10fb34,45073681,0,0x0,8
tick,0x7ff8da10fb34,45089480,0,0x0,8
tick,0x7ff8da10fb34,45105480,0,0x0,8
tick,0x7ff8da10fb34,45121505,0,0x0,8
tick,0x7ff8da10fb34,45137528,0,0x0,8
tick,0x7ff8da10fb34,45152902,0,0x0,8
tick,0x7ff8da10fb34,45168594,0,0x0,8
tick,0x7ff8da10fb34,45183425,0,0x0,8
tick,0x7ff8da10fb34,45198390,0,0x0,8
tick,0x7ff8da10fb34,45214139,0,0x0,8
tick,0x7ff8da10fb34,45229326,0,0x0,8
tick,0x7ff8da10fb34,45244428,0,0x0,8
tick,0x7ff8da10fb34,45260137,0,0x0,8
tick,0x7ff8da10fb34,45275487,0,0x0,8
tick,0x7ff8da10fb34,45290428,0,0x0,8
tick,0x7ff8da10fb34,45306567,0,0x0,8
tick,0x7ff8da10fb34,45322453,0,0x0,8
tick,0x7ff8da10fb34,45338574,0,0x0,8
tick,0x7ff8da10fb34,45354261,0,0x0,8
tick,0x7ff8da10fb34,45369752,0,0x0,8
tick,0x7ff8da10fb34,45384627,0,0x0,8
tick,0x7ff8da10fb34,45400376,0,0x0,8
tick,0x7ff8da10fb34,45416573,0,0x0,8
tick,0x7ff8da10fb34,45432192,0,0x0,8
tick,0x7ff8da10fb34,45448345,0,0x0,8
tick,0x7ff8da10fb34,45464025,0,0x0,8
tick,0x7ff8da10fb34,45478920,0,0x0,8
tick,0x7ff8da10fb34,45494416,0,0x0,8
tick,0x7ff8da10fb34,45509759,0,0x0,8
tick,0x7ff8da10fb34,45525516,0,0x0,8
tick,0x7ff8da10fb34,45540697,0,0x0,8
tick,0x7ff8da10fb34,45556745,0,0x0,8
tick,0x7ff8da10fb34,45572609,0,0x0,8
tick,0x7ff8da10fb34,45588429,0,0x0,8
tick,0x7ff8da10fb34,45603373,0,0x0,8
tick,0x7ff8da10fb34,45619105,0,0x0,8
tick,0x7ff8da10fb34,45633972,0,0x0,8
tick,0x7ff8da10fb34,45649591,0,0x0,8
tick,0x7ff8da10fb34,45665517,0,0x0,8
tick,0x7ff8da10fb34,45680470,0,0x0,8
tick,0x7ff8da10fb34,45695375,0,0x0,8
tick,0x7ff8da10fb34,45711999,0,0x0,8
tick,0x7ff8da10fb34,45727400,0,0x0,8
tick,0x7ff8da10fb34,45743661,0,0x0,8
tick,0x7ff8da10fb34,45759207,0,0x0,8
tick,0x7ff8da10fb34,45774583,0,0x0,8
tick,0x7ff8da10fb34,45789503,0,0x0,8
tick,0x7ff8da10fb34,45805292,0,0x0,8
tick,0x7ff8da10fb34,45821440,0,0x0,8
tick,0x7ff8da10fb34,45837800,0,0x0,8
tick,0x7ff8da10fb34,45853128,0,0x0,8
tick,0x7ff8da10fb34,45868772,0,0x0,8
tick,0x7ff8da10fb34,45884120,0,0x0,8
tick,0x7ff8da10fb34,45899378,0,0x0,8
tick,0x7ff8da10fb34,45915436,0,0x0,8
tick,0x7ff8da10fb34,45931129,0,0x0,8
tick,0x7ff8da10fb34,45947081,0,0x0,8
tick,0x7ff8da10fb34,45962499,0,0x0,8
tick,0x7ff8da10fb34,45978819,0,0x0,8
tick,0x7ff8da10fb34,45993395,0,0x0,8
tick,0x7ff8da10fb34,46008314,0,0x0,8
tick,0x7ff8da10fb34,46023571,0,0x0,8
tick,0x7ff8da10fb34,46039096,0,0x0,8
tick,0x7ff8da10fb34,46054447,0,0x0,8
tick,0x7ff8da10fb34,46069650,0,0x0,8
tick,0x7ff8da10fb34,46084910,0,0x0,8
tick,0x7ff8da10fb34,46100211,0,0x0,8
tick,0x7ff8da10fb34,46116525,0,0x0,8
tick,0x7ff8da10fb34,46131991,0,0x0,8
tick,0x7ff8da10fb34,46147648,0,0x0,8
tick,0x7ff8da10fb34,46163542,0,0x0,8
tick,0x7ff8da10fb34,46178670,0,0x0,8
tick,0x7ff8da10fb34,46194592,0,0x0,8
tick,0x7ff8da10fb34,46209347,0,0x0,8
tick,0x7ff8da10fb34,46224599,0,0x0,8
tick,0x7ff8da10fb34,46239625,0,0x0,8
tick,0x7ff8da10fb34,46255108,0,0x0,8
tick,0x7ff8da10fb34,46270438,0,0x0,8
tick,0x7ff8da10fb34,46286651,0,0x0,8
tick,0x7ff8da10fb34,46301363,0,0x0,8
tick,0x7ff8da10fb34,46317768,0,0x0,8
tick,0x7ff8da10fb34,46333201,0,0x0,8
tick,0x7ff8da10fb34,46348569,0,0x0,8
tick,0x7ff8da10fb34,46364532,0,0x0,8
tick,0x7ff8da10fb34,46379911,0,0x0,8
tick,0x7ff8da10fb34,46395504,0,0x0,8
tick,0x7ff8da10fb34,46410507,0,0x0,8
tick,0x7ff8da10fb34,46426957,0,0x0,8
tick,0x7ff8da10fb34,46442642,0,0x0,8
tick,0x7ff8da10fb34,46458160,0,0x0,8
tick,0x7ff8da10fb34,46474230,0,0x0,8
tick,0x7ff8da10fb34,46489752,0,0x0,8
tick,0x7ff8da10fb34,46505319,0,0x0,8
tick,0x7ff8da10fb34,46521375,0,0x0,8
tick,0x7ff8da10fb34,46537152,0,0x0,8
tick,0x7ff8da10fb34,46552156,0,0x0,8
tick,0x7ff8da10fb34,46567358,0,0x0,8
tick,0x7ff8da10fb34,46583038,0,0x0,8
tick,0x7ff8da10fb34,46598433,0,0x0,8
tick,0x7ff8da10fb34,46614271,0,0x0,8
tick,0x7ff8da10fb34,46629299,0,0x0,8
tick,0x7ff8da10fb34,46644797,0,0x0,8
tick,0x7ff8da10fb34,46659772,0,0x0,8
tick,0x7ff8da10fb34,46675399,0,0x0,8
tick,0x7ff8da10fb34,46691361,0,0x0,8
tick,0x7ff8da10fb34,46707376,0,0x0,8
tick,0x7ff8da10fb34,46722380,0,0x0,8
tick,0x7ff8da10fb34,46737918,0,0x0,8
tick,0x7ff8da10fb34,46753540,0,0x0,8
tick,0x7ff8da10fb34,46769472,0,0x0,8
tick,0x7ff8da10fb34,46784610,0,0x0,8
tick,0x7ff8da10fb34,46799812,0,0x0,8
tick,0x7ff8da10fb34,46815021,0,0x0,8
tick,0x7ff8da10fb34,46830662,0,0x0,8
tick,0x7ff8da10fb34,46846789,0,0x0,8
tick,0x7ff8da10fb34,46861896,0,0x0,8
tick,0x7ff8da10fb34,46877339,0,0x0,8
tick,0x7ff8da10fb34,46892340,0,0x0,8
tick,0x7ff8da10fb34,46907579,0,0x0,8
tick,0x7ff8da10fb34,46923599,0,0x0,8
tick,0x7ff8da10fb34,46938270,0,0x0,8
tick,0x7ff8da10fb34,46953752,0,0x0,8
tick,0x7ff8da10fb34,46969198,0,0x0,8
tick,0x7ff8da10fb34,46984737,0,0x0,8
tick,0x7ff8da10fb34,46999442,0,0x0,8
tick,0x7ff8da10fb34,47015108,0,0x0,8
tick,0x7ff8da10fb34,47030435,0,0x0,8
tick,0x7ff8da10fb34,47046118,0,0x0,8
tick,0x7ff8da10fb34,47061324,0,0x0,8
tick,0x7ff8da10fb34,47076813,0,0x0,8
tick,0x7ff8da10fb34,47092740,0,0x0,8
tick,0x7ff8da10fb34,47108383,0,0x0,8
tick,0x7ff8da10fb34,47124442,0,0x0,8
tick,0x7ff8da10fb34,47139800,0,0x0,8
tick,0x7ff8da10fb34,47155508,0,0x0,8
tick,0x7ff8da10fb34,47170280,0,0x0,8
tick,0x7ff8da10fb34,47186324,0,0x0,8
tick,0x7ff8da10fb34,47201922,0,0x0,8
tick,0x7ff8da10fb34,47217364,0,0x0,8
tick,0x7ff8da10fb34,47232983,0,0x0,8
tick,0x7ff8da10fb34,47249087,0,0x0,8
tick,0x7ff8da10fb34,47264983,0,0x0,8
tick,0x7ff8da10fb34,47280591,0,0x0,8
tick,0x7ff8da10fb34,47296525,0,0x0,8
tick,0x7ff8da10fb34,47311574,0,0x0,8
tick,0x7ff8da10fb34,47330860,0,0x0,8
tick,0x7ff8da10fb34,47342666,0,0x0,8
tick,0x7ff8da10fb34,47358143,0,0x0,8
tick,0x7ff8da10fb34,47374317,0,0x0,8
tick,0x7ff8da10fb34,47389480,0,0x0,8
tick,0x7ff8da10fb34,47405600,0,0x0,8
tick,0x7ff8da10fb34,47421528,0,0x0,8
tick,0x7ff8da10fb34,47437366,0,0x0,8
tick,0x7ff8da10fb34,47453306,0,0x0,8
tick,0x7ff8da10fb34,47468875,0,0x0,8
tick,0x7ff8da10fb34,47484556,0,0x0,8
tick,0x7ff8da10fb34,47499709,0,0x0,8
tick,0x7ff8da10fb34,47515233,0,0x0,8
tick,0x7ff8da10fb34,47531027,0,0x0,8
tick,0x7ff8da10fb34,47546524,0,0x0,8
tick,0x7ff8da10fb34,47561490,0,0x0,8
tick,0x7ff8da10fb34,47577534,0,0x0,8
tick,0x7ff8da10fb34,47592368,0,0x0,8
tick,0x7ff8da10fb34,47607663,0,0x0,8
tick,0x7ff8da10fb34,47622775,0,0x0,8
tick,0x7ff8da10fb34,47638748,0,0x0,8
tick,0x7ff8da10fb34,47653382,0,0x0,8
tick,0x7ff8da10fb34,47669078,0,0x0,8
tick,0x7ff8da10fb34,47684699,0,0x0,8
tick,0x7ff8da10fb34,47699364,0,0x0,8
tick,0x7ff8da10fb34,47714666,0,0x0,8
tick,0x7ff8da10fb34,47730291,0,0x0,8
tick,0x7ff8da10fb34,47746365,0,0x0,8
tick,0x7ff8da10fb34,47761542,0,0x0,8
tick,0x7ff8da10fb34,47776511,0,0x0,8
tick,0x7ff8da10fb34,47791381,0,0x0,8
tick,0x7ff8da10fb34,47807562,0,0x0,8
tick,0x7ff8da10fb34,47822547,0,0x0,8
tick,0x7ff8da10fb34,47838172,0,0x0,8
tick,0x7ff8da10fb34,47853641,0,0x0,8
tick,0x7ff8da10fb34,47868816,0,0x0,8
tick,0x7ff8da10fb34,47883894,0,0x0,8
tick,0x7ff8da10fb34,47899335,0,0x0,8
tick,0x7ff8da10fb34,47914681,0,0x0,8
tick,0x7ff8da10fb34,47929933,0,0x0,8
tick,0x7ff8da10fb34,47946207,0,0x0,8
tick,0x7ff8da10fb34,47961436,0,0x0,8
tick,0x7ff8da10fb34,47977715,0,0x0,8
tick,0x7ff8da10fb34,47992577,0,0x0,8
tick,0x7ff8da10fb34,48008325,0,0x0,8
tick,0x7ff8da10fb34,48023760,0,0x0,8
tick,0x7ff8da10fb34,48039784,0,0x0,8
tick,0x7ff8da10fb34,48055271,0,0x0,8
tick,0x7ff8da10fb34,48070663,0,0x0,8
tick,0x7ff8da10fb34,48086564,0,0x0,8
tick,0x7ff8da10fb34,48101343,0,0x0,8
tick,0x7ff8da10fb34,48117267,0,0x0,8
tick,0x7ff8da10fb34,48133226,0,0x0,8
tick,0x7ff8da10fb34,48149178,0,0x0,8
tick,0x7ff8da10fb34,48165414,0,0x0,8
tick,0x7ff8da10fb34,48181634,0,0x0,8
tick,0x7ff8da10fb34,48196885,0,0x0,8
tick,0x7ff8da10fb34,48212872,0,0x0,8
tick,0x7ff8da10fb34,48228213,0,0x0,8
tick,0x7ff8da10fb34,48243724,0,0x0,8
tick,0x7ff8da10fb34,48259635,0,0x0,8
tick,0x7ff8da10fb34,48275685,0,0x0,8
tick,0x7ff8da10fb34,48290474,0,0x0,8
tick,0x7ff8da10fb34,48305586,0,0x0,8
tick,0x7ff8da10fb34,48321500,0,0x0,8
tick,0x7ff8da10fb34,48337626,0,0x0,8
tick,0x7ff8da10fb34,48352442,0,0x0,8
tick,0x7ff8da10fb34,48367482,0,0x0,8
tick,0x7ff8da10fb34,48383533,0,0x0,8
tick,0x7ff8da10fb34,48399465,0,0x0,8
tick,0x7ff8da10fb34,48414410,0,0x0,8
tick,0x7ff8da10fb34,48429522,0,0x0,8
tick,0x7ff8da10fb34,48444801,0,0x0,8
tick,0x7ff8da10fb34,48459457,0,0x0,8
tick,0x7ff8da10fb34,48475462,0,0x0,8
tick,0x7ff8da10fb34,48491586,0,0x0,8
tick,0x7ff8da10fb34,48507493,0,0x0,8
tick,0x7ff8da10fb34,48523616,0,0x0,8
tick,0x7ff8da10fb34,48538802,0,0x0,8
tick,0x7ff8da10fb34,48554607,0,0x0,8
tick,0x7ff8da10fb34,48569961,0,0x0,8
tick,0x7ff8da10fb34,48584922,0,0x0,8
tick,0x7ff8da10fb34,48599954,0,0x0,8
tick,0x7ff8da10fb34,48615213,0,0x0,8
tick,0x7ff8da10fb34,48630897,0,0x0,8
tick,0x7ff8da10fb34,48647272,0,0x0,8
tick,0x7ff8da10fb34,48663172,0,0x0,8
tick,0x7ff8da10fb34,48678636,0,0x0,8
tick,0x7ff8da10fb34,48694044,0,0x0,8
tick,0x7ff8da10fb34,48708758,0,0x0,8
tick,0x7ff8da10fb34,48723594,0,0x0,8
tick,0x7ff8da10fb34,48738741,0,0x0,8
tick,0x7ff8da10fb34,48754437,0,0x0,8
tick,0x7ff8da10fb34,48769710,0,0x0,8
tick,0x7ff8da10fb34,48786190,0,0x0,8
tick,0x7ff8da10fb34,48800621,0,0x0,8
tick,0x7ff8da10fb34,48815287,0,0x0,8
tick,0x7ff8da10fb34,48830468,0,0x0,8
tick,0x7ff8da10fb34,48846460,0,0x0,8
tick,0x7ff8da10fb34,48862205,0,0x0,8
tick,0x7ff8da10fb34,48877823,0,0x0,8
tick,0x7ff8da10fb34,48892698,0,0x0,8
tick,0x7ff8da10fb34,48907560,0,0x0,8
tick,0x7ff8da10fb34,48922352,0,0x0,8
tick,0x7ff8da10fb34,48963234,0,0x0,8
tick,0x7ff8da10fb34,48963348,0,0x0,8
tick,0x7ff8da10fb34,48970233,0,0x0,8
tick,0x7ff8da10fb34,48986394,0,0x0,8
tick,0x7ff8da10fb34,49002352,0,0x0,8
tick,0x7ff8da10fb34,49018369,0,0x0,8
tick,0x7ff8da10fb34,49034354,0,0x0,8
tick,0x7ff8da10fb34,49049776,0,0x0,8
tick,0x7ff8da10fb34,49065292,0,0x0,8
tick,0x7ff8da10fb34,49080511,0,0x0,8
tick,0x7ff8da10fb34,49096719,0,0x0,8
tick,0x7ff8da10fb34,49112714,0,0x0,8
tick,0x7ff8da10fb34,49128156,0,0x0,8
tick,0x7ff8da10fb34,49144838,0,0x0,8
tick,0x7ff8da10fb34,49159197,0,0x0,8
tick,0x7ff8da10fb34,49174338,0,0x0,8
tick,0x7ff8da10fb34,49189223,0,0x0,8
tick,0x7ff8da10fb34,49204245,0,0x0,8
tick,0x7ff8da10fb34,49220393,0,0x0,8
tick,0x7ff8da10fb34,49235500,0,0x0,8
tick,0x7ff8da10fb34,49251329,0,0x0,8
tick,0x7ff8da10fb34,49267222,0,0x0,8
tick,0x7ff8da10fb34,49282303,0,0x0,8
tick,0x7ff8da10fb34,49297584,0,0x0,8
tick,0x7ff8da10fb34,49313589,0,0x0,8
tick,0x7ff8da10fb34,49330100,0,0x0,8
tick,0x7ff8da10fb34,49346570,0,0x0,8
tick,0x7ff8da10fb34,49361571,0,0x0,8
tick,0x7ff8da10fb34,49377671,0,0x0,8
tick,0x7ff8da10fb34,49393759,0,0x0,8
tick,0x7ff8da10fb34,49408294,0,0x0,8
tick,0x7ff8da10fb34,49423459,0,0x0,8
tick,0x7ff8da10fb34,49438745,0,0x0,8
tick,0x7ff8da10fb34,49454607,0,0x0,8
tick,0x7ff8da10fb34,49469378,0,0x0,8
tick,0x7ff8da10fb34,49484434,0,0x0,8
tick,0x7ff8da10fb34,49500018,0,0x0,8
tick,0x7ff8da10fb34,49514963,0,0x0,8
tick,0x7ff8da10fb34,49530861,0,0x0,8
tick,0x7ff8da10fb34,49546118,0,0x0,8
tick,0x7ff8da10fb34,49562244,0,0x0,8
tick,0x7ff8da10fb34,49577447,0,0x0,8
tick,0x7ff8da10fb34,49592401,0,0x0,8
tick,0x7ff8da10fb34,49607675,0,0x0,8
tick,0x7ff8da10fb34,49623507,0,0x0,8
tick,0x7ff8da10fb34,49638495,0,0x0,8
tick,0x7ff8da10fb34,49654635,0,0x0,8
tick,0x7ff8da10fb34,49669092,0,0x0,8
tick,0x7ff8da10fb34,49684577,0,0x0,8
tick,0x7ff8da10fb34,49699580,0,0x0,8
tick,0x7ff8da10fb34,49715153,0,0x0,8
tick,0x7ff8da10fb34,49730268,0,0x0,8
tick,0x7ff8da10fb34,49746335,0,0x0,8
tick,0x7ff8da10fb34,49761888,0,0x0,8
tick,0x7ff8da10fb34,49777500,0,0x0,8
tick,0x7ff8da10fb34,49792312,0,0x0,8
tick,0x7ff8da10fb34,49808613,0,0x0,8
tick,0x7ff8da10fb34,49823022,0,0x0,8
tick,0x7ff8da10fb34,49838369,0,0x0,8
tick,0x7ff8da10fb34,49854317,0,0x0,8
tick,0x7ff8da10fb34,49869590,0,0x0,8
tick,0x7ff8da10fb34,49884756,0,0x0,8
tick,0x7ff8da10fb34,49900463,0,0x0,8
tick,0x7ff8da10fb34,49915377,0,0x0,8
tick,0x7ff8da10fb34,49930331,0,0x0,8
tick,0x7ff8da10fb34,49945988,0,0x0,8
tick,0x7ff8da10fb34,49961341,0,0x0,8
tick,0x7ff8da10fb34,49977631,0,0x0,8
tick,0x7ff8da10fb34,49993437,0,0x0,8
tick,0x7ff8da10fb34,50008822,0,0x0,8
tick,0x7ff8da10fb34,50024477,0,0x0,8
tick,0x7ff8da10fb34,50039972,0,0x0,8
tick,0x7ff8da10fb34,50055297,0,0x0,8
tick,0x7ff8da10fb34,50070907,0,0x0,8
tick,0x7ff8da10fb34,50086407,0,0x0,8
tick,0x7ff8da10fb34,50101241,0,0x0,8
tick,0x7ff8da10fb34,50116475,0,0x0,8
tick,0x7ff8da10fb34,50131633,0,0x0,8
tick,0x7ff8da10fb34,50147053,0,0x0,8
tick,0x7ff8da10fb34,50162457,0,0x0,8
tick,0x7ff8da10fb34,50178305,0,0x0,8
tick,0x7ff8da10fb34,50193420,0,0x0,8
tick,0x7ff8da10fb34,50207122,0,0x0,8
tick,0x7ff8da10fb34,50222276,0,0x0,8
tick,0x7ff8da10fb34,50237682,0,0x0,8
tick,0x7ff8da10fb34,50253292,0,0x0,8
tick,0x7ff8da10fb34,50269123,0,0x0,8
tick,0x7ff8da10fb34,50285203,0,0x0,8
tick,0x7ff8da10fb34,50300785,0,0x0,8
tick,0x7ff8da10fb34,50317599,0,0x0,8
tick,0x7ff8da10fb34,50332263,0,0x0,8
tick,0x7ff8da10fb34,50347249,0,0x0,8
tick,0x7ff8da10fb34,50362754,0,0x0,8
tick,0x7ff8da10fb34,50378570,0,0x0,8
tick,0x7ff8da10fb34,50393240,0,0x0,8
tick,0x7ff8da10fb34,50408682,0,0x0,8
tick,0x7ff8da10fb34,50424645,0,0x0,8
tick,0x7ff8da10fb34,50439850,0,0x0,8
tick,0x7ff8da10fb34,50455296,0,0x0,8
tick,0x7ff8da10fb34,50470757,0,0x0,8
tick,0x7ff8da10fb34,50486612,0,0x0,8
tick,0x7ff8da10fb34,50502345,0,0x0,8
tick,0x7ff8da10fb34,50517226,0,0x0,8
tick,0x7ff8da10fb34,50532078,0,0x0,8
tick,0x7ff8da10fb34,50547413,0,0x0,8
tick,0x7ff8da10fb34,50563420,0,0x0,8
tick,0x7ff8da10fb34,50578997,0,0x0,8
tick,0x7ff8da10fb34,50594962,0,0x0,8
tick,0x7ff8da10fb34,50609811,0,0x0,8
tick,0x7ff8da10fb34,50625191,0,0x0,8
tick,0x7ff8da10fb34,50640503,0,0x0,8
tick,0x7ff8da10fb34,50656684,0,0x0,8
tick,0x7ff8da10fb34,50671349,0,0x0,8
tick,0x7ff8da10fb34,50686436,0,0x0,8
tick,0x7ff8da10fb34,50701234,0,0x0,8
tick,0x7ff8da10fb34,50717566,0,0x0,8
tick,0x7ff8da10fb34,50732537,0,0x0,8
tick,0x7ff8da10fb34,50748191,0,0x0,8
tick,0x7ff8da10fb34,50763258,0,0x0,8
tick,0x7ff8da10fb34,50779070,0,0x0,8
tick,0x7ff8da10fb34,50794590,0,0x0,8
tick,0x7ff8da10fb34,50811266,0,0x0,8
tick,0x7ff8da10fb34,50827377,0,0x0,8
tick,0x7ff8da10fb34,50842576,0,0x0,8
tick,0x7ff8da10fb34,50858108,0,0x0,8
tick,0x7ff8da10fb34,50873516,0,0x0,8
tick,0x7ff8da10fb34,50888495,0,0x0,8
tick,0x7ff8da10fb34,50904438,0,0x0,8
tick,0x7ff8da10fb34,50919144,0,0x0,8
tick,0x7ff8da10fb34,50934334,0,0x0,8
tick,0x7ff8da10fb34,50949646,0,0x0,8
tick,0x7ff8da10fb34,50965194,0,0x0,8
tick,0x7ff8da10fb34,50980923,0,0x0,8
tick,0x7ff8da10fb34,50996565,0,0x0,8
tick,0x7ff8da10fb34,51012181,0,0x0,8
tick,0x7ff8da10fb34,51028026,0,0x0,8
tick,0x7ff8da10fb34,51043655,0,0x0,8
tick,0x7ff8da10fb34,51058898,0,0x0,8
tick,0x7ff8da10fb34,51074372,0,0x0,8
tick,0x7ff8da10fb34,51089634,0,0x0,8
tick,0x7ff8da10fb34,51104333,0,0x0,8
tick,0x7ff8da10fb34,51119365,0,0x0,8
tick,0x7ff8da10fb34,51134954,0,0x0,8
tick,0x7ff8da10fb34,51150274,0,0x0,8
tick,0x7ff8da10fb34,51166295,0,0x0,8
tick,0x7ff8da10fb34,51181829,0,0x0,8
tick,0x7ff8da10fb34,51197296,0,0x0,8
tick,0x7ff8da10fb34,51213088,0,0x0,8
tick,0x7ff8da10fb34,51228919,0,0x0,8
tick,0x7ff8da10fb34,51244660,0,0x0,8
tick,0x7ff8da10fb34,51260226,0,0x0,8
tick,0x7ff8da10fb34,51275269,0,0x0,8
tick,0x7ff8da10fb34,51290816,0,0x0,8
tick,0x7ff8da10fb34,51306434,0,0x0,8
tick,0x7ff8da10fb34,51322366,0,0x0,8
tick,0x7ff8da10fb34,51338004,0,0x0,8
tick,0x7ff8da10fb34,51352961,0,0x0,8
tick,0x7ff8da10fb34,51368166,0,0x0,8
tick,0x7ff8da10fb34,51384259,0,0x0,8
tick,0x7ff8da10fb34,51400172,0,0x0,8
tick,0x7ff8da10fb34,51416164,0,0x0,8
tick,0x7ff8da10fb34,51431711,0,0x0,8
tick,0x7ff8da10fb34,51447544,0,0x0,8
tick,0x7ff8da10fb34,51463063,0,0x0,8
tick,0x7ff8da10fb34,51478641,0,0x0,8
tick,0x7ff8da10fb34,51494716,0,0x0,8
tick,0x7ff8da10fb34,51509926,0,0x0,8
tick,0x7ff8da10fb34,51525252,0,0x0,8
tick,0x7ff8da10fb34,51540345,0,0x0,8
tick,0x7ff8da10fb34,51555423,0,0x0,8
tick,0x7ff8da10fb34,51571347,0,0x0,8
tick,0x7ff8da10fb34,51586461,0,0x0,8
tick,0x7ff8da10fb34,51601379,0,0x0,8
tick,0x7ff8da10fb34,51616318,0,0x0,8
tick,0x7ff8da10fb34,51631305,0,0x0,8
tick,0x7ff8da10fb34,51647356,0,0x0,8
tick,0x7ff8da10fb34,51663530,0,0x0,8
tick,0x7ff8da10fb34,51678439,0,0x0,8
tick,0x7ff8da10fb34,51694669,0,0x0,8
tick,0x7ff8da10fb34,51710050,0,0x0,8
tick,0x7ff8da10fb34,51725911,0,0x0,8
tick,0x7ff8da10fb34,51740809,0,0x0,8
tick,0x7ff8da10fb34,51756335,0,0x0,8
tick,0x7ff8da10fb34,51772437,0,0x0,8
tick,0x7ff8da10fb34,51787798,0,0x0,8
tick,0x7ff8da10fb34,51803420,0,0x0,8
tick,0x7ff8da10fb34,51818246,0,0x0,8
tick,0x7ff8da10fb34,51833140,0,0x0,8
tick,0x7ff8da10fb34,51848851,0,0x0,8
tick,0x7ff8da10fb34,51864031,0,0x0,8
tick,0x7ff8da10fb34,51879812,0,0x0,8
tick,0x7ff8da10fb34,51895139,0,0x0,8
tick,0x7ff8da10fb34,51911195,0,0x0,8
tick,0x7ff8da10fb34,51926598,0,0x0,8
tick,0x7ff8da10fb34,51941277,0,0x0,8
tick,0x7ff8da10fb34,51956487,0,0x0,8
tick,0x7ff8da10fb34,51972484,0,0x0,8
tick,0x7ff8da10fb34,51988311,0,0x0,8
tick,0x7ff8da10fb34,52003376,0,0x0,8
tick,0x7ff8da10fb34,52019433,0,0x0,8
tick,0x7ff8da10fb34,52034839,0,0x0,8
tick,0x7ff8da10fb34,52050104,0,0x0,8
tick,0x7ff8da10fb34,52065389,0,0x0,8
tick,0x7ff8da10fb34,52081163,0,0x0,8
tick,0x7ff8da10fb34,52097167,0,0x0,8
tick,0x7ff8da10fb34,52112705,0,0x0,8
tick,0x7ff8da10fb34,52128393,0,0x0,8
tick,0x7ff8da10fb34,52144341,0,0x0,8
tick,0x7ff8da10fb34,52160429,0,0x0,8
tick,0x7ff8da10fb34,52175787,0,0x0,8
tick,0x7ff8da10fb34,52191436,0,0x0,8
tick,0x7ff8da10fb34,52206761,0,0x0,8
tick,0x7ff8da10fb34,52222473,0,0x0,8
tick,0x7ff8da10fb34,52237664,0,0x0,8
tick,0x7ff8da10fb34,52252359,0,0x0,8
tick,0x7ff8da10fb34,52267830,0,0x0,8
tick,0x7ff8da10fb34,52283283,0,0x0,8
tick,0x7ff8da10fb34,52298458,0,0x0,8
tick,0x7ff8da10fb34,52313847,0,0x0,8
tick,0x7ff8da10fb34,52329997,0,0x0,8
tick,0x7ff8da10fb34,52346360,0,0x0,8
tick,0x7ff8da10fb34,52362048,0,0x0,8
tick,0x7ff8da10fb34,52378303,0,0x0,8
tick,0x7ff8da10fb34,52392928,0,0x0,8
tick,0x7ff8da10fb34,52408134,0,0x0,8
tick,0x7ff8da10fb34,52423502,0,0x0,8
tick,0x7ff8da10fb34,52438605,0,0x0,8
tick,0x7ff8da10fb34,52454427,0,0x0,8
tick,0x7ff8da10fb34,52470537,0,0x0,8
tick,0x7ff8da10fb34,52485468,0,0x0,8
tick,0x7ff8da10fb34,52500698,0,0x0,8
tick,0x7ff8da10fb34,52516496,0,0x0,8
tick,0x7ff8da10fb34,52531423,0,0x0,8
tick,0x7ff8da10fb34,52547204,0,0x0,8
tick,0x7ff8da10fb34,52562563,0,0x0,8
tick,0x7ff8da10fb34,52578578,0,0x0,8
tick,0x7ff8da10fb34,52594342,0,0x0,8
tick,0x7ff8da10fb34,52609610,0,0x0,8
tick,0x7ff8da10fb34,52624354,0,0x0,8
tick,0x7ff8da10fb34,52639342,0,0x0,8
tick,0x7ff8da10fb34,52655313,0,0x0,8
tick,0x7ff8da10fb34,52670380,0,0x0,8
tick,0x7ff8da10fb34,52685540,0,0x0,8
tick,0x7ff8da10fb34,52700320,0,0x0,8
tick,0x7ff8da10fb34,52716570,0,0x0,8
tick,0x7ff8da10fb34,52730992,0,0x0,8
tick,0x7ff8da10fb34,52746753,0,0x0,8
tick,0x7ff8da10fb34,52762406,0,0x0,8
tick,0x7ff8da10fb34,52778384,0,0x0,8
tick,0x7ff8da10fb34,52794212,0,0x0,8
tick,0x7ff8da10fb34,52809249,0,0x0,8
tick,0x7ff8da10fb34,52825566,0,0x0,8
tick,0x7ff8da10fb34,52840367,0,0x0,8
tick,0x7ff8da10fb34,52856406,0,0x0,8
tick,0x7ff8da10fb34,52871614,0,0x0,8
tick,0x7ff8da10fb34,52886736,0,0x0,8
tick,0x7ff8da10fb34,52902346,0,0x0,8
tick,0x7ff8da10fb34,52917529,0,0x0,8
tick,0x7ff8da10fb34,52932327,0,0x0,8
tick,0x7ff8da10fb34,52947344,0,0x0,8
tick,0x7ff8da10fb34,52963016,0,0x0,8
tick,0x7ff8da10fb34,52978559,0,0x0,8
tick,0x7ff8da10fb34,52994263,0,0x0,8
tick,0x7ff8da10fb34,53008835,0,0x0,8
tick,0x7ff8da10fb34,53024192,0,0x0,8
tick,0x7ff8da10fb34,53039412,0,0x0,8
tick,0x7ff8da10fb34,53055308,0,0x0,8
tick,0x7ff8da10fb34,53069849,0,0x0,8
tick,0x7ff8da10fb34,53085575,0,0x0,8
tick,0x7ff8da10fb34,53100613,0,0x0,8
tick,0x7ff8da10fb34,53116269,0,0x0,8
tick,0x7ff8da10fb34,53131835,0,0x0,8
tick,0x7ff8da10fb34,53147563,0,0x0,8
tick,0x7ff8da10fb34,53163950,0,0x0,8
tick,0x7ff8da10fb34,53180967,0,0x0,8
tick,0x7ff8da10fb34,53195341,0,0x0,8
tick,0x7ff8da10fb34,53210642,0,0x0,8
tick,0x7ff8da10fb34,53226562,0,0x0,8
tick,0x7ff8da10fb34,53242215,0,0x0,8
tick,0x7ff8da10fb34,53256880,0,0x0,8
tick,0x7ff8da10fb34,53271909,0,0x0,8
tick,0x7ff8da10fb34,53287975,0,0x0,8
tick,0x7ff8da10fb34,53303676,0,0x0,8
tick,0x7ff8da10fb34,53319539,0,0x0,8
tick,0x7ff8da10fb34,53335651,0,0x0,8
tick,0x7ff8da10fb34,53350510,0,0x0,8
tick,0x7ff8da10fb34,53365585,0,0x0,8
tick,0x7ff8da10fb34,53381503,0,0x0,8
tick,0x7ff8da10fb34,53397550,0,0x0,8
tick,0x7ff8da10fb34,53412480,0,0x0,8
tick,0x7ff8da10fb34,53427450,0,0x0,8
tick,0x7ff8da10fb34,53443412,0,0x0,8
tick,0x7ff8da10fb34,53459474,0,0x0,8
tick,0x7ff8da10fb34,53475902,0,0x0,8
tick,0x7ff8da10fb34,53491553,0,0x0,8
tick,0x7ff8da10fb34,53507385,0,0x0,8
tick,0x7ff8da10fb34,53523790,0,0x0,8
tick,0x7ff8da10fb34,53538847,0,0x0,8
tick,0x7ff8da10fb34,53554547,0,0x0,8
tick,0x7ff8da10fb34,53569643,0,0x0,8
tick,0x7ff8da10fb34,53585623,0,0x0,8
tick,0x7ff8da10fb34,53600397,0,0x0,8
tick,0x7ff8da10fb34,53616288,0,0x0,8
tick,0x7ff8da10fb34,53631659,0,0x0,8
tick,0x7ff8da10fb34,53647793,0,0x0,8
tick,0x7ff8da10fb34,53662578,0,0x0,8
tick,0x7ff8da10fb34,53678717,0,0x0,8
tick,0x7ff8da10fb34,53693999,0,0x0,8
tick,0x7ff8da10fb34,53709236,0,0x0,8
tick,0x7ff8da10fb34,53724393,0,0x0,8
tick,0x7ff8da10fb34,53739604,0,0x0,8
tick,0x7ff8da10fb34,53755303,0,0x0,8
tick,0x7ff8da10fb34,53770426,0,0x0,8
tick,0x7ff8da10fb34,53785320,0,0x0,8
tick,0x7ff8da10fb34,53801417,0,0x0,8
tick,0x7ff8da10fb34,53817468,0,0x0,8
tick,0x7ff8da10fb34,53832240,0,0x0,8
tick,0x7ff8da10fb34,53847420,0,0x0,8
tick,0x7ff8da10fb34,53862464,0,0x0,8
tick,0x7ff8da10fb34,53878314,0,0x0,8
tick,0x7ff8da10fb34,53893870,0,0x0,8
tick,0x7ff8da10fb34,53909072,0,0x0,8
tick,0x7ff8da10fb34,53923855,0,0x0,8
tick,0x7ff8da10fb34,53938287,0,0x0,8
tick,0x7ff8da10fb34,53954397,0,0x0,8
tick,0x7ff8da10fb34,53969749,0,0x0,8
tick,0x7ff8da10fb34,53985792,0,0x0,8
tick,0x7ff8da10fb34,54000239,0,0x0,8
tick,0x7ff8da10fb34,54014895,0,0x0,8
tick,0x7ff8da10fb34,54030350,0,0x0,8
tick,0x7ff8da10fb34,54046277,0,0x0,8
tick,0x7ff8da10fb34,54061880,0,0x0,8
tick,0x7ff8da10fb34,54077413,0,0x0,8
tick,0x7ff8da10fb34,54092308,0,0x0,8
tick,0x7ff8da10fb34,54107471,0,0x0,8
tick,0x7ff8da10fb34,54123383,0,0x0,8
tick,0x7ff8da10fb34,54138504,0,0x0,8
tick,0x7ff8da10fb34,54154430,0,0x0,8
tick,0x7ff8da10fb34,54170235,0,0x0,8
tick,0x7ff8da10fb34,54185242,0,0x0,8
tick,0x7ff8da10fb34,54201365,0,0x0,8
tick,0x7ff8da10fb34,54216524,0,0x0,8
tick,0x7ff8da10fb34,54231317,0,0x0,8
tick,0x7ff8da10fb34,54247573,0,0x0,8
tick,0x7ff8da10fb34,54262307,0,0x0,8
tick,0x7ff8da10fb34,54277529,0,0x0,8
tick,0x7ff8da10fb34,54293486,0,0x0,8
tick,0x7ff8da10fb34,54308769,0,0x0,8
tick,0x7ff8da10fb34,54325699,0,0x0,8
tick,0x7ff8da10fb34,54340649,0,0x0,8
tick,0x7ff8da10fb34,54356256,0,0x0,8
tick,0x7ff8da10fb34,54371697,0,0x0,8
tick,0x7ff8da10fb34,54386665,0,0x0,8
tick,0x7ff8da10fb34,54401440,0,0x0,8
tick,0x7ff8da10fb34,54416923,0,0x0,8
tick,0x7ff8da10fb34,54432315,0,0x0,8
tick,0x7ff8da10fb34,54447555,0,0x0,8
tick,0x7ff8da10fb34,54462751,0,0x0,8
tick,0x7ff8da10fb34,54478288,0,0x0,8
tick,0x7ff8da10fb34,54494036,0,0x0,8
tick,0x7ff8da10fb34,54510307,0,0x0,8
tick,0x7ff8da10fb34,54525508,0,0x0,8
tick,0x7ff8da10fb34,54540616,0,0x0,8
tick,0x7ff8da10fb34,54556412,0,0x0,8
tick,0x7ff8da10fb34,54572520,0,0x0,8
tick,0x7ff8da10fb34,54587317,0,0x0,8
tick,0x7ff8da10fb34,54602331,0,0x0,8
tick,0x7ff8da10fb34,54618642,0,0x0,8
tick,0x7ff8da10fb34,54633971,0,0x0,8
tick,0x7ff8da10fb34,54649489,0,0x0,8
tick,0x7ff8da10fb34,54665508,0,0x0,8
tick,0x7ff8da10fb34,54681432,0,0x0,8
tick,0x7ff8da10fb34,54696297,0,0x0,8
tick,0x7ff8da10fb34,54711740,0,0x0,8
tick,0x7ff8da10fb34,54728032,0,0x0,8
tick,0x7ff8da10fb34,54743352,0,0x0,8
tick,0x7ff8da10fb34,54758656,0,0x0,8
tick,0x7ff8da10fb34,54774935,0,0x0,8
tick,0x7ff8da10fb34,54790211,0,0x0,8
tick,0x7ff8da10fb34,54806604,0,0x0,8
tick,0x7ff8da10fb34,54822877,0,0x0,8
tick,0x7ff8da10fb34,54838184,0,0x0,8
tick,0x7ff8da10fb34,54853346,0,0x0,8
tick,0x7ff8da10fb34,54868621,0,0x0,8
tick,0x7ff8da10fb34,54884615,0,0x0,8
tick,0x7ff8da10fb34,54900563,0,0x0,8
tick,0x7ff8da10fb34,54917252,0,0x0,8
tick,0x7ff8da10fb34,54931450,0,0x0,8
tick,0x7ff8da10fb34,54947141,0,0x0,8
tick,0x7ff8da10fb34,54962646,0,0x0,8
tick,0x7ff8da10fb34,54978612,0,0x0,8
tick,0x7ff8da10fb34,54994222,0,0x0,8
tick,0x7ff8da10fb34,55009558,0,0x0,8
tick,0x7ff8da10fb34,55025311,0,0x0,8
tick,0x7ff8da10fb34,55040241,0,0x0,8
tick,0x7ff8da10fb34,55056447,0,0x0,8
tick,0x7ff8da10fb34,55072570,0,0x0,8
tick,0x7ff8da10fb34,55088058,0,0x0,8
tick,0x7ff8da10fb34,55103323,0,0x0,8
tick,0x7ff8da10fb34,55118607,0,0x0,8
tick,0x7ff8da10fb34,55134439,0,0x0,8
tick,0x7ff8da10fb34,55150499,0,0x0,8
tick,0x7ff8da10fb34,55165420,0,0x0,8
tick,0x7ff8da10fb34,55181490,0,0x0,8
tick,0x7ff8da10fb34,55197384,0,0x0,8
tick,0x7ff8da10fb34,55212350,0,0x0,8
tick,0x7ff8da10fb34,55228249,0,0x0,8
tick,0x7ff8da10fb34,55243727,0,0x0,8
tick,0x7ff8da10fb34,55259840,0,0x0,8
tick,0x7ff8da10fb34,55274588,0,0x0,8
tick,0x7ff8da10fb34,55289432,0,0x0,8
tick,0x7ff8da10fb34,55305501,0,0x0,8
tick,0x7ff8da10fb34,55320504,0,0x0,8
tick,0x7ff8da10fb34,55336415,0,0x0,8
tick,0x7ff8da10fb34,55352378,0,0x0,8
tick,0x7ff8da10fb34,55368183,0,0x0,8
tick,0x7ff8da10fb34,55383466,0,0x0,8
tick,0x7ff8da10fb34,55398648,0,0x0,8
tick,0x7ff8da10fb34,55413821,0,0x0,8
tick,0x7ff8da10fb34,55429066,0,0x0,8
tick,0x7ff8da10fb34,55444666,0,0x0,8
tick,0x7ff8da10fb34,55460704,0,0x0,8
tick,0x7ff8da10fb34,55476587,0,0x0,8
tick,0x7ff8da10fb34,55491564,0,0x0,8
tick,0x7ff8da10fb34,55507574,0,0x0,8
tick,0x7ff8da10fb34,55522448,0,0x0,8
tick,0x7ff8da10fb34,55537873,0,0x0,8
tick,0x7ff8da10fb34,55553376,0,0x0,8
tick,0x7ff8da10fb34,55568607,0,0x0,8
tick,0x7ff8da10fb34,55583037,0,0x0,8
tick,0x7ff8da10fb34,55599361,0,0x0,8
tick,0x7ff8da10fb34,55614081,0,0x0,8
tick,0x7ff8da10fb34,55630004,0,0x0,8
tick,0x7ff8da10fb34,55645476,0,0x0,8
tick,0x7ff8da10fb34,55660739,0,0x0,8
tick,0x7ff8da10fb34,55676494,0,0x0,8
tick,0x7ff8da10fb34,55691957,0,0x0,8
tick,0x7ff8da10fb34,55707614,0,0x0,8
tick,0x7ff8da10fb34,55722481,0,0x0,8
tick,0x7ff8da10fb34,55738385,0,0x0,8
tick,0x7ff8da10fb34,55753562,0,0x0,8
tick,0x7ff8da10fb34,55768723,0,0x0,8
tick,0x7ff8da10fb34,55784362,0,0x0,8
tick,0x7ff8da10fb34,55799397,0,0x0,8
tick,0x7ff8da10fb34,55814830,0,0x0,8
tick,0x7ff8da10fb34,55829787,0,0x0,8
tick,0x7ff8da10fb34,55844982,0,0x0,8
tick,0x7ff8da10fb34,55860416,0,0x0,8
tick,0x7ff8da10fb34,55876166,0,0x0,8
tick,0x7ff8da10fb34,55891027,0,0x0,8
tick,0x7ff8da10fb34,55906547,0,0x0,8
tick,0x7ff8da10fb34,55922408,0,0x0,8
tick,0x7ff8da10fb34,55937817,0,0x0,8
tick,0x7ff8da10fb34,55952475,0,0x0,8
tick,0x7ff8da10fb34,55968472,0,0x0,8
tick,0x7ff8da10fb34,55984956,0,0x0,8
tick,0x7ff8da10fb34,55999677,0,0x0,8
tick,0x7ff8da10fb34,56014823,0,0x0,8
tick,0x7ff8da10fb34,56030189,0,0x0,8
tick,0x7ff8da10fb34,56045501,0,0x0,8
tick,0x7ff8da10fb34,56060629,0,0x0,8
tick,0x7ff8da10fb34,56076144,0,0x0,8
tick,0x7ff8da10fb34,56091346,0,0x0,8
tick,0x7ff8da10fb34,56107018,0,0x0,8
tick,0x7ff8da10fb34,56122343,0,0x0,8
tick,0x7ff8da10fb34,56137374,0,0x0,8
tick,0x7ff8da10fb34,56152333,0,0x0,8
tick,0x7ff8da10fb34,56167454,0,0x0,8
tick,0x7ff8da10fb34,56182594,0,0x0,8
tick,0x7ff8da10fb34,56198486,0,0x0,8
tick,0x7ff8da10fb34,56213498,0,0x0,8
tick,0x7ff8da10fb34,56228756,0,0x0,8
tick,0x7ff8da10fb34,56244343,0,0x0,8
tick,0x7ff8da10fb34,56259728,0,0x0,8
tick,0x7ff8da10fb34,56274904,0,0x0,8
tick,0x7ff8da10fb34,56290524,0,0x0,8
tick,0x7ff8da10fb34,56306523,0,0x0,8
tick,0x7ff8da10fb34,56322572,0,0x0,8
tick,0x7ff8da10fb34,56338848,0,0x0,8
tick,0x7ff8da10fb34,56353473,0,0x0,8
tick,0x7ff8da10fb34,56369345,0,0x0,8
tick,0x7ff8da10fb34,56384552,0,0x0,8
tick,0x7ff8da10fb34,56399755,0,0x0,8
tick,0x7ff8da10fb34,56415061,0,0x0,8
tick,0x7ff8da10fb34,56430344,0,0x0,8
tick,0x7ff8da10fb34,56445477,0,0x0,8
tick,0x7ff8da10fb34,56460772,0,0x0,8
tick,0x7ff8da10fb34,56476665,0,0x0,8
tick,0x7ff8da10fb34,56492954,0,0x0,8
tick,0x7ff8da10fb34,56508345,0,0x0,8
tick,0x7ff8da10fb34,56523349,0,0x0,8
tick,0x7ff8da10fb34,56538853,0,0x0,8
tick,0x7ff8da10fb34,56554574,0,0x0,8
tick,0x7ff8da10fb34,56569769,0,0x0,8
tick,0x7ff8da10fb34,56585236,0,0x0,8
tick,0x7ff8da10fb34,56600309,0,0x0,8
tick,0x7ff8da10fb34,56616456,0,0x0,8
tick,0x7ff8da10fb34,56631357,0,0x0,8
tick,0x7ff8da10fb34,56646322,0,0x0,8
tick,0x7ff8da10fb34,56661213,0,0x0,8
tick,0x7ff8da10fb34,56676654,0,0x0,8
tick,0x7ff8da10fb34,56692696,0,0x0,8
tick,0x7ff8da10fb34,56708384,0,0x0,8
tick,0x7ff8da10fb34,56723887,0,0x0,8
tick,0x7ff8da10fb34,56738672,0,0x0,8
tick,0x7ff8da10fb34,56754341,0,0x0,8
tick,0x7ff8da10fb34,56770505,0,0x0,8
tick,0x7ff8da10fb34,56786372,0,0x0,8
tick,0x7ff8da10fb34,56802606,0,0x0,8
tick,0x7ff8da10fb34,56818378,0,0x0,8
tick,0x7ff8da10fb34,56834061,0,0x0,8
tick,0x7ff8da10fb34,56849688,0,0x0,8
tick,0x7ff8da10fb34,56865173,0,0x0,8
tick,0x7ff8da10fb34,56880469,0,0x0,8
tick,0x7ff8da10fb34,56895040,0,0x0,8
tick,0x7ff8da10fb34,56910693,0,0x0,8
tick,0x7ff8da10fb34,56926592,0,0x0,8
tick,0x7ff8da10fb34,56942567,0,0x0,8
tick,0x7ff8da10fb34,56957552,0,0x0,8
tick,0x7ff8da10fb34,56972477,0,0x0,8
tick,0x7ff8da10fb34,56988530,0,0x0,8
tick,0x7ff8da10fb34,57004493,0,0x0,8
tick,0x7ff8da10fb34,57019724,0,0x0,8
tick,0x7ff8da10fb34,57034810,0,0x0,8
tick,0x7ff8da10fb34,57050355,0,0x0,8
tick,0x7ff8da10fb34,57066550,0,0x0,8
tick,0x7ff8da10fb34,57081330,0,0x0,8
tick,0x7ff8da10fb34,57096438,0,0x0,8
tick,0x7ff8da10fb34,57111289,0,0x0,8
tick,0x7ff8da10fb34,57126290,0,0x0,8
tick,0x7ff8da10fb34,57142232,0,0x0,8
tick,0x7ff8da10fb34,57158026,0,0x0,8
tick,0x7ff8da10fb34,57174258,0,0x0,8
tick,0x7ff8da10fb34,57187839,0,0x0,8
tick,0x7ff8da10fb34,57203287,0,0x0,8
tick,0x7ff8da10fb34,57219089,0,0x0,8
tick,0x7ff8da10fb34,57234434,0,0x0,8
tick,0x7ff8da10fb34,57249768,0,0x0,8
tick,0x7ff8da10fb34,57265293,0,0x0,8
tick,0x7ff8da10fb34,57280580,0,0x0,8
tick,0x7ff8da10fb34,57296339,0,0x0,8
tick,0x7ff8da10fb34,57311309,0,0x0,8
tick,0x7ff8da10fb34,57326349,0,0x0,8
tick,0x7ff8da10fb34,57342816,0,0x0,8
tick,0x7ff8da10fb34,57357809,0,0x0,8
tick,0x7ff8da10fb34,57372476,0,0x0,8
tick,0x7ff8da10fb34,57388193,0,0x0,8
tick,0x7ff8da10fb34,57403431,0,0x0,8
tick,0x7ff8da10fb34,57418550,0,0x0,8
tick,0x7ff8da10fb34,57434607,0,0x0,8
tick,0x7ff8da10fb34,57449552,0,0x0,8
tick,0x7ff8da10fb34,57465060,0,0x0,8
tick,0x7ff8da10fb34,57481321,0,0x0,8
tick,0x7ff8da10fb34,57496611,0,0x0,8
tick,0x7ff8da10fb34,57511423,0,0x0,8
tick,0x7ff8da10fb34,57527109,0,0x0,8
tick,0x7ff8da10fb34,57542793,0,0x0,8
tick,0x7ff8da10fb34,57558506,0,0x0,8
tick,0x7ff8da10fb34,57574488,0,0x0,8
tick,0x7ff8da10fb34,57589340,0,0x0,8
tick,0x7ff8da10fb34,57604521,0,0x0,8
tick,0x7ff8da10fb34,57619676,0,0x0,8
tick,0x7ff8da10fb34,57635347,0,0x0,8
tick,0x7ff8da10fb34,57650303,0,0x0,8
tick,0x7ff8da10fb34,57665260,0,0x0,8
tick,0x7ff8da10fb34,57681023,0,0x0,8
tick,0x7ff8da10fb34,57696855,0,0x0,8
tick,0x7ff8da10fb34,57711999,0,0x0,8
tick,0x7ff8da10fb34,57728191,0,0x0,8
tick,0x7ff8da10fb34,57743835,0,0x0,8
tick,0x7ff8da10fb34,57759361,0,0x0,8
tick,0x7ff8da10fb34,57775325,0,0x0,8
tick,0x7ff8da10fb34,57790484,0,0x0,8
tick,0x7ff8da10fb34,57805268,0,0x0,8
tick,0x7ff8da10fb34,57820473,0,0x0,8
tick,0x7ff8da10fb34,57836505,0,0x0,8
tick,0x7ff8da10fb34,57851357,0,0x0,8
tick,0x7ff8da10fb34,57866331,0,0x0,8
tick,0x7ff8da10fb34,57881449,0,0x0,8
tick,0x7ff8da10fb34,57897069,0,0x0,8
tick,0x7ff8da10fb34,57912487,0,0x0,8
tick,0x7ff8da10fb34,57927659,0,0x0,8
tick,0x7ff8da10fb34,57943754,0,0x0,8
tick,0x7ff8da10fb34,57959192,0,0x0,8
tick,0x7ff8da10fb34,57975866,0,0x0,8
tick,0x7ff8da10fb34,57991701,0,0x0,8
tick,0x7ff8da10fb34,58006782,0,0x0,8
tick,0x7ff8da10fb34,58021345,0,0x0,8
tick,0x7ff8da10fb34,58037660,0,0x0,8
tick,0x7ff8da10fb34,58052448,0,0x0,8
tick,0x7ff8da10fb34,58068143,0,0x0,8
tick,0x7ff8da10fb34,58083567,0,0x0,8
tick,0x7ff8da10fb34,58098447,0,0x0,8
tick,0x7ff8da10fb34,58113901,0,0x0,8
tick,0x7ff8da10fb34,58129236,0,0x0,8
tick,0x7ff8da10fb34,58144555,0,0x0,8
tick,0x7ff8da10fb34,58160229,0,0x0,8
tick,0x7ff8da10fb34,58177322,0,0x0,8
tick,0x7ff8da10fb34,58193199,0,0x0,8
tick,0x7ff8da10fb34,58210639,0,0x0,8
tick,0x7ff8da10fb34,58223709,0,0x0,8
tick,0x7ff8da10fb34,58238547,0,0x0,8
tick,0x7ff8da10fb34,58253574,0,0x0,8
tick,0x7ff8da10fb34,58269436,0,0x0,8
tick,0x7ff8da10fb34,58284731,0,0x0,8
tick,0x7ff8da10fb34,58299693,0,0x0,8
tick,0x7ff8da10fb34,58315063,0,0x0,8
tick,0x7ff8da10fb34,58330550,0,0x0,8
tick,0x7ff8da10fb34,58345550,0,0x0,8
tick,0x7ff8da10fb34,58360586,0,0x0,8
tick,0x7ff8da10fb34,58376563,0,0x0,8
tick,0x7ff8da10fb34,58391528,0,0x0,8
tick,0x7ff8da10fb34,58406833,0,0x0,8
tick,0x7ff8da10fb34,58422751,0,0x0,8
tick,0x7ff8da10fb34,58437504,0,0x0,8
tick,0x7ff8da10fb34,58452501,0,0x0,8
tick,0x7ff8da10fb34,58468586,0,0x0,8
tick,0x7ff8da10fb34,58483586,0,0x0,8
tick,0x7ff8da10fb34,58498544,0,0x0,8
tick,0x7ff8da10fb34,58514696,0,0x0,8
tick,0x7ff8da10fb34,58529544,0,0x0,8
tick,0x7ff8da10fb34,58544534,0,0x0,8
tick,0x7ff8da10fb34,58559448,0,0x0,8
tick,0x7ff8da10fb34,58575112,0,0x0,8
tick,0x7ff8da10fb34,58591209,0,0x0,8
tick,0x7ff8da10fb34,58610673,0,0x0,8
tick,0x7ff8da10fb34,58623263,0,0x0,8
tick,0x7ff8da10fb34,58638180,0,0x0,8
tick,0x7ff8da10fb34,58653338,0,0x0,8
tick,0x7ff8da10fb34,58668619,0,0x0,8
tick,0x7ff8da10fb34,58684437,0,0x0,8
tick,0x7ff8da10fb34,58700035,0,0x0,8
tick,0x7ff8da10fb34,58715049,0,0x0,8
tick,0x7ff8da10fb34,58730485,0,0x0,8
tick,0x7ff8da10fb34,58746337,0,0x0,8
tick,0x7ff8da10fb34,58761552,0,0x0,8
tick,0x7ff8da10fb34,58777881,0,0x0,8
tick,0x7ff8da10fb34,58793334,0,0x0,8
tick,0x7ff8da10fb34,58809009,0,0x0,8
tick,0x7ff8da10fb34,58824986,0,0x0,8
tick,0x7ff8da10fb34,58840080,0,0x0,8
tick,0x7ff8da10fb34,58855295,0,0x0,8
tick,0x7ff8da10fb34,58870549,0,0x0,8
tick,0x7ff8da10fb34,58886450,0,0x0,8
tick,0x7ff8da10fb34,58901329,0,0x0,8
tick,0x7ff8da10fb34,58917322,0,0x0,8
tick,0x7ff8da10fb34,58932316,0,0x0,8
tick,0x7ff8da10fb34,58947567,0,0x0,8
tick,0x7ff8da10fb34,58962686,0,0x0,8
tick,0x7ff8da10fb34,58978226,0,0x0,8
tick,0x7ff8da10fb34,58993628,0,0x0,8
tick,0x7ff8da10fb34,59008894,0,0x0,8
tick,0x7ff8da10fb34,59024976,0,0x0,8
tick,0x7ff8da10fb34,59039634,0,0x0,8
tick,0x7ff8da10fb34,59055317,0,0x0,8
tick,0x7ff8da10fb34,59071361,0,0x0,8
tick,0x7ff8da10fb34,59087238,0,0x0,8
tick,0x7ff8da10fb34,59102565,0,0x0,8
tick,0x7ff8da10fb34,59117535,0,0x0,8
tick,0x7ff8da10fb34,59132246,0,0x0,8
tick,0x7ff8da10fb34,59148222,0,0x0,8
tick,0x7ff8da10fb34,59163459,0,0x0,8
tick,0x7ff8da10fb34,59179123,0,0x0,8
tick,0x7ff8da10fb34,59194134,0,0x0,8
tick,0x7ff8da10fb34,59209922,0,0x0,8
tick,0x7ff8da10fb34,59225514,0,0x0,8
tick,0x7ff8da10fb34,59240057,0,0x0,8
tick,0x7ff8da10fb34,59255269,0,0x0,8
tick,0x7ff8da10fb34,59270710,0,0x0,8
tick,0x7ff8da10fb34,59286412,0,0x0,8
tick,0x7ff8da10fb34,59301422,0,0x0,8
tick,0x7ff8da10fb34,59317998,0,0x0,8
tick,0x7ff8da10fb34,59333916,0,0x0,8
tick,0x7ff8da10fb34,59349304,0,0x0,8
tick,0x7ff8da10fb34,59365144,0,0x0,8
tick,0x7ff8da10fb34,59381589,0,0x0,8
tick,0x7ff8da10fb34,59397396,0,0x0,8
tick,0x7ff8da10fb34,59412703,0,0x0,8
tick,0x7ff8da10fb34,59428735,0,0x0,8
tick,0x7ff8da10fb34,59444482,0,0x0,8
tick,0x7ff8da10fb34,59459678,0,0x0,8
tick,0x7ff8da10fb34,59475337,0,0x0,8
tick,0x7ff8da10fb34,59490102,0,0x0,8
tick,0x7ff8da10fb34,59505283,0,0x0,8
tick,0x7ff8da10fb34,59521402,0,0x0,8
tick,0x7ff8da10fb34,59537057,0,0x0,8
tick,0x7ff8da10fb34,59552565,0,0x0,8
tick,0x7ff8da10fb34,59567441,0,0x0,8
tick,0x7ff8da10fb34,59582536,0,0x0,8
tick,0x7ff8da10fb34,59598091,0,0x0,8
tick,0x7ff8da10fb34,59613832,0,0x0,8
tick,0x7ff8da10fb34,59629333,0,0x0,8
tick,0x7ff8da10fb34,59644919,0,0x0,8
tick,0x7ff8da10fb34,59660139,0,0x0,8
tick,0x7ff8da10fb34,59676373,0,0x0,8
tick,0x7ff8da10fb34,59691877,0,0x0,8
tick,0x7ff8da10fb34,59707992,0,0x0,8
tick,0x7ff8da10fb34,59723326,0,0x0,8
tick,0x7ff8da10fb34,59738350,0,0x0,8
tick,0x7ff8da10fb34,59754427,0,0x0,8
tick,0x7ff8da10fb34,59770854,0,0x0,8
tick,0x7ff8da10fb34,59787218,0,0x0,8
tick,0x7ff8da10fb34,59802396,0,0x0,8
tick,0x7ff8da10fb34,59817867,0,0x0,8
tick,0x7ff8da10fb34,59834362,0,0x0,8
tick,0x7ff8da10fb34,59849233,0,0x0,8
tick,0x7ff8da10fb34,59864810,0,0x0,8
tick,0x7ff8da10fb34,59880351,0,0x0,8
tick,0x7ff8da10fb34,59896604,0,0x0,8
tick,0x7ff8da10fb34,59912035,0,0x0,8
tick,0x7ff8da10fb34,59927173,0,0x0,8
tick,0x7ff8da10fb34,59942887,0,0x0,8
tick,0x7ff8da10fb34,59958761,0,0x0,8
tick,0x7ff8da10fb34,59974449,0,0x0,8
tick,0x7ff8da10fb34,59989534,0,0x0,8
tick,0x7ff8da10fb34,60004445,0,0x0,8
tick,0x7ff8da10fb34,60019828,0,0x0,8
tick,0x7ff8da10fb34,60035261,0,0x0,8
tick,0x7ff8da10fb34,60050339,0,0x0,8
tick,0x7ff8da10fb34,60066800,0,0x0,8
tick,0x7ff8da10fb34,60081448,0,0x0,8
tick,0x7ff8da10fb34,60097396,0,0x0,8
tick,0x7ff8da10fb34,60111918,0,0x0,8
tick,0x7ff8da10fb34,60127172,0,0x0,8
tick,0x7ff8da10fb34,60142768,0,0x0,8
tick,0x7ff8da10fb34,60158385,0,0x0,8
tick,0x7ff8da10fb34,60174431,0,0x0,8
tick,0x7ff8da10fb34,60190416,0,0x0,8
tick,0x7ff8da10fb34,60205675,0,0x0,8
tick,0x7ff8da10fb34,60220170,0,0x0,8
tick,0x7ff8da10fb34,60234997,0,0x0,8
tick,0x7ff8da10fb34,60249876,0,0x0,8
tick,0x7ff8da10fb34,60265238,0,0x0,8
tick,0x7ff8da10fb34,60281505,0,0x0,8
tick,0x7ff8da10fb34,60297509,0,0x0,8
tick,0x7ff8da10fb34,60312595,0,0x0,8
tick,0x7ff8da10fb34,60329820,0,0x0,8
tick,0x7ff8da10fb34,60343535,0,0x0,8
tick,0x7ff8da10fb34,60359158,0,0x0,8
tick,0x7ff8da10fb34,60375211,0,0x0,8
tick,0x7ff8da10fb34,60391148,0,0x0,8
tick,0x7ff8da10fb34,60407799,0,0x0,8
tick,0x7ff8da10fb34,60422766,0,0x0,8
tick,0x7ff8da10fb34,60438136,0,0x0,8
tick,0x7ff8da10fb34,60454355,0,0x0,8
tick,0x7ff8da10fb34,60469532,0,0x0,8
tick,0x7ff8da10fb34,60485702,0,0x0,8
tick,0x7ff8da10fb34,60501608,0,0x0,8
tick,0x7ff8da10fb34,60517563,0,0x0,8
tick,0x7ff8da10fb34,60532763,0,0x0,8
tick,0x7ff8da10fb34,60548553,0,0x0,8
tick,0x7ff8da10fb34,60563334,0,0x0,8
tick,0x7ff8da10fb34,60578528,0,0x0,8
tick,0x7ff8da10fb34,60593567,0,0x0,8
tick,0x7ff8da10fb34,60609956,0,0x0,8
tick,0x7ff8da10fb34,60625578,0,0x0,8
tick,0x7ff8da10fb34,60640766,0,0x0,8
tick,0x7ff8da10fb34,60655691,0,0x0,8
tick,0x7ff8da10fb34,60670323,0,0x0,8
tick,0x7ff8da10fb34,60686542,0,0x0,8
tick,0x7ff8da10fb34,60701522,0,0x0,8
tick,0x7ff8da10fb34,60717147,0,0x0,8
tick,0x7ff8da10fb34,60732308,0,0x0,8
tick,0x7ff8da10fb34,60747276,0,0x0,8
tick,0x7ff8da10fb34,60762378,0,0x0,8
tick,0x7ff8da10fb34,60777899,0,0x0,8
tick,0x7ff8da10fb34,60792822,0,0x0,8
tick,0x7ff8da10fb34,60808315,0,0x0,8
tick,0x7ff8da10fb34,60824257,0,0x0,8
tick,0x7ff8da10fb34,60840053,0,0x0,8
tick,0x7ff8da10fb34,60855612,0,0x0,8
tick,0x7ff8da10fb34,60870400,0,0x0,8
tick,0x7ff8da10fb34,60886616,0,0x0,8
tick,0x7ff8da10fb34,60901365,0,0x0,8
tick,0x7ff8da10fb34,60917326,0,0x0,8
tick,0x7ff8da10fb34,60932338,0,0x0,8
tick,0x7ff8da10fb34,60947843,0,0x0,8
tick,0x7ff8da10fb34,60963375,0,0x0,8
tick,0x7ff8da10fb34,60979286,0,0x0,8
tick,0x7ff8da10fb34,60995068,0,0x0,8
tick,0x7ff8da10fb34,61010086,0,0x0,8
tick,0x7ff8da10fb34,61025324,0,0x0,8
tick,0x7ff8da10fb34,61040831,0,0x0,8
tick,0x7ff8da10fb34,61057923,0,0x0,8
tick,0x7ff8da10fb34,61071839,0,0x0,8
tick,0x7ff8da10fb34,61086823,0,0x0,8
tick,0x7ff8da10fb34,61101834,0,0x0,8
tick,0x7ff8da10fb34,61117478,0,0x0,8
tick,0x7ff8da10fb34,61133280,0,0x0,8
tick,0x7ff8da10fb34,61148960,0,0x0,8
tick,0x7ff8da10fb34,61164303,0,0x0,8
tick,0x7ff8da10fb34,61179731,0,0x0,8
tick,0x7ff8da10fb34,61195665,0,0x0,8
tick,0x7ff8da10fb34,61210880,0,0x0,8
tick,0x7ff8da10fb34,61226396,0,0x0,8
tick,0x7ff8da10fb34,61241212,0,0x0,8
tick,0x7ff8da10fb34,61256635,0,0x0,8
tick,0x7ff8da10fb34,61272086,0,0x0,8
tick,0x7ff8da10fb34,61287455,0,0x0,8
tick,0x7ff8da10fb34,61303270,0,0x0,8
tick,0x7ff8da10fb34,61318525,0,0x0,8
tick,0x7ff8da10fb34,61333059,0,0x0,8
tick,0x7ff8da10fb34,61348030,0,0x0,8
tick,0x7ff8da10fb34,61364233,0,0x0,8
tick,0x7ff8da10fb34,61379701,0,0x0,8
tick,0x7ff8da10fb34,61394723,0,0x0,8
tick,0x7ff8da10fb34,61410346,0,0x0,8
tick,0x7ff8da10fb34,61426485,0,0x0,8
tick,0x7ff8da10fb34,61442340,0,0x0,8
tick,0x7ff8da10fb34,61458284,0,0x0,8
tick,0x7ff8da10fb34,61473894,0,0x0,8
tick,0x7ff8da10fb34,61489872,0,0x0,8
tick,0x7ff8da10fb34,61504300,0,0x0,8
tick,0x7ff8da10fb34,61519428,0,0x0,8
tick,0x7ff8da10fb34,61534569,0,0x0,8
tick,0x7ff8da10fb34,61549890,0,0x0,8
tick,0x7ff8da10fb34,61564452,0,0x0,8
tick,0x7ff8da10fb34,61579794,0,0x0,8
tick,0x7ff8da10fb34,61595087,0,0x0,8
tick,0x7ff8da10fb34,61610264,0,0x0,8
tick,0x7ff8da10fb34,61626619,0,0x0,8
tick,0x7ff8da10fb34,61641739,0,0x0,8
tick,0x7ff8da10fb34,61657466,0,0x0,8
tick,0x7ff8da10fb34,61674026,0,0x0,8
tick,0x7ff8da10fb34,61688752,0,0x0,8
tick,0x7ff8da10fb34,61704437,0,0x0,8
tick,0x7ff8da10fb34,61719913,0,0x0,8
tick,0x7ff8da10fb34,61734928,0,0x0,8
tick,0x7ff8da10fb34,61750368,0,0x0,8
tick,0x7ff8da10fb34,61766503,0,0x0,8
tick,0x7ff8da10fb34,61781375,0,0x0,8
tick,0x7ff8da10fb34,61797288,0,0x0,8
tick,0x7ff8da10fb34,61812541,0,0x0,8
tick,0x7ff8da10fb34,61828280,0,0x0,8
tick,0x7ff8da10fb34,61842909,0,0x0,8
tick,0x7ff8da10fb34,61858289,0,0x0,8
tick,0x7ff8da10fb34,61874440,0,0x0,8
tick,0x7ff8da10fb34,61890041,0,0x0,8
tick,0x7ff8da10fb34,61905284,0,0x0,8
tick,0x7ff8da10fb34,61920777,0,0x0,8
tick,0x7ff8da10fb34,61936661,0,0x0,8
tick,0x7ff8da10fb34,61952034,0,0x0,8
tick,0x7ff8da10fb34,61967282,0,0x0,8
tick,0x7ff8da10fb34,61982250,0,0x0,8
tick,0x7ff8da10fb34,61998501,0,0x0,8
tick,0x7ff8da10fb34,62014076,0,0x0,8
tick,0x7ff8da10fb34,62029214,0,0x0,8
tick,0x7ff8da10fb34,62044464,0,0x0,8
tick,0x7ff8da10fb34,62059566,0,0x0,8
tick,0x7ff8da10fb34,62074363,0,0x0,8
tick,0x7ff8da10fb34,62090367,0,0x0,8
tick,0x7ff8da10fb34,62105762,0,0x0,8
tick,0x7ff8da10fb34,62121592,0,0x0,8
tick,0x7ff8da10fb34,62137437,0,0x0,8
tick,0x7ff8da10fb34,62153113,0,0x0,8
tick,0x7ff8da10fb34,62168877,0,0x0,8
tick,0x7ff8da10fb34,62185220,0,0x0,8
tick,0x7ff8da10fb34,62200118,0,0x0,8
tick,0x7ff8da10fb34,62215122,0,0x0,8
tick,0x7ff8da10fb34,62230653,0,0x0,8
tick,0x7ff8da10fb34,62246461,0,0x0,8
tick,0x7ff8da10fb34,62261274,0,0x0,8
tick,0x7ff8da10fb34,62276670,0,0x0,8
tick,0x7ff8da10fb34,62291815,0,0x0,8
tick,0x7ff8da10fb34,62307557,0,0x0,8
tick,0x7ff8da10fb34,62323558,0,0x0,8
tick,0x7ff8da10fb34,62339459,0,0x0,8
tick,0x7ff8da10fb34,62356159,0,0x0,8
tick,0x7ff8da10fb34,62371428,0,0x0,8
tick,0x7ff8da10fb34,62386665,0,0x0,8
tick,0x7ff8da10fb34,62401571,0,0x0,8
tick,0x7ff8da10fb34,62417277,0,0x0,8
tick,0x7ff8da10fb34,62433096,0,0x0,8
tick,0x7ff8da10fb34,62448855,0,0x0,8
tick,0x7ff8da10fb34,62464297,0,0x0,8
tick,0x7ff8da10fb34,62479521,0,0x0,8
tick,0x7ff8da10fb34,62494978,0,0x0,8
tick,0x7ff8da10fb34,62510409,0,0x0,8
tick,0x7ff8da10fb34,62526499,0,0x0,8
tick,0x7ff8da10fb34,62541670,0,0x0,8
tick,0x7ff8da10fb34,62557258,0,0x0,8
tick,0x7ff8da10fb34,62573607,0,0x0,8
tick,0x7ff8da10fb34,62588681,0,0x0,8
tick,0x7ff8da10fb34,62604783,0,0x0,8
tick,0x7ff8da10fb34,62620209,0,0x0,8
tick,0x7ff8da10fb34,62635373,0,0x0,8
tick,0x7ff8da10fb34,62650306,0,0x0,8
tick,0x7ff8da10fb34,62666313,0,0x0,8
tick,0x7ff8da10fb34,62682591,0,0x0,8
tick,0x7ff8da10fb34,62697509,0,0x0,8
tick,0x7ff8da10fb34,62712362,0,0x0,8
tick,0x7ff8da10fb34,62728204,0,0x0,8
tick,0x7ff8da10fb34,62742752,0,0x0,8
tick,0x7ff8da10fb34,62758317,0,0x0,8
tick,0x7ff8da10fb34,62774023,0,0x0,8
tick,0x7ff8da10fb34,62790025,0,0x0,8
tick,0x7ff8da10fb34,62805589,0,0x0,8
tick,0x7ff8da10fb34,62820495,0,0x0,8
tick,0x7ff8da10fb34,62836373,0,0x0,8
tick,0x7ff8da10fb34,62851336,0,0x0,8
tick,0x7ff8da10fb34,62866484,0,0x0,8
tick,0x7ff8da10fb34,62881443,0,0x0,8
tick,0x7ff8da10fb34,62897203,0,0x0,8
tick,0x7ff8da10fb34,62912371,0,0x0,8
tick,0x7ff8da10fb34,62927561,0,0x0,8
tick,0x7ff8da10fb34,62942872,0,0x0,8
tick,0x7ff8da10fb34,62958289,0,0x0,8
tick,0x7ff8da10fb34,62973894,0,0x0,8
tick,0x7ff8da10fb34,62990174,0,0x0,8
tick,0x7ff8da10fb34,63005301,0,0x0,8
tick,0x7ff8da10fb34,63021414,0,0x0,8
tick,0x7ff8da10fb34,63036488,0,0x0,8
tick,0x7ff8da10fb34,63052385,0,0x0,8
tick,0x7ff8da10fb34,63068127,0,0x0,8
tick,0x7ff8da10fb34,63083570,0,0x0,8
tick,0x7ff8da10fb34,63098568,0,0x0,8
tick,0x7ff8da10fb34,63114124,0,0x0,8
tick,0x7ff8da10fb34,63129456,0,0x0,8
tick,0x7ff8da10fb34,63144920,0,0x0,8
tick,0x7ff8da10fb34,63160132,0,0x0,8
tick,0x7ff8da10fb34,63176521,0,0x0,8
tick,0x7ff8da10fb34,63198144,0,0x0,8
tick,0x7ff8da10fb34,63206462,0,0x0,8
tick,0x7ff8da10fb34,63221936,0,0x0,8
tick,0x7ff8da10fb34,63237391,0,0x0,8
tick,0x7ff8da10fb34,63253189,0,0x0,8
tick,0x7ff8da10fb34,63268502,0,0x0,8
tick,0x7ff8da10fb34,63283454,0,0x0,8
tick,0x7ff8da10fb34,63299713,0,0x0,8
tick,0x7ff8da10fb34,63317027,0,0x0,8
tick,0x7ff8da10fb34,63330252,0,0x0,8
tick,0x7ff8da10fb34,63346204,0,0x0,8
tick,0x7ff8da10fb34,63362121,0,0x0,8
tick,0x7ff8da10fb34,63378190,0,0x0,8
tick,0x7ff8da10fb34,63394106,0,0x0,8
tick,0x7ff8da10fb34,63410202,0,0x0,8
tick,0x7ff8da10fb34,63426269,0,0x0,8
tick,0x7ff8da10fb34,63441182,0,0x0,8
tick,0x7ff8da10fb34,63457082,0,0x0,8
tick,0x7ff8da10fb34,63472184,0,0x0,8
tick,0x7ff8da10fb34,63487459,0,0x0,8
tick,0x7ff8da10fb34,63503083,0,0x0,8
tick,0x7ff8da10fb34,63518202,0,0x0,8
tick,0x7ff8da10fb34,63533080,0,0x0,8
tick,0x7ff8da10fb34,63549210,0,0x0,8
tick,0x7ff8da10fb34,63564313,0,0x0,8
tick,0x7ff8da10fb34,63579817,0,0x0,8
tick,0x7ff8da10fb34,63595055,0,0x0,8
tick,0x7ff8da10fb34,63611229,0,0x0,8
tick,0x7ff8da10fb34,63626446,0,0x0,8
tick,0x7ff8da10fb34,63641757,0,0x0,8
tick,0x7ff8da10fb34,63656840,0,0x0,8
tick,0x7ff8da10fb34,63673043,0,0x0,8
tick,0x7ff8da10fb34,63688748,0,0x0,8
tick,0x7ff8da10fb34,63704563,0,0x0,8
tick,0x7ff8da10fb34,63719192,0,0x0,8
tick,0x7ff8da10fb34,63734675,0,0x0,8
tick,0x7ff8da10fb34,63749744,0,0x0,8
tick,0x7ff8da10fb34,63765229,0,0x0,8
tick,0x7ff8da10fb34,63780683,0,0x0,8
tick,0x7ff8da10fb34,63796433,0,0x0,8
tick,0x7ff8da10fb34,63812498,0,0x0,8
tick,0x7ff8da10fb34,63828146,0,0x0,8
tick,0x7ff8da10fb34,63843318,0,0x0,8
tick,0x7ff8da10fb34,63858528,0,0x0,8
tick,0x7ff8da10fb34,63874489,0,0x0,8
tick,0x7ff8da10fb34,63890336,0,0x0,8
tick,0x7ff8da10fb34,63906133,0,0x0,8
tick,0x7ff8da10fb34,63921602,0,0x0,8
tick,0x7ff8da10fb34,63936397,0,0x0,8
tick,0x7ff8da10fb34,63952464,0,0x0,8
tick,0x7ff8da10fb34,63967596,0,0x0,8
tick,0x7ff8da10fb34,63983681,0,0x0,8
tick,0x7ff8da10fb34,63998478,0,0x0,8
tick,0x7ff8da10fb34,64013320,0,0x0,8
tick,0x7ff8da10fb34,64028684,0,0x0,8
tick,0x7ff8da10fb34,64043694,0,0x0,8
tick,0x7ff8da10fb34,64059454,0,0x0,8
tick,0x7ff8da10fb34,64074836,0,0x0,8
tick,0x7ff8da10fb34,64090645,0,0x0,8
tick,0x7ff8da10fb34,64106452,0,0x0,8
tick,0x7ff8da10fb34,64120780,0,0x0,8
tick,0x7ff8da10fb34,64136720,0,0x0,8
tick,0x7ff8da10fb34,64152244,0,0x0,8
tick,0x7ff8da10fb34,64167401,0,0x0,8
tick,0x7ff8da10fb34,64183414,0,0x0,8
tick,0x7ff8da10fb34,64198502,0,0x0,8
tick,0x7ff8da10fb34,64214321,0,0x0,8
tick,0x7ff8da10fb34,64230340,0,0x0,8
tick,0x7ff8da10fb34,64246458,0,0x0,8
tick,0x7ff8da10fb34,64262635,0,0x0,8
tick,0x7ff8da10fb34,64278176,0,0x0,8
tick,0x7ff8da10fb34,64293268,0,0x0,8
tick,0x7ff8da10fb34,64308781,0,0x0,8
tick,0x7ff8da10fb34,64325228,0,0x0,8
tick,0x7ff8da10fb34,64339978,0,0x0,8
tick,0x7ff8da10fb34,64355910,0,0x0,8
tick,0x7ff8da10fb34,64371366,0,0x0,8
tick,0x7ff8da10fb34,64387208,0,0x0,8
tick,0x7ff8da10fb34,64403046,0,0x0,8
tick,0x7ff8da10fb34,64418299,0,0x0,8
tick,0x7ff8da10fb34,64434010,0,0x0,8
tick,0x7ff8da10fb34,64449821,0,0x0,8
tick,0x7ff8da10fb34,64464722,0,0x0,8
tick,0x7ff8da10fb34,64480388,0,0x0,8
tick,0x7ff8da10fb34,64496782,0,0x0,8
tick,0x7ff8da10fb34,64511574,0,0x0,8
tick,0x7ff8da10fb34,64527327,0,0x0,8
tick,0x7ff8da10fb34,64542601,0,0x0,8
tick,0x7ff8da10fb34,64558069,0,0x0,8
tick,0x7ff8da10fb34,64573321,0,0x0,8
tick,0x7ff8da10fb34,64588651,0,0x0,8
tick,0x7ff8da10fb34,64604491,0,0x0,8
tick,0x7ff8da10fb34,64621302,0,0x0,8
tick,0x7ff8da10fb34,64635385,0,0x0,8
tick,0x7ff8da10fb34,64651554,0,0x0,8
tick,0x7ff8da10fb34,64666592,0,0x0,8
tick,0x7ff8da10fb34,64681458,0,0x0,8
tick,0x7ff8da10fb34,64696774,0,0x0,8
tick,0x7ff8da10fb34,64712442,0,0x0,8
tick,0x7ff8da10fb34,64727574,0,0x0,8
tick,0x7ff8da10fb34,64742592,0,0x0,8
tick,0x7ff8da10fb34,64757770,0,0x0,8
tick,0x7ff8da10fb34,64773237,0,0x0,8
tick,0x7ff8da10fb34,64789161,0,0x0,8
tick,0x7ff8da10fb34,64804425,0,0x0,8
tick,0x7ff8da10fb34,64820373,0,0x0,8
tick,0x7ff8da10fb34,64835456,0,0x0,8
tick,0x7ff8da10fb34,64850529,0,0x0,8
tick,0x7ff8da10fb34,64866380,0,0x0,8
tick,0x7ff8da10fb34,64881397,0,0x0,8
tick,0x7ff8da10fb34,64897302,0,0x0,8
tick,0x7ff8da10fb34,64913544,0,0x0,8
tick,0x7ff8da10fb34,64928479,0,0x0,8
tick,0x7ff8da10fb34,64943453,0,0x0,8
tick,0x7ff8da10fb34,64958173,0,0x0,8
tick,0x7ff8da10fb34,64974005,0,0x0,8
tick,0x7ff8da10fb34,64989629,0,0x0,8
tick,0x7ff8da10fb34,65005036,0,0x0,8
tick,0x7ff8da10fb34,65020363,0,0x0,8
tick,0x7ff8da10fb34,65035509,0,0x0,8
tick,0x7ff8da10fb34,65050705,0,0x0,8
tick,0x7ff8da10fb34,65066280,0,0x0,8
tick,0x7ff8da10fb34,65081362,0,0x0,8
tick,0x7ff8da10fb34,65097318,0,0x0,8
tick,0x7ff8da10fb34,65113435,0,0x0,8
tick,0x7ff8da10fb34,65129320,0,0x0,8
tick,0x7ff8da10fb34,65144238,0,0x0,8
tick,0x7ff8da10fb34,65159622,0,0x0,8
tick,0x7ff8da10fb34,65175102,0,0x0,8
tick,0x7ff8da10fb34,65190119,0,0x0,8
tick,0x7ff8da10fb34,65206349,0,0x0,8
tick,0x7ff8da10fb34,65222667,0,0x0,8
tick,0x7ff8da10fb34,65238160,0,0x0,8
tick,0x7ff8da10fb34,65253616,0,0x0,8
tick,0x7ff8da10fb34,65268493,0,0x0,8
tick,0x7ff8da10fb34,65284516,0,0x0,8
tick,0x7ff8da10fb34,65300218,0,0x0,8
tick,0x7ff8da10fb34,65316415,0,0x0,8
tick,0x7ff8da10fb34,65331339,0,0x0,8
tick,0x7ff8da10fb34,65346572,0,0x0,8
tick,0x7ff8da10fb34,65362365,0,0x0,8
tick,0x7ff8da10fb34,65378323,0,0x0,8
tick,0x7ff8da10fb34,65394063,0,0x0,8
tick,0x7ff8da10fb34,65409937,0,0x0,8
tick,0x7ff8da10fb34,65424927,0,0x0,8
tick,0x7ff8da10fb34,65440551,0,0x0,8
tick,0x7ff8da10fb34,65456312,0,0x0,8
tick,0x7ff8da10fb34,65471478,0,0x0,8
tick,0x7ff8da10fb34,65487567,0,0x0,8
tick,0x7ff8da10fb34,65502348,0,0x0,8
tick,0x7ff8da10fb34,65518376,0,0x0,8
tick,0x7ff8da10fb34,65534067,0,0x0,8
tick,0x7ff8da10fb34,65549477,0,0x0,8
tick,0x7ff8da10fb34,65565324,0,0x0,8
tick,0x7ff8da10fb34,65581439,0,0x0,8
tick,0x7ff8da10fb34,65597810,0,0x0,8
tick,0x7ff8da10fb34,65613492,0,0x0,8
tick,0x7ff8da10fb34,65629439,0,0x0,8
tick,0x7ff8da10fb34,65644345,0,0x0,8
tick,0x7ff8da10fb34,65660221,0,0x0,8
tick,0x7ff8da10fb34,65675439,0,0x0,8
tick,0x7ff8da10fb34,65690854,0,0x0,8
tick,0x7ff8da10fb34,65707169,0,0x0,8
tick,0x7ff8da10fb34,65722543,0,0x0,8
tick,0x7ff8da10fb34,65738930,0,0x0,8
tick,0x7ff8da10fb34,65754412,0,0x0,8
tick,0x7ff8da10fb34,65769267,0,0x0,8
tick,0x7ff8da10fb34,65784605,0,0x0,8
tick,0x7ff8da10fb34,65799700,0,0x0,8
tick,0x7ff8da10fb34,65815281,0,0x0,8
tick,0x7ff8da10fb34,65830479,0,0x0,8
tick,0x7ff8da10fb34,65846536,0,0x0,8
tick,0x7ff8da10fb34,65862353,0,0x0,8
tick,0x7ff8da10fb34,65877201,0,0x0,8
tick,0x7ff8da10fb34,65892258,0,0x0,8
tick,0x7ff8da10fb34,65907749,0,0x0,8
tick,0x7ff8da10fb34,65923606,0,0x0,8
tick,0x7ff8da10fb34,65939489,0,0x0,8
tick,0x7ff8da10fb34,65955255,0,0x0,8
tick,0x7ff8da10fb34,65970889,0,0x0,8
tick,0x7ff8da10fb34,65987211,0,0x0,8
tick,0x7ff8da10fb34,66001910,0,0x0,8
tick,0x7ff8da10fb34,66017266,0,0x0,8
tick,0x7ff8da10fb34,66033466,0,0x0,8
tick,0x7ff8da10fb34,66048767,0,0x0,8
tick,0x7ff8da10fb34,66064375,0,0x0,8
tick,0x7ff8da10fb34,66079668,0,0x0,8
tick,0x7ff8da10fb34,66095174,0,0x0,8
tick,0x7ff8da10fb34,66110396,0,0x0,8
tick,0x7ff8da10fb34,66126253,0,0x0,8
tick,0x7ff8da10fb34,66141341,0,0x0,8
tick,0x7ff8da10fb34,66157862,0,0x0,8
tick,0x7ff8da10fb34,66172506,0,0x0,8
tick,0x7ff8da10fb34,66187145,0,0x0,8
tick,0x7ff8da10fb34,66202296,0,0x0,8
tick,0x7ff8da10fb34,66217670,0,0x0,8
tick,0x7ff8da10fb34,66233032,0,0x0,8
tick,0x7ff8da10fb34,66248516,0,0x0,8
tick,0x7ff8da10fb34,66264321,0,0x0,8
tick,0x7ff8da10fb34,66279976,0,0x0,8
tick,0x7ff8da10fb34,66295078,0,0x0,8
tick,0x7ff8da10fb34,66310595,0,0x0,8
tick,0x7ff8da10fb34,66325601,0,0x0,8
tick,0x7ff8da10fb34,66341698,0,0x0,8
tick,0x7ff8da10fb34,66356582,0,0x0,8
tick,0x7ff8da10fb34,66372688,0,0x0,8
tick,0x7ff8da10fb34,66388608,0,0x0,8
tick,0x7ff8da10fb34,66403608,0,0x0,8
tick,0x7ff8da10fb34,66418467,0,0x0,8
tick,0x7ff8da10fb34,66434372,0,0x0,8
tick,0x7ff8da10fb34,66449766,0,0x0,8
tick,0x7ff8da10fb34,66464603,0,0x0,8
tick,0x7ff8da10fb34,66479513,0,0x0,8
tick,0x7ff8da10fb34,66495063,0,0x0,8
tick,0x7ff8da10fb34,66510348,0,0x0,8
tick,0x7ff8da10fb34,66526293,0,0x0,8
tick,0x7ff8da10fb34,66541849,0,0x0,8
tick,0x7ff8da10fb34,66557157,0,0x0,8
tick,0x7ff8da10fb34,66572516,0,0x0,8
tick,0x7ff8da10fb34,66588472,0,0x0,8
tick,0x7ff8da10fb34,66603608,0,0x0,8
tick,0x7ff8da10fb34,66618341,0,0x0,8
tick,0x7ff8da10fb34,66633071,0,0x0,8
tick,0x7ff8da10fb34,66648992,0,0x0,8
tick,0x7ff8da10fb34,66664574,0,0x0,8
tick,0x7ff8da10fb34,66679424,0,0x0,8
tick,0x7ff8da10fb34,66694743,0,0x0,8
tick,0x7ff8da10fb34,66709951,0,0x0,8
tick,0x7ff8da10fb34,66725414,0,0x0,8
tick,0x7ff8da10fb34,66740443,0,0x0,8
tick,0x7ff8da10fb34,66756750,0,0x0,8
tick,0x7ff8da10fb34,66771501,0,0x0,8
tick,0x7ff8da10fb34,66786792,0,0x0,8
tick,0x7ff8da10fb34,66802882,0,0x0,8
tick,0x7ff8da10fb34,66817380,0,0x0,8
tick,0x7ff8da10fb34,66832808,0,0x0,8
tick,0x7ff8da10fb34,66848237,0,0x0,8
tick,0x7ff8da10fb34,66863430,0,0x0,8
tick,0x7ff8da10fb34,66878691,0,0x0,8
tick,0x7ff8da10fb34,66893880,0,0x0,8
tick,0x7ff8da10fb34,66909266,0,0x0,8
tick,0x7ff8da10fb34,66924653,0,0x0,8
tick,0x7ff8da10fb34,66939852,0,0x0,8
tick,0x7ff8da10fb34,66955657,0,0x0,8
tick,0x7ff8da10fb34,66972166,0,0x0,8
tick,0x7ff8da10fb34,66987096,0,0x0,8
tick,0x7ff8da10fb34,67002837,0,0x0,8
tick,0x7ff8da10fb34,67017417,0,0x0,8
tick,0x7ff8da10fb34,67032596,0,0x0,8
tick,0x7ff8da10fb34,67047762,0,0x0,8
tick,0x7ff8da10fb34,67062820,0,0x0,8
tick,0x7ff8da10fb34,67078335,0,0x0,8
tick,0x7ff8da10fb34,67093812,0,0x0,8
tick,0x7ff8da10fb34,67109473,0,0x0,8
tick,0x7ff8da10fb34,67124372,0,0x0,8
tick,0x7ff8da10fb34,67139715,0,0x0,8
tick,0x7ff8da10fb34,67155488,0,0x0,8
tick,0x7ff8da10fb34,67171560,0,0x0,8
tick,0x7ff8da10fb34,67188615,0,0x0,8
tick,0x7ff8da10fb34,67201551,0,0x0,8
tick,0x7ff8da10fb34,67217108,0,0x0,8
tick,0x7ff8da10fb34,67232407,0,0x0,8
tick,0x7ff8da10fb34,67247684,0,0x0,8
tick,0x7ff8da10fb34,67262527,0,0x0,8
tick,0x7ff8da10fb34,67277342,0,0x0,8
tick,0x7ff8da10fb34,67293118,0,0x0,8
tick,0x7ff8da10fb34,67308557,0,0x0,8
tick,0x7ff8da10fb34,67325222,0,0x0,8
tick,0x7ff8da10fb34,67340592,0,0x0,8
tick,0x7ff8da10fb34,67356443,0,0x0,8
tick,0x7ff8da10fb34,67371557,0,0x0,8
tick,0x7ff8da10fb34,67387665,0,0x0,8
tick,0x7ff8da10fb34,67403501,0,0x0,8
tick,0x7ff8da10fb34,67418226,0,0x0,8
tick,0x7ff8da10fb34,67433408,0,0x0,8
tick,0x7ff8da10fb34,67448714,0,0x0,8
tick,0x7ff8da10fb34,67464343,0,0x0,8
tick,0x7ff8da10fb34,67479571,0,0x0,8
tick,0x7ff8da10fb34,67494230,0,0x0,8
tick,0x7ff8da10fb34,67509650,0,0x0,8
tick,0x7ff8da10fb34,67524943,0,0x0,8
tick,0x7ff8da10fb34,67540616,0,0x0,8
tick,0x7ff8da10fb34,67556491,0,0x0,8
tick,0x7ff8da10fb34,67571985,0,0x0,8
tick,0x7ff8da10fb34,67588237,0,0x0,8
tick,0x7ff8da10fb34,67603313,0,0x0,8
tick,0x7ff8da10fb34,67618290,0,0x0,8
tick,0x7ff8da10fb34,67634466,0,0x0,8
tick,0x7ff8da10fb34,67649843,0,0x0,8
tick,0x7ff8da10fb34,67665413,0,0x0,8
tick,0x7ff8da10fb34,67680894,0,0x0,8
tick,0x7ff8da10fb34,67696325,0,0x0,8
tick,0x7ff8da10fb34,67712401,0,0x0,8
tick,0x7ff8da10fb34,67727238,0,0x0,8
tick,0x7ff8da10fb34,67742087,0,0x0,8
tick,0x7ff8da10fb34,67757692,0,0x0,8
tick,0x7ff8da10fb34,67773111,0,0x0,8
tick,0x7ff8da10fb34,67788484,0,0x0,8
tick,0x7ff8da10fb34,67804537,0,0x0,8
tick,0x7ff8da10fb34,67819820,0,0x0,8
tick,0x7ff8da10fb34,67834485,0,0x0,8
tick,0x7ff8da10fb34,67849228,0,0x0,8
tick,0x7ff8da10fb34,67864332,0,0x0,8
tick,0x7ff8da10fb34,67879857,0,0x0,8
tick,0x7ff8da10fb34,67895291,0,0x0,8
tick,0x7ff8da10fb34,67910354,0,0x0,8
tick,0x7ff8da10fb34,67926366,0,0x0,8
tick,0x7ff8da10fb34,67942279,0,0x0,8
tick,0x7ff8da10fb34,67957740,0,0x0,8
tick,0x7ff8da10fb34,67973302,0,0x0,8
tick,0x7ff8da10fb34,67988462,0,0x0,8
tick,0x7ff8da10fb34,68004794,0,0x0,8
tick,0x7ff8da10fb34,68019885,0,0x0,8
tick,0x7ff8da10fb34,68034397,0,0x0,8
tick,0x7ff8da10fb34,68050411,0,0x0,8
tick,0x7ff8da10fb34,68066591,0,0x0,8
tick,0x7ff8da10fb34,68081402,0,0x0,8
tick,0x7ff8da10fb34,68096283,0,0x0,8
tick,0x7ff8da10fb34,68111008,0,0x0,8
tick,0x7ff8da10fb34,68126359,0,0x0,8
tick,0x7ff8da10fb34,68142393,0,0x0,8
tick,0x7ff8da10fb34,68158220,0,0x0,8
tick,0x7ff8da10fb34,68174352,0,0x0,8
tick,0x7ff8da10fb34,68190078,0,0x0,8
tick,0x7ff8da10fb34,68209908,0,0x0,8
tick,0x7ff8da10fb34,68220771,0,0x0,8
tick,0x7ff8da10fb34,68235864,0,0x0,8
tick,0x7ff8da10fb34,68251435,0,0x0,8
tick,0x7ff8da10fb34,68267136,0,0x0,8
tick,0x7ff8da10fb34,68283155,0,0x0,8
tick,0x7ff8da10fb34,68299040,0,0x0,8
tick,0x7ff8da10fb34,68314175,0,0x0,8
tick,0x7ff8da10fb34,68330068,0,0x0,8
tick,0x7ff8da10fb34,68344440,0,0x0,8
tick,0x7ff8da10fb34,68359783,0,0x0,8
tick,0x7ff8da10fb34,68375758,0,0x0,8
tick,0x7ff8da10fb34,68391846,0,0x0,8
tick,0x7ff8da10fb34,68407740,0,0x0,8
tick,0x7ff8da10fb34,68422859,0,0x0,8
tick,0x7ff8da10fb34,68437825,0,0x0,8
tick,0x7ff8da10fb34,68453885,0,0x0,8
tick,0x7ff8da10fb34,68469886,0,0x0,8
tick,0x7ff8da10fb34,68485879,0,0x0,8
tick,0x7ff8da10fb34,68501903,0,0x0,8
tick,0x7ff8da10fb34,68517718,0,0x0,8
tick,0x7ff8da10fb34,68533675,0,0x0,8
tick,0x7ff8da10fb34,68548733,0,0x0,8
tick,0x7ff8da10fb34,68563733,0,0x0,8
tick,0x7ff8da10fb34,68579114,0,0x0,8
tick,0x7ff8da10fb34,68594097,0,0x0,8
tick,0x7ff8da10fb34,68609668,0,0x0,8
tick,0x7ff8da10fb34,68625038,0,0x0,8
tick,0x7ff8da10fb34,68640328,0,0x0,8
tick,0x7ff8da10fb34,68655759,0,0x0,8
tick,0x7ff8da10fb34,68671389,0,0x0,8
tick,0x7ff8da10fb34,68688126,0,0x0,8
tick,0x7ff8da10fb34,68705845,0,0x0,8
tick,0x7ff8da10fb34,68718964,0,0x0,8
tick,0x7ff8da10fb34,68733574,0,0x0,8
tick,0x7ff8da10fb34,68749356,0,0x0,8
tick,0x7ff8da10fb34,68765534,0,0x0,8
tick,0x7ff8da10fb34,68781312,0,0x0,8
tick,0x7ff8da10fb34,68797579,0,0x0,8
tick,0x7ff8da10fb34,68813402,0,0x0,8
tick,0x7ff8da10fb34,68829101,0,0x0,8
tick,0x7ff8da10fb34,68844312,0,0x0,8
tick,0x7ff8da10fb34,68859582,0,0x0,8
tick,0x7ff8da10fb34,68874797,0,0x0,8
tick,0x7ff8da10fb34,68889985,0,0x0,8
tick,0x7ff8da10fb34,68905611,0,0x0,8
tick,0x7ff8da10fb34,68921252,0,0x0,8
tick,0x7ff8da10fb34,68937559,0,0x0,8
tick,0x7ff8da10fb34,68952411,0,0x0,8
tick,0x7ff8da10fb34,68967202,0,0x0,8
tick,0x7ff8da10fb34,68982338,0,0x0,8
tick,0x7ff8da10fb34,68998193,0,0x0,8
tick,0x7ff8da10fb34,69013510,0,0x0,8
tick,0x7ff8da10fb34,69028293,0,0x0,8
tick,0x7ff8da10fb34,69043087,0,0x0,8
tick,0x7ff8da10fb34,69058711,0,0x0,8
tick,0x7ff8da10fb34,69074362,0,0x0,8
tick,0x7ff8da10fb34,69090241,0,0x0,8
tick,0x7ff8da10fb34,69105956,0,0x0,8
tick,0x7ff8da10fb34,69121311,0,0x0,8
tick,0x7ff8da10fb34,69137250,0,0x0,8
tick,0x7ff8da10fb34,69151988,0,0x0,8
tick,0x7ff8da10fb34,69167219,0,0x0,8
tick,0x7ff8da10fb34,69182409,0,0x0,8
tick,0x7ff8da10fb34,69198291,0,0x0,8
tick,0x7ff8da10fb34,69213795,0,0x0,8
tick,0x7ff8da10fb34,69228633,0,0x0,8
tick,0x7ff8da10fb34,69244289,0,0x0,8
tick,0x7ff8da10fb34,69259492,0,0x0,8
tick,0x7ff8da10fb34,69274957,0,0x0,8
tick,0x7ff8da10fb34,69290247,0,0x0,8
tick,0x7ff8da10fb34,69306699,0,0x0,8
tick,0x7ff8da10fb34,69322334,0,0x0,8
tick,0x7ff8da10fb34,69338312,0,0x0,8
tick,0x7ff8da10fb34,69354385,0,0x0,8
tick,0x7ff8da10fb34,69370529,0,0x0,8
tick,0x7ff8da10fb34,69386716,0,0x0,8
tick,0x7ff8da10fb34,69401792,0,0x0,8
tick,0x7ff8da10fb34,69416247,0,0x0,8
tick,0x7ff8da10fb34,69431548,0,0x0,8
tick,0x7ff8da10fb34,69447342,0,0x0,8
tick,0x7ff8da10fb34,69462316,0,0x0,8
tick,0x7ff8da10fb34,69477869,0,0x0,8
tick,0x7ff8da10fb34,69493489,0,0x0,8
tick,0x7ff8da10fb34,69508336,0,0x0,8
tick,0x7ff8da10fb34,69523828,0,0x0,8
tick,0x7ff8da10fb34,69539327,0,0x0,8
tick,0x7ff8da10fb34,69554334,0,0x0,8
tick,0x7ff8da10fb34,69570311,0,0x0,8
tick,0x7ff8da10fb34,69585222,0,0x0,8
tick,0x7ff8da10fb34,69600366,0,0x0,8
tick,0x7ff8da10fb34,69616482,0,0x0,8
tick,0x7ff8da10fb34,69632381,0,0x0,8
tick,0x7ff8da10fb34,69648059,0,0x0,8
tick,0x7ff8da10fb34,69663350,0,0x0,8
tick,0x7ff8da10fb34,69678562,0,0x0,8
tick,0x7ff8da10fb34,69694268,0,0x0,8
tick,0x7ff8da10fb34,69710122,0,0x0,8
tick,0x7ff8da10fb34,69725965,0,0x0,8
tick,0x7ff8da10fb34,69741423,0,0x0,8
tick,0x7ff8da10fb34,69756262,0,0x0,8
tick,0x7ff8da10fb34,69772126,0,0x0,8
tick,0x7ff8da10fb34,69787313,0,0x0,8
tick,0x7ff8da10fb34,69803600,0,0x0,8
tick,0x7ff8da10fb34,69819054,0,0x0,8
tick,0x7ff8da10fb34,69833982,0,0x0,8
tick,0x7ff8da10fb34,69849473,0,0x0,8
tick,0x7ff8da10fb34,69865241,0,0x0,8
tick,0x7ff8da10fb34,69881362,0,0x0,8
tick,0x7ff8da10fb34,69897150,0,0x0,8
tick,0x7ff8da10fb34,69912321,0,0x0,8
tick,0x7ff8da10fb34,69927740,0,0x0,8
tick,0x7ff8da10fb34,69943375,0,0x0,8
tick,0x7ff8da10fb34,69959298,0,0x0,8
tick,0x7ff8da10fb34,69975372,0,0x0,8
tick,0x7ff8da10fb34,69990404,0,0x0,8
tick,0x7ff8da10fb34,70006320,0,0x0,8
tick,0x7ff8da10fb34,70021920,0,0x0,8
tick,0x7ff8da10fb34,70037507,0,0x0,8
tick,0x7ff8da10fb34,70053530,0,0x0,8
tick,0x7ff8da10fb34,70068989,0,0x0,8
tick,0x7ff8da10fb34,70084842,0,0x0,8
tick,0x7ff8da10fb34,70099281,0,0x0,8
tick,0x7ff8da10fb34,70114544,0,0x0,8
tick,0x7ff8da10fb34,70129801,0,0x0,8
tick,0x7ff8da10fb34,70145273,0,0x0,8
tick,0x7ff8da10fb34,70161340,0,0x0,8
tick,0x7ff8da10fb34,70176643,0,0x0,8
tick,0x7ff8da10fb34,70192389,0,0x0,8
tick,0x7ff8da10fb34,70208234,0,0x0,8
tick,0x7ff8da10fb34,70223881,0,0x0,8
tick,0x7ff8da10fb34,70239346,0,0x0,8
tick,0x7ff8da10fb34,70255150,0,0x0,8
tick,0x7ff8da10fb34,70270689,0,0x0,8
tick,0x7ff8da10fb34,70287245,0,0x0,8
tick,0x7ff8da10fb34,70301622,0,0x0,8
tick,0x7ff8da10fb34,70317034,0,0x0,8
tick,0x7ff8da10fb34,70331722,0,0x0,8
tick,0x7ff8da10fb34,70346221,0,0x0,8
tick,0x7ff8da10fb34,70362455,0,0x0,8
tick,0x7ff8da10fb34,70377505,0,0x0,8
tick,0x7ff8da10fb34,70392347,0,0x0,8
tick,0x7ff8da10fb34,70408353,0,0x0,8
tick,0x7ff8da10fb34,70423602,0,0x0,8
tick,0x7ff8da10fb34,70438431,0,0x0,8
tick,0x7ff8da10fb34,70453973,0,0x0,8
tick,0x7ff8da10fb34,70469473,0,0x0,8
tick,0x7ff8da10fb34,70484700,0,0x0,8
tick,0x7ff8da10fb34,70499550,0,0x0,8
tick,0x7ff8da10fb34,70515241,0,0x0,8
tick,0x7ff8da10fb34,70530333,0,0x0,8
tick,0x7ff8da10fb34,70546453,0,0x0,8
tick,0x7ff8da10fb34,70562309,0,0x0,8
tick,0x7ff8da10fb34,70578058,0,0x0,8
tick,0x7ff8da10fb34,70593265,0,0x0,8
tick,0x7ff8da10fb34,70608453,0,0x0,8
tick,0x7ff8da10fb34,70623907,0,0x0,8
tick,0x7ff8da10fb34,70639263,0,0x0,8
tick,0x7ff8da10fb34,70654297,0,0x0,8
tick,0x7ff8da10fb34,70670013,0,0x0,8
tick,0x7ff8da10fb34,70685398,0,0x0,8
tick,0x7ff8da10fb34,70700323,0,0x0,8
tick,0x7ff8da10fb34,70716513,0,0x0,8
tick,0x7ff8da10fb34,70731477,0,0x0,8
tick,0x7ff8da10fb34,70746427,0,0x0,8
tick,0x7ff8da10fb34,70762222,0,0x0,8
tick,0x7ff8da10fb34,70778319,0,0x0,8
tick,0x7ff8da10fb34,70793680,0,0x0,8
tick,0x7ff8da10fb34,70809610,0,0x0,8
tick,0x7ff8da10fb34,70824641,0,0x0,8
tick,0x7ff8da10fb34,70840007,0,0x0,8
tick,0x7ff8da10fb34,70855232,0,0x0,8
tick,0x7ff8da10fb34,70870729,0,0x0,8
tick,0x7ff8da10fb34,70886665,0,0x0,8
tick,0x7ff8da10fb34,70901282,0,0x0,8
tick,0x7ff8da10fb34,70918048,0,0x0,8
tick,0x7ff8da10fb34,70933216,0,0x0,8
tick,0x7ff8da10fb34,70949254,0,0x0,8
tick,0x7ff8da10fb34,70964279,0,0x0,8
tick,0x7ff8da10fb34,70979654,0,0x0,8
tick,0x7ff8da10fb34,70995348,0,0x0,8
tick,0x7ff8da10fb34,71011334,0,0x0,8
tick,0x7ff8da10fb34,71027378,0,0x0,8
tick,0x7ff8da10fb34,71043512,0,0x0,8
tick,0x7ff8da10fb34,71058793,0,0x0,8
tick,0x7ff8da10fb34,71074021,0,0x0,8
tick,0x7ff8da10fb34,71089084,0,0x0,8
tick,0x7ff8da10fb34,71104769,0,0x0,8
tick,0x7ff8da10fb34,71120692,0,0x0,8
tick,0x7ff8da10fb34,71136723,0,0x0,8
tick,0x7ff8da10fb34,71151515,0,0x0,8
tick,0x7ff8da10fb34,71167727,0,0x0,8
tick,0x7ff8da10fb34,71183313,0,0x0,8
tick,0x7ff8da10fb34,71199157,0,0x0,8
tick,0x7ff8da10fb34,71214343,0,0x0,8
tick,0x7ff8da10fb34,71229668,0,0x0,8
tick,0x7ff8da10fb34,71245497,0,0x0,8
tick,0x7ff8da10fb34,71260504,0,0x0,8
tick,0x7ff8da10fb34,71277054,0,0x0,8
tick,0x7ff8da10fb34,71291890,0,0x0,8
tick,0x7ff8da10fb34,71307335,0,0x0,8
tick,0x7ff8da10fb34,71322321,0,0x0,8
tick,0x7ff8da10fb34,71338503,0,0x0,8
tick,0x7ff8da10fb34,71354414,0,0x0,8
tick,0x7ff8da10fb34,71370373,0,0x0,8
tick,0x7ff8da10fb34,71386366,0,0x0,8
tick,0x7ff8da10fb34,71401341,0,0x0,8
tick,0x7ff8da10fb34,71416439,0,0x0,8
tick,0x7ff8da10fb34,71431047,0,0x0,8
tick,0x7ff8da10fb34,71446404,0,0x0,8
tick,0x7ff8da10fb34,71462371,0,0x0,8
tick,0x7ff8da10fb34,71477384,0,0x0,8
tick,0x7ff8da10fb34,71492437,0,0x0,8
tick,0x7ff8da10fb34,71508298,0,0x0,8
tick,0x7ff8da10fb34,71523436,0,0x0,8
tick,0x7ff8da10fb34,71539143,0,0x0,8
tick,0x7ff8da10fb34,71554508,0,0x0,8
tick,0x7ff8da10fb34,71570583,0,0x0,8
tick,0x7ff8da10fb34,71586205,0,0x0,8
tick,0x7ff8da10fb34,71601141,0,0x0,8
tick,0x7ff8da10fb34,71616383,0,0x0,8
tick,0x7ff8da10fb34,71631555,0,0x0,8
tick,0x7ff8da10fb34,71647410,0,0x0,8
tick,0x7ff8da10fb34,71662455,0,0x0,8
tick,0x7ff8da10fb34,71677507,0,0x0,8
tick,0x7ff8da10fb34,71692301,0,0x0,8
tick,0x7ff8da10fb34,71708170,0,0x0,8
tick,0x7ff8da10fb34,71723366,0,0x0,8
tick,0x7ff8da10fb34,71738804,0,0x0,8
tick,0x7ff8da10fb34,71754489,0,0x0,8
tick,0x7ff8da10fb34,71770122,0,0x0,8
tick,0x7ff8da10fb34,71785345,0,0x0,8
tick,0x7ff8da10fb34,71799787,0,0x0,8
tick,0x7ff8da10fb34,71815299,0,0x0,8
tick,0x7ff8da10fb34,71831344,0,0x0,8
tick,0x7ff8da10fb34,71847358,0,0x0,8
tick,0x7ff8da10fb34,71863433,0,0x0,8
tick,0x7ff8da10fb34,71879287,0,0x0,8
tick,0x7ff8da10fb34,71894292,0,0x0,8
tick,0x7ff8da10fb34,71909770,0,0x0,8
tick,0x7ff8da10fb34,71925114,0,0x0,8
tick,0x7ff8da10fb34,71940287,0,0x0,8
tick,0x7ff8da10fb34,71956227,0,0x0,8
tick,0x7ff8da10fb34,71971562,0,0x0,8
tick,0x7ff8da10fb34,71986911,0,0x0,8
tick,0x7ff8da10fb34,72002693,0,0x0,8
tick,0x7ff8da10fb34,72017646,0,0x0,8
tick,0x7ff8da10fb34,72033124,0,0x0,8
tick,0x7ff8da10fb34,72048306,0,0x0,8
tick,0x7ff8da10fb34,72064361,0,0x0,8
tick,0x7ff8da10fb34,72078880,0,0x0,8
tick,0x7ff8da10fb34,72094434,0,0x0,8
tick,0x7ff8da10fb34,72110085,0,0x0,8
tick,0x7ff8da10fb34,72125220,0,0x0,8
tick,0x7ff8da10fb34,72141278,0,0x0,8
tick,0x7ff8da10fb34,72156459,0,0x0,8
tick,0x7ff8da10fb34,72171385,0,0x0,8
tick,0x7ff8da10fb34,72186932,0,0x0,8
tick,0x7ff8da10fb34,72202211,0,0x0,8
tick,0x7ff8da10fb34,72217622,0,0x0,8
tick,0x7ff8da10fb34,72232747,0,0x0,8
tick,0x7ff8da10fb34,72248670,0,0x0,8
tick,0x7ff8da10fb34,72264356,0,0x0,8
tick,0x7ff8da10fb34,72280118,0,0x0,8
tick,0x7ff8da10fb34,72295326,0,0x0,8
tick,0x7ff8da10fb34,72310292,0,0x0,8
tick,0x7ff8da10fb34,72326412,0,0x0,8
tick,0x7ff8da10fb34,72341998,0,0x0,8
tick,0x7ff8da10fb34,72357169,0,0x0,8
tick,0x7ff8da10fb34,72372517,0,0x0,8
tick,0x7ff8da10fb34,72387498,0,0x0,8
tick,0x7ff8da10fb34,72403146,0,0x0,8
tick,0x7ff8da10fb34,72418457,0,0x0,8
tick,0x7ff8da10fb34,72434198,0,0x0,8
tick,0x7ff8da10fb34,72450502,0,0x0,8
tick,0x7ff8da10fb34,72465354,0,0x0,8
tick,0x7ff8da10fb34,72480675,0,0x0,8
tick,0x7ff8da10fb34,72496318,0,0x0,8
tick,0x7ff8da10fb34,72512351,0,0x0,8
tick,0x7ff8da10fb34,72528308,0,0x0,8
tick,0x7ff8da10fb34,72544338,0,0x0,8
tick,0x7ff8da10fb34,72559773,0,0x0,8
tick,0x7ff8da10fb34,72575314,0,0x0,8
tick,0x7ff8da10fb34,72590367,0,0x0,8
tick,0x7ff8da10fb34,72605225,0,0x0,8
tick,0x7ff8da10fb34,72620020,0,0x0,8
tick,0x7ff8da10fb34,72635817,0,0x0,8
tick,0x7ff8da10fb34,72650751,0,0x0,8
tick,0x7ff8da10fb34,72666370,0,0x0,8
tick,0x7ff8da10fb34,72682419,0,0x0,8
tick,0x7ff8da10fb34,72698359,0,0x0,8
tick,0x7ff8da10fb34,72713411,0,0x0,8
tick,0x7ff8da10fb34,72728741,0,0x0,8
tick,0x7ff8da10fb34,72744337,0,0x0,8
tick,0x7ff8da10fb34,72759838,0,0x0,8
tick,0x7ff8da10fb34,72775183,0,0x0,8
tick,0x7ff8da10fb34,72791199,0,0x0,8
tick,0x7ff8da10fb34,72807166,0,0x0,8
tick,0x7ff8da10fb34,72821340,0,0x0,8
tick,0x7ff8da10fb34,72837333,0,0x0,8
tick,0x7ff8da10fb34,72852980,0,0x0,8
tick,0x7ff8da10fb34,72868271,0,0x0,8
tick,0x7ff8da10fb34,72884409,0,0x0,8
tick,0x7ff8da10fb34,72900235,0,0x0,8
tick,0x7ff8da10fb34,72915322,0,0x0,8
tick,0x7ff8da10fb34,72930535,0,0x0,8
tick,0x7ff8da10fb34,72946345,0,0x0,8
tick,0x7ff8da10fb34,72962345,0,0x0,8
tick,0x7ff8da10fb34,72977368,0,0x0,8
tick,0x7ff8da10fb34,72992529,0,0x0,8
tick,0x7ff8da10fb34,73008465,0,0x0,8
tick,0x7ff8da10fb34,73023976,0,0x0,8
tick,0x7ff8da10fb34,73039401,0,0x0,8
tick,0x7ff8da10fb34,73054925,0,0x0,8
tick,0x7ff8da10fb34,73070567,0,0x0,8
tick,0x7ff8da10fb34,73086718,0,0x0,8
tick,0x7ff8da10fb34,73102383,0,0x0,8
tick,0x7ff8da10fb34,73117619,0,0x0,8
tick,0x7ff8da10fb34,73132231,0,0x0,8
tick,0x7ff8da10fb34,73147372,0,0x0,8
tick,0x7ff8da10fb34,73163329,0,0x0,8
tick,0x7ff8da10fb34,73178947,0,0x0,8
tick,0x7ff8da10fb34,73195017,0,0x0,8
tick,0x7ff8da10fb34,73210013,0,0x0,8
tick,0x7ff8da10fb34,73225710,0,0x0,8
tick,0x7ff8da10fb34,73239570,0,0x0,8
tick,0x7ff8da10fb34,73256992,0,0x0,8
tick,0x7ff8da10fb34,73270608,0,0x0,8
tick,0x7ff8da10fb34,73286485,0,0x0,8
tick,0x7ff8da10fb34,73302663,0,0x0,8
tick,0x7ff8da10fb34,73319587,0,0x0,8
tick,0x7ff8da10fb34,73332091,0,0x0,8
tick,0x7ff8da10fb34,73346891,0,0x0,8
tick,0x7ff8da10fb34,73361736,0,0x0,8
tick,0x7ff8da10fb34,73377760,0,0x0,8
tick,0x7ff8da10fb34,73393767,0,0x0,8
tick,0x7ff8da10fb34,73408736,0,0x0,8
tick,0x7ff8da10fb34,73423684,0,0x0,8
tick,0x7ff8da10fb34,73439747,0,0x0,8
tick,0x7ff8da10fb34,73455723,0,0x0,8
tick,0x7ff8da10fb34,73471727,0,0x0,8
tick,0x7ff8da10fb34,73486716,0,0x0,8
tick,0x7ff8da10fb34,73501746,0,0x0,8
tick,0x7ff8da10fb34,73517717,0,0x0,8
tick,0x7ff8da10fb34,73532649,0,0x0,8
tick,0x7ff8da10fb34,73547672,0,0x0,8
tick,0x7ff8da10fb34,73563647,0,0x0,8
tick,0x7ff8da10fb34,73579092,0,0x0,8
tick,0x7ff8da10fb34,73594623,0,0x0,8
tick,0x7ff8da10fb34,73609738,0,0x0,8
tick,0x7ff8da10fb34,73625192,0,0x0,8
tick,0x7ff8da10fb34,73640576,0,0x0,8
tick,0x7ff8da10fb34,73656348,0,0x0,8
tick,0x7ff8da10fb34,73671625,0,0x0,8
tick,0x7ff8da10fb34,73687076,0,0x0,8
tick,0x7ff8da10fb34,73702819,0,0x0,8
tick,0x7ff8da10fb34,73718944,0,0x0,8
tick,0x7ff8da10fb34,73733480,0,0x0,8
tick,0x7ff8da10fb34,73749086,0,0x0,8
tick,0x7ff8da10fb34,73764300,0,0x0,8
tick,0x7ff8da10fb34,73779564,0,0x0,8
tick,0x7ff8da10fb34,73795207,0,0x0,8
tick,0x7ff8da10fb34,73810669,0,0x0,8
tick,0x7ff8da10fb34,73826413,0,0x0,8
tick,0x7ff8da10fb34,73841311,0,0x0,8
tick,0x7ff8da10fb34,73857301,0,0x0,8
tick,0x7ff8da10fb34,73871921,0,0x0,8
tick,0x7ff8da10fb34,73887837,0,0x0,8
tick,0x7ff8da10fb34,73903944,0,0x0,8
tick,0x7ff8da10fb34,73919097,0,0x0,8
tick,0x7ff8da10fb34,73935150,0,0x0,8
tick,0x7ff8da10fb34,73950467,0,0x0,8
tick,0x7ff8da10fb34,73965273,0,0x0,8
tick,0x7ff8da10fb34,73980375,0,0x0,8
tick,0x7ff8da10fb34,73996340,0,0x0,8
tick,0x7ff8da10fb34,74011515,0,0x0,8
tick,0x7ff8da10fb34,74027151,0,0x0,8
tick,0x7ff8da10fb34,74042379,0,0x0,8
tick,0x7ff8da10fb34,74057266,0,0x0,8
tick,0x7ff8da10fb34,74072051,0,0x0,8
tick,0x7ff8da10fb34,74087504,0,0x0,8
tick,0x7ff8da10fb34,74103285,0,0x0,8
tick,0x7ff8da10fb34,74119162,0,0x0,8
tick,0x7ff8da10fb34,74135345,0,0x0,8
tick,0x7ff8da10fb34,74150447,0,0x0,8
tick,0x7ff8da10fb34,74166760,0,0x0,8
tick,0x7ff8da10fb34,74181431,0,0x0,8
tick,0x7ff8da10fb34,74197439,0,0x0,8
tick,0x7ff8da10fb34,74212344,0,0x0,8
tick,0x7ff8da10fb34,74228278,0,0x0,8
tick,0x7ff8da10fb34,74244329,0,0x0,8
tick,0x7ff8da10fb34,74259714,0,0x0,8
tick,0x7ff8da10fb34,74275087,0,0x0,8
tick,0x7ff8da10fb34,74290401,0,0x0,8
tick,0x7ff8da10fb34,74307059,0,0x0,8
tick,0x7ff8da10fb34,74321532,0,0x0,8
tick,0x7ff8da10fb34,74339554,0,0x0,8
tick,0x7ff8da10fb34,74352188,0,0x0,8
tick,0x7ff8da10fb34,74368155,0,0x0,8
tick,0x7ff8da10fb34,74384586,0,0x0,8
tick,0x7ff8da10fb34,74400141,0,0x0,8
tick,0x7ff8da10fb34,74416862,0,0x0,8
tick,0x7ff8da10fb34,74432281,0,0x0,8
tick,0x7ff8da10fb34,74448225,0,0x0,8
tick,0x7ff8da10fb34,74463344,0,0x0,8
tick,0x7ff8da10fb34,74478564,0,0x0,8
tick,0x7ff8da10fb34,74494344,0,0x0,8
tick,0x7ff8da10fb34,74509341,0,0x0,8
tick,0x7ff8da10fb34,74524799,0,0x0,8
tick,0x7ff8da10fb34,74540131,0,0x0,8
tick,0x7ff8da10fb34,74556331,0,0x0,8
tick,0x7ff8da10fb34,74571648,0,0x0,8
tick,0x7ff8da10fb34,74587640,0,0x0,8
tick,0x7ff8da10fb34,74603661,0,0x0,8
tick,0x7ff8da10fb34,74618916,0,0x0,8
tick,0x7ff8da10fb34,74635128,0,0x0,8
tick,0x7ff8da10fb34,74650297,0,0x0,8
tick,0x7ff8da10fb34,74665188,0,0x0,8
tick,0x7ff8da10fb34,74681336,0,0x0,8
tick,0x7ff8da10fb34,74697511,0,0x0,8
tick,0x7ff8da10fb34,74712390,0,0x0,8
tick,0x7ff8da10fb34,74728329,0,0x0,8
tick,0x7ff8da10fb34,74743458,0,0x0,8
tick,0x7ff8da10fb34,74758024,0,0x0,8
tick,0x7ff8da10fb34,74773923,0,0x0,8
tick,0x7ff8da10fb34,74789768,0,0x0,8
tick,0x7ff8da10fb34,74805339,0,0x0,8
tick,0x7ff8da10fb34,74820808,0,0x0,8
tick,0x7ff8da10fb34,74838007,0,0x0,8
tick,0x7ff8da10fb34,74852170,0,0x0,8
tick,0x7ff8da10fb34,74868472,0,0x0,8
tick,0x7ff8da10fb34,74883430,0,0x0,8
tick,0x7ff8da10fb34,74899373,0,0x0,8
tick,0x7ff8da10fb34,74914308,0,0x0,8
tick,0x7ff8da10fb34,74929724,0,0x0,8
tick,0x7ff8da10fb34,74945286,0,0x0,8
tick,0x7ff8da10fb34,74961355,0,0x0,8
tick,0x7ff8da10fb34,74977353,0,0x0,8
tick,0x7ff8da10fb34,74993329,0,0x0,8
tick,0x7ff8da10fb34,75008441,0,0x0,8
tick,0x7ff8da10fb34,75023416,0,0x0,8
tick,0x7ff8da10fb34,75039173,0,0x0,8
tick,0x7ff8da10fb34,75054313,0,0x0,8
tick,0x7ff8da10fb34,75070376,0,0x0,8
tick,0x7ff8da10fb34,75085404,0,0x0,8
tick,0x7ff8da10fb34,75101266,0,0x0,8
tick,0x7ff8da10fb34,75116495,0,0x0,8
tick,0x7ff8da10fb34,75131433,0,0x0,8
tick,0x7ff8da10fb34,75147079,0,0x0,8
tick,0x7ff8da10fb34,75162327,0,0x0,8
tick,0x7ff8da10fb34,75178488,0,0x0,8
tick,0x7ff8da10fb34,75194349,0,0x0,8
tick,0x7ff8da10fb34,75210369,0,0x0,8
tick,0x7ff8da10fb34,75226328,0,0x0,8
tick,0x7ff8da10fb34,75242331,0,0x0,8
tick,0x7ff8da10fb34,75258039,0,0x0,8
tick,0x7ff8da10fb34,75273167,0,0x0,8
tick,0x7ff8da10fb34,75288411,0,0x0,8
tick,0x7ff8da10fb34,75304314,0,0x0,8
tick,0x7ff8da10fb34,75319117,0,0x0,8
tick,0x7ff8da10fb34,75335266,0,0x0,8
tick,0x7ff8da10fb34,75350021,0,0x0,8
tick,0x7ff8da10fb34,75365159,0,0x0,8
tick,0x7ff8da10fb34,75381254,0,0x0,8
tick,0x7ff8da10fb34,75397254,0,0x0,8
tick,0x7ff8da10fb34,75412303,0,0x0,8
tick,0x7ff8da10fb34,75427266,0,0x0,8
tick,0x7ff8da10fb34,75442439,0,0x0,8
tick,0x7ff8da10fb34,75457709,0,0x0,8
tick,0x7ff8da10fb34,75473335,0,0x0,8
tick,0x7ff8da10fb34,75489242,0,0x0,8
tick,0x7ff8da10fb34,75504913,0,0x0,8
tick,0x7ff8da10fb34,75520204,0,0x0,8
tick,0x7ff8da10fb34,75536193,0,0x0,8
tick,0x7ff8da10fb34,75551809,0,0x0,8
tick,0x7ff8da10fb34,75568108,0,0x0,8
tick,0x7ff8da10fb34,75583818,0,0x0,8
tick,0x7ff8da10fb34,75599102,0,0x0,8
tick,0x7ff8da10fb34,75614326,0,0x0,8
tick,0x7ff8da10fb34,75629612,0,0x0,8
tick,0x7ff8da10fb34,75645271,0,0x0,8
tick,0x7ff8da10fb34,75661579,0,0x0,8
tick,0x7ff8da10fb34,75677397,0,0x0,8
tick,0x7ff8da10fb34,75692295,0,0x0,8
tick,0x7ff8da10fb34,75708150,0,0x0,8
tick,0x7ff8da10fb34,75723365,0,0x0,8
tick,0x7ff8da10fb34,75738555,0,0x0,8
tick,0x7ff8da10fb34,75753767,0,0x0,8
tick,0x7ff8da10fb34,75769037,0,0x0,8
tick,0x7ff8da10fb34,75785083,0,0x0,8
tick,0x7ff8da10fb34,75801236,0,0x0,8
tick,0x7ff8da10fb34,75817117,0,0x0,8
tick,0x7ff8da10fb34,75832653,0,0x0,8
tick,0x7ff8da10fb34,75847704,0,0x0,8
tick,0x7ff8da10fb34,75862407,0,0x0,8
tick,0x7ff8da10fb34,75878177,0,0x0,8
tick,0x7ff8da10fb34,75893291,0,0x0,8
tick,0x7ff8da10fb34,75908598,0,0x0,8
tick,0x7ff8da10fb34,75924337,0,0x0,8
tick,0x7ff8da10fb34,75939707,0,0x0,8
tick,0x7ff8da10fb34,75954783,0,0x0,8
tick,0x7ff8da10fb34,75970271,0,0x0,8
tick,0x7ff8da10fb34,75986119,0,0x0,8
tick,0x7ff8da10fb34,76001629,0,0x0,8
tick,0x7ff8da10fb34,76017856,0,0x0,8
tick,0x7ff8da10fb34,76033144,0,0x0,8
tick,0x7ff8da10fb34,76048439,0,0x0,8
tick,0x7ff8da10fb34,76064583,0,0x0,8
tick,0x7ff8da10fb34,76079999,0,0x0,8
tick,0x7ff8da10fb34,76095279,0,0x0,8
tick,0x7ff8da10fb34,76110259,0,0x0,8
tick,0x7ff8da10fb34,76125366,0,0x0,8
tick,0x7ff8da10fb34,76140082,0,0x0,8
tick,0x7ff8da10fb34,76155191,0,0x0,8
tick,0x7ff8da10fb34,76170406,0,0x0,8
tick,0x7ff8da10fb34,76186020,0,0x0,8
tick,0x7ff8da10fb34,76201553,0,0x0,8
tick,0x7ff8da10fb34,76217458,0,0x0,8
tick,0x7ff8da10fb34,76233062,0,0x0,8
tick,0x7ff8da10fb34,76249071,0,0x0,8
tick,0x7ff8da10fb34,76264338,0,0x0,8
tick,0x7ff8da10fb34,76279648,0,0x0,8
tick,0x7ff8da10fb34,76294336,0,0x0,8
tick,0x7ff8da10fb34,76309622,0,0x0,8
tick,0x7ff8da10fb34,76325116,0,0x0,8
tick,0x7ff8da10fb34,76340755,0,0x0,8
tick,0x7ff8da10fb34,76356288,0,0x0,8
tick,0x7ff8da10fb34,76372251,0,0x0,8
tick,0x7ff8da10fb34,76387841,0,0x0,8
tick,0x7ff8da10fb34,76403372,0,0x0,8
tick,0x7ff8da10fb34,76419248,0,0x0,8
tick,0x7ff8da10fb34,76434815,0,0x0,8
tick,0x7ff8da10fb34,76450894,0,0x0,8
tick,0x7ff8da10fb34,76465519,0,0x0,8
tick,0x7ff8da10fb34,76480388,0,0x0,8
tick,0x7ff8da10fb34,76496424,0,0x0,8
tick,0x7ff8da10fb34,76511457,0,0x0,8
tick,0x7ff8da10fb34,76527034,0,0x0,8
tick,0x7ff8da10fb34,76542357,0,0x0,8
tick,0x7ff8da10fb34,76557933,0,0x0,8
tick,0x7ff8da10fb34,76573404,0,0x0,8
tick,0x7ff8da10fb34,76588733,0,0x0,8
tick,0x7ff8da10fb34,76604227,0,0x0,8
tick,0x7ff8da10fb34,76620304,0,0x0,8
tick,0x7ff8da10fb34,76635326,0,0x0,8
tick,0x7ff8da10fb34,76651376,0,0x0,8
tick,0x7ff8da10fb34,76666660,0,0x0,8
tick,0x7ff8da10fb34,76681462,0,0x0,8
tick,0x7ff8da10fb34,76697079,0,0x0,8
tick,0x7ff8da10fb34,76712408,0,0x0,8
tick,0x7ff8da10fb34,76727593,0,0x0,8
tick,0x7ff8da10fb34,76743500,0,0x0,8
tick,0x7ff8da10fb34,76759205,0,0x0,8
tick,0x7ff8da10fb34,76775259,0,0x0,8
tick,0x7ff8da10fb34,76791368,0,0x0,8
tick,0x7ff8da10fb34,76807199,0,0x0,8
tick,0x7ff8da10fb34,76822641,0,0x0,8
tick,0x7ff8da10fb34,76837353,0,0x0,8
tick,0x7ff8da10fb34,76852787,0,0x0,8
tick,0x7ff8da10fb34,76868438,0,0x0,8
tick,0x7ff8da10fb34,76884261,0,0x0,8
tick,0x7ff8da10fb34,76899583,0,0x0,8
tick,0x7ff8da10fb34,76915142,0,0x0,8
tick,0x7ff8da10fb34,76930337,0,0x0,8
tick,0x7ff8da10fb34,76945456,0,0x0,8
tick,0x7ff8da10fb34,76961305,0,0x0,8
tick,0x7ff8da10fb34,76976990,0,0x0,8
tick,0x7ff8da10fb34,76992500,0,0x0,8
tick,0x7ff8da10fb34,77007297,0,0x0,8
tick,0x7ff8da10fb34,77022267,0,0x0,8
tick,0x7ff8da10fb34,77037824,0,0x0,8
tick,0x7ff8da10fb34,77053200,0,0x0,8
tick,0x7ff8da10fb34,77069347,0,0x0,8
tick,0x7ff8da10fb34,77084635,0,0x0,8
tick,0x7ff8da10fb34,77100228,0,0x0,8
tick,0x7ff8da10fb34,77115792,0,0x0,8
tick,0x7ff8da10fb34,77130743,0,0x0,8
tick,0x7ff8da10fb34,77146300,0,0x0,8
tick,0x7ff8da10fb34,77162385,0,0x0,8
tick,0x7ff8da10fb34,77178272,0,0x0,8
tick,0x7ff8da10fb34,77194534,0,0x0,8
tick,0x7ff8da10fb34,77209576,0,0x0,8
tick,0x7ff8da10fb34,77225346,0,0x0,8
tick,0x7ff8da10fb34,77240316,0,0x0,8
tick,0x7ff8da10fb34,77256695,0,0x0,8
tick,0x7ff8da10fb34,77272222,0,0x0,8
tick,0x7ff8da10fb34,77287358,0,0x0,8
tick,0x7ff8da10fb34,77303581,0,0x0,8
tick,0x7ff8da10fb34,77319126,0,0x0,8
tick,0x7ff8da10fb34,77334321,0,0x0,8
tick,0x7ff8da10fb34,77349719,0,0x0,8
tick,0x7ff8da10fb34,77365068,0,0x0,8
tick,0x7ff8da10fb34,77380417,0,0x0,8
tick,0x7ff8da10fb34,77396580,0,0x0,8
tick,0x7ff8da10fb34,77411597,0,0x0,8
tick,0x7ff8da10fb34,77427158,0,0x0,8
tick,0x7ff8da10fb34,77442380,0,0x0,8
tick,0x7ff8da10fb34,77457577,0,0x0,8
tick,0x7ff8da10fb34,77472840,0,0x0,8
tick,0x7ff8da10fb34,77488351,0,0x0,8
tick,0x7ff8da10fb34,77503450,0,0x0,8
tick,0x7ff8da10fb34,77519215,0,0x0,8
tick,0x7ff8da10fb34,77534317,0,0x0,8
tick,0x7ff8da10fb34,77550269,0,0x0,8
tick,0x7ff8da10fb34,77565301,0,0x0,8
tick,0x7ff8da10fb34,77580471,0,0x0,8
tick,0x7ff8da10fb34,77596305,0,0x0,8
tick,0x7ff8da10fb34,77612080,0,0x0,8
tick,0x7ff8da10fb34,77627223,0,0x0,8
tick,0x7ff8da10fb34,77643322,0,0x0,8
tick,0x7ff8da10fb34,77658805,0,0x0,8
tick,0x7ff8da10fb34,77674481,0,0x0,8
tick,0x7ff8da10fb34,77689363,0,0x0,8
tick,0x7ff8da10fb34,77705020,0,0x0,8
tick,0x7ff8da10fb34,77720266,0,0x0,8
tick,0x7ff8da10fb34,77735299,0,0x0,8
tick,0x7ff8da10fb34,77750895,0,0x0,8
tick,0x7ff8da10fb34,77766984,0,0x0,8
tick,0x7ff8da10fb34,77781397,0,0x0,8
tick,0x7ff8da10fb34,77796361,0,0x0,8
tick,0x7ff8da10fb34,77811484,0,0x0,8
tick,0x7ff8da10fb34,77827728,0,0x0,8
tick,0x7ff8da10fb34,77842356,0,0x0,8
tick,0x7ff8da10fb34,77858329,0,0x0,8
tick,0x7ff8da10fb34,77873346,0,0x0,8
tick,0x7ff8da10fb34,77888776,0,0x0,8
tick,0x7ff8da10fb34,77904996,0,0x0,8
tick,0x7ff8da10fb34,77920263,0,0x0,8
tick,0x7ff8da10fb34,77935171,0,0x0,8
tick,0x7ff8da10fb34,77950802,0,0x0,8
tick,0x7ff8da10fb34,77966922,0,0x0,8
tick,0x7ff8da10fb34,77981748,0,0x0,8
tick,0x7ff8da10fb34,77997960,0,0x0,8
tick,0x7ff8da10fb34,78013317,0,0x0,8
tick,0x7ff8da10fb34,78029045,0,0x0,8
tick,0x7ff8da10fb34,78044407,0,0x0,8
tick,0x7ff8da10fb34,78059757,0,0x0,8
tick,0x7ff8da10fb34,78075365,0,0x0,8
tick,0x7ff8da10fb34,78091319,0,0x0,8
tick,0x7ff8da10fb34,78106801,0,0x0,8
tick,0x7ff8da10fb34,78122302,0,0x0,8
tick,0x7ff8da10fb34,78138243,0,0x0,8
tick,0x7ff8da10fb34,78153703,0,0x0,8
tick,0x7ff8da10fb34,78169237,0,0x0,8
tick,0x7ff8da10fb34,78185150,0,0x0,8
tick,0x7ff8da10fb34,78201890,0,0x0,8
tick,0x7ff8da10fb34,78218495,0,0x0,8
tick,0x7ff8da10fb34,78233224,0,0x0,8
tick,0x7ff8da10fb34,78248004,0,0x0,8
tick,0x7ff8da10fb34,78262877,0,0x0,8
tick,0x7ff8da10fb34,78277927,0,0x0,8
tick,0x7ff8da10fb34,78293816,0,0x0,8
tick,0x7ff8da10fb34,78308968,0,0x0,8
tick,0x7ff8da10fb34,78325525,0,0x0,8
tick,0x7ff8da10fb34,78339959,0,0x0,8
tick,0x7ff8da10fb34,78354763,0,0x0,8
tick,0x7ff8da10fb34,78370782,0,0x0,8
tick,0x7ff8da10fb34,78386761,0,0x0,8
tick,0x7ff8da10fb34,78401742,0,0x0,8
tick,0x7ff8da10fb34,78416979,0,0x0,8
tick,0x7ff8da10fb34,78431995,0,0x0,8
tick,0x7ff8da10fb34,78446767,0,0x0,8
tick,0x7ff8da10fb34,78462762,0,0x0,8
tick,0x7ff8da10fb34,78477755,0,0x0,8
tick,0x7ff8da10fb34,78492800,0,0x0,8
tick,0x7ff8da10fb34,78508715,0,0x0,8
tick,0x7ff8da10fb34,78523692,0,0x0,8
tick,0x7ff8da10fb34,78538747,0,0x0,8
tick,0x7ff8da10fb34,78554707,0,0x0,8
tick,0x7ff8da10fb34,78569836,0,0x0,8
tick,0x7ff8da10fb34,78584755,0,0x0,8
tick,0x7ff8da10fb34,78600460,0,0x0,8
tick,0x7ff8da10fb34,78616277,0,0x0,8
tick,0x7ff8da10fb34,78631755,0,0x0,8
tick,0x7ff8da10fb34,78647158,0,0x0,8
tick,0x7ff8da10fb34,78662305,0,0x0,8
tick,0x7ff8da10fb34,78677998,0,0x0,8
tick,0x7ff8da10fb34,78692269,0,0x0,8
tick,0x7ff8da10fb34,78708547,0,0x0,8
tick,0x7ff8da10fb34,78723732,0,0x0,8
tick,0x7ff8da10fb34,78739665,0,0x0,8
tick,0x7ff8da10fb34,78754740,0,0x0,8
tick,0x7ff8da10fb34,78770187,0,0x0,8
tick,0x7ff8da10fb34,78786470,0,0x0,8
tick,0x7ff8da10fb34,78801841,0,0x0,8
tick,0x7ff8da10fb34,78817222,0,0x0,8
tick,0x7ff8da10fb34,78832422,0,0x0,8
tick,0x7ff8da10fb34,78847811,0,0x0,8
tick,0x7ff8da10fb34,78863371,0,0x0,8
tick,0x7ff8da10fb34,78879278,0,0x0,8
tick,0x7ff8da10fb34,78895271,0,0x0,8
tick,0x7ff8da10fb34,78911499,0,0x0,8
tick,0x7ff8da10fb34,78927149,0,0x0,8
tick,0x7ff8da10fb34,78942605,0,0x0,8
tick,0x7ff8da10fb34,78957233,0,0x0,8
tick,0x7ff8da10fb34,78972505,0,0x0,8
tick,0x7ff8da10fb34,78988130,0,0x0,8
tick,0x7ff8da10fb34,79003812,0,0x0,8
tick,0x7ff8da10fb34,79019021,0,0x0,8
tick,0x7ff8da10fb34,79034722,0,0x0,8
tick,0x7ff8da10fb34,79049787,0,0x0,8
tick,0x7ff8da10fb34,79064983,0,0x0,8
tick,0x7ff8da10fb34,79080404,0,0x0,8
tick,0x7ff8da10fb34,79096224,0,0x0,8
tick,0x7ff8da10fb34,79111895,0,0x0,8
tick,0x7ff8da10fb34,79127251,0,0x0,8
tick,0x7ff8da10fb34,79142432,0,0x0,8
tick,0x7ff8da10fb34,79157546,0,0x0,8
tick,0x7ff8da10fb34,79173076,0,0x0,8
tick,0x7ff8da10fb34,79188280,0,0x0,8
tick,0x7ff8da10fb34,79203471,0,0x0,8
tick,0x7ff8da10fb34,79218821,0,0x0,8
tick,0x7ff8da10fb34,79234743,0,0x0,8
tick,0x7ff8da10fb34,79250476,0,0x0,8
tick,0x7ff8da10fb34,79266113,0,0x0,8
tick,0x7ff8da10fb34,79281468,0,0x0,8
tick,0x7ff8da10fb34,79297816,0,0x0,8
tick,0x7ff8da10fb34,79313358,0,0x0,8
tick,0x7ff8da10fb34,79329404,0,0x0,8
tick,0x7ff8da10fb34,79345402,0,0x0,8
tick,0x7ff8da10fb34,79361316,0,0x0,8
tick,0x7ff8da10fb34,79376728,0,0x0,8
tick,0x7ff8da10fb34,79392310,0,0x0,8
tick,0x7ff8da10fb34,79407156,0,0x0,8
tick,0x7ff8da10fb34,79422455,0,0x0,8
tick,0x7ff8da10fb34,79437852,0,0x0,8
tick,0x7ff8da10fb34,79452809,0,0x0,8
tick,0x7ff8da10fb34,79468851,0,0x0,8
tick,0x7ff8da10fb34,79484582,0,0x0,8
tick,0x7ff8da10fb34,79499993,0,0x0,8
tick,0x7ff8da10fb34,79516233,0,0x0,8
tick,0x7ff8da10fb34,79531301,0,0x0,8
tick,0x7ff8da10fb34,79546325,0,0x0,8
tick,0x7ff8da10fb34,79562335,0,0x0,8
tick,0x7ff8da10fb34,79578247,0,0x0,8
tick,0x7ff8da10fb34,79594357,0,0x0,8
tick,0x7ff8da10fb34,79609751,0,0x0,8
tick,0x7ff8da10fb34,79625227,0,0x0,8
tick,0x7ff8da10fb34,79640251,0,0x0,8
tick,0x7ff8da10fb34,79656514,0,0x0,8
tick,0x7ff8da10fb34,79672395,0,0x0,8
tick,0x7ff8da10fb34,79688201,0,0x0,8
tick,0x7ff8da10fb34,79703379,0,0x0,8
tick,0x7ff8da10fb34,79718719,0,0x0,8
tick,0x7ff8da10fb34,79734361,0,0x0,8
tick,0x7ff8da10fb34,79750514,0,0x0,8
tick,0x7ff8da10fb34,79766076,0,0x0,8
tick,0x7ff8da10fb34,79781204,0,0x0,8
tick,0x7ff8da10fb34,79797534,0,0x0,8
tick,0x7ff8da10fb34,79812412,0,0x0,8
tick,0x7ff8da10fb34,79827477,0,0x0,8
tick,0x7ff8da10fb34,79843627,0,0x0,8
tick,0x7ff8da10fb34,79859324,0,0x0,8
tick,0x7ff8da10fb34,79874308,0,0x0,8
tick,0x7ff8da10fb34,79889678,0,0x0,8
tick,0x7ff8da10fb34,79905287,0,0x0,8
tick,0x7ff8da10fb34,79920218,0,0x0,8
tick,0x7ff8da10fb34,79935281,0,0x0,8
tick,0x7ff8da10fb34,79950680,0,0x0,8
tick,0x7ff8da10fb34,79967657,0,0x0,8
tick,0x7ff8da10fb34,79982535,0,0x0,8
tick,0x7ff8da10fb34,79997959,0,0x0,8
tick,0x7ff8da10fb34,80013279,0,0x0,8
tick,0x7ff8da10fb34,80028605,0,0x0,8
tick,0x7ff8da10fb34,80044373,0,0x0,8
tick,0x7ff8da10fb34,80059452,0,0x0,8
tick,0x7ff8da10fb34,80074735,0,0x0,8
tick,0x7ff8da10fb34,80089892,0,0x0,8
tick,0x7ff8da10fb34,80105105,0,0x0,8
tick,0x7ff8da10fb34,80120607,0,0x0,8
tick,0x7ff8da10fb34,80136309,0,0x0,8
tick,0x7ff8da10fb34,80151937,0,0x0,8
tick,0x7ff8da10fb34,80167424,0,0x0,8
tick,0x7ff8da10fb34,80183314,0,0x0,8
tick,0x7ff8da10fb34,80199121,0,0x0,8
tick,0x7ff8da10fb34,80214117,0,0x0,8
tick,0x7ff8da10fb34,80229410,0,0x0,8
tick,0x7ff8da10fb34,80244563,0,0x0,8
tick,0x7ff8da10fb34,80260114,0,0x0,8
tick,0x7ff8da10fb34,80275350,0,0x0,8
tick,0x7ff8da10fb34,80290527,0,0x0,8
tick,0x7ff8da10fb34,80306581,0,0x0,8
tick,0x7ff8da10fb34,80321346,0,0x0,8
tick,0x7ff8da10fb34,80337418,0,0x0,8
tick,0x7ff8da10fb34,80353374,0,0x0,8
tick,0x7ff8da10fb34,80369161,0,0x0,8
tick,0x7ff8da10fb34,80384606,0,0x0,8
tick,0x7ff8da10fb34,80399524,0,0x0,8
tick,0x7ff8da10fb34,80415589,0,0x0,8
tick,0x7ff8da10fb34,80431564,0,0x0,8
tick,0x7ff8da10fb34,80447792,0,0x0,8
tick,0x7ff8da10fb34,80462922,0,0x0,8
tick,0x7ff8da10fb34,80478275,0,0x0,8
tick,0x7ff8da10fb34,80493391,0,0x0,8
tick,0x7ff8da10fb34,80509292,0,0x0,8
tick,0x7ff8da10fb34,80525259,0,0x0,8
tick,0x7ff8da10fb34,80540152,0,0x0,8
tick,0x7ff8da10fb34,80554961,0,0x0,8
tick,0x7ff8da10fb34,80570606,0,0x0,8
tick,0x7ff8da10fb34,80586434,0,0x0,8
tick,0x7ff8da10fb34,80602017,0,0x0,8
tick,0x7ff8da10fb34,80617813,0,0x0,8
tick,0x7ff8da10fb34,80633246,0,0x0,8
tick,0x7ff8da10fb34,80648462,0,0x0,8
tick,0x7ff8da10fb34,80664407,0,0x0,8
tick,0x7ff8da10fb34,80679883,0,0x0,8
tick,0x7ff8da10fb34,80695408,0,0x0,8
tick,0x7ff8da10fb34,80710378,0,0x0,8
tick,0x7ff8da10fb34,80726313,0,0x0,8
tick,0x7ff8da10fb34,80742457,0,0x0,8
tick,0x7ff8da10fb34,80758257,0,0x0,8
tick,0x7ff8da10fb34,80774488,0,0x0,8
tick,0x7ff8da10fb34,80788729,0,0x0,8
tick,0x7ff8da10fb34,80804183,0,0x0,8
tick,0x7ff8da10fb34,80820100,0,0x0,8
tick,0x7ff8da10fb34,80835279,0,0x0,8
tick,0x7ff8da10fb34,80850638,0,0x0,8
tick,0x7ff8da10fb34,80866329,0,0x0,8
tick,0x7ff8da10fb34,80882220,0,0x0,8
tick,0x7ff8da10fb34,80897459,0,0x0,8
tick,0x7ff8da10fb34,80912441,0,0x0,8
tick,0x7ff8da10fb34,80928267,0,0x0,8
tick,0x7ff8da10fb34,80944330,0,0x0,8
tick,0x7ff8da10fb34,80960052,0,0x0,8
tick,0x7ff8da10fb34,80975293,0,0x0,8
tick,0x7ff8da10fb34,80990579,0,0x0,8
tick,0x7ff8da10fb34,81005206,0,0x0,8
tick,0x7ff8da10fb34,81020228,0,0x0,8
tick,0x7ff8da10fb34,81036402,0,0x0,8
tick,0x7ff8da10fb34,81051477,0,0x0,8
tick,0x7ff8da10fb34,81067217,0,0x0,8
tick,0x7ff8da10fb34,81082292,0,0x0,8
tick,0x7ff8da10fb34,81097994,0,0x0,8
tick,0x7ff8da10fb34,81112317,0,0x0,8
tick,0x7ff8da10fb34,81127146,0,0x0,8
tick,0x7ff8da10fb34,81142418,0,0x0,8
tick,0x7ff8da10fb34,81157826,0,0x0,8
tick,0x7ff8da10fb34,81173335,0,0x0,8
tick,0x7ff8da10fb34,81188338,0,0x0,8
tick,0x7ff8da10fb34,81204042,0,0x0,8
tick,0x7ff8da10fb34,81219172,0,0x0,8
tick,0x7ff8da10fb34,81234908,0,0x0,8
tick,0x7ff8da10fb34,81250457,0,0x0,8
tick,0x7ff8da10fb34,81266268,0,0x0,8
tick,0x7ff8da10fb34,81282048,0,0x0,8
tick,0x7ff8da10fb34,81297430,0,0x0,8
tick,0x7ff8da10fb34,81312307,0,0x0,8
tick,0x7ff8da10fb34,81328755,0,0x0,8
tick,0x7ff8da10fb34,81344214,0,0x0,8
tick,0x7ff8da10fb34,81359928,0,0x0,8
tick,0x7ff8da10fb34,81375247,0,0x0,8
tick,0x7ff8da10fb34,81391430,0,0x0,8
tick,0x7ff8da10fb34,81407405,0,0x0,8
tick,0x7ff8da10fb34,81423307,0,0x0,8
tick,0x7ff8da10fb34,81439100,0,0x0,8
tick,0x7ff8da10fb34,81454431,0,0x0,8
tick,0x7ff8da10fb34,81469370,0,0x0,8
tick,0x7ff8da10fb34,81486052,0,0x0,8
tick,0x7ff8da10fb34,81501291,0,0x0,8
tick,0x7ff8da10fb34,81517128,0,0x0,8
tick,0x7ff8da10fb34,81533137,0,0x0,8
tick,0x7ff8da10fb34,81548385,0,0x0,8
tick,0x7ff8da10fb34,81563910,0,0x0,8
tick,0x7ff8da10fb34,81579278,0,0x0,8
tick,0x7ff8da10fb34,81594308,0,0x0,8
tick,0x7ff8da10fb34,81609942,0,0x0,8
tick,0x7ff8da10fb34,81625254,0,0x0,8
tick,0x7ff8da10fb34,81640215,0,0x0,8
tick,0x7ff8da10fb34,81655219,0,0x0,8
tick,0x7ff8da10fb34,81671306,0,0x0,8
tick,0x7ff8da10fb34,81687201,0,0x0,8
tick,0x7ff8da10fb34,81702246,0,0x0,8
tick,0x7ff8da10fb34,81717689,0,0x0,8
tick,0x7ff8da10fb34,81732910,0,0x0,8
tick,0x7ff8da10fb34,81748475,0,0x0,8
tick,0x7ff8da10fb34,81763535,0,0x0,8
tick,0x7ff8da10fb34,81778825,0,0x0,8
tick,0x7ff8da10fb34,81794354,0,0x0,8
tick,0x7ff8da10fb34,81809503,0,0x0,8
tick,0x7ff8da10fb34,81824322,0,0x0,8
tick,0x7ff8da10fb34,81839404,0,0x0,8
tick,0x7ff8da10fb34,81855029,0,0x0,8
tick,0x7ff8da10fb34,81870294,0,0x0,8
tick,0x7ff8da10fb34,81885363,0,0x0,8
tick,0x7ff8da10fb34,81900190,0,0x0,8
tick,0x7ff8da10fb34,81915801,0,0x0,8
tick,0x7ff8da10fb34,81931726,0,0x0,8
tick,0x7ff8da10fb34,81947258,0,0x0,8
tick,0x7ff8da10fb34,81962333,0,0x0,8
tick,0x7ff8da10fb34,81977730,0,0x0,8
tick,0x7ff8da10fb34,81993429,0,0x0,8
tick,0x7ff8da10fb34,82009401,0,0x0,8
tick,0x7ff8da10fb34,82024331,0,0x0,8
tick,0x7ff8da10fb34,82039491,0,0x0,8
tick,0x7ff8da10fb34,82055122,0,0x0,8
tick,0x7ff8da10fb34,82070474,0,0x0,8
tick,0x7ff8da10fb34,82086363,0,0x0,8
tick,0x7ff8da10fb34,82101096,0,0x0,8
tick,0x7ff8da10fb34,82116738,0,0x0,8
tick,0x7ff8da10fb34,82131619,0,0x0,8
tick,0x7ff8da10fb34,82147150,0,0x0,8
tick,0x7ff8da10fb34,82162246,0,0x0,8
tick,0x7ff8da10fb34,82177281,0,0x0,8
tick,0x7ff8da10fb34,82193355,0,0x0,8
tick,0x7ff8da10fb34,82208966,0,0x0,8
tick,0x7ff8da10fb34,82224455,0,0x0,8
tick,0x7ff8da10fb34,82239404,0,0x0,8
tick,0x7ff8da10fb34,82254467,0,0x0,8
tick,0x7ff8da10fb34,82269885,0,0x0,8
tick,0x7ff8da10fb34,82285287,0,0x0,8
tick,0x7ff8da10fb34,82300599,0,0x0,8
tick,0x7ff8da10fb34,82316928,0,0x0,8
tick,0x7ff8da10fb34,82331649,0,0x0,8
tick,0x7ff8da10fb34,82347341,0,0x0,8
tick,0x7ff8da10fb34,82363304,0,0x0,8
tick,0x7ff8da10fb34,82377829,0,0x0,8
tick,0x7ff8da10fb34,82393327,0,0x0,8
tick,0x7ff8da10fb34,82409348,0,0x0,8
tick,0x7ff8da10fb34,82425271,0,0x0,8
tick,0x7ff8da10fb34,82440308,0,0x0,8
tick,0x7ff8da10fb34,82455367,0,0x0,8
tick,0x7ff8da10fb34,82470303,0,0x0,8
tick,0x7ff8da10fb34,82486715,0,0x0,8
tick,0x7ff8da10fb34,82501871,0,0x0,8
tick,0x7ff8da10fb34,82517875,0,0x0,8
tick,0x7ff8da10fb34,82533267,0,0x0,8
tick,0x7ff8da10fb34,82548884,0,0x0,8
tick,0x7ff8da10fb34,82564596,0,0x0,8
tick,0x7ff8da10fb34,82579527,0,0x0,8
tick,0x7ff8da10fb34,82594266,0,0x0,8
tick,0x7ff8da10fb34,82609617,0,0x0,8
tick,0x7ff8da10fb34,82625264,0,0x0,8
tick,0x7ff8da10fb34,82641338,0,0x0,8
tick,0x7ff8da10fb34,82657251,0,0x0,8
tick,0x7ff8da10fb34,82672298,0,0x0,8
tick,0x7ff8da10fb34,82688164,0,0x0,8
tick,0x7ff8da10fb34,82703369,0,0x0,8
tick,0x7ff8da10fb34,82718688,0,0x0,8
tick,0x7ff8da10fb34,82734148,0,0x0,8
tick,0x7ff8da10fb34,82748830,0,0x0,8
tick,0x7ff8da10fb34,82764564,0,0x0,8
tick,0x7ff8da10fb34,82779719,0,0x0,8
tick,0x7ff8da10fb34,82795205,0,0x0,8
tick,0x7ff8da10fb34,82810504,0,0x0,8
tick,0x7ff8da10fb34,82826330,0,0x0,8
tick,0x7ff8da10fb34,82841263,0,0x0,8
tick,0x7ff8da10fb34,82856247,0,0x0,8
tick,0x7ff8da10fb34,82872350,0,0x0,8
tick,0x7ff8da10fb34,82887279,0,0x0,8
tick,0x7ff8da10fb34,82902393,0,0x0,8
tick,0x7ff8da10fb34,82918088,0,0x0,8
tick,0x7ff8da10fb34,82933036,0,0x0,8
tick,0x7ff8da10fb34,82948726,0,0x0,8
tick,0x7ff8da10fb34,82964596,0,0x0,8
tick,0x7ff8da10fb34,82980021,0,0x0,8
tick,0x7ff8da10fb34,82995239,0,0x0,8
tick,0x7ff8da10fb34,83010380,0,0x0,8
tick,0x7ff8da10fb34,83026277,0,0x0,8
tick,0x7ff8da10fb34,83042372,0,0x0,8
tick,0x7ff8da10fb34,83057241,0,0x0,8
tick,0x7ff8da10fb34,83072322,0,0x0,8
tick,0x7ff8da10fb34,83088140,0,0x0,8
tick,0x7ff8da10fb34,83104286,0,0x0,8
tick,0x7ff8da10fb34,83119460,0,0x0,8
tick,0x7ff8da10fb34,83135214,0,0x0,8
tick,0x7ff8da10fb34,83150190,0,0x0,8
tick,0x7ff8da10fb34,83165333,0,0x0,8
tick,0x7ff8da10fb34,83181107,0,0x0,8
tick,0x7ff8da10fb34,83196222,0,0x0,8
tick,0x7ff8da10fb34,83211282,0,0x0,8
tick,0x7ff8da10fb34,83226965,0,0x0,8
tick,0x7ff8da10fb34,83242376,0,0x0,8
tick,0x7ff8da10fb34,83256943,0,0x0,8
tick,0x7ff8da10fb34,83272084,0,0x0,8
tick,0x7ff8da10fb34,83287381,0,0x0,8
tick,0x7ff8da10fb34,83303403,0,0x0,8
tick,0x7ff8da10fb34,83319325,0,0x0,8
tick,0x7ff8da10fb34,83335288,0,0x0,8
tick,0x7ff8da10fb34,83351287,0,0x0,8
tick,0x7ff8da10fb34,83366315,0,0x0,8
tick,0x7ff8da10fb34,83381275,0,0x0,8
tick,0x7ff8da10fb34,83397283,0,0x0,8
tick,0x7ff8da10fb34,83413361,0,0x0,8
tick,0x7ff8da10fb34,83429262,0,0x0,8
tick,0x7ff8da10fb34,83445443,0,0x0,8
tick,0x7ff8da10fb34,83461234,0,0x0,8
tick,0x7ff8da10fb34,83477237,0,0x0,8
tick,0x7ff8da10fb34,83493322,0,0x0,8
tick,0x7ff8da10fb34,83509250,0,0x0,8
tick,0x7ff8da10fb34,83525244,0,0x0,8
tick,0x7ff8da10fb34,83541255,0,0x0,8
tick,0x7ff8da10fb34,83557220,0,0x0,8
tick,0x7ff8da10fb34,83573196,0,0x0,8
tick,0x7ff8da10fb34,83588204,0,0x0,8
tick,0x7ff8da10fb34,83603104,0,0x0,8
tick,0x7ff8da10fb34,83618896,0,0x0,8
tick,0x7ff8da10fb34,83634100,0,0x0,8
tick,0x7ff8da10fb34,83649578,0,0x0,8
tick,0x7ff8da10fb34,83665123,0,0x0,8
tick,0x7ff8da10fb34,83680881,0,0x0,8
tick,0x7ff8da10fb34,83696378,0,0x0,8
tick,0x7ff8da10fb34,83711251,0,0x0,8
tick,0x7ff8da10fb34,83727079,0,0x0,8
tick,0x7ff8da10fb34,83742295,0,0x0,8
tick,0x7ff8da10fb34,83757781,0,0x0,8
tick,0x7ff8da10fb34,83772264,0,0x0,8
tick,0x7ff8da10fb34,83787086,0,0x0,8
tick,0x7ff8da10fb34,83802238,0,0x0,8
tick,0x7ff8da10fb34,83817575,0,0x0,8
tick,0x7ff8da10fb34,83833663,0,0x0,8
tick,0x7ff8da10fb34,83849285,0,0x0,8
tick,0x7ff8da10fb34,83864981,0,0x0,8
tick,0x7ff8da10fb34,83880850,0,0x0,8
tick,0x7ff8da10fb34,83896636,0,0x0,8
tick,0x7ff8da10fb34,83911284,0,0x0,8
tick,0x7ff8da10fb34,83926642,0,0x0,8
tick,0x7ff8da10fb34,83942313,0,0x0,8
tick,0x7ff8da10fb34,83957116,0,0x0,8
tick,0x7ff8da10fb34,83972262,0,0x0,8
tick,0x7ff8da10fb34,83987746,0,0x0,8
tick,0x7ff8da10fb34,84003169,0,0x0,8
tick,0x7ff8da10fb34,84018664,0,0x0,8
tick,0x7ff8da10fb34,84033766,0,0x0,8
tick,0x7ff8da10fb34,84049422,0,0x0,8
tick,0x7ff8da10fb34,84064862,0,0x0,8
tick,0x7ff8da10fb34,84079522,0,0x0,8
tick,0x7ff8da10fb34,84095430,0,0x0,8
tick,0x7ff8da10fb34,84110352,0,0x0,8
tick,0x7ff8da10fb34,84126440,0,0x0,8
tick,0x7ff8da10fb34,84141357,0,0x0,8
tick,0x7ff8da10fb34,84157138,0,0x0,8
tick,0x7ff8da10fb34,84172238,0,0x0,8
tick,0x7ff8da10fb34,84187255,0,0x0,8
tick,0x7ff8da10fb34,84202302,0,0x0,8
tick,0x7ff8da10fb34,84218244,0,0x0,8
tick,0x7ff8da10fb34,84233517,0,0x0,8
tick,0x7ff8da10fb34,84249226,0,0x0,8
tick,0x7ff8da10fb34,84264803,0,0x0,8
tick,0x7ff8da10fb34,84280707,0,0x0,8
tick,0x7ff8da10fb34,84296302,0,0x0,8
tick,0x7ff8da10fb34,84311947,0,0x0,8
tick,0x7ff8da10fb34,84327814,0,0x0,8
tick,0x7ff8da10fb34,84343752,0,0x0,8
tick,0x7ff8da10fb34,84359060,0,0x0,8
tick,0x7ff8da10fb34,84374572,0,0x0,8
tick,0x7ff8da10fb34,84390097,0,0x0,8
tick,0x7ff8da10fb34,84405312,0,0x0,8
tick,0x7ff8da10fb34,84420645,0,0x0,8
tick,0x7ff8da10fb34,84436468,0,0x0,8
tick,0x7ff8da10fb34,84451336,0,0x0,8
tick,0x7ff8da10fb34,84466248,0,0x0,8
tick,0x7ff8da10fb34,84481374,0,0x0,8
tick,0x7ff8da10fb34,84497923,0,0x0,8
tick,0x7ff8da10fb34,84512683,0,0x0,8
tick,0x7ff8da10fb34,84528502,0,0x0,8
tick,0x7ff8da10fb34,84543521,0,0x0,8
tick,0x7ff8da10fb34,84558650,0,0x0,8
tick,0x7ff8da10fb34,84574348,0,0x0,8
tick,0x7ff8da10fb34,84589147,0,0x0,8
tick,0x7ff8da10fb34,84604310,0,0x0,8
tick,0x7ff8da10fb34,84619796,0,0x0,8
tick,0x7ff8da10fb34,84635186,0,0x0,8
tick,0x7ff8da10fb34,84650959,0,0x0,8
tick,0x7ff8da10fb34,84666226,0,0x0,8
tick,0x7ff8da10fb34,84681318,0,0x0,8
tick,0x7ff8da10fb34,84696642,0,0x0,8
tick,0x7ff8da10fb34,84711266,0,0x0,8
tick,0x7ff8da10fb34,84726228,0,0x0,8
tick,0x7ff8da10fb34,84741303,0,0x0,8
tick,0x7ff8da10fb34,84757305,0,0x0,8
tick,0x7ff8da10fb34,84772340,0,0x0,8
tick,0x7ff8da10fb34,84787583,0,0x0,8
tick,0x7ff8da10fb34,84803204,0,0x0,8
tick,0x7ff8da10fb34,84818209,0,0x0,8
tick,0x7ff8da10fb34,84833806,0,0x0,8
tick,0x7ff8da10fb34,84849196,0,0x0,8
tick,0x7ff8da10fb34,84864560,0,0x0,8
tick,0x7ff8da10fb34,84880426,0,0x0,8
tick,0x7ff8da10fb34,84895316,0,0x0,8
tick,0x7ff8da10fb34,84910322,0,0x0,8
tick,0x7ff8da10fb34,84926306,0,0x0,8
tick,0x7ff8da10fb34,84942365,0,0x0,8
tick,0x7ff8da10fb34,84957366,0,0x0,8
tick,0x7ff8da10fb34,84972308,0,0x0,8
tick,0x7ff8da10fb34,84987197,0,0x0,8
tick,0x7ff8da10fb34,85002276,0,0x0,8
tick,0x7ff8da10fb34,85018163,0,0x0,8
tick,0x7ff8da10fb34,85033125,0,0x0,8
tick,0x7ff8da10fb34,85048757,0,0x0,8
tick,0x7ff8da10fb34,85063826,0,0x0,8
tick,0x7ff8da10fb34,85079185,0,0x0,8
tick,0x7ff8da10fb34,85095098,0,0x0,8
tick,0x7ff8da10fb34,85110785,0,0x0,8
tick,0x7ff8da10fb34,85126267,0,0x0,8
tick,0x7ff8da10fb34,85142430,0,0x0,8
tick,0x7ff8da10fb34,85157480,0,0x0,8
tick,0x7ff8da10fb34,85172746,0,0x0,8
tick,0x7ff8da10fb34,85188184,0,0x0,8
tick,0x7ff8da10fb34,85202950,0,0x0,8
tick,0x7ff8da10fb34,85218621,0,0x0,8
tick,0x7ff8da10fb34,85233835,0,0x0,8
tick,0x7ff8da10fb34,85249256,0,0x0,8
tick,0x7ff8da10fb34,85264423,0,0x0,8
tick,0x7ff8da10fb34,85280126,0,0x0,8
tick,0x7ff8da10fb34,85295208,0,0x0,8
tick,0x7ff8da10fb34,85311499,0,0x0,8
tick,0x7ff8da10fb34,85327653,0,0x0,8
tick,0x7ff8da10fb34,85343225,0,0x0,8
tick,0x7ff8da10fb34,85357931,0,0x0,8
tick,0x7ff8da10fb34,85373269,0,0x0,8
tick,0x7ff8da10fb34,85388518,0,0x0,8
tick,0x7ff8da10fb34,85404320,0,0x0,8
tick,0x7ff8da10fb34,85420165,0,0x0,8
tick,0x7ff8da10fb34,85435302,0,0x0,8
tick,0x7ff8da10fb34,85451159,0,0x0,8
tick,0x7ff8da10fb34,85466372,0,0x0,8
tick,0x7ff8da10fb34,85481973,0,0x0,8
tick,0x7ff8da10fb34,85497382,0,0x0,8
tick,0x7ff8da10fb34,85512317,0,0x0,8
tick,0x7ff8da10fb34,85527350,0,0x0,8
tick,0x7ff8da10fb34,85542551,0,0x0,8
tick,0x7ff8da10fb34,85557790,0,0x0,8
tick,0x7ff8da10fb34,85573286,0,0x0,8
tick,0x7ff8da10fb34,85589355,0,0x0,8
tick,0x7ff8da10fb34,85605134,0,0x0,8
tick,0x7ff8da10fb34,85620791,0,0x0,8
tick,0x7ff8da10fb34,85636336,0,0x0,8
tick,0x7ff8da10fb34,85652119,0,0x0,8
tick,0x7ff8da10fb34,85667629,0,0x0,8
tick,0x7ff8da10fb34,85683228,0,0x0,8
tick,0x7ff8da10fb34,85698200,0,0x0,8
tick,0x7ff8da10fb34,85714140,0,0x0,8
tick,0x7ff8da10fb34,85729923,0,0x0,8
tick,0x7ff8da10fb34,85745526,0,0x0,8
tick,0x7ff8da10fb34,85760014,0,0x0,8
tick,0x7ff8da10fb34,85775266,0,0x0,8
tick,0x7ff8da10fb34,85791295,0,0x0,8
tick,0x7ff8da10fb34,85806957,0,0x0,8
tick,0x7ff8da10fb34,85822361,0,0x0,8
tick,0x7ff8da10fb34,85838357,0,0x0,8
tick,0x7ff8da10fb34,85854276,0,0x0,8
tick,0x7ff8da10fb34,85869595,0,0x0,8
tick,0x7ff8da10fb34,85884836,0,0x0,8
tick,0x7ff8da10fb34,85900274,0,0x0,8
tick,0x7ff8da10fb34,85916247,0,0x0,8
tick,0x7ff8da10fb34,85931405,0,0x0,8
tick,0x7ff8da10fb34,85947192,0,0x0,8
tick,0x7ff8da10fb34,85963300,0,0x0,8
tick,0x7ff8da10fb34,85978806,0,0x0,8
tick,0x7ff8da10fb34,85994761,0,0x0,8
tick,0x7ff8da10fb34,86010110,0,0x0,8
tick,0x7ff8da10fb34,86025252,0,0x0,8
tick,0x7ff8da10fb34,86040337,0,0x0,8
tick,0x7ff8da10fb34,86056275,0,0x0,8
tick,0x7ff8da10fb34,86072092,0,0x0,8
tick,0x7ff8da10fb34,86087995,0,0x0,8
tick,0x7ff8da10fb34,86103315,0,0x0,8
tick,0x7ff8da10fb34,86118482,0,0x0,8
tick,0x7ff8da10fb34,86133667,0,0x0,8
tick,0x7ff8da10fb34,86149390,0,0x0,8
tick,0x7ff8da10fb34,86165043,0,0x0,8
tick,0x7ff8da10fb34,86180500,0,0x0,8
tick,0x7ff8da10fb34,86196656,0,0x0,8
tick,0x7ff8da10fb34,86211395,0,0x0,8
tick,0x7ff8da10fb34,86226265,0,0x0,8
tick,0x7ff8da10fb34,86242293,0,0x0,8
tick,0x7ff8da10fb34,86257310,0,0x0,8
tick,0x7ff8da10fb34,86272338,0,0x0,8
tick,0x7ff8da10fb34,86288437,0,0x0,8
tick,0x7ff8da10fb34,86303321,0,0x0,8
tick,0x7ff8da10fb34,86318290,0,0x0,8
tick,0x7ff8da10fb34,86333081,0,0x0,8
tick,0x7ff8da10fb34,86348150,0,0x0,8
tick,0x7ff8da10fb34,86363290,0,0x0,8
tick,0x7ff8da10fb34,86378698,0,0x0,8
tick,0x7ff8da10fb34,86394630,0,0x0,8
tick,0x7ff8da10fb34,86409546,0,0x0,8
tick,0x7ff8da10fb34,86425233,0,0x0,8
tick,0x7ff8da10fb34,86440305,0,0x0,8
tick,0x7ff8da10fb34,86456302,0,0x0,8
tick,0x7ff8da10fb34,86472375,0,0x0,8
tick,0x7ff8da10fb34,86487275,0,0x0,8
tick,0x7ff8da10fb34,86502291,0,0x0,8
tick,0x7ff8da10fb34,86518265,0,0x0,8
tick,0x7ff8da10fb34,86533827,0,0x0,8
tick,0x7ff8da10fb34,86549822,0,0x0,8
tick,0x7ff8da10fb34,86565267,0,0x0,8
tick,0x7ff8da10fb34,86581403,0,0x0,8
tick,0x7ff8da10fb34,86597262,0,0x0,8
tick,0x7ff8da10fb34,86613076,0,0x0,8
tick,0x7ff8da10fb34,86628353,0,0x0,8
tick,0x7ff8da10fb34,86644569,0,0x0,8
tick,0x7ff8da10fb34,86659987,0,0x0,8
tick,0x7ff8da10fb34,86675200,0,0x0,8
tick,0x7ff8da10fb34,86690571,0,0x0,8
tick,0x7ff8da10fb34,86706268,0,0x0,8
tick,0x7ff8da10fb34,86722348,0,0x0,8
tick,0x7ff8da10fb34,86737431,0,0x0,8
tick,0x7ff8da10fb34,86753285,0,0x0,8
tick,0x7ff8da10fb34,86769275,0,0x0,8
tick,0x7ff8da10fb34,86784752,0,0x0,8
tick,0x7ff8da10fb34,86799691,0,0x0,8
tick,0x7ff8da10fb34,86814761,0,0x0,8
tick,0x7ff8da10fb34,86830464,0,0x0,8
tick,0x7ff8da10fb34,86846309,0,0x0,8
tick,0x7ff8da10fb34,86861281,0,0x0,8
tick,0x7ff8da10fb34,86877424,0,0x0,8
tick,0x7ff8da10fb34,86892303,0,0x0,8
tick,0x7ff8da10fb34,86907711,0,0x0,8
tick,0x7ff8da10fb34,86923294,0,0x0,8
tick,0x7ff8da10fb34,86938467,0,0x0,8
tick,0x7ff8da10fb34,86954321,0,0x0,8
tick,0x7ff8da10fb34,86970285,0,0x0,8
tick,0x7ff8da10fb34,86986385,0,0x0,8
tick,0x7ff8da10fb34,87002298,0,0x0,8
tick,0x7ff8da10fb34,87018129,0,0x0,8
tick,0x7ff8da10fb34,87034058,0,0x0,8
tick,0x7ff8da10fb34,87049729,0,0x0,8
tick,0x7ff8da10fb34,87064682,0,0x0,8
tick,0x7ff8da10fb34,87079653,0,0x0,8
tick,0x7ff8da10fb34,87095240,0,0x0,8
tick,0x7ff8da10fb34,87110388,0,0x0,8
tick,0x7ff8da10fb34,87125689,0,0x0,8
tick,0x7ff8da10fb34,87141666,0,0x0,8
tick,0x7ff8da10fb34,87157698,0,0x0,8
tick,0x7ff8da10fb34,87173490,0,0x0,8
tick,0x7ff8da10fb34,87189489,0,0x0,8
tick,0x7ff8da10fb34,87205473,0,0x0,8
tick,0x7ff8da10fb34,87220470,0,0x0,8
tick,0x7ff8da10fb34,87235478,0,0x0,8
tick,0x7ff8da10fb34,87250459,0,0x0,8
tick,0x7ff8da10fb34,87266448,0,0x0,8
tick,0x7ff8da10fb34,87281414,0,0x0,8
tick,0x7ff8da10fb34,87296558,0,0x0,8
tick,0x7ff8da10fb34,87312402,0,0x0,8
tick,0x7ff8da10fb34,87327402,0,0x0,8
tick,0x7ff8da10fb34,87342421,0,0x0,8
tick,0x7ff8da10fb34,87358383,0,0x0,8
tick,0x7ff8da10fb34,87373384,0,0x0,8
tick,0x7ff8da10fb34,87388373,0,0x0,8
tick,0x7ff8da10fb34,87404395,0,0x0,8
tick,0x7ff8da10fb34,87419365,0,0x0,8
tick,0x7ff8da10fb34,87434353,0,0x0,8
tick,0x7ff8da10fb34,87450372,0,0x0,8
tick,0x7ff8da10fb34,87465382,0,0x0,8
tick,0x7ff8da10fb34,87481344,0,0x0,8
tick,0x7ff8da10fb34,87497331,0,0x0,8
tick,0x7ff8da10fb34,87513361,0,0x0,8
tick,0x7ff8da10fb34,87529346,0,0x0,8
tick,0x7ff8da10fb34,87545344,0,0x0,8
tick,0x7ff8da10fb34,87561405,0,0x0,8
tick,0x7ff8da10fb34,87577356,0,0x0,8
tick,0x7ff8da10fb34,87593439,0,0x0,8
tick,0x7ff8da10fb34,87609425,0,0x0,8
tick,0x7ff8da10fb34,87625414,0,0x0,8
tick,0x7ff8da10fb34,87641443,0,0x0,8
tick,0x7ff8da10fb34,87656430,0,0x0,8
tick,0x7ff8da10fb34,87671393,0,0x0,8
tick,0x7ff8da10fb34,87687417,0,0x0,8
tick,0x7ff8da10fb34,87703417,0,0x0,8
tick,0x7ff8da10fb34,87719360,0,0x0,8
tick,0x7ff8da10fb34,87735486,0,0x0,8
tick,0x7ff8da10fb34,87750365,0,0x0,8
tick,0x7ff8da10fb34,87765363,0,0x0,8
tick,0x7ff8da10fb34,87781390,0,0x0,8
tick,0x7ff8da10fb34,87797333,0,0x0,8
tick,0x7ff8da10fb34,87813546,0,0x0,8
tick,0x7ff8da10fb34,87829334,0,0x0,8
tick,0x7ff8da10fb34,87845333,0,0x0,8
tick,0x7ff8da10fb34,87861317,0,0x0,8
tick,0x7ff8da10fb34,87876318,0,0x0,8
tick,0x7ff8da10fb34,87891345,0,0x0,8
tick,0x7ff8da10fb34,87907484,0,0x0,8
tick,0x7ff8da10fb34,87923308,0,0x0,8
tick,0x7ff8da10fb34,87938355,0,0x0,8
tick,0x7ff8da10fb34,87954361,0,0x0,8
tick,0x7ff8da10fb34,87969288,0,0x0,8
tick,0x7ff8da10fb34,87984294,0,0x0,8
tick,0x7ff8da10fb34,88000255,0,0x0,8
tick,0x7ff8da10fb34,88015276,0,0x0,8
tick,0x7ff8da10fb34,88031269,0,0x0,8
tick,0x7ff8da10fb34,88047268,0,0x0,8
tick,0x7ff8da10fb34,88063275,0,0x0,8
tick,0x7ff8da10fb34,88079287,0,0x0,8
tick,0x7ff8da10fb34,88095282,0,0x0,8
tick,0x7ff8da10fb34,88111344,0,0x0,8
tick,0x7ff8da10fb34,88127306,0,0x0,8
tick,0x7ff8da10fb34,88143246,0,0x0,8
tick,0x7ff8da10fb34,88159243,0,0x0,8
tick,0x7ff8da10fb34,88175234,0,0x0,8
tick,0x7ff8da10fb34,88191211,0,0x0,8
tick,0x7ff8da10fb34,88207238,0,0x0,8
tick,0x7ff8da10fb34,88223606,0,0x0,8
tick,0x7ff8da10fb34,88239260,0,0x0,8
tick,0x7ff8da10fb34,88255207,0,0x0,8
tick,0x7ff8da10fb34,88271209,0,0x0,8
tick,0x7ff8da10fb34,88286312,0,0x0,8
tick,0x7ff8da10fb34,88301219,0,0x0,8
tick,0x7ff8da10fb34,88317202,0,0x0,8
tick,0x7ff8da10fb34,88333142,0,0x0,8
tick,0x7ff8da10fb34,88349179,0,0x0,8
tick,0x7ff8da10fb34,88364149,0,0x0,8
tick,0x7ff8da10fb34,88379130,0,0x0,8
tick,0x7ff8da10fb34,88395164,0,0x0,8
tick,0x7ff8da10fb34,88411184,0,0x0,8
tick,0x7ff8da10fb34,88427153,0,0x0,8
tick,0x7ff8da10fb34,88443139,0,0x0,8
tick,0x7ff8da10fb34,88459141,0,0x0,8
tick,0x7ff8da10fb34,88475186,0,0x0,8
tick,0x7ff8da10fb34,88491181,0,0x0,8
tick,0x7ff8da10fb34,88507160,0,0x0,8
tick,0x7ff8da10fb34,88523170,0,0x0,8
tick,0x7ff8da10fb34,88539133,0,0x0,8
tick,0x7ff8da10fb34,88555088,0,0x0,8
tick,0x7ff8da10fb34,88571114,0,0x0,8
tick,0x7ff8da10fb34,88587096,0,0x0,8
tick,0x7ff8da10fb34,88602097,0,0x0,8
tick,0x7ff8da10fb34,88617127,0,0x0,8
tick,0x7ff8da10fb34,88632106,0,0x0,8
tick,0x7ff8da10fb34,88647060,0,0x0,8
tick,0x7ff8da10fb34,88663041,0,0x0,8
tick,0x7ff8da10fb34,88678075,0,0x0,8
tick,0x7ff8da10fb34,88693058,0,0x0,8
tick,0x7ff8da10fb34,88709058,0,0x0,8
tick,0x7ff8da10fb34,88724079,0,0x0,8
tick,0x7ff8da10fb34,88739073,0,0x0,8
tick,0x7ff8da10fb34,88755030,0,0x0,8
tick,0x7ff8da10fb34,88770071,0,0x0,8
tick,0x7ff8da10fb34,88786033,0,0x0,8
tick,0x7ff8da10fb34,88802048,0,0x0,8
tick,0x7ff8da10fb34,88817036,0,0x0,8
tick,0x7ff8da10fb34,88832012,0,0x0,8
tick,0x7ff8da10fb34,88847036,0,0x0,8
tick,0x7ff8da10fb34,88862983,0,0x0,8
tick,0x7ff8da10fb34,88879010,0,0x0,8
tick,0x7ff8da10fb34,88895017,0,0x0,8
tick,0x7ff8da10fb34,88910995,0,0x0,8
tick,0x7ff8da10fb34,88926983,0,0x0,8
tick,0x7ff8da10fb34,88943096,0,0x0,8
tick,0x7ff8da10fb34,88958973,0,0x0,8
tick,0x7ff8da10fb34,88974983,0,0x0,8
tick,0x7ff8da10fb34,88989983,0,0x0,8
tick,0x7ff8da10fb34,89004958,0,0x0,8
tick,0x7ff8da10fb34,89020959,0,0x0,8
tick,0x7ff8da10fb34,89036998,0,0x0,8
tick,0x7ff8da10fb34,89052931,0,0x0,8
tick,0x7ff8da10fb34,89068950,0,0x0,8
tick,0x7ff8da10fb34,89084950,0,0x0,8
tick,0x7ff8da10fb34,89100932,0,0x0,8
tick,0x7ff8da10fb34,89116940,0,0x0,8
tick,0x7ff8da10fb34,89132005,0,0x0,8
tick,0x7ff8da10fb34,89146918,0,0x0,8
tick,0x7ff8da10fb34,89162920,0,0x0,8
tick,0x7ff8da10fb34,89178013,0,0x0,8
tick,0x7ff8da10fb34,89194091,0,0x0,8
tick,0x7ff8da10fb34,89208994,0,0x0,8
tick,0x7ff8da10fb34,89224007,0,0x0,8
tick,0x7ff8da10fb34,89239999,0,0x0,8
tick,0x7ff8da10fb34,89254989,0,0x0,8
tick,0x7ff8da10fb34,89269982,0,0x0,8
tick,0x7ff8da10fb34,89286016,0,0x0,8
tick,0x7ff8da10fb34,89300971,0,0x0,8
tick,0x7ff8da10fb34,89315958,0,0x0,8
tick,0x7ff8da10fb34,89331178,0,0x0,8
tick,0x7ff8da10fb34,89347093,0,0x0,8
tick,0x7ff8da10fb34,89363035,0,0x0,8
tick,0x7ff8da10fb34,89379048,0,0x0,8
tick,0x7ff8da10fb34,89395030,0,0x0,8
tick,0x7ff8da10fb34,89411069,0,0x0,8
tick,0x7ff8da10fb34,89427149,0,0x0,8
tick,0x7ff8da10fb34,89443126,0,0x0,8
tick,0x7ff8da10fb34,89459126,0,0x0,8
tick,0x7ff8da10fb34,89474263,0,0x0,8
tick,0x7ff8da10fb34,89489271,0,0x0,8
tick,0x7ff8da10fb34,89504343,0,0x0,8
tick,0x7ff8da10fb34,89519423,0,0x0,8
tick,0x7ff8da10fb34,89535035,0,0x0,8
tick,0x7ff8da10fb34,89551093,0,0x0,8
tick,0x7ff8da10fb34,89567238,0,0x0,8
tick,0x7ff8da10fb34,89582370,0,0x0,8
tick,0x7ff8da10fb34,89598392,0,0x0,8
tick,0x7ff8da10fb34,89614453,0,0x0,8
tick,0x7ff8da10fb34,89630022,0,0x0,8
tick,0x7ff8da10fb34,89645669,0,0x0,8
tick,0x7ff8da10fb34,89661545,0,0x0,8
tick,0x7ff8da10fb34,89677020,0,0x0,8
tick,0x7ff8da10fb34,89693160,0,0x0,8
tick,0x7ff8da10fb34,89708572,0,0x0,8
tick,0x7ff8da10fb34,89723721,0,0x0,8
tick,0x7ff8da10fb34,89738916,0,0x0,8
tick,0x7ff8da10fb34,89754328,0,0x0,8
tick,0x7ff8da10fb34,89770077,0,0x0,8
tick,0x7ff8da10fb34,89784732,0,0x0,8
tick,0x7ff8da10fb34,89800148,0,0x0,8
tick,0x7ff8da10fb34,89816343,0,0x0,8
tick,0x7ff8da10fb34,89832125,0,0x0,8
tick,0x7ff8da10fb34,89848177,0,0x0,8
tick,0x7ff8da10fb34,89864063,0,0x0,8
tick,0x7ff8da10fb34,89879090,0,0x0,8
tick,0x7ff8da10fb34,89894516,0,0x0,8
tick,0x7ff8da10fb34,89910393,0,0x0,8
tick,0x7ff8da10fb34,89926530,0,0x0,8
tick,0x7ff8da10fb34,89942459,0,0x0,8
tick,0x7ff8da10fb34,89958462,0,0x0,8
tick,0x7ff8da10fb34,89974438,0,0x0,8
tick,0x7ff8da10fb34,89989830,0,0x0,8
tick,0x7ff8da10fb34,90005206,0,0x0,8
tick,0x7ff8da10fb34,90021178,0,0x0,8
tick,0x7ff8da10fb34,90037182,0,0x0,8
tick,0x7ff8da10fb34,90053178,0,0x0,8
tick,0x7ff8da10fb34,90068169,0,0x0,8
tick,0x7ff8da10fb34,90084169,0,0x0,8
tick,0x7ff8da10fb34,90099182,0,0x0,8
tick,0x7ff8da10fb34,90114138,0,0x0,8
tick,0x7ff8da10fb34,90130173,0,0x0,8
tick,0x7ff8da10fb34,90145267,0,0x0,8
tick,0x7ff8da10fb34,90160231,0,0x0,8
tick,0x7ff8da10fb34,90176177,0,0x0,8
tick,0x7ff8da10fb34,90191113,0,0x0,8
tick,0x7ff8da10fb34,90206112,0,0x0,8
tick,0x7ff8da10fb34,90221047,0,0x0,8
tick,0x7ff8da10fb34,90236057,0,0x0,8
tick,0x7ff8da10fb34,90252020,0,0x0,8
tick,0x7ff8da10fb34,90268042,0,0x0,8
tick,0x7ff8da10fb34,90284018,0,0x0,8
tick,0x7ff8da10fb34,90299992,0,0x0,8
tick,0x7ff8da10fb34,90315989,0,0x0,8
tick,0x7ff8da10fb34,90330974,0,0x0,8
tick,0x7ff8da10fb34,90346009,0,0x0,8
tick,0x7ff8da10fb34,90361982,0,0x0,8
tick,0x7ff8da10fb34,90377985,0,0x0,8
tick,0x7ff8da10fb34,90393963,0,0x0,8
tick,0x7ff8da10fb34,90409987,0,0x0,8
tick,0x7ff8da10fb34,90425994,0,0x0,8
tick,0x7ff8da10fb34,90440982,0,0x0,8
tick,0x7ff8da10fb34,90456049,0,0x0,8
tick,0x7ff8da10fb34,90472026,0,0x0,8
tick,0x7ff8da10fb34,90488062,0,0x0,8
tick,0x7ff8da10fb34,90504019,0,0x0,8
tick,0x7ff8da10fb34,90520137,0,0x0,8
tick,0x7ff8da10fb34,90536038,0,0x0,8
tick,0x7ff8da10fb34,90552050,0,0x0,8
tick,0x7ff8da10fb34,90568022,0,0x0,8
tick,0x7ff8da10fb34,90584017,0,0x0,8
tick,0x7ff8da10fb34,90600041,0,0x0,8
tick,0x7ff8da10fb34,90615992,0,0x0,8
tick,0x7ff8da10fb34,90631993,0,0x0,8
tick,0x7ff8da10fb34,90648005,0,0x0,8
tick,0x7ff8da10fb34,90663981,0,0x0,8
tick,0x7ff8da10fb34,90679991,0,0x0,8
tick,0x7ff8da10fb34,90696023,0,0x0,8
tick,0x7ff8da10fb34,90711987,0,0x0,8
tick,0x7ff8da10fb34,90727985,0,0x0,8
tick,0x7ff8da10fb34,90743958,0,0x0,8
tick,0x7ff8da10fb34,90759975,0,0x0,8
tick,0x7ff8da10fb34,90775949,0,0x0,8
tick,0x7ff8da10fb34,90791948,0,0x0,8
tick,0x7ff8da10fb34,90807936,0,0x0,8
tick,0x7ff8da10fb34,90824067,0,0x0,8
tick,0x7ff8da10fb34,90839992,0,0x0,8
tick,0x7ff8da10fb34,90855949,0,0x0,8
tick,0x7ff8da10fb34,90871952,0,0x0,8
tick,0x7ff8da10fb34,90887951,0,0x0,8
tick,0x7ff8da10fb34,90903073,0,0x0,8
tick,0x7ff8da10fb34,90917841,0,0x0,8
tick,0x7ff8da10fb34,90933514,0,0x0,8
tick,0x7ff8da10fb34,90949545,0,0x0,8
tick,0x7ff8da10fb34,90965514,0,0x0,8
tick,0x7ff8da10fb34,90981531,0,0x0,8
tick,0x7ff8da10fb34,90996515,0,0x0,8
tick,0x7ff8da10fb34,91012394,0,0x0,8
tick,0x7ff8da10fb34,91027406,0,0x0,8
tick,0x7ff8da10fb34,91042403,0,0x0,8
tick,0x7ff8da10fb34,91058400,0,0x0,8
tick,0x7ff8da10fb34,91073397,0,0x0,8
tick,0x7ff8da10fb34,91088374,0,0x0,8
tick,0x7ff8da10fb34,91104376,0,0x0,8
tick,0x7ff8da10fb34,91119390,0,0x0,8
tick,0x7ff8da10fb34,91135375,0,0x0,8
tick,0x7ff8da10fb34,91151464,0,0x0,8
tick,0x7ff8da10fb34,91167341,0,0x0,8
tick,0x7ff8da10fb34,91182341,0,0x0,8
tick,0x7ff8da10fb34,91197344,0,0x0,8
tick,0x7ff8da10fb34,91212333,0,0x0,8
tick,0x7ff8da10fb34,91227347,0,0x0,8
tick,0x7ff8da10fb34,91243346,0,0x0,8
tick,0x7ff8da10fb34,91259336,0,0x0,8
tick,0x7ff8da10fb34,91275441,0,0x0,8
tick,0x7ff8da10fb34,91291304,0,0x0,8
tick,0x7ff8da10fb34,91307322,0,0x0,8
tick,0x7ff8da10fb34,91323310,0,0x0,8
tick,0x7ff8da10fb34,91339324,0,0x0,8
tick,0x7ff8da10fb34,91355340,0,0x0,8
tick,0x7ff8da10fb34,91371303,0,0x0,8
tick,0x7ff8da10fb34,91386353,0,0x0,8
tick,0x7ff8da10fb34,91401299,0,0x0,8
tick,0x7ff8da10fb34,91417311,0,0x0,8
tick,0x7ff8da10fb34,91433205,0,0x0,8
tick,0x7ff8da10fb34,91448970,0,0x0,8
tick,0x7ff8da10fb34,91464982,0,0x0,8
tick,0x7ff8da10fb34,91480955,0,0x0,8
tick,0x7ff8da10fb34,91496935,0,0x0,8
tick,0x7ff8da10fb34,91511946,0,0x0,8
tick,0x7ff8da10fb34,91526981,0,0x0,8
tick,0x7ff8da10fb34,91542125,0,0x0,8
tick,0x7ff8da10fb34,91557923,0,0x0,8
tick,0x7ff8da10fb34,91572949,0,0x0,8
tick,0x7ff8da10fb34,91588910,0,0x0,8
tick,0x7ff8da10fb34,91604941,0,0x0,8
tick,0x7ff8da10fb34,91620934,0,0x0,8
tick,0x7ff8da10fb34,91636944,0,0x0,8
tick,0x7ff8da10fb34,91652909,0,0x0,8
tick,0x7ff8da10fb34,91668911,0,0x0,8
tick,0x7ff8da10fb34,91684890,0,0x0,8
tick,0x7ff8da10fb34,91700896,0,0x0,8
tick,0x7ff8da10fb34,91716898,0,0x0,8
tick,0x7ff8da10fb34,91731899,0,0x0,8
tick,0x7ff8da10fb34,91746897,0,0x0,8
tick,0x7ff8da10fb34,91761848,0,0x0,8
tick,0x7ff8da10fb34,91777900,0,0x0,8
tick,0x7ff8da10fb34,91793103,0,0x0,8
tick,0x7ff8da10fb34,91807861,0,0x0,8
tick,0x7ff8da10fb34,91823841,0,0x0,8
tick,0x7ff8da10fb34,91838863,0,0x0,8
tick,0x7ff8da10fb34,91853828,0,0x0,8
tick,0x7ff8da10fb34,91869868,0,0x0,8
tick,0x7ff8da10fb34,91884830,0,0x0,8
tick,0x7ff8da10fb34,91899820,0,0x0,8
tick,0x7ff8da10fb34,91915818,0,0x0,8
tick,0x7ff8da10fb34,91930811,0,0x0,8
tick,0x7ff8da10fb34,91945869,0,0x0,8
tick,0x7ff8da10fb34,91961799,0,0x0,8
tick,0x7ff8da10fb34,91976802,0,0x0,8
tick,0x7ff8da10fb34,91991866,0,0x0,8
tick,0x7ff8da10fb34,92007800,0,0x0,8
tick,0x7ff8da10fb34,92022818,0,0x0,8
tick,0x7ff8da10fb34,92037805,0,0x0,8
tick,0x7ff8da10fb34,92053827,0,0x0,8
tick,0x7ff8da10fb34,92068785,0,0x0,8
tick,0x7ff8da10fb34,92083751,0,0x0,8
tick,0x7ff8da10fb34,92099744,0,0x0,8
tick,0x7ff8da10fb34,92114725,0,0x0,8
tick,0x7ff8da10fb34,92129734,0,0x0,8
tick,0x7ff8da10fb34,92145796,0,0x0,8
tick,0x7ff8da10fb34,92160865,0,0x0,8
tick,0x7ff8da10fb34,92175860,0,0x0,8
tick,0x7ff8da10fb34,92191846,0,0x0,8
tick,0x7ff8da10fb34,92206733,0,0x0,8
tick,0x7ff8da10fb34,92221728,0,0x0,8
tick,0x7ff8da10fb34,92237732,0,0x0,8
tick,0x7ff8da10fb34,92252732,0,0x0,8
tick,0x7ff8da10fb34,92267689,0,0x0,8
tick,0x7ff8da10fb34,92283655,0,0x0,8
tick,0x7ff8da10fb34,92298688,0,0x0,8
tick,0x7ff8da10fb34,92313959,0,0x0,8
tick,0x7ff8da10fb34,92329449,0,0x0,8
tick,0x7ff8da10fb34,92345035,0,0x0,8
tick,0x7ff8da10fb34,92361006,0,0x0,8
tick,0x7ff8da10fb34,92377104,0,0x0,8
tick,0x7ff8da10fb34,92392336,0,0x0,8
tick,0x7ff8da10fb34,92407642,0,0x0,8
tick,0x7ff8da10fb34,92423284,0,0x0,8
tick,0x7ff8da10fb34,92439266,0,0x0,8
tick,0x7ff8da10fb34,92455193,0,0x0,8
tick,0x7ff8da10fb34,92470674,0,0x0,8
tick,0x7ff8da10fb34,92486249,0,0x0,8
tick,0x7ff8da10fb34,92501256,0,0x0,8
tick,0x7ff8da10fb34,92517090,0,0x0,8
tick,0x7ff8da10fb34,92532457,0,0x0,8
tick,0x7ff8da10fb34,92547279,0,0x0,8
tick,0x7ff8da10fb34,92562373,0,0x0,8
tick,0x7ff8da10fb34,92578216,0,0x0,8
tick,0x7ff8da10fb34,92593797,0,0x0,8
tick,0x7ff8da10fb34,92609287,0,0x0,8
tick,0x7ff8da10fb34,92625312,0,0x0,8
tick,0x7ff8da10fb34,92640131,0,0x0,8
tick,0x7ff8da10fb34,92655167,0,0x0,8
tick,0x7ff8da10fb34,92671275,0,0x0,8
tick,0x7ff8da10fb34,92686952,0,0x0,8
tick,0x7ff8da10fb34,92702241,0,0x0,8
tick,0x7ff8da10fb34,92717236,0,0x0,8
tick,0x7ff8da10fb34,92732090,0,0x0,8
tick,0x7ff8da10fb34,92747072,0,0x0,8
tick,0x7ff8da10fb34,92762574,0,0x0,8
tick,0x7ff8da10fb34,92778131,0,0x0,8
tick,0x7ff8da10fb34,92793894,0,0x0,8
tick,0x7ff8da10fb34,92809197,0,0x0,8
tick,0x7ff8da10fb34,92825283,0,0x0,8
tick,0x7ff8da10fb34,92840066,0,0x0,8
tick,0x7ff8da10fb34,92855199,0,0x0,8
tick,0x7ff8da10fb34,92870774,0,0x0,8
tick,0x7ff8da10fb34,92886243,0,0x0,8
tick,0x7ff8da10fb34,92901291,0,0x0,8
tick,0x7ff8da10fb34,92916959,0,0x0,8
tick,0x7ff8da10fb34,92932815,0,0x0,8
tick,0x7ff8da10fb34,92948528,0,0x0,8
tick,0x7ff8da10fb34,92964165,0,0x0,8
tick,0x7ff8da10fb34,92979745,0,0x0,8
tick,0x7ff8da10fb34,92995188,0,0x0,8
tick,0x7ff8da10fb34,93010362,0,0x0,8
tick,0x7ff8da10fb34,93025225,0,0x0,8
tick,0x7ff8da10fb34,93040331,0,0x0,8
tick,0x7ff8da10fb34,93056286,0,0x0,8
tick,0x7ff8da10fb34,93072294,0,0x0,8
tick,0x7ff8da10fb34,93087751,0,0x0,8
tick,0x7ff8da10fb34,93103279,0,0x0,8
tick,0x7ff8da10fb34,93118502,0,0x0,8
tick,0x7ff8da10fb34,93133598,0,0x0,8
tick,0x7ff8da10fb34,93148781,0,0x0,8
tick,0x7ff8da10fb34,93164188,0,0x0,8
tick,0x7ff8da10fb34,93179194,0,0x0,8
tick,0x7ff8da10fb34,93194787,0,0x0,8
tick,0x7ff8da10fb34,93210373,0,0x0,8
tick,0x7ff8da10fb34,93226587,0,0x0,8
tick,0x7ff8da10fb34,93242596,0,0x0,8
tick,0x7ff8da10fb34,93258123,0,0x0,8
tick,0x7ff8da10fb34,93273771,0,0x0,8
tick,0x7ff8da10fb34,93289730,0,0x0,8
tick,0x7ff8da10fb34,93305870,0,0x0,8
tick,0x7ff8da10fb34,93321703,0,0x0,8
tick,0x7ff8da10fb34,93337676,0,0x0,8
tick,0x7ff8da10fb34,93353707,0,0x0,8
tick,0x7ff8da10fb34,93369668,0,0x0,8
tick,0x7ff8da10fb34,93385755,0,0x0,8
tick,0x7ff8da10fb34,93400621,0,0x0,8
tick,0x7ff8da10fb34,93415621,0,0x0,8
tick,0x7ff8da10fb34,93431637,0,0x0,8
tick,0x7ff8da10fb34,93447644,0,0x0,8
tick,0x7ff8da10fb34,93463614,0,0x0,8
tick,0x7ff8da10fb34,93478608,0,0x0,8
tick,0x7ff8da10fb34,93493673,0,0x0,8
tick,0x7ff8da10fb34,93509606,0,0x0,8
tick,0x7ff8da10fb34,93525651,0,0x0,8
tick,0x7ff8da10fb34,93541663,0,0x0,8
tick,0x7ff8da10fb34,93557593,0,0x0,8
tick,0x7ff8da10fb34,93573625,0,0x0,8
tick,0x7ff8da10fb34,93589582,0,0x0,8
tick,0x7ff8da10fb34,93605085,0,0x0,8
tick,0x7ff8da10fb34,93620581,0,0x0,8
tick,0x7ff8da10fb34,93636071,0,0x0,8
tick,0x7ff8da10fb34,93651101,0,0x0,8
tick,0x7ff8da10fb34,93666253,0,0x0,8
tick,0x7ff8da10fb34,93682272,0,0x0,8
tick,0x7ff8da10fb34,93697224,0,0x0,8
tick,0x7ff8da10fb34,93712635,0,0x0,8
tick,0x7ff8da10fb34,93728245,0,0x0,8
tick,0x7ff8da10fb34,93743356,0,0x0,8
tick,0x7ff8da10fb34,93758885,0,0x0,8
tick,0x7ff8da10fb34,93774637,0,0x0,8
tick,0x7ff8da10fb34,93789120,0,0x0,8
tick,0x7ff8da10fb34,93804316,0,0x0,8
tick,0x7ff8da10fb34,93819801,0,0x0,8
tick,0x7ff8da10fb34,93835296,0,0x0,8
tick,0x7ff8da10fb34,93850597,0,0x0,8
tick,0x7ff8da10fb34,93866184,0,0x0,8
tick,0x7ff8da10fb34,93881263,0,0x0,8
tick,0x7ff8da10fb34,93896165,0,0x0,8
tick,0x7ff8da10fb34,93912077,0,0x0,8
tick,0x7ff8da10fb34,93927201,0,0x0,8
tick,0x7ff8da10fb34,93943290,0,0x0,8
tick,0x7ff8da10fb34,93959092,0,0x0,8
tick,0x7ff8da10fb34,93974476,0,0x0,8
tick,0x7ff8da10fb34,93989552,0,0x0,8
tick,0x7ff8da10fb34,94005282,0,0x0,8
tick,0x7ff8da10fb34,94020097,0,0x0,8
tick,0x7ff8da10fb34,94034972,0,0x0,8
tick,0x7ff8da10fb34,94050269,0,0x0,8
tick,0x7ff8da10fb34,94066216,0,0x0,8
tick,0x7ff8da10fb34,94081817,0,0x0,8
tick,0x7ff8da10fb34,94097210,0,0x0,8
tick,0x7ff8da10fb34,94112695,0,0x0,8
tick,0x7ff8da10fb34,94128245,0,0x0,8
tick,0x7ff8da10fb34,94144044,0,0x0,8
tick,0x7ff8da10fb34,94159740,0,0x0,8
tick,0x7ff8da10fb34,94174744,0,0x0,8
tick,0x7ff8da10fb34,94189792,0,0x0,8
tick,0x7ff8da10fb34,94205241,0,0x0,8
tick,0x7ff8da10fb34,94220303,0,0x0,8
tick,0x7ff8da10fb34,94236294,0,0x0,8
tick,0x7ff8da10fb34,94252264,0,0x0,8
tick,0x7ff8da10fb34,94267228,0,0x0,8
tick,0x7ff8da10fb34,94282280,0,0x0,8
tick,0x7ff8da10fb34,94297711,0,0x0,8
tick,0x7ff8da10fb34,94312923,0,0x0,8
tick,0x7ff8da10fb34,94328977,0,0x0,8
tick,0x7ff8da10fb34,94345035,0,0x0,8
tick,0x7ff8da10fb34,94360649,0,0x0,8
tick,0x7ff8da10fb34,94376747,0,0x0,8
tick,0x7ff8da10fb34,94393119,0,0x0,8
tick,0x7ff8da10fb34,94408548,0,0x0,8
tick,0x7ff8da10fb34,94423780,0,0x0,8
tick,0x7ff8da10fb34,94439226,0,0x0,8
tick,0x7ff8da10fb34,94454586,0,0x0,8
tick,0x7ff8da10fb34,94469933,0,0x0,8
tick,0x7ff8da10fb34,94485200,0,0x0,8
tick,0x7ff8da10fb34,94501458,0,0x0,8
tick,0x7ff8da10fb34,94516617,0,0x0,8
tick,0x7ff8da10fb34,94532679,0,0x0,8
tick,0x7ff8da10fb34,94548679,0,0x0,8
tick,0x7ff8da10fb34,94564557,0,0x0,8
tick,0x7ff8da10fb34,94580184,0,0x0,8
tick,0x7ff8da10fb34,94596335,0,0x0,8
tick,0x7ff8da10fb34,94611497,0,0x0,8
tick,0x7ff8da10fb34,94627135,0,0x0,8
tick,0x7ff8da10fb34,94642982,0,0x0,8
tick,0x7ff8da10fb34,94658397,0,0x0,8
tick,0x7ff8da10fb34,94674397,0,0x0,8
tick,0x7ff8da10fb34,94689159,0,0x0,8
tick,0x7ff8da10fb34,94704821,0,0x0,8
tick,0x7ff8da10fb34,94720284,0,0x0,8
tick,0x7ff8da10fb34,94736360,0,0x0,8
tick,0x7ff8da10fb34,94752255,0,0x0,8
tick,0x7ff8da10fb34,94768318,0,0x0,8
tick,0x7ff8da10fb34,94784274,0,0x0,8
tick,0x7ff8da10fb34,94799997,0,0x0,8
tick,0x7ff8da10fb34,94815180,0,0x0,8
tick,0x7ff8da10fb34,94830295,0,0x0,8
tick,0x7ff8da10fb34,94846274,0,0x0,8
tick,0x7ff8da10fb34,94861756,0,0x0,8
tick,0x7ff8da10fb34,94877012,0,0x0,8
tick,0x7ff8da10fb34,94892886,0,0x0,8
tick,0x7ff8da10fb34,94908178,0,0x0,8
tick,0x7ff8da10fb34,94923259,0,0x0,8
tick,0x7ff8da10fb34,94938625,0,0x0,8
tick,0x7ff8da10fb34,94954335,0,0x0,8
tick,0x7ff8da10fb34,94969545,0,0x0,8
tick,0x7ff8da10fb34,94985256,0,0x0,8
tick,0x7ff8da10fb34,95000318,0,0x0,8
tick,0x7ff8da10fb34,95016252,0,0x0,8
tick,0x7ff8da10fb34,95031621,0,0x0,8
tick,0x7ff8da10fb34,95046272,0,0x0,8
tick,0x7ff8da10fb34,95061511,0,0x0,8
tick,0x7ff8da10fb34,95076899,0,0x0,8
tick,0x7ff8da10fb34,95092779,0,0x0,8
tick,0x7ff8da10fb34,95108504,0,0x0,8
tick,0x7ff8da10fb34,95123567,0,0x0,8
tick,0x7ff8da10fb34,95139106,0,0x0,8
tick,0x7ff8da10fb34,95154840,0,0x0,8
tick,0x7ff8da10fb34,95169884,0,0x0,8
tick,0x7ff8da10fb34,95186085,0,0x0,8
tick,0x7ff8da10fb34,95201834,0,0x0,8
tick,0x7ff8da10fb34,95217029,0,0x0,8
tick,0x7ff8da10fb34,95231830,0,0x0,8
tick,0x7ff8da10fb34,95247139,0,0x0,8
tick,0x7ff8da10fb34,95262427,0,0x0,8
tick,0x7ff8da10fb34,95277642,0,0x0,8
tick,0x7ff8da10fb34,95293447,0,0x0,8
tick,0x7ff8da10fb34,95309234,0,0x0,8
tick,0x7ff8da10fb34,95325495,0,0x0,8
tick,0x7ff8da10fb34,95341231,0,0x0,8
tick,0x7ff8da10fb34,95357360,0,0x0,8
tick,0x7ff8da10fb34,95373191,0,0x0,8
tick,0x7ff8da10fb34,95388506,0,0x0,8
tick,0x7ff8da10fb34,95404283,0,0x0,8
tick,0x7ff8da10fb34,95419513,0,0x0,8
tick,0x7ff8da10fb34,95435036,0,0x0,8
tick,0x7ff8da10fb34,95450706,0,0x0,8
tick,0x7ff8da10fb34,95466305,0,0x0,8
tick,0x7ff8da10fb34,95481274,0,0x0,8
tick,0x7ff8da10fb34,95497338,0,0x0,8
tick,0x7ff8da10fb34,95511998,0,0x0,8
tick,0x7ff8da10fb34,95527761,0,0x0,8
tick,0x7ff8da10fb34,95543406,0,0x0,8
tick,0x7ff8da10fb34,95559341,0,0x0,8
tick,0x7ff8da10fb34,95574287,0,0x0,8
tick,0x7ff8da10fb34,95589433,0,0x0,8
tick,0x7ff8da10fb34,95604604,0,0x0,8
tick,0x7ff8da10fb34,95620148,0,0x0,8
tick,0x7ff8da10fb34,95635320,0,0x0,8
tick,0x7ff8da10fb34,95650645,0,0x0,8
tick,0x7ff8da10fb34,95666290,0,0x0,8
tick,0x7ff8da10fb34,95681264,0,0x0,8
tick,0x7ff8da10fb34,95696222,0,0x0,8
tick,0x7ff8da10fb34,95711420,0,0x0,8
tick,0x7ff8da10fb34,95726827,0,0x0,8
tick,0x7ff8da10fb34,95742649,0,0x0,8
tick,0x7ff8da10fb34,95757553,0,0x0,8
tick,0x7ff8da10fb34,95772721,0,0x0,8
tick,0x7ff8da10fb34,95788170,0,0x0,8
tick,0x7ff8da10fb34,95804348,0,0x0,8
tick,0x7ff8da10fb34,95819592,0,0x0,8
tick,0x7ff8da10fb34,95835259,0,0x0,8
tick,0x7ff8da10fb34,95850226,0,0x0,8
tick,0x7ff8da10fb34,95865207,0,0x0,8
tick,0x7ff8da10fb34,95881250,0,0x0,8
tick,0x7ff8da10fb34,95896250,0,0x0,8
tick,0x7ff8da10fb34,95911313,0,0x0,8
tick,0x7ff8da10fb34,95926619,0,0x0,8
tick,0x7ff8da10fb34,95942405,0,0x0,8
tick,0x7ff8da10fb34,95957526,0,0x0,8
tick,0x7ff8da10fb34,95972681,0,0x0,8
tick,0x7ff8da10fb34,95988247,0,0x0,8
tick,0x7ff8da10fb34,96004286,0,0x0,8
tick,0x7ff8da10fb34,96019475,0,0x0,8
tick,0x7ff8da10fb34,96035073,0,0x0,8
tick,0x7ff8da10fb34,96050344,0,0x0,8
tick,0x7ff8da10fb34,96066332,0,0x0,8
tick,0x7ff8da10fb34,96081263,0,0x0,8
tick,0x7ff8da10fb34,96096977,0,0x0,8
tick,0x7ff8da10fb34,96112125,0,0x0,8
tick,0x7ff8da10fb34,96127549,0,0x0,8
tick,0x7ff8da10fb34,96143307,0,0x0,8
tick,0x7ff8da10fb34,96158264,0,0x0,8
tick,0x7ff8da10fb34,96173227,0,0x0,8
tick,0x7ff8da10fb34,96188827,0,0x0,8
tick,0x7ff8da10fb34,96204302,0,0x0,8
tick,0x7ff8da10fb34,96219647,0,0x0,8
tick,0x7ff8da10fb34,96234816,0,0x0,8
tick,0x7ff8da10fb34,96250220,0,0x0,8
tick,0x7ff8da10fb34,96265097,0,0x0,8
tick,0x7ff8da10fb34,96280222,0,0x0,8
tick,0x7ff8da10fb34,96295067,0,0x0,8
tick,0x7ff8da10fb34,96310037,0,0x0,8
tick,0x7ff8da10fb34,96326252,0,0x0,8
tick,0x7ff8da10fb34,96341693,0,0x0,8
tick,0x7ff8da10fb34,96358113,0,0x0,8
tick,0x7ff8da10fb34,96373479,0,0x0,8
tick,0x7ff8da10fb34,96389133,0,0x0,8
tick,0x7ff8da10fb34,96404262,0,0x0,8
tick,0x7ff8da10fb34,96419627,0,0x0,8
tick,0x7ff8da10fb34,96435394,0,0x0,8
tick,0x7ff8da10fb34,96450309,0,0x0,8
tick,0x7ff8da10fb34,96466276,0,0x0,8
tick,0x7ff8da10fb34,96481358,0,0x0,8
tick,0x7ff8da10fb34,96497253,0,0x0,8
tick,0x7ff8da10fb34,96512693,0,0x0,8
tick,0x7ff8da10fb34,96528167,0,0x0,8
tick,0x7ff8da10fb34,96544042,0,0x0,8
tick,0x7ff8da10fb34,96559627,0,0x0,8
tick,0x7ff8da10fb34,96575468,0,0x0,8
tick,0x7ff8da10fb34,96591353,0,0x0,8
tick,0x7ff8da10fb34,96606905,0,0x0,8
tick,0x7ff8da10fb34,96621349,0,0x0,8
tick,0x7ff8da10fb34,96637460,0,0x0,8
tick,0x7ff8da10fb34,96653270,0,0x0,8
tick,0x7ff8da10fb34,96668820,0,0x0,8
tick,0x7ff8da10fb34,96684229,0,0x0,8
tick,0x7ff8da10fb34,96699546,0,0x0,8
tick,0x7ff8da10fb34,96714465,0,0x0,8
tick,0x7ff8da10fb34,96729181,0,0x0,8
tick,0x7ff8da10fb34,96745123,0,0x0,8
tick,0x7ff8da10fb34,96760691,0,0x0,8
tick,0x7ff8da10fb34,96776250,0,0x0,8
tick,0x7ff8da10fb34,96791964,0,0x0,8
tick,0x7ff8da10fb34,96807586,0,0x0,8
tick,0x7ff8da10fb34,96822343,0,0x0,8
tick,0x7ff8da10fb34,96838315,0,0x0,8
tick,0x7ff8da10fb34,96854304,0,0x0,8
tick,0x7ff8da10fb34,96869804,0,0x0,8
tick,0x7ff8da10fb34,96885229,0,0x0,8
tick,0x7ff8da10fb34,96900795,0,0x0,8
tick,0x7ff8da10fb34,96916694,0,0x0,8
tick,0x7ff8da10fb34,96932203,0,0x0,8
tick,0x7ff8da10fb34,96948166,0,0x0,8
tick,0x7ff8da10fb34,96963372,0,0x0,8
tick,0x7ff8da10fb34,96978675,0,0x0,8
tick,0x7ff8da10fb34,96994186,0,0x0,8
tick,0x7ff8da10fb34,97009443,0,0x0,8
tick,0x7ff8da10fb34,97025230,0,0x0,8
tick,0x7ff8da10fb34,97040302,0,0x0,8
tick,0x7ff8da10fb34,97056698,0,0x0,8
tick,0x7ff8da10fb34,97071198,0,0x0,8
tick,0x7ff8da10fb34,97087289,0,0x0,8
tick,0x7ff8da10fb34,97103304,0,0x0,8
tick,0x7ff8da10fb34,97118482,0,0x0,8
tick,0x7ff8da10fb34,97133817,0,0x0,8
tick,0x7ff8da10fb34,97149195,0,0x0,8
tick,0x7ff8da10fb34,97164264,0,0x0,8
tick,0x7ff8da10fb34,97179570,0,0x0,8
tick,0x7ff8da10fb34,97194820,0,0x0,8
tick,0x7ff8da10fb34,97210386,0,0x0,8
tick,0x7ff8da10fb34,97226082,0,0x0,8
tick,0x7ff8da10fb34,97241410,0,0x0,8
tick,0x7ff8da10fb34,97257652,0,0x0,8
tick,0x7ff8da10fb34,97272399,0,0x0,8
tick,0x7ff8da10fb34,97287278,0,0x0,8
tick,0x7ff8da10fb34,97302364,0,0x0,8
tick,0x7ff8da10fb34,97318300,0,0x0,8
tick,0x7ff8da10fb34,97333955,0,0x0,8
tick,0x7ff8da10fb34,97349615,0,0x0,8
tick,0x7ff8da10fb34,97365178,0,0x0,8
tick,0x7ff8da10fb34,97380357,0,0x0,8
tick,0x7ff8da10fb34,97396296,0,0x0,8
tick,0x7ff8da10fb34,97411150,0,0x0,8
tick,0x7ff8da10fb34,97425922,0,0x0,8
tick,0x7ff8da10fb34,97441927,0,0x0,8
tick,0x7ff8da10fb34,97457289,0,0x0,8
tick,0x7ff8da10fb34,97473369,0,0x0,8
tick,0x7ff8da10fb34,97488051,0,0x0,8
tick,0x7ff8da10fb34,97503292,0,0x0,8
tick,0x7ff8da10fb34,97519252,0,0x0,8
tick,0x7ff8da10fb34,97534627,0,0x0,8
tick,0x7ff8da10fb34,97549580,0,0x0,8
tick,0x7ff8da10fb34,97564730,0,0x0,8
tick,0x7ff8da10fb34,97580195,0,0x0,8
tick,0x7ff8da10fb34,97595205,0,0x0,8
tick,0x7ff8da10fb34,97610936,0,0x0,8
tick,0x7ff8da10fb34,97627016,0,0x0,8
tick,0x7ff8da10fb34,97642375,0,0x0,8
tick,0x7ff8da10fb34,97658584,0,0x0,8
tick,0x7ff8da10fb34,97673364,0,0x0,8
tick,0x7ff8da10fb34,97688615,0,0x0,8
tick,0x7ff8da10fb34,97704303,0,0x0,8
tick,0x7ff8da10fb34,97719753,0,0x0,8
tick,0x7ff8da10fb34,97735280,0,0x0,8
tick,0x7ff8da10fb34,97751367,0,0x0,8
tick,0x7ff8da10fb34,97766262,0,0x0,8
tick,0x7ff8da10fb34,97781219,0,0x0,8
tick,0x7ff8da10fb34,97796654,0,0x0,8
tick,0x7ff8da10fb34,97811997,0,0x0,8
tick,0x7ff8da10fb34,97827257,0,0x0,8
tick,0x7ff8da10fb34,97842451,0,0x0,8
tick,0x7ff8da10fb34,97858431,0,0x0,8
tick,0x7ff8da10fb34,97873365,0,0x0,8
tick,0x7ff8da10fb34,97889622,0,0x0,8
tick,0x7ff8da10fb34,97904513,0,0x0,8
tick,0x7ff8da10fb34,97919783,0,0x0,8
tick,0x7ff8da10fb34,97934445,0,0x0,8
tick,0x7ff8da10fb34,97949674,0,0x0,8
tick,0x7ff8da10fb34,97964653,0,0x0,8
tick,0x7ff8da10fb34,97980080,0,0x0,8
tick,0x7ff8da10fb34,97995286,0,0x0,8
tick,0x7ff8da10fb34,98010544,0,0x0,8
tick,0x7ff8da10fb34,98025683,0,0x0,8
tick,0x7ff8da10fb34,98041506,0,0x0,8
tick,0x7ff8da10fb34,98057208,0,0x0,8
tick,0x7ff8da10fb34,98072354,0,0x0,8
tick,0x7ff8da10fb34,98088088,0,0x0,8
tick,0x7ff8da10fb34,98103367,0,0x0,8
tick,0x7ff8da10fb34,98118492,0,0x0,8
tick,0x7ff8da10fb34,98134363,0,0x0,8
tick,0x7ff8da10fb34,98149477,0,0x0,8
tick,0x7ff8da10fb34,98164977,0,0x0,8
tick,0x7ff8da10fb34,98180246,0,0x0,8
tick,0x7ff8da10fb34,98196408,0,0x0,8
tick,0x7ff8da10fb34,98211876,0,0x0,8
tick,0x7ff8da10fb34,98228061,0,0x0,8
tick,0x7ff8da10fb34,98244291,0,0x0,8
tick,0x7ff8da10fb34,98259789,0,0x0,8
tick,0x7ff8da10fb34,98275393,0,0x0,8
tick,0x7ff8da10fb34,98291369,0,0x0,8
tick,0x7ff8da10fb34,98306547,0,0x0,8
tick,0x7ff8da10fb34,98322540,0,0x0,8
tick,0x7ff8da10fb34,98338445,0,0x0,8
tick,0x7ff8da10fb34,98354440,0,0x0,8
tick,0x7ff8da10fb34,98370382,0,0x0,8
tick,0x7ff8da10fb34,98386435,0,0x0,8
tick,0x7ff8da10fb34,98402407,0,0x0,8
tick,0x7ff8da10fb34,98418376,0,0x0,8
tick,0x7ff8da10fb34,98434358,0,0x0,8
tick,0x7ff8da10fb34,98450399,0,0x0,8
tick,0x7ff8da10fb34,98466339,0,0x0,8
tick,0x7ff8da10fb34,98481354,0,0x0,8
tick,0x7ff8da10fb34,98496375,0,0x0,8
tick,0x7ff8da10fb34,98512343,0,0x0,8
tick,0x7ff8da10fb34,98528354,0,0x0,8
tick,0x7ff8da10fb34,98543335,0,0x0,8
tick,0x7ff8da10fb34,98558352,0,0x0,8
tick,0x7ff8da10fb34,98574321,0,0x0,8
tick,0x7ff8da10fb34,98590300,0,0x0,8
tick,0x7ff8da10fb34,98606572,0,0x0,8
tick,0x7ff8da10fb34,98621937,0,0x0,8
tick,0x7ff8da10fb34,98637083,0,0x0,8
tick,0x7ff8da10fb34,98652779,0,0x0,8
tick,0x7ff8da10fb34,98668631,0,0x0,8
tick,0x7ff8da10fb34,98684244,0,0x0,8
tick,0x7ff8da10fb34,98699194,0,0x0,8
tick,0x7ff8da10fb34,98714616,0,0x0,8
tick,0x7ff8da10fb34,98729835,0,0x0,8
tick,0x7ff8da10fb34,98745052,0,0x0,8
tick,0x7ff8da10fb34,98760327,0,0x0,8
tick,0x7ff8da10fb34,98776503,0,0x0,8
tick,0x7ff8da10fb34,98792370,0,0x0,8
tick,0x7ff8da10fb34,98807746,0,0x0,8
tick,0x7ff8da10fb34,98822450,0,0x0,8
tick,0x7ff8da10fb34,98837451,0,0x0,8
tick,0x7ff8da10fb34,98853338,0,0x0,8
tick,0x7ff8da10fb34,98869083,0,0x0,8
tick,0x7ff8da10fb34,98884212,0,0x0,8
tick,0x7ff8da10fb34,98899620,0,0x0,8
tick,0x7ff8da10fb34,98914982,0,0x0,8
tick,0x7ff8da10fb34,98930167,0,0x0,8
tick,0x7ff8da10fb34,98946231,0,0x0,8
tick,0x7ff8da10fb34,98961792,0,0x0,8
tick,0x7ff8da10fb34,98977303,0,0x0,8
tick,0x7ff8da10fb34,98993042,0,0x0,8
tick,0x7ff8da10fb34,99008573,0,0x0,8
tick,0x7ff8da10fb34,99024384,0,0x0,8
tick,0x7ff8da10fb34,99039484,0,0x0,8
tick,0x7ff8da10fb34,99055188,0,0x0,8
tick,0x7ff8da10fb34,99070250,0,0x0,8
tick,0x7ff8da10fb34,99086264,0,0x0,8
tick,0x7ff8da10fb34,99102319,0,0x0,8
tick,0x7ff8da10fb34,99117200,0,0x0,8
tick,0x7ff8da10fb34,99131925,0,0x0,8
tick,0x7ff8da10fb34,99147228,0,0x0,8
tick,0x7ff8da10fb34,99162558,0,0x0,8
tick,0x7ff8da10fb34,99178006,0,0x0,8
tick,0x7ff8da10fb34,99193266,0,0x0,8
tick,0x7ff8da10fb34,99208661,0,0x0,8
tick,0x7ff8da10fb34,99224388,0,0x0,8
tick,0x7ff8da10fb34,99239190,0,0x0,8
tick,0x7ff8da10fb34,99254247,0,0x0,8
tick,0x7ff8da10fb34,99269509,0,0x0,8
tick,0x7ff8da10fb34,99285217,0,0x0,8
tick,0x7ff8da10fb34,99301266,0,0x0,8
tick,0x7ff8da10fb34,99317346,0,0x0,8
tick,0x7ff8da10fb34,99332677,0,0x0,8
tick,0x7ff8da10fb34,99348687,0,0x0,8
tick,0x7ff8da10fb34,99364131,0,0x0,8
tick,0x7ff8da10fb34,99379446,0,0x0,8
tick,0x7ff8da10fb34,99394770,0,0x0,8
tick,0x7ff8da10fb34,99410081,0,0x0,8
tick,0x7ff8da10fb34,99426147,0,0x0,8
tick,0x7ff8da10fb34,99441717,0,0x0,8
tick,0x7ff8da10fb34,99457942,0,0x0,8
tick,0x7ff8da10fb34,99473199,0,0x0,8
tick,0x7ff8da10fb34,99488198,0,0x0,8
tick,0x7ff8da10fb34,99503365,0,0x0,8
tick,0x7ff8da10fb34,99519346,0,0x0,8
tick,0x7ff8da10fb34,99535401,0,0x0,8
tick,0x7ff8da10fb34,99551222,0,0x0,8
tick,0x7ff8da10fb34,99566958,0,0x0,8
tick,0x7ff8da10fb34,99582224,0,0x0,8
tick,0x7ff8da10fb34,99597382,0,0x0,8
tick,0x7ff8da10fb34,99613183,0,0x0,8
tick,0x7ff8da10fb34,99629124,0,0x0,8
tick,0x7ff8da10fb34,99644723,0,0x0,8
tick,0x7ff8da10fb34,99659970,0,0x0,8
tick,0x7ff8da10fb34,99676012,0,0x0,8
tick,0x7ff8da10fb34,99691640,0,0x0,8
tick,0x7ff8da10fb34,99707373,0,0x0,8
tick,0x7ff8da10fb34,99722318,0,0x0,8
tick,0x7ff8da10fb34,99737327,0,0x0,8
tick,0x7ff8da10fb34,99753289,0,0x0,8
tick,0x7ff8da10fb34,99768315,0,0x0,8
tick,0x7ff8da10fb34,99784275,0,0x0,8
tick,0x7ff8da10fb34,99799006,0,0x0,8
tick,0x7ff8da10fb34,99814194,0,0x0,8
tick,0x7ff8da10fb34,99829423,0,0x0,8
tick,0x7ff8da10fb34,99844936,0,0x0,8
tick,0x7ff8da10fb34,99859783,0,0x0,8
tick,0x7ff8da10fb34,99874887,0,0x0,8
tick,0x7ff8da10fb34,99890791,0,0x0,8
tick,0x7ff8da10fb34,99906284,0,0x0,8
tick,0x7ff8da10fb34,99922117,0,0x0,8
tick,0x7ff8da10fb34,99938351,0,0x0,8
tick,0x7ff8da10fb34,99952284,0,0x0,8
tick,0x7ff8da10fb34,99968061,0,0x0,8
tick,0x7ff8da10fb34,99983237,0,0x0,8
tick,0x7ff8da10fb34,99998528,0,0x0,8
tick,0x7ff8da10fb34,100014114,0,0x0,8
tick,0x7ff8da10fb34,100029471,0,0x0,8
tick,0x7ff8da10fb34,100044545,0,0x0,8
tick,0x7ff8da10fb34,100059971,0,0x0,8
tick,0x7ff8da10fb34,100075184,0,0x0,8
tick,0x7ff8da10fb34,100090580,0,0x0,8
tick,0x7ff8da10fb34,100106182,0,0x0,8
tick,0x7ff8da10fb34,100122247,0,0x0,8
tick,0x7ff8da10fb34,100137315,0,0x0,8
tick,0x7ff8da10fb34,100152356,0,0x0,8
tick,0x7ff8da10fb34,100167244,0,0x0,8
tick,0x7ff8da10fb34,100182253,0,0x0,8
tick,0x7ff8da10fb34,100198011,0,0x0,8
tick,0x7ff8da10fb34,100213716,0,0x0,8
tick,0x7ff8da10fb34,100229416,0,0x0,8
tick,0x7ff8da10fb34,100244631,0,0x0,8
tick,0x7ff8da10fb34,100259697,0,0x0,8
tick,0x7ff8da10fb34,100275739,0,0x0,8
tick,0x7ff8da10fb34,100291352,0,0x0,8
tick,0x7ff8da10fb34,100307915,0,0x0,8
tick,0x7ff8da10fb34,100323977,0,0x0,8
tick,0x7ff8da10fb34,100338110,0,0x0,8
tick,0x7ff8da10fb34,100354182,0,0x0,8
tick,0x7ff8da10fb34,100369159,0,0x0,8
tick,0x7ff8da10fb34,100385076,0,0x0,8
tick,0x7ff8da10fb34,100400559,0,0x0,8
tick,0x7ff8da10fb34,100415187,0,0x0,8
tick,0x7ff8da10fb34,100430188,0,0x0,8
tick,0x7ff8da10fb34,100446246,0,0x0,8
tick,0x7ff8da10fb34,100461225,0,0x0,8
tick,0x7ff8da10fb34,100476218,0,0x0,8
tick,0x7ff8da10fb34,100492346,0,0x0,8
tick,0x7ff8da10fb34,100507317,0,0x0,8
tick,0x7ff8da10fb34,100522273,0,0x0,8
tick,0x7ff8da10fb34,100537669,0,0x0,8
tick,0x7ff8da10fb34,100553333,0,0x0,8
tick,0x7ff8da10fb34,100568398,0,0x0,8
tick,0x7ff8da10fb34,100583274,0,0x0,8
tick,0x7ff8da10fb34,100598743,0,0x0,8
tick,0x7ff8da10fb34,100614250,0,0x0,8
tick,0x7ff8da10fb34,100629595,0,0x0,8
tick,0x7ff8da10fb34,100645276,0,0x0,8
tick,0x7ff8da10fb34,100661265,0,0x0,8
tick,0x7ff8da10fb34,100677250,0,0x0,8
tick,0x7ff8da10fb34,100692538,0,0x0,8
tick,0x7ff8da10fb34,100708223,0,0x0,8
tick,0x7ff8da10fb34,100723671,0,0x0,8
tick,0x7ff8da10fb34,100738756,0,0x0,8
tick,0x7ff8da10fb34,100754276,0,0x0,8
tick,0x7ff8da10fb34,100769665,0,0x0,8
tick,0x7ff8da10fb34,100785211,0,0x0,8
tick,0x7ff8da10fb34,100800560,0,0x0,8
tick,0x7ff8da10fb34,100816237,0,0x0,8
tick,0x7ff8da10fb34,100831502,0,0x0,8
tick,0x7ff8da10fb34,100847079,0,0x0,8
tick,0x7ff8da10fb34,100863068,0,0x0,8
tick,0x7ff8da10fb34,100878521,0,0x0,8
tick,0x7ff8da10fb34,100894125,0,0x0,8
tick,0x7ff8da10fb34,100909231,0,0x0,8
tick,0x7ff8da10fb34,100924393,0,0x0,8
tick,0x7ff8da10fb34,100940356,0,0x0,8
tick,0x7ff8da10fb34,100955247,0,0x0,8
tick,0x7ff8da10fb34,100970462,0,0x0,8
tick,0x7ff8da10fb34,100986360,0,0x0,8
tick,0x7ff8da10fb34,101001285,0,0x0,8
tick,0x7ff8da10fb34,101017235,0,0x0,8
tick,0x7ff8da10fb34,101033275,0,0x0,8
tick,0x7ff8da10fb34,101049043,0,0x0,8
tick,0x7ff8da10fb34,101064430,0,0x0,8
tick,0x7ff8da10fb34,101079412,0,0x0,8
tick,0x7ff8da10fb34,101094406,0,0x0,8
tick,0x7ff8da10fb34,101109788,0,0x0,8
tick,0x7ff8da10fb34,101125174,0,0x0,8
tick,0x7ff8da10fb34,101141063,0,0x0,8
tick,0x7ff8da10fb34,101156356,0,0x0,8
tick,0x7ff8da10fb34,101171433,0,0x0,8
tick,0x7ff8da10fb34,101186191,0,0x0,8
tick,0x7ff8da10fb34,101201262,0,0x0,8
tick,0x7ff8da10fb34,101217361,0,0x0,8
tick,0x7ff8da10fb34,101232946,0,0x0,8
tick,0x7ff8da10fb34,101248652,0,0x0,8
tick,0x7ff8da10fb34,101264198,0,0x0,8
tick,0x7ff8da10fb34,101279182,0,0x0,8
tick,0x7ff8da10fb34,101294003,0,0x0,8
tick,0x7ff8da10fb34,101309239,0,0x0,8
tick,0x7ff8da10fb34,101326416,0,0x0,8
tick,0x7ff8da10fb34,101340836,0,0x0,8
tick,0x7ff8da10fb34,101357415,0,0x0,8
tick,0x7ff8da10fb34,101372753,0,0x0,8
tick,0x7ff8da10fb34,101388791,0,0x0,8
tick,0x7ff8da10fb34,101404263,0,0x0,8
tick,0x7ff8da10fb34,101419545,0,0x0,8
tick,0x7ff8da10fb34,101435197,0,0x0,8
tick,0x7ff8da10fb34,101450333,0,0x0,8
tick,0x7ff8da10fb34,101466248,0,0x0,8
tick,0x7ff8da10fb34,101481269,0,0x0,8
tick,0x7ff8da10fb34,101497093,0,0x0,8
tick,0x7ff8da10fb34,101512095,0,0x0,8
tick,0x7ff8da10fb34,101527296,0,0x0,8
tick,0x7ff8da10fb34,101543235,0,0x0,8
tick,0x7ff8da10fb34,101559259,0,0x0,8
tick,0x7ff8da10fb34,101575220,0,0x0,8
tick,0x7ff8da10fb34,101590239,0,0x0,8
tick,0x7ff8da10fb34,101605177,0,0x0,8
tick,0x7ff8da10fb34,101620431,0,0x0,8
tick,0x7ff8da10fb34,101636367,0,0x0,8
tick,0x7ff8da10fb34,101652056,0,0x0,8
tick,0x7ff8da10fb34,101667202,0,0x0,8
tick,0x7ff8da10fb34,101682366,0,0x0,8
tick,0x7ff8da10fb34,101697709,0,0x0,8
tick,0x7ff8da10fb34,101713218,0,0x0,8
tick,0x7ff8da10fb34,101728330,0,0x0,8
tick,0x7ff8da10fb34,101744022,0,0x0,8
tick,0x7ff8da10fb34,101759844,0,0x0,8
tick,0x7ff8da10fb34,101775801,0,0x0,8
tick,0x7ff8da10fb34,101790896,0,0x0,8
tick,0x7ff8da10fb34,101806508,0,0x0,8
tick,0x7ff8da10fb34,101822545,0,0x0,8
tick,0x7ff8da10fb34,101838589,0,0x0,8
tick,0x7ff8da10fb34,101853593,0,0x0,8
tick,0x7ff8da10fb34,101868819,0,0x0,8
tick,0x7ff8da10fb34,101884806,0,0x0,8
tick,0x7ff8da10fb34,101900795,0,0x0,8
tick,0x7ff8da10fb34,101916795,0,0x0,8
tick,0x7ff8da10fb34,101931811,0,0x0,8
tick,0x7ff8da10fb34,101946815,0,0x0,8
tick,0x7ff8da10fb34,101961942,0,0x0,8
tick,0x7ff8da10fb34,101977940,0,0x0,8
tick,0x7ff8da10fb34,101992931,0,0x0,8
tick,0x7ff8da10fb34,102008016,0,0x0,8
tick,0x7ff8da10fb34,102023917,0,0x0,8
tick,0x7ff8da10fb34,102038952,0,0x0,8
tick,0x7ff8da10fb34,102054002,0,0x0,8
tick,0x7ff8da10fb34,102069999,0,0x0,8
tick,0x7ff8da10fb34,102085266,0,0x0,8
tick,0x7ff8da10fb34,102101258,0,0x0,8
tick,0x7ff8da10fb34,102117249,0,0x0,8
tick,0x7ff8da10fb34,102133279,0,0x0,8
tick,0x7ff8da10fb34,102149370,0,0x0,8
tick,0x7ff8da10fb34,102165363,0,0x0,8
tick,0x7ff8da10fb34,102181339,0,0x0,8
tick,0x7ff8da10fb34,102196299,0,0x0,8
tick,0x7ff8da10fb34,102211314,0,0x0,8
tick,0x7ff8da10fb34,102227383,0,0x0,8
tick,0x7ff8da10fb34,102243318,0,0x0,8
tick,0x7ff8da10fb34,102258316,0,0x0,8
tick,0x7ff8da10fb34,102273310,0,0x0,8
tick,0x7ff8da10fb34,102289297,0,0x0,8
tick,0x7ff8da10fb34,102304347,0,0x0,8
tick,0x7ff8da10fb34,102319890,0,0x0,8
tick,0x7ff8da10fb34,102335892,0,0x0,8
tick,0x7ff8da10fb34,102351487,0,0x0,8
tick,0x7ff8da10fb34,102366742,0,0x0,8
tick,0x7ff8da10fb34,102381696,0,0x0,8
tick,0x7ff8da10fb34,102396706,0,0x0,8
tick,0x7ff8da10fb34,102412673,0,0x0,8
tick,0x7ff8da10fb34,102428728,0,0x0,8
tick,0x7ff8da10fb34,102444756,0,0x0,8
tick,0x7ff8da10fb34,102460093,0,0x0,8
tick,0x7ff8da10fb34,102475684,0,0x0,8
tick,0x7ff8da10fb34,102491227,0,0x0,8
tick,0x7ff8da10fb34,102506596,0,0x0,8
tick,0x7ff8da10fb34,102521899,0,0x0,8
tick,0x7ff8da10fb34,102537690,0,0x0,8
tick,0x7ff8da10fb34,102552660,0,0x0,8
tick,0x7ff8da10fb34,102567498,0,0x0,8
tick,0x7ff8da10fb34,102583469,0,0x0,8
tick,0x7ff8da10fb34,102599016,0,0x0,8
tick,0x7ff8da10fb34,102614589,0,0x0,8
tick,0x7ff8da10fb34,102629442,0,0x0,8
tick,0x7ff8da10fb34,102645230,0,0x0,8
tick,0x7ff8da10fb34,102661342,0,0x0,8
tick,0x7ff8da10fb34,102676540,0,0x0,8
tick,0x7ff8da10fb34,102692049,0,0x0,8
tick,0x7ff8da10fb34,102708039,0,0x0,8
tick,0x7ff8da10fb34,102724020,0,0x0,8
tick,0x7ff8da10fb34,102740040,0,0x0,8
tick,0x7ff8da10fb34,102755346,0,0x0,8
tick,0x7ff8da10fb34,102770245,0,0x0,8
tick,0x7ff8da10fb34,102785242,0,0x0,8
tick,0x7ff8da10fb34,102801242,0,0x0,8
tick,0x7ff8da10fb34,102816240,0,0x0,8
tick,0x7ff8da10fb34,102831219,0,0x0,8
tick,0x7ff8da10fb34,102846232,0,0x0,8
tick,0x7ff8da10fb34,102862213,0,0x0,8
tick,0x7ff8da10fb34,102877218,0,0x0,8
tick,0x7ff8da10fb34,102892174,0,0x0,8
tick,0x7ff8da10fb34,102907178,0,0x0,8
tick,0x7ff8da10fb34,102922696,0,0x0,8
tick,0x7ff8da10fb34,102938703,0,0x0,8
tick,0x7ff8da10fb34,102954269,0,0x0,8
tick,0x7ff8da10fb34,102970290,0,0x0,8
tick,0x7ff8da10fb34,102986370,0,0x0,8
tick,0x7ff8da10fb34,103002264,0,0x0,8
tick,0x7ff8da10fb34,103017846,0,0x0,8
tick,0x7ff8da10fb34,103033821,0,0x0,8
tick,0x7ff8da10fb34,103048991,0,0x0,8
tick,0x7ff8da10fb34,103063968,0,0x0,8
tick,0x7ff8da10fb34,103079103,0,0x0,8
tick,0x7ff8da10fb34,103095091,0,0x0,8
tick,0x7ff8da10fb34,103110077,0,0x0,8
tick,0x7ff8da10fb34,103125627,0,0x0,8
tick,0x7ff8da10fb34,103141655,0,0x0,8
tick,0x7ff8da10fb34,103157099,0,0x0,8
tick,0x7ff8da10fb34,103173107,0,0x0,8
tick,0x7ff8da10fb34,103189084,0,0x0,8
tick,0x7ff8da10fb34,103204405,0,0x0,8
tick,0x7ff8da10fb34,103219764,0,0x0,8
tick,0x7ff8da10fb34,103235951,0,0x0,8
tick,0x7ff8da10fb34,103250790,0,0x0,8
tick,0x7ff8da10fb34,103265829,0,0x0,8
tick,0x7ff8da10fb34,103281782,0,0x0,8
tick,0x7ff8da10fb34,103297824,0,0x0,8
tick,0x7ff8da10fb34,103312779,0,0x0,8
tick,0x7ff8da10fb34,103328120,0,0x0,8
tick,0x7ff8da10fb34,103343847,0,0x0,8
tick,0x7ff8da10fb34,103359769,0,0x0,8
tick,0x7ff8da10fb34,103375751,0,0x0,8
tick,0x7ff8da10fb34,103391733,0,0x0,8
tick,0x7ff8da10fb34,103407718,0,0x0,8
tick,0x7ff8da10fb34,103423724,0,0x0,8
tick,0x7ff8da10fb34,103439739,0,0x0,8
tick,0x7ff8da10fb34,103455724,0,0x0,8
tick,0x7ff8da10fb34,103471768,0,0x0,8
tick,0x7ff8da10fb34,103486955,0,0x0,8
tick,0x7ff8da10fb34,103501701,0,0x0,8
tick,0x7ff8da10fb34,103517727,0,0x0,8
tick,0x7ff8da10fb34,103532714,0,0x0,8
tick,0x7ff8da10fb34,103547708,0,0x0,8
tick,0x7ff8da10fb34,103562662,0,0x0,8
tick,0x7ff8da10fb34,103577665,0,0x0,8
tick,0x7ff8da10fb34,103593681,0,0x0,8
tick,0x7ff8da10fb34,103609675,0,0x0,8
tick,0x7ff8da10fb34,103624637,0,0x0,8
tick,0x7ff8da10fb34,103639668,0,0x0,8
tick,0x7ff8da10fb34,103655669,0,0x0,8
tick,0x7ff8da10fb34,103671654,0,0x0,8
tick,0x7ff8da10fb34,103686629,0,0x0,8
tick,0x7ff8da10fb34,103701633,0,0x0,8
tick,0x7ff8da10fb34,103717633,0,0x0,8
tick,0x7ff8da10fb34,103733655,0,0x0,8
tick,0x7ff8da10fb34,103749259,0,0x0,8
tick,0x7ff8da10fb34,103765238,0,0x0,8
tick,0x7ff8da10fb34,103781277,0,0x0,8
tick,0x7ff8da10fb34,103796217,0,0x0,8
tick,0x7ff8da10fb34,103812232,0,0x0,8
tick,0x7ff8da10fb34,103827422,0,0x0,8
tick,0x7ff8da10fb34,103842951,0,0x0,8
tick,0x7ff8da10fb34,103858923,0,0x0,8
tick,0x7ff8da10fb34,103873902,0,0x0,8
tick,0x7ff8da10fb34,103889692,0,0x0,8
tick,0x7ff8da10fb34,103904904,0,0x0,8
tick,0x7ff8da10fb34,103920867,0,0x0,8
tick,0x7ff8da10fb34,103937079,0,0x0,8
tick,0x7ff8da10fb34,103952822,0,0x0,8
tick,0x7ff8da10fb34,103968364,0,0x0,8
tick,0x7ff8da10fb34,103984351,0,0x0,8
tick,0x7ff8da10fb34,104000348,0,0x0,8
tick,0x7ff8da10fb34,104016325,0,0x0,8
tick,0x7ff8da10fb34,104031341,0,0x0,8
tick,0x7ff8da10fb34,104046618,0,0x0,8
tick,0x7ff8da10fb34,104062608,0,0x0,8
tick,0x7ff8da10fb34,104078605,0,0x0,8
tick,0x7ff8da10fb34,104094618,0,0x0,8
tick,0x7ff8da10fb34,104110046,0,0x0,8
tick,0x7ff8da10fb34,104125591,0,0x0,8
tick,0x7ff8da10fb34,104141126,0,0x0,8
tick,0x7ff8da10fb34,104156150,0,0x0,8
tick,0x7ff8da10fb34,104170896,0,0x0,8
tick,0x7ff8da10fb34,104186783,0,0x0,8
tick,0x7ff8da10fb34,104202510,0,0x0,8
tick,0x7ff8da10fb34,104218480,0,0x0,8
tick,0x7ff8da10fb34,104233651,0,0x0,8
tick,0x7ff8da10fb34,104249346,0,0x0,8
tick,0x7ff8da10fb34,104264954,0,0x0,8
tick,0x7ff8da10fb34,104280239,0,0x0,8
tick,0x7ff8da10fb34,104295258,0,0x0,8
tick,0x7ff8da10fb34,104310228,0,0x0,8
tick,0x7ff8da10fb34,104326262,0,0x0,8
tick,0x7ff8da10fb34,104341504,0,0x0,8
tick,0x7ff8da10fb34,104357475,0,0x0,8
tick,0x7ff8da10fb34,104373496,0,0x0,8
tick,0x7ff8da10fb34,104388966,0,0x0,8
tick,0x7ff8da10fb34,104404484,0,0x0,8
tick,0x7ff8da10fb34,104419637,0,0x0,8
tick,0x7ff8da10fb34,104434801,0,0x0,8
tick,0x7ff8da10fb34,104450378,0,0x0,8
tick,0x7ff8da10fb34,104466417,0,0x0,8
tick,0x7ff8da10fb34,104481411,0,0x0,8
tick,0x7ff8da10fb34,104496448,0,0x0,8
tick,0x7ff8da10fb34,104512494,0,0x0,8
tick,0x7ff8da10fb34,104527884,0,0x0,8
tick,0x7ff8da10fb34,104543950,0,0x0,8
tick,0x7ff8da10fb34,104559051,0,0x0,8
tick,0x7ff8da10fb34,104574140,0,0x0,8
tick,0x7ff8da10fb34,104589881,0,0x0,8
tick,0x7ff8da10fb34,104605826,0,0x0,8
tick,0x7ff8da10fb34,104621832,0,0x0,8
tick,0x7ff8da10fb34,104636977,0,0x0,8
tick,0x7ff8da10fb34,104652927,0,0x0,8
tick,0x7ff8da10fb34,104668251,0,0x0,8
tick,0x7ff8da10fb34,104684314,0,0x0,8
tick,0x7ff8da10fb34,104699743,0,0x0,8
tick,0x7ff8da10fb34,104715696,0,0x0,8
tick,0x7ff8da10fb34,104731595,0,0x0,8
tick,0x7ff8da10fb34,104747717,0,0x0,8
tick,0x7ff8da10fb34,104763218,0,0x0,8
tick,0x7ff8da10fb34,104779211,0,0x0,8
tick,0x7ff8da10fb34,104795232,0,0x0,8
tick,0x7ff8da10fb34,104810279,0,0x0,8
tick,0x7ff8da10fb34,104826256,0,0x0,8
tick,0x7ff8da10fb34,104841240,0,0x0,8
tick,0x7ff8da10fb34,104856261,0,0x0,8
tick,0x7ff8da10fb34,104871865,0,0x0,8
tick,0x7ff8da10fb34,104886915,0,0x0,8
tick,0x7ff8da10fb34,104901878,0,0x0,8
tick,0x7ff8da10fb34,104917867,0,0x0,8
tick,0x7ff8da10fb34,104932841,0,0x0,8
tick,0x7ff8da10fb34,104947843,0,0x0,8
tick,0x7ff8da10fb34,104963834,0,0x0,8
tick,0x7ff8da10fb34,104978828,0,0x0,8
tick,0x7ff8da10fb34,104993819,0,0x0,8
tick,0x7ff8da10fb34,105009820,0,0x0,8
tick,0x7ff8da10fb34,105024831,0,0x0,8
tick,0x7ff8da10fb34,105039831,0,0x0,8
tick,0x7ff8da10fb34,105055797,0,0x0,8
tick,0x7ff8da10fb34,105070842,0,0x0,8
tick,0x7ff8da10fb34,105085799,0,0x0,8
tick,0x7ff8da10fb34,105101791,0,0x0,8
tick,0x7ff8da10fb34,105116811,0,0x0,8
tick,0x7ff8da10fb34,105131784,0,0x0,8
tick,0x7ff8da10fb34,105147779,0,0x0,8
tick,0x7ff8da10fb34,105163116,0,0x0,8
tick,0x7ff8da10fb34,105179120,0,0x0,8
tick,0x7ff8da10fb34,105195122,0,0x0,8
tick,0x7ff8da10fb34,105211123,0,0x0,8
tick,0x7ff8da10fb34,105227115,0,0x0,8
tick,0x7ff8da10fb34,105243194,0,0x0,8
tick,0x7ff8da10fb34,105259177,0,0x0,8
tick,0x7ff8da10fb34,105274851,0,0x0,8
tick,0x7ff8da10fb34,105290093,0,0x0,8
tick,0x7ff8da10fb34,105305478,0,0x0,8
tick,0x7ff8da10fb34,105321507,0,0x0,8
tick,0x7ff8da10fb34,105337731,0,0x0,8
tick,0x7ff8da10fb34,105353534,0,0x0,8
tick,0x7ff8da10fb34,105369557,0,0x0,8
tick,0x7ff8da10fb34,105385464,0,0x0,8
tick,0x7ff8da10fb34,105400781,0,0x0,8
tick,0x7ff8da10fb34,105416626,0,0x0,8
tick,0x7ff8da10fb34,105432612,0,0x0,8
tick,0x7ff8da10fb34,105448590,0,0x0,8
tick,0x7ff8da10fb34,105463740,0,0x0,8
tick,0x7ff8da10fb34,105478733,0,0x0,8
tick,0x7ff8da10fb34,105493763,0,0x0,8
tick,0x7ff8da10fb34,105509774,0,0x0,8
tick,0x7ff8da10fb34,105524743,0,0x0,8
tick,0x7ff8da10fb34,105539771,0,0x0,8
tick,0x7ff8da10fb34,105555729,0,0x0,8
tick,0x7ff8da10fb34,105570733,0,0x0,8
tick,0x7ff8da10fb34,105585791,0,0x0,8
tick,0x7ff8da10fb34,105601699,0,0x0,8
tick,0x7ff8da10fb34,105616762,0,0x0,8
tick,0x7ff8da10fb34,105631757,0,0x0,8
tick,0x7ff8da10fb34,105647736,0,0x0,8
tick,0x7ff8da10fb34,105662702,0,0x0,8
tick,0x7ff8da10fb34,105677708,0,0x0,8
tick,0x7ff8da10fb34,105693692,0,0x0,8
tick,0x7ff8da10fb34,105708682,0,0x0,8
tick,0x7ff8da10fb34,105723672,0,0x0,8
tick,0x7ff8da10fb34,105739712,0,0x0,8
tick,0x7ff8da10fb34,105754699,0,0x0,8
tick,0x7ff8da10fb34,105770664,0,0x0,8
tick,0x7ff8da10fb34,105785689,0,0x0,8
tick,0x7ff8da10fb34,105800711,0,0x0,8
tick,0x7ff8da10fb34,105816669,0,0x0,8
tick,0x7ff8da10fb34,105831667,0,0x0,8
tick,0x7ff8da10fb34,105846709,0,0x0,8
tick,0x7ff8da10fb34,105861628,0,0x0,8
tick,0x7ff8da10fb34,105876642,0,0x0,8
tick,0x7ff8da10fb34,105892640,0,0x0,8
tick,0x7ff8da10fb34,105908371,0,0x0,8
tick,0x7ff8da10fb34,105923343,0,0x0,8
tick,0x7ff8da10fb34,105938410,0,0x0,8
tick,0x7ff8da10fb34,105954563,0,0x0,8
tick,0x7ff8da10fb34,105970488,0,0x0,8
tick,0x7ff8da10fb34,105986662,0,0x0,8
tick,0x7ff8da10fb34,106002321,0,0x0,8
tick,0x7ff8da10fb34,106018335,0,0x0,8
tick,0x7ff8da10fb34,106034376,0,0x0,8
tick,0x7ff8da10fb34,106050377,0,0x0,8
tick,0x7ff8da10fb34,106066424,0,0x0,8
tick,0x7ff8da10fb34,106082342,0,0x0,8
tick,0x7ff8da10fb34,106098353,0,0x0,8
tick,0x7ff8da10fb34,106114354,0,0x0,8
tick,0x7ff8da10fb34,106130383,0,0x0,8
tick,0x7ff8da10fb34,106145350,0,0x0,8
tick,0x7ff8da10fb34,106160335,0,0x0,8
tick,0x7ff8da10fb34,106176345,0,0x0,8
tick,0x7ff8da10fb34,106192341,0,0x0,8
tick,0x7ff8da10fb34,106208318,0,0x0,8
tick,0x7ff8da10fb34,106223303,0,0x0,8
tick,0x7ff8da10fb34,106238340,0,0x0,8
tick,0x7ff8da10fb34,106254325,0,0x0,8
tick,0x7ff8da10fb34,106270376,0,0x0,8
tick,0x7ff8da10fb34,106286367,0,0x0,8
tick,0x7ff8da10fb34,106302368,0,0x0,8
tick,0x7ff8da10fb34,106318283,0,0x0,8
tick,0x7ff8da10fb34,106333315,0,0x0,8
tick,0x7ff8da10fb34,106348304,0,0x0,8
tick,0x7ff8da10fb34,106364288,0,0x0,8
tick,0x7ff8da10fb34,106379528,0,0x0,8
tick,0x7ff8da10fb34,106395017,0,0x0,8
tick,0x7ff8da10fb34,106410486,0,0x0,8
tick,0x7ff8da10fb34,106426120,0,0x0,8
tick,0x7ff8da10fb34,106441899,0,0x0,8
tick,0x7ff8da10fb34,106457693,0,0x0,8
tick,0x7ff8da10fb34,106473124,0,0x0,8
tick,0x7ff8da10fb34,106488814,0,0x0,8
tick,0x7ff8da10fb34,106504563,0,0x0,8
tick,0x7ff8da10fb34,106519620,0,0x0,8
tick,0x7ff8da10fb34,106535096,0,0x0,8
tick,0x7ff8da10fb34,106550706,0,0x0,8
tick,0x7ff8da10fb34,106566204,0,0x0,8
tick,0x7ff8da10fb34,106581843,0,0x0,8
tick,0x7ff8da10fb34,106597839,0,0x0,8
tick,0x7ff8da10fb34,106613230,0,0x0,8
tick,0x7ff8da10fb34,106629206,0,0x0,8
tick,0x7ff8da10fb34,106644790,0,0x0,8
tick,0x7ff8da10fb34,106659844,0,0x0,8
tick,0x7ff8da10fb34,106675080,0,0x0,8
tick,0x7ff8da10fb34,106690706,0,0x0,8
tick,0x7ff8da10fb34,106706423,0,0x0,8
tick,0x7ff8da10fb34,106721978,0,0x0,8
tick,0x7ff8da10fb34,106737903,0,0x0,8
tick,0x7ff8da10fb34,106753199,0,0x0,8
tick,0x7ff8da10fb34,106768471,0,0x0,8
tick,0x7ff8da10fb34,106784255,0,0x0,8
tick,0x7ff8da10fb34,106800117,0,0x0,8
tick,0x7ff8da10fb34,106816261,0,0x0,8
tick,0x7ff8da10fb34,106831222,0,0x0,8
tick,0x7ff8da10fb34,106847744,0,0x0,8
tick,0x7ff8da10fb34,106862264,0,0x0,8
tick,0x7ff8da10fb34,106877414,0,0x0,8
tick,0x7ff8da10fb34,106892595,0,0x0,8
tick,0x7ff8da10fb34,106907983,0,0x0,8
tick,0x7ff8da10fb34,106923305,0,0x0,8
tick,0x7ff8da10fb34,106938649,0,0x0,8
tick,0x7ff8da10fb34,106954672,0,0x0,8
tick,0x7ff8da10fb34,106969296,0,0x0,8
tick,0x7ff8da10fb34,106984269,0,0x0,8
tick,0x7ff8da10fb34,106999493,0,0x0,8
tick,0x7ff8da10fb34,107014291,0,0x0,8
tick,0x7ff8da10fb34,107029163,0,0x0,8
tick,0x7ff8da10fb34,107044571,0,0x0,8
tick,0x7ff8da10fb34,107059909,0,0x0,8
tick,0x7ff8da10fb34,107075172,0,0x0,8
tick,0x7ff8da10fb34,107090505,0,0x0,8
tick,0x7ff8da10fb34,107106222,0,0x0,8
tick,0x7ff8da10fb34,107121851,0,0x0,8
tick,0x7ff8da10fb34,107137837,0,0x0,8
tick,0x7ff8da10fb34,107153159,0,0x0,8
tick,0x7ff8da10fb34,107168503,0,0x0,8
tick,0x7ff8da10fb34,107183675,0,0x0,8
tick,0x7ff8da10fb34,107199081,0,0x0,8
tick,0x7ff8da10fb34,107214731,0,0x0,8
tick,0x7ff8da10fb34,107229567,0,0x0,8
tick,0x7ff8da10fb34,107244937,0,0x0,8
tick,0x7ff8da10fb34,107260243,0,0x0,8
tick,0x7ff8da10fb34,107276393,0,0x0,8
tick,0x7ff8da10fb34,107292238,0,0x0,8
tick,0x7ff8da10fb34,107307140,0,0x0,8
tick,0x7ff8da10fb34,107322057,0,0x0,8
tick,0x7ff8da10fb34,107338598,0,0x0,8
tick,0x7ff8da10fb34,107353946,0,0x0,8
tick,0x7ff8da10fb34,107368932,0,0x0,8
tick,0x7ff8da10fb34,107384790,0,0x0,8
tick,0x7ff8da10fb34,107400076,0,0x0,8
tick,0x7ff8da10fb34,107416366,0,0x0,8
tick,0x7ff8da10fb34,107432317,0,0x0,8
tick,0x7ff8da10fb34,107447548,0,0x0,8
tick,0x7ff8da10fb34,107463064,0,0x0,8
tick,0x7ff8da10fb34,107478174,0,0x0,8
tick,0x7ff8da10fb34,107493384,0,0x0,8
tick,0x7ff8da10fb34,107509500,0,0x0,8
tick,0x7ff8da10fb34,107524708,0,0x0,8
tick,0x7ff8da10fb34,107540298,0,0x0,8
tick,0x7ff8da10fb34,107556015,0,0x0,8
tick,0x7ff8da10fb34,107571606,0,0x0,8
tick,0x7ff8da10fb34,107587678,0,0x0,8
tick,0x7ff8da10fb34,107602217,0,0x0,8
tick,0x7ff8da10fb34,107617363,0,0x0,8
tick,0x7ff8da10fb34,107633292,0,0x0,8
tick,0x7ff8da10fb34,107648717,0,0x0,8
tick,0x7ff8da10fb34,107664038,0,0x0,8
tick,0x7ff8da10fb34,107679279,0,0x0,8
tick,0x7ff8da10fb34,107695064,0,0x0,8
tick,0x7ff8da10fb34,107710280,0,0x0,8
tick,0x7ff8da10fb34,107725222,0,0x0,8
tick,0x7ff8da10fb34,107740102,0,0x0,8
tick,0x7ff8da10fb34,107755899,0,0x0,8
tick,0x7ff8da10fb34,107771563,0,0x0,8
tick,0x7ff8da10fb34,107787423,0,0x0,8
tick,0x7ff8da10fb34,107802917,0,0x0,8
tick,0x7ff8da10fb34,107818112,0,0x0,8
tick,0x7ff8da10fb34,107833261,0,0x0,8
tick,0x7ff8da10fb34,107848490,0,0x0,8
tick,0x7ff8da10fb34,107864360,0,0x0,8
tick,0x7ff8da10fb34,107879155,0,0x0,8
tick,0x7ff8da10fb34,107894270,0,0x0,8
tick,0x7ff8da10fb34,107909569,0,0x0,8
tick,0x7ff8da10fb34,107925192,0,0x0,8
tick,0x7ff8da10fb34,107940249,0,0x0,8
tick,0x7ff8da10fb34,107956236,0,0x0,8
tick,0x7ff8da10fb34,107971527,0,0x0,8
tick,0x7ff8da10fb34,107987642,0,0x0,8
tick,0x7ff8da10fb34,108001334,0,0x0,8
tick,0x7ff8da10fb34,108017178,0,0x0,8
tick,0x7ff8da10fb34,108032773,0,0x0,8
tick,0x7ff8da10fb34,108048645,0,0x0,8
tick,0x7ff8da10fb34,108064417,0,0x0,8
tick,0x7ff8da10fb34,108079566,0,0x0,8
tick,0x7ff8da10fb34,108095228,0,0x0,8
tick,0x7ff8da10fb34,108110263,0,0x0,8
tick,0x7ff8da10fb34,108126381,0,0x0,8
tick,0x7ff8da10fb34,108142044,0,0x0,8
tick,0x7ff8da10fb34,108157273,0,0x0,8
tick,0x7ff8da10fb34,108172730,0,0x0,8
tick,0x7ff8da10fb34,108188213,0,0x0,8
tick,0x7ff8da10fb34,108204013,0,0x0,8
tick,0x7ff8da10fb34,108219782,0,0x0,8
tick,0x7ff8da10fb34,108235786,0,0x0,8
tick,0x7ff8da10fb34,108250734,0,0x0,8
tick,0x7ff8da10fb34,108265642,0,0x0,8
tick,0x7ff8da10fb34,108281699,0,0x0,8
tick,0x7ff8da10fb34,108297593,0,0x0,8
tick,0x7ff8da10fb34,108312659,0,0x0,8
tick,0x7ff8da10fb34,108328641,0,0x0,8
tick,0x7ff8da10fb34,108343652,0,0x0,8
tick,0x7ff8da10fb34,108359573,0,0x0,8
tick,0x7ff8da10fb34,108375635,0,0x0,8
tick,0x7ff8da10fb34,108391686,0,0x0,8
tick,0x7ff8da10fb34,108407543,0,0x0,8
tick,0x7ff8da10fb34,108423564,0,0x0,8
tick,0x7ff8da10fb34,108438573,0,0x0,8
tick,0x7ff8da10fb34,108453567,0,0x0,8
tick,0x7ff8da10fb34,108469531,0,0x0,8
tick,0x7ff8da10fb34,108486345,0,0x0,8
tick,0x7ff8da10fb34,108501710,0,0x0,8
tick,0x7ff8da10fb34,108517612,0,0x0,8
tick,0x7ff8da10fb34,108533575,0,0x0,8
tick,0x7ff8da10fb34,108549539,0,0x0,8
tick,0x7ff8da10fb34,108565511,0,0x0,8
tick,0x7ff8da10fb34,108581527,0,0x0,8
tick,0x7ff8da10fb34,108597547,0,0x0,8
tick,0x7ff8da10fb34,108613580,0,0x0,8
tick,0x7ff8da10fb34,108628819,0,0x0,8
tick,0x7ff8da10fb34,108644606,0,0x0,8
tick,0x7ff8da10fb34,108659745,0,0x0,8
tick,0x7ff8da10fb34,108675187,0,0x0,8
tick,0x7ff8da10fb34,108690190,0,0x0,8
tick,0x7ff8da10fb34,108706227,0,0x0,8
tick,0x7ff8da10fb34,108721148,0,0x0,8
tick,0x7ff8da10fb34,108736561,0,0x0,8
tick,0x7ff8da10fb34,108751989,0,0x0,8
tick,0x7ff8da10fb34,108767321,0,0x0,8
tick,0x7ff8da10fb34,108782746,0,0x0,8
tick,0x7ff8da10fb34,108798118,0,0x0,8
tick,0x7ff8da10fb34,108814255,0,0x0,8
tick,0x7ff8da10fb34,108829558,0,0x0,8
tick,0x7ff8da10fb34,108845058,0,0x0,8
tick,0x7ff8da10fb34,108860108,0,0x0,8
tick,0x7ff8da10fb34,108876312,0,0x0,8
tick,0x7ff8da10fb34,108892140,0,0x0,8
tick,0x7ff8da10fb34,108907249,0,0x0,8
tick,0x7ff8da10fb34,108922465,0,0x0,8
tick,0x7ff8da10fb34,108938281,0,0x0,8
tick,0x7ff8da10fb34,108953692,0,0x0,8
tick,0x7ff8da10fb34,108968975,0,0x0,8
tick,0x7ff8da10fb34,108984256,0,0x0,8
tick,0x7ff8da10fb34,108999547,0,0x0,8
tick,0x7ff8da10fb34,109015143,0,0x0,8
tick,0x7ff8da10fb34,109030217,0,0x0,8
tick,0x7ff8da10fb34,109046353,0,0x0,8
tick,0x7ff8da10fb34,109062242,0,0x0,8
tick,0x7ff8da10fb34,109077065,0,0x0,8
tick,0x7ff8da10fb34,109092247,0,0x0,8
tick,0x7ff8da10fb34,109107419,0,0x0,8
tick,0x7ff8da10fb34,109123016,0,0x0,8
tick,0x7ff8da10fb34,109138204,0,0x0,8
tick,0x7ff8da10fb34,109153390,0,0x0,8
tick,0x7ff8da10fb34,109168503,0,0x0,8
tick,0x7ff8da10fb34,109183634,0,0x0,8
tick,0x7ff8da10fb34,109199806,0,0x0,8
tick,0x7ff8da10fb34,109215217,0,0x0,8
tick,0x7ff8da10fb34,109231261,0,0x0,8
tick,0x7ff8da10fb34,109246991,0,0x0,8
tick,0x7ff8da10fb34,109262214,0,0x0,8
tick,0x7ff8da10fb34,109277231,0,0x0,8
tick,0x7ff8da10fb34,109292158,0,0x0,8
tick,0x7ff8da10fb34,109308081,0,0x0,8
tick,0x7ff8da10fb34,109324148,0,0x0,8
tick,0x7ff8da10fb34,109339630,0,0x0,8
tick,0x7ff8da10fb34,109355049,0,0x0,8
tick,0x7ff8da10fb34,109370578,0,0x0,8
tick,0x7ff8da10fb34,109386159,0,0x0,8
tick,0x7ff8da10fb34,109401587,0,0x0,8
tick,0x7ff8da10fb34,109417560,0,0x0,8
tick,0x7ff8da10fb34,109433229,0,0x0,8
tick,0x7ff8da10fb34,109448726,0,0x0,8
tick,0x7ff8da10fb34,109463423,0,0x0,8
tick,0x7ff8da10fb34,109478316,0,0x0,8
tick,0x7ff8da10fb34,109494280,0,0x0,8
tick,0x7ff8da10fb34,109510221,0,0x0,8
tick,0x7ff8da10fb34,109525772,0,0x0,8
tick,0x7ff8da10fb34,109541483,0,0x0,8
tick,0x7ff8da10fb34,109557177,0,0x0,8
tick,0x7ff8da10fb34,109573313,0,0x0,8
tick,0x7ff8da10fb34,109588223,0,0x0,8
tick,0x7ff8da10fb34,109603305,0,0x0,8
tick,0x7ff8da10fb34,109619094,0,0x0,8
tick,0x7ff8da10fb34,109634520,0,0x0,8
tick,0x7ff8da10fb34,109650514,0,0x0,8
tick,0x7ff8da10fb34,109666446,0,0x0,8
tick,0x7ff8da10fb34,109682146,0,0x0,8
tick,0x7ff8da10fb34,109698131,0,0x0,8
tick,0x7ff8da10fb34,109713612,0,0x0,8
tick,0x7ff8da10fb34,109729130,0,0x0,8
tick,0x7ff8da10fb34,109744748,0,0x0,8
tick,0x7ff8da10fb34,109760179,0,0x0,8
tick,0x7ff8da10fb34,109776237,0,0x0,8
tick,0x7ff8da10fb34,109791561,0,0x0,8
tick,0x7ff8da10fb34,109806914,0,0x0,8
tick,0x7ff8da10fb34,109822731,0,0x0,8
tick,0x7ff8da10fb34,109838216,0,0x0,8
tick,0x7ff8da10fb34,109854021,0,0x0,8
tick,0x7ff8da10fb34,109869781,0,0x0,8
tick,0x7ff8da10fb34,109884714,0,0x0,8
tick,0x7ff8da10fb34,109899796,0,0x0,8
tick,0x7ff8da10fb34,109915108,0,0x0,8
tick,0x7ff8da10fb34,109930244,0,0x0,8
tick,0x7ff8da10fb34,109946406,0,0x0,8
tick,0x7ff8da10fb34,109961246,0,0x0,8
tick,0x7ff8da10fb34,109976170,0,0x0,8
tick,0x7ff8da10fb34,109991245,0,0x0,8
tick,0x7ff8da10fb34,110006924,0,0x0,8
tick,0x7ff8da10fb34,110022875,0,0x0,8
tick,0x7ff8da10fb34,110038292,0,0x0,8
tick,0x7ff8da10fb34,110053173,0,0x0,8
tick,0x7ff8da10fb34,110068253,0,0x0,8
tick,0x7ff8da10fb34,110084489,0,0x0,8
tick,0x7ff8da10fb34,110098626,0,0x0,8
tick,0x7ff8da10fb34,110114761,0,0x0,8
tick,0x7ff8da10fb34,110130324,0,0x0,8
tick,0x7ff8da10fb34,110146284,0,0x0,8
tick,0x7ff8da10fb34,110162240,0,0x0,8
tick,0x7ff8da10fb34,110177040,0,0x0,8
tick,0x7ff8da10fb34,110191976,0,0x0,8
tick,0x7ff8da10fb34,110207080,0,0x0,8
tick,0x7ff8da10fb34,110222009,0,0x0,8
tick,0x7ff8da10fb34,110238023,0,0x0,8
tick,0x7ff8da10fb34,110252833,0,0x0,8
tick,0x7ff8da10fb34,110268491,0,0x0,8
tick,0x7ff8da10fb34,110284325,0,0x0,8
tick,0x7ff8da10fb34,110299231,0,0x0,8
tick,0x7ff8da10fb34,110314275,0,0x0,8
tick,0x7ff8da10fb34,110330356,0,0x0,8
tick,0x7ff8da10fb34,110345243,0,0x0,8
tick,0x7ff8da10fb34,110360097,0,0x0,8
tick,0x7ff8da10fb34,110376274,0,0x0,8
tick,0x7ff8da10fb34,110391720,0,0x0,8
tick,0x7ff8da10fb34,110407343,0,0x0,8
tick,0x7ff8da10fb34,110422555,0,0x0,8
tick,0x7ff8da10fb34,110438151,0,0x0,8
tick,0x7ff8da10fb34,110453775,0,0x0,8
tick,0x7ff8da10fb34,110469682,0,0x0,8
tick,0x7ff8da10fb34,110485117,0,0x0,8
tick,0x7ff8da10fb34,110500808,0,0x0,8
tick,0x7ff8da10fb34,110516284,0,0x0,8
tick,0x7ff8da10fb34,110531314,0,0x0,8
tick,0x7ff8da10fb34,110547284,0,0x0,8
tick,0x7ff8da10fb34,110562302,0,0x0,8
tick,0x7ff8da10fb34,110578106,0,0x0,8
tick,0x7ff8da10fb34,110593218,0,0x0,8
tick,0x7ff8da10fb34,110608614,0,0x0,8
tick,0x7ff8da10fb34,110623756,0,0x0,8
tick,0x7ff8da10fb34,110639080,0,0x0,8
tick,0x7ff8da10fb34,110654693,0,0x0,8
tick,0x7ff8da10fb34,110670549,0,0x0,8
tick,0x7ff8da10fb34,110685972,0,0x0,8
tick,0x7ff8da10fb34,110701170,0,0x0,8
tick,0x7ff8da10fb34,110717397,0,0x0,8
tick,0x7ff8da10fb34,110732439,0,0x0,8
tick,0x7ff8da10fb34,110747699,0,0x0,8
tick,0x7ff8da10fb34,110763293,0,0x0,8
tick,0x7ff8da10fb34,110778479,0,0x0,8
tick,0x7ff8da10fb34,110794429,0,0x0,8
tick,0x7ff8da10fb34,110809372,0,0x0,8
tick,0x7ff8da10fb34,110824335,0,0x0,8
tick,0x7ff8da10fb34,110839636,0,0x0,8
tick,0x7ff8da10fb34,110854572,0,0x0,8
tick,0x7ff8da10fb34,110870245,0,0x0,8
tick,0x7ff8da10fb34,110886218,0,0x0,8
tick,0x7ff8da10fb34,110901284,0,0x0,8
tick,0x7ff8da10fb34,110916389,0,0x0,8
tick,0x7ff8da10fb34,110931275,0,0x0,8
tick,0x7ff8da10fb34,110946706,0,0x0,8
tick,0x7ff8da10fb34,110962291,0,0x0,8
tick,0x7ff8da10fb34,110977207,0,0x0,8
tick,0x7ff8da10fb34,110992274,0,0x0,8
tick,0x7ff8da10fb34,111008272,0,0x0,8
tick,0x7ff8da10fb34,111023469,0,0x0,8
tick,0x7ff8da10fb34,111038959,0,0x0,8
tick,0x7ff8da10fb34,111054515,0,0x0,8
tick,0x7ff8da10fb34,111070159,0,0x0,8
tick,0x7ff8da10fb34,111086116,0,0x0,8
tick,0x7ff8da10fb34,111101482,0,0x0,8
tick,0x7ff8da10fb34,111117498,0,0x0,8
tick,0x7ff8da10fb34,111132257,0,0x0,8
tick,0x7ff8da10fb34,111147673,0,0x0,8
tick,0x7ff8da10fb34,111163326,0,0x0,8
tick,0x7ff8da10fb34,111179307,0,0x0,8
tick,0x7ff8da10fb34,111195224,0,0x0,8
tick,0x7ff8da10fb34,111210001,0,0x0,8
tick,0x7ff8da10fb34,111225175,0,0x0,8
tick,0x7ff8da10fb34,111241252,0,0x0,8
tick,0x7ff8da10fb34,111257314,0,0x0,8
tick,0x7ff8da10fb34,111272083,0,0x0,8
tick,0x7ff8da10fb34,111287756,0,0x0,8
tick,0x7ff8da10fb34,111303519,0,0x0,8
tick,0x7ff8da10fb34,111319380,0,0x0,8
tick,0x7ff8da10fb34,111334290,0,0x0,8
tick,0x7ff8da10fb34,111349562,0,0x0,8
tick,0x7ff8da10fb34,111365191,0,0x0,8
tick,0x7ff8da10fb34,111381074,0,0x0,8
tick,0x7ff8da10fb34,111396234,0,0x0,8
tick,0x7ff8da10fb34,111411289,0,0x0,8
tick,0x7ff8da10fb34,111427088,0,0x0,8
tick,0x7ff8da10fb34,111443024,0,0x0,8
tick,0x7ff8da10fb34,111458411,0,0x0,8
tick,0x7ff8da10fb34,111473578,0,0x0,8
tick,0x7ff8da10fb34,111489390,0,0x0,8
tick,0x7ff8da10fb34,111504344,0,0x0,8
tick,0x7ff8da10fb34,111519786,0,0x0,8
tick,0x7ff8da10fb34,111535826,0,0x0,8
tick,0x7ff8da10fb34,111551584,0,0x0,8
tick,0x7ff8da10fb34,111566530,0,0x0,8
tick,0x7ff8da10fb34,111582344,0,0x0,8
tick,0x7ff8da10fb34,111598133,0,0x0,8
tick,0x7ff8da10fb34,111613629,0,0x0,8
tick,0x7ff8da10fb34,111629637,0,0x0,8
tick,0x7ff8da10fb34,111645601,0,0x0,8
tick,0x7ff8da10fb34,111661564,0,0x0,8
tick,0x7ff8da10fb34,111677621,0,0x0,8
tick,0x7ff8da10fb34,111693522,0,0x0,8
tick,0x7ff8da10fb34,111709561,0,0x0,8
tick,0x7ff8da10fb34,111724515,0,0x0,8
tick,0x7ff8da10fb34,111739567,0,0x0,8
tick,0x7ff8da10fb34,111755533,0,0x0,8
tick,0x7ff8da10fb34,111770501,0,0x0,8
tick,0x7ff8da10fb34,111785545,0,0x0,8
tick,0x7ff8da10fb34,111801508,0,0x0,8
tick,0x7ff8da10fb34,111817775,0,0x0,8
tick,0x7ff8da10fb34,111833568,0,0x0,8
tick,0x7ff8da10fb34,111849670,0,0x0,8
tick,0x7ff8da10fb34,111865615,0,0x0,8
tick,0x7ff8da10fb34,111881586,0,0x0,8
tick,0x7ff8da10fb34,111897708,0,0x0,8
tick,0x7ff8da10fb34,111913489,0,0x0,8
tick,0x7ff8da10fb34,111929646,0,0x0,8
tick,0x7ff8da10fb34,111945530,0,0x0,8
tick,0x7ff8da10fb34,111961767,0,0x0,8
tick,0x7ff8da10fb34,111976607,0,0x0,8
tick,0x7ff8da10fb34,111992138,0,0x0,8
tick,0x7ff8da10fb34,112007852,0,0x0,8
tick,0x7ff8da10fb34,112023837,0,0x0,8
tick,0x7ff8da10fb34,112039828,0,0x0,8
tick,0x7ff8da10fb34,112055816,0,0x0,8
tick,0x7ff8da10fb34,112071838,0,0x0,8
tick,0x7ff8da10fb34,112086781,0,0x0,8
tick,0x7ff8da10fb34,112101798,0,0x0,8
tick,0x7ff8da10fb34,112118558,0,0x0,8
tick,0x7ff8da10fb34,112133811,0,0x0,8
tick,0x7ff8da10fb34,112149278,0,0x0,8
tick,0x7ff8da10fb34,112164996,0,0x0,8
tick,0x7ff8da10fb34,112180131,0,0x0,8
tick,0x7ff8da10fb34,112195171,0,0x0,8
tick,0x7ff8da10fb34,112210204,0,0x0,8
tick,0x7ff8da10fb34,112226244,0,0x0,8
tick,0x7ff8da10fb34,112241257,0,0x0,8
tick,0x7ff8da10fb34,112256587,0,0x0,8
tick,0x7ff8da10fb34,112272069,0,0x0,8
tick,0x7ff8da10fb34,112286792,0,0x0,8
tick,0x7ff8da10fb34,112302105,0,0x0,8
tick,0x7ff8da10fb34,112317413,0,0x0,8
tick,0x7ff8da10fb34,112332730,0,0x0,8
tick,0x7ff8da10fb34,112348792,0,0x0,8
tick,0x7ff8da10fb34,112363692,0,0x0,8
tick,0x7ff8da10fb34,112378340,0,0x0,8
tick,0x7ff8da10fb34,112394074,0,0x0,8
tick,0x7ff8da10fb34,112409091,0,0x0,8
tick,0x7ff8da10fb34,112424751,0,0x0,8
tick,0x7ff8da10fb34,112440249,0,0x0,8
tick,0x7ff8da10fb34,112455183,0,0x0,8
tick,0x7ff8da10fb34,112470610,0,0x0,8
tick,0x7ff8da10fb34,112486349,0,0x0,8
tick,0x7ff8da10fb34,112502072,0,0x0,8
tick,0x7ff8da10fb34,112517759,0,0x0,8
tick,0x7ff8da10fb34,112532271,0,0x0,8
tick,0x7ff8da10fb34,112547654,0,0x0,8
tick,0x7ff8da10fb34,112563583,0,0x0,8
tick,0x7ff8da10fb34,112579436,0,0x0,8
tick,0x7ff8da10fb34,112595386,0,0x0,8
tick,0x7ff8da10fb34,112611374,0,0x0,8
tick,0x7ff8da10fb34,112627489,0,0x0,8
tick,0x7ff8da10fb34,112642354,0,0x0,8
tick,0x7ff8da10fb34,112657329,0,0x0,8
tick,0x7ff8da10fb34,112672338,0,0x0,8
tick,0x7ff8da10fb34,112687328,0,0x0,8
tick,0x7ff8da10fb34,112702338,0,0x0,8
tick,0x7ff8da10fb34,112718309,0,0x0,8
tick,0x7ff8da10fb34,112733450,0,0x0,8
tick,0x7ff8da10fb34,112748550,0,0x0,8
tick,0x7ff8da10fb34,112782562,0,0x0,8
tick,0x7ff8da10fb34,112796148,0,0x0,8
tick,0x7ff8da10fb34,112811080,0,0x0,8
tick,0x7ff8da10fb34,112825989,0,0x0,8
tick,0x7ff8da10fb34,112842069,0,0x0,8
tick,0x7ff8da10fb34,112857107,0,0x0,8
tick,0x7ff8da10fb34,112872323,0,0x0,8
tick,0x7ff8da10fb34,112887080,0,0x0,8
tick,0x7ff8da10fb34,112902646,0,0x0,8
tick,0x7ff8da10fb34,112918261,0,0x0,8
tick,0x7ff8da10fb34,112934029,0,0x0,8
tick,0x7ff8da10fb34,112949265,0,0x0,8
tick,0x7ff8da10fb34,112964386,0,0x0,8
tick,0x7ff8da10fb34,112979475,0,0x0,8
tick,0x7ff8da10fb34,112995163,0,0x0,8
tick,0x7ff8da10fb34,113010149,0,0x0,8
tick,0x7ff8da10fb34,113026120,0,0x0,8
tick,0x7ff8da10fb34,113041395,0,0x0,8
tick,0x7ff8da10fb34,113056206,0,0x0,8
tick,0x7ff8da10fb34,113071541,0,0x0,8
tick,0x7ff8da10fb34,113087167,0,0x0,8
tick,0x7ff8da10fb34,113102218,0,0x0,8
tick,0x7ff8da10fb34,113118567,0,0x0,8
tick,0x7ff8da10fb34,113133979,0,0x0,8
tick,0x7ff8da10fb34,113149671,0,0x0,8
tick,0x7ff8da10fb34,113164521,0,0x0,8
tick,0x7ff8da10fb34,113179958,0,0x0,8
tick,0x7ff8da10fb34,113196077,0,0x0,8
tick,0x7ff8da10fb34,113212282,0,0x0,8
tick,0x7ff8da10fb34,113227665,0,0x0,8
tick,0x7ff8da10fb34,113243747,0,0x0,8
tick,0x7ff8da10fb34,113259439,0,0x0,8
tick,0x7ff8da10fb34,113275450,0,0x0,8
tick,0x7ff8da10fb34,113291358,0,0x0,8
tick,0x7ff8da10fb34,113307411,0,0x0,8
tick,0x7ff8da10fb34,113323455,0,0x0,8
tick,0x7ff8da10fb34,113339414,0,0x0,8
tick,0x7ff8da10fb34,113355185,0,0x0,8
tick,0x7ff8da10fb34,113371152,0,0x0,8
tick,0x7ff8da10fb34,113386893,0,0x0,8
tick,0x7ff8da10fb34,113402876,0,0x0,8
tick,0x7ff8da10fb34,113418842,0,0x0,8
tick,0x7ff8da10fb34,113434864,0,0x0,8
tick,0x7ff8da10fb34,113450136,0,0x0,8
tick,0x7ff8da10fb34,113465005,0,0x0,8
tick,0x7ff8da10fb34,113480022,0,0x0,8
tick,0x7ff8da10fb34,113496049,0,0x0,8
tick,0x7ff8da10fb34,113512025,0,0x0,8
tick,0x7ff8da10fb34,113527979,0,0x0,8
tick,0x7ff8da10fb34,113543000,0,0x0,8
tick,0x7ff8da10fb34,113557985,0,0x0,8
tick,0x7ff8da10fb34,113573970,0,0x0,8
tick,0x7ff8da10fb34,113589935,0,0x0,8
tick,0x7ff8da10fb34,113606175,0,0x0,8
tick,0x7ff8da10fb34,113622062,0,0x0,8
tick,0x7ff8da10fb34,113638097,0,0x0,8
tick,0x7ff8da10fb34,113653267,0,0x0,8
tick,0x7ff8da10fb34,113667899,0,0x0,8
tick,0x7ff8da10fb34,113683123,0,0x0,8
tick,0x7ff8da10fb34,113698612,0,0x0,8
tick,0x7ff8da10fb34,113714199,0,0x0,8
tick,0x7ff8da10fb34,113729317,0,0x0,8
tick,0x7ff8da10fb34,113744588,0,0x0,8
tick,0x7ff8da10fb34,113760355,0,0x0,8
tick,0x7ff8da10fb34,113775014,0,0x0,8
tick,0x7ff8da10fb34,113790275,0,0x0,8
tick,0x7ff8da10fb34,113806213,0,0x0,8
tick,0x7ff8da10fb34,113821500,0,0x0,8
tick,0x7ff8da10fb34,113836725,0,0x0,8
tick,0x7ff8da10fb34,113852314,0,0x0,8
tick,0x7ff8da10fb34,113868005,0,0x0,8
tick,0x7ff8da10fb34,113883238,0,0x0,8
tick,0x7ff8da10fb34,113898749,0,0x0,8
tick,0x7ff8da10fb34,113914090,0,0x0,8
tick,0x7ff8da10fb34,113929319,0,0x0,8
tick,0x7ff8da10fb34,113945133,0,0x0,8
tick,0x7ff8da10fb34,113960007,0,0x0,8
tick,0x7ff8da10fb34,113975001,0,0x0,8
tick,0x7ff8da10fb34,113990342,0,0x0,8
tick,0x7ff8da10fb34,114006206,0,0x0,8
tick,0x7ff8da10fb34,114021465,0,0x0,8
tick,0x7ff8da10fb34,114036631,0,0x0,8
tick,0x7ff8da10fb34,114052258,0,0x0,8
tick,0x7ff8da10fb34,114068028,0,0x0,8
tick,0x7ff8da10fb34,114083111,0,0x0,8
tick,0x7ff8da10fb34,114098471,0,0x0,8
tick,0x7ff8da10fb34,114114232,0,0x0,8
tick,0x7ff8da10fb34,114130144,0,0x0,8
tick,0x7ff8da10fb34,114146307,0,0x0,8
tick,0x7ff8da10fb34,114161331,0,0x0,8
tick,0x7ff8da10fb34,114177145,0,0x0,8
tick,0x7ff8da10fb34,114192342,0,0x0,8
tick,0x7ff8da10fb34,114208397,0,0x0,8
tick,0x7ff8da10fb34,114223895,0,0x0,8
tick,0x7ff8da10fb34,114239817,0,0x0,8
tick,0x7ff8da10fb34,114255177,0,0x0,8
tick,0x7ff8da10fb34,114270292,0,0x0,8
tick,0x7ff8da10fb34,114285498,0,0x0,8
tick,0x7ff8da10fb34,114301227,0,0x0,8
tick,0x7ff8da10fb34,114317442,0,0x0,8
tick,0x7ff8da10fb34,114332821,0,0x0,8
tick,0x7ff8da10fb34,114347685,0,0x0,8
tick,0x7ff8da10fb34,114363286,0,0x0,8
tick,0x7ff8da10fb34,114378354,0,0x0,8
tick,0x7ff8da10fb34,114394281,0,0x0,8
tick,0x7ff8da10fb34,114409737,0,0x0,8
tick,0x7ff8da10fb34,114425751,0,0x0,8
tick,0x7ff8da10fb34,114441659,0,0x0,8
tick,0x7ff8da10fb34,114457106,0,0x0,8
tick,0x7ff8da10fb34,114472476,0,0x0,8
tick,0x7ff8da10fb34,114487961,0,0x0,8
tick,0x7ff8da10fb34,114503177,0,0x0,8
tick,0x7ff8da10fb34,114518739,0,0x0,8
tick,0x7ff8da10fb34,114534478,0,0x0,8
tick,0x7ff8da10fb34,114549647,0,0x0,8
tick,0x7ff8da10fb34,114565197,0,0x0,8
tick,0x7ff8da10fb34,114580639,0,0x0,8
tick,0x7ff8da10fb34,114596318,0,0x0,8
tick,0x7ff8da10fb34,114612347,0,0x0,8
tick,0x7ff8da10fb34,114628003,0,0x0,8
tick,0x7ff8da10fb34,114643277,0,0x0,8
tick,0x7ff8da10fb34,114658365,0,0x0,8
tick,0x7ff8da10fb34,114674099,0,0x0,8
tick,0x7ff8da10fb34,114689042,0,0x0,8
tick,0x7ff8da10fb34,114704051,0,0x0,8
tick,0x7ff8da10fb34,114720006,0,0x0,8
tick,0x7ff8da10fb34,114735312,0,0x0,8
tick,0x7ff8da10fb34,114751139,0,0x0,8
tick,0x7ff8da10fb34,114766446,0,0x0,8
tick,0x7ff8da10fb34,114781260,0,0x0,8
tick,0x7ff8da10fb34,114796153,0,0x0,8
tick,0x7ff8da10fb34,114811275,0,0x0,8
tick,0x7ff8da10fb34,114826994,0,0x0,8
tick,0x7ff8da10fb34,114842282,0,0x0,8
tick,0x7ff8da10fb34,114857397,0,0x0,8
tick,0x7ff8da10fb34,114873269,0,0x0,8
tick,0x7ff8da10fb34,114888467,0,0x0,8
tick,0x7ff8da10fb34,114904585,0,0x0,8
tick,0x7ff8da10fb34,114919572,0,0x0,8
tick,0x7ff8da10fb34,114935240,0,0x0,8
tick,0x7ff8da10fb34,114951151,0,0x0,8
tick,0x7ff8da10fb34,114966391,0,0x0,8
tick,0x7ff8da10fb34,114982691,0,0x0,8
tick,0x7ff8da10fb34,114997059,0,0x0,8
tick,0x7ff8da10fb34,115012272,0,0x0,8
tick,0x7ff8da10fb34,115028001,0,0x0,8
tick,0x7ff8da10fb34,115043312,0,0x0,8
tick,0x7ff8da10fb34,115058365,0,0x0,8
tick,0x7ff8da10fb34,115074042,0,0x0,8
tick,0x7ff8da10fb34,115089323,0,0x0,8
tick,0x7ff8da10fb34,115104789,0,0x0,8
tick,0x7ff8da10fb34,115120460,0,0x0,8
tick,0x7ff8da10fb34,115135147,0,0x0,8
tick,0x7ff8da10fb34,115150546,0,0x0,8
tick,0x7ff8da10fb34,115168367,0,0x0,8
tick,0x7ff8da10fb34,115181296,0,0x0,8
tick,0x7ff8da10fb34,115197274,0,0x0,8
tick,0x7ff8da10fb34,115212250,0,0x0,8
tick,0x7ff8da10fb34,115227144,0,0x0,8
tick,0x7ff8da10fb34,115242282,0,0x0,8
tick,0x7ff8da10fb34,115257635,0,0x0,8
tick,0x7ff8da10fb34,115273311,0,0x0,8
tick,0x7ff8da10fb34,115289030,0,0x0,8
tick,0x7ff8da10fb34,115304740,0,0x0,8
tick,0x7ff8da10fb34,115319469,0,0x0,8
tick,0x7ff8da10fb34,115335155,0,0x0,8
tick,0x7ff8da10fb34,115350959,0,0x0,8
tick,0x7ff8da10fb34,115366895,0,0x0,8
tick,0x7ff8da10fb34,115381550,0,0x0,8
tick,0x7ff8da10fb34,115396958,0,0x0,8
tick,0x7ff8da10fb34,115412271,0,0x0,8
tick,0x7ff8da10fb34,115428379,0,0x0,8
tick,0x7ff8da10fb34,115444286,0,0x0,8
tick,0x7ff8da10fb34,115459042,0,0x0,8
tick,0x7ff8da10fb34,115474357,0,0x0,8
tick,0x7ff8da10fb34,115489890,0,0x0,8
tick,0x7ff8da10fb34,115505121,0,0x0,8
tick,0x7ff8da10fb34,115520250,0,0x0,8
tick,0x7ff8da10fb34,115535998,0,0x0,8
tick,0x7ff8da10fb34,115551605,0,0x0,8
tick,0x7ff8da10fb34,115567571,0,0x0,8
tick,0x7ff8da10fb34,115583302,0,0x0,8
tick,0x7ff8da10fb34,115598904,0,0x0,8
tick,0x7ff8da10fb34,115614226,0,0x0,8
tick,0x7ff8da10fb34,115629987,0,0x0,8
tick,0x7ff8da10fb34,115645192,0,0x0,8
tick,0x7ff8da10fb34,115660645,0,0x0,8
tick,0x7ff8da10fb34,115676207,0,0x0,8
tick,0x7ff8da10fb34,115692252,0,0x0,8
tick,0x7ff8da10fb34,115707579,0,0x0,8
tick,0x7ff8da10fb34,115723487,0,0x0,8
tick,0x7ff8da10fb34,115739195,0,0x0,8
tick,0x7ff8da10fb34,115754499,0,0x0,8
tick,0x7ff8da10fb34,115770197,0,0x0,8
tick,0x7ff8da10fb34,115785940,0,0x0,8
tick,0x7ff8da10fb34,115801465,0,0x0,8
tick,0x7ff8da10fb34,115817714,0,0x0,8
tick,0x7ff8da10fb34,115832833,0,0x0,8
tick,0x7ff8da10fb34,115848271,0,0x0,8
tick,0x7ff8da10fb34,115863281,0,0x0,8
tick,0x7ff8da10fb34,115878403,0,0x0,8
tick,0x7ff8da10fb34,115894254,0,0x0,8
tick,0x7ff8da10fb34,115909241,0,0x0,8
tick,0x7ff8da10fb34,115924216,0,0x0,8
tick,0x7ff8da10fb34,115939396,0,0x0,8
tick,0x7ff8da10fb34,115954758,0,0x0,8
tick,0x7ff8da10fb34,115970258,0,0x0,8
tick,0x7ff8da10fb34,115986434,0,0x0,8
tick,0x7ff8da10fb34,116001496,0,0x0,8
tick,0x7ff8da10fb34,116017482,0,0x0,8
tick,0x7ff8da10fb34,116032293,0,0x0,8
tick,0x7ff8da10fb34,116047521,0,0x0,8
tick,0x7ff8da10fb34,116063332,0,0x0,8
tick,0x7ff8da10fb34,116078228,0,0x0,8
tick,0x7ff8da10fb34,116093244,0,0x0,8
tick,0x7ff8da10fb34,116108648,0,0x0,8
tick,0x7ff8da10fb34,116124278,0,0x0,8
tick,0x7ff8da10fb34,116139803,0,0x0,8
tick,0x7ff8da10fb34,116155840,0,0x0,8
tick,0x7ff8da10fb34,116171098,0,0x0,8
tick,0x7ff8da10fb34,116186414,0,0x0,8
tick,0x7ff8da10fb34,116201879,0,0x0,8
tick,0x7ff8da10fb34,116217495,0,0x0,8
tick,0x7ff8da10fb34,116232281,0,0x0,8
tick,0x7ff8da10fb34,116247750,0,0x0,8
tick,0x7ff8da10fb34,116263212,0,0x0,8
tick,0x7ff8da10fb34,116279174,0,0x0,8
tick,0x7ff8da10fb34,116295132,0,0x0,8
tick,0x7ff8da10fb34,116310597,0,0x0,8
tick,0x7ff8da10fb34,116326239,0,0x0,8
tick,0x7ff8da10fb34,116341228,0,0x0,8
tick,0x7ff8da10fb34,116356221,0,0x0,8
tick,0x7ff8da10fb34,116372262,0,0x0,8
tick,0x7ff8da10fb34,116387960,0,0x0,8
tick,0x7ff8da10fb34,116403235,0,0x0,8
tick,0x7ff8da10fb34,116419138,0,0x0,8
tick,0x7ff8da10fb34,116434604,0,0x0,8
tick,0x7ff8da10fb34,116450342,0,0x0,8
tick,0x7ff8da10fb34,116466481,0,0x0,8
tick,0x7ff8da10fb34,116481808,0,0x0,8
tick,0x7ff8da10fb34,116497334,0,0x0,8
tick,0x7ff8da10fb34,116512275,0,0x0,8
tick,0x7ff8da10fb34,116528262,0,0x0,8
tick,0x7ff8da10fb34,116544258,0,0x0,8
tick,0x7ff8da10fb34,116559735,0,0x0,8
tick,0x7ff8da10fb34,116575133,0,0x0,8
tick,0x7ff8da10fb34,116590204,0,0x0,8
tick,0x7ff8da10fb34,116606195,0,0x0,8
tick,0x7ff8da10fb34,116621414,0,0x0,8
tick,0x7ff8da10fb34,116637415,0,0x0,8
tick,0x7ff8da10fb34,116652154,0,0x0,8
tick,0x7ff8da10fb34,116667776,0,0x0,8
tick,0x7ff8da10fb34,116682577,0,0x0,8
tick,0x7ff8da10fb34,116698646,0,0x0,8
tick,0x7ff8da10fb34,116714239,0,0x0,8
tick,0x7ff8da10fb34,116729811,0,0x0,8
tick,0x7ff8da10fb34,116745225,0,0x0,8
tick,0x7ff8da10fb34,116760283,0,0x0,8
tick,0x7ff8da10fb34,116775151,0,0x0,8
tick,0x7ff8da10fb34,116790202,0,0x0,8
tick,0x7ff8da10fb34,116806258,0,0x0,8
tick,0x7ff8da10fb34,116821739,0,0x0,8
tick,0x7ff8da10fb34,116837302,0,0x0,8
tick,0x7ff8da10fb34,116852750,0,0x0,8
tick,0x7ff8da10fb34,116868205,0,0x0,8
tick,0x7ff8da10fb34,116883749,0,0x0,8
tick,0x7ff8da10fb34,116899535,0,0x0,8
tick,0x7ff8da10fb34,116915162,0,0x0,8
tick,0x7ff8da10fb34,116930062,0,0x0,8
tick,0x7ff8da10fb34,116945205,0,0x0,8
tick,0x7ff8da10fb34,116960857,0,0x0,8
tick,0x7ff8da10fb34,116976187,0,0x0,8
tick,0x7ff8da10fb34,116991395,0,0x0,8
tick,0x7ff8da10fb34,117006969,0,0x0,8
tick,0x7ff8da10fb34,117022299,0,0x0,8
tick,0x7ff8da10fb34,117037264,0,0x0,8
tick,0x7ff8da10fb34,117051987,0,0x0,8
tick,0x7ff8da10fb34,117067497,0,0x0,8
tick,0x7ff8da10fb34,117083564,0,0x0,8
tick,0x7ff8da10fb34,117098426,0,0x0,8
tick,0x7ff8da10fb34,117113259,0,0x0,8
tick,0x7ff8da10fb34,117128204,0,0x0,8
tick,0x7ff8da10fb34,117144281,0,0x0,8
tick,0x7ff8da10fb34,117159196,0,0x0,8
tick,0x7ff8da10fb34,117174100,0,0x0,8
tick,0x7ff8da10fb34,117189580,0,0x0,8
tick,0x7ff8da10fb34,117204799,0,0x0,8
tick,0x7ff8da10fb34,117220314,0,0x0,8
tick,0x7ff8da10fb34,117236300,0,0x0,8
tick,0x7ff8da10fb34,117251938,0,0x0,8
tick,0x7ff8da10fb34,117267374,0,0x0,8
tick,0x7ff8da10fb34,117282239,0,0x0,8
tick,0x7ff8da10fb34,117297279,0,0x0,8
tick,0x7ff8da10fb34,117313225,0,0x0,8
tick,0x7ff8da10fb34,117329777,0,0x0,8
tick,0x7ff8da10fb34,117345299,0,0x0,8
tick,0x7ff8da10fb34,117360442,0,0x0,8
tick,0x7ff8da10fb34,117376119,0,0x0,8
tick,0x7ff8da10fb34,117392175,0,0x0,8
tick,0x7ff8da10fb34,117407629,0,0x0,8
tick,0x7ff8da10fb34,117423258,0,0x0,8
tick,0x7ff8da10fb34,117438200,0,0x0,8
tick,0x7ff8da10fb34,117453063,0,0x0,8
tick,0x7ff8da10fb34,117468199,0,0x0,8
tick,0x7ff8da10fb34,117484161,0,0x0,8
tick,0x7ff8da10fb34,117499855,0,0x0,8
tick,0x7ff8da10fb34,117515309,0,0x0,8
tick,0x7ff8da10fb34,117530791,0,0x0,8
tick,0x7ff8da10fb34,117546249,0,0x0,8
tick,0x7ff8da10fb34,117561304,0,0x0,8
tick,0x7ff8da10fb34,117576711,0,0x0,8
tick,0x7ff8da10fb34,117592273,0,0x0,8
tick,0x7ff8da10fb34,117608374,0,0x0,8
tick,0x7ff8da10fb34,117623946,0,0x0,8
tick,0x7ff8da10fb34,117639444,0,0x0,8
tick,0x7ff8da10fb34,117654750,0,0x0,8
tick,0x7ff8da10fb34,117670174,0,0x0,8
tick,0x7ff8da10fb34,117686228,0,0x0,8
tick,0x7ff8da10fb34,117701683,0,0x0,8
tick,0x7ff8da10fb34,117717282,0,0x0,8
tick,0x7ff8da10fb34,117733179,0,0x0,8
tick,0x7ff8da10fb34,117749062,0,0x0,8
tick,0x7ff8da10fb34,117765244,0,0x0,8
tick,0x7ff8da10fb34,117781428,0,0x0,8
tick,0x7ff8da10fb34,117796107,0,0x0,8
tick,0x7ff8da10fb34,117811144,0,0x0,8
tick,0x7ff8da10fb34,117826553,0,0x0,8
tick,0x7ff8da10fb34,117841329,0,0x0,8
tick,0x7ff8da10fb34,117856935,0,0x0,8
tick,0x7ff8da10fb34,117872248,0,0x0,8
tick,0x7ff8da10fb34,117888071,0,0x0,8
tick,0x7ff8da10fb34,117902979,0,0x0,8
tick,0x7ff8da10fb34,117918218,0,0x0,8
tick,0x7ff8da10fb34,117933978,0,0x0,8
tick,0x7ff8da10fb34,117949784,0,0x0,8
tick,0x7ff8da10fb34,117965185,0,0x0,8
tick,0x7ff8da10fb34,117980571,0,0x0,8
tick,0x7ff8da10fb34,117995600,0,0x0,8
tick,0x7ff8da10fb34,118010290,0,0x0,8
tick,0x7ff8da10fb34,118025200,0,0x0,8
tick,0x7ff8da10fb34,118040323,0,0x0,8
tick,0x7ff8da10fb34,118056203,0,0x0,8
tick,0x7ff8da10fb34,118071546,0,0x0,8
tick,0x7ff8da10fb34,118087195,0,0x0,8
tick,0x7ff8da10fb34,118101925,0,0x0,8
tick,0x7ff8da10fb34,118117187,0,0x0,8
tick,0x7ff8da10fb34,118133223,0,0x0,8
tick,0x7ff8da10fb34,118149017,0,0x0,8
tick,0x7ff8da10fb34,118165568,0,0x0,8
tick,0x7ff8da10fb34,118179787,0,0x0,8
tick,0x7ff8da10fb34,118194907,0,0x0,8
tick,0x7ff8da10fb34,118210062,0,0x0,8
tick,0x7ff8da10fb34,118225192,0,0x0,8
tick,0x7ff8da10fb34,118241314,0,0x0,8
tick,0x7ff8da10fb34,118256966,0,0x0,8
tick,0x7ff8da10fb34,118272879,0,0x0,8
tick,0x7ff8da10fb34,118287863,0,0x0,8
tick,0x7ff8da10fb34,118302873,0,0x0,8
tick,0x7ff8da10fb34,118317876,0,0x0,8
tick,0x7ff8da10fb34,118332656,0,0x0,8
tick,0x7ff8da10fb34,118348718,0,0x0,8
tick,0x7ff8da10fb34,118364921,0,0x0,8
tick,0x7ff8da10fb34,118380880,0,0x0,8
tick,0x7ff8da10fb34,118396662,0,0x0,8
tick,0x7ff8da10fb34,118412649,0,0x0,8
tick,0x7ff8da10fb34,118428631,0,0x0,8
tick,0x7ff8da10fb34,118444646,0,0x0,8
tick,0x7ff8da10fb34,118460622,0,0x0,8
tick,0x7ff8da10fb34,118476628,0,0x0,8
tick,0x7ff8da10fb34,118492609,0,0x0,8
tick,0x7ff8da10fb34,118508624,0,0x0,8
tick,0x7ff8da10fb34,118524594,0,0x0,8
tick,0x7ff8da10fb34,118539603,0,0x0,8
tick,0x7ff8da10fb34,118554620,0,0x0,8
tick,0x7ff8da10fb34,118570581,0,0x0,8
tick,0x7ff8da10fb34,118585591,0,0x0,8
tick,0x7ff8da10fb34,118601549,0,0x0,8
tick,0x7ff8da10fb34,118616596,0,0x0,8
tick,0x7ff8da10fb34,118631564,0,0x0,8
tick,0x7ff8da10fb34,118646421,0,0x0,8
tick,0x7ff8da10fb34,118661588,0,0x0,8
tick,0x7ff8da10fb34,118676976,0,0x0,8
tick,0x7ff8da10fb34,118692764,0,0x0,8
tick,0x7ff8da10fb34,118707629,0,0x0,8
tick,0x7ff8da10fb34,118723091,0,0x0,8
tick,0x7ff8da10fb34,118738144,0,0x0,8
tick,0x7ff8da10fb34,118753443,0,0x0,8
tick,0x7ff8da10fb34,118768702,0,0x0,8
tick,0x7ff8da10fb34,118784713,0,0x0,8
tick,0x7ff8da10fb34,118799530,0,0x0,8
tick,0x7ff8da10fb34,118814575,0,0x0,8
tick,0x7ff8da10fb34,118830030,0,0x0,8
tick,0x7ff8da10fb34,118846286,0,0x0,8
tick,0x7ff8da10fb34,118861510,0,0x0,8
tick,0x7ff8da10fb34,118876905,0,0x0,8
tick,0x7ff8da10fb34,118892270,0,0x0,8
tick,0x7ff8da10fb34,118907276,0,0x0,8
tick,0x7ff8da10fb34,118923219,0,0x0,8
tick,0x7ff8da10fb34,118938159,0,0x0,8
tick,0x7ff8da10fb34,118953064,0,0x0,8
tick,0x7ff8da10fb34,118968617,0,0x0,8
tick,0x7ff8da10fb34,118984533,0,0x0,8
tick,0x7ff8da10fb34,118999990,0,0x0,8
tick,0x7ff8da10fb34,119015936,0,0x0,8
tick,0x7ff8da10fb34,119031156,0,0x0,8
tick,0x7ff8da10fb34,119047356,0,0x0,8
tick,0x7ff8da10fb34,119062346,0,0x0,8
tick,0x7ff8da10fb34,119077296,0,0x0,8
tick,0x7ff8da10fb34,119093227,0,0x0,8
tick,0x7ff8da10fb34,119108983,0,0x0,8
tick,0x7ff8da10fb34,119124428,0,0x0,8
tick,0x7ff8da10fb34,119139710,0,0x0,8
tick,0x7ff8da10fb34,119155027,0,0x0,8
tick,0x7ff8da10fb34,119170478,0,0x0,8
tick,0x7ff8da10fb34,119186330,0,0x0,8
tick,0x7ff8da10fb34,119201111,0,0x0,8
tick,0x7ff8da10fb34,119216747,0,0x0,8
tick,0x7ff8da10fb34,119232640,0,0x0,8
tick,0x7ff8da10fb34,119247958,0,0x0,8
tick,0x7ff8da10fb34,119263229,0,0x0,8
tick,0x7ff8da10fb34,119278553,0,0x0,8
tick,0x7ff8da10fb34,119293689,0,0x0,8
tick,0x7ff8da10fb34,119308945,0,0x0,8
tick,0x7ff8da10fb34,119324179,0,0x0,8
tick,0x7ff8da10fb34,119339678,0,0x0,8
tick,0x7ff8da10fb34,119354449,0,0x0,8
tick,0x7ff8da10fb34,119369593,0,0x0,8
tick,0x7ff8da10fb34,119385122,0,0x0,8
tick,0x7ff8da10fb34,119400739,0,0x0,8
tick,0x7ff8da10fb34,119415800,0,0x0,8
tick,0x7ff8da10fb34,119431322,0,0x0,8
tick,0x7ff8da10fb34,119446670,0,0x0,8
tick,0x7ff8da10fb34,119462077,0,0x0,8
tick,0x7ff8da10fb34,119477277,0,0x0,8
tick,0x7ff8da10fb34,119492270,0,0x0,8
tick,0x7ff8da10fb34,119507189,0,0x0,8
tick,0x7ff8da10fb34,119522368,0,0x0,8
tick,0x7ff8da10fb34,119538473,0,0x0,8
tick,0x7ff8da10fb34,119553782,0,0x0,8
tick,0x7ff8da10fb34,119569247,0,0x0,8
tick,0x7ff8da10fb34,119584616,0,0x0,8
tick,0x7ff8da10fb34,119599765,0,0x0,8
tick,0x7ff8da10fb34,119615688,0,0x0,8
tick,0x7ff8da10fb34,119631326,0,0x0,8
tick,0x7ff8da10fb34,119646431,0,0x0,8
tick,0x7ff8da10fb34,119661733,0,0x0,8
tick,0x7ff8da10fb34,119677143,0,0x0,8
tick,0x7ff8da10fb34,119692265,0,0x0,8
tick,0x7ff8da10fb34,119707512,0,0x0,8
tick,0x7ff8da10fb34,119723305,0,0x0,8
tick,0x7ff8da10fb34,119738237,0,0x0,8
tick,0x7ff8da10fb34,119753162,0,0x0,8
tick,0x7ff8da10fb34,119768535,0,0x0,8
tick,0x7ff8da10fb34,119784292,0,0x0,8
tick,0x7ff8da10fb34,119800145,0,0x0,8
tick,0x7ff8da10fb34,119815725,0,0x0,8
tick,0x7ff8da10fb34,119831531,0,0x0,8
tick,0x7ff8da10fb34,119847224,0,0x0,8
tick,0x7ff8da10fb34,119862292,0,0x0,8
tick,0x7ff8da10fb34,119877352,0,0x0,8
tick,0x7ff8da10fb34,119892253,0,0x0,8
tick,0x7ff8da10fb34,119907600,0,0x0,8
tick,0x7ff8da10fb34,119923338,0,0x0,8
tick,0x7ff8da10fb34,119939556,0,0x0,8
tick,0x7ff8da10fb34,119955227,0,0x0,8
tick,0x7ff8da10fb34,119970482,0,0x0,8
tick,0x7ff8da10fb34,119986106,0,0x0,8
tick,0x7ff8da10fb34,120001469,0,0x0,8
tick,0x7ff8da10fb34,120017542,0,0x0,8
tick,0x7ff8da10fb34,120033282,0,0x0,8
tick,0x7ff8da10fb34,120049148,0,0x0,8
tick,0x7ff8da10fb34,120064401,0,0x0,8
tick,0x7ff8da10fb34,120079391,0,0x0,8
tick,0x7ff8da10fb34,120095182,0,0x0,8
tick,0x7ff8da10fb34,120111275,0,0x0,8
tick,0x7ff8da10fb34,120127063,0,0x0,8
tick,0x7ff8da10fb34,120142315,0,0x0,8
tick,0x7ff8da10fb34,120157355,0,0x0,8
tick,0x7ff8da10fb34,120172898,0,0x0,8
tick,0x7ff8da10fb34,120188067,0,0x0,8
tick,0x7ff8da10fb34,120203249,0,0x0,8
tick,0x7ff8da10fb34,120219286,0,0x0,8
tick,0x7ff8da10fb34,120234765,0,0x0,8
tick,0x7ff8da10fb34,120250139,0,0x0,8
tick,0x7ff8da10fb34,120265410,0,0x0,8
tick,0x7ff8da10fb34,120281474,0,0x0,8
tick,0x7ff8da10fb34,120297313,0,0x0,8
tick,0x7ff8da10fb34,120312091,0,0x0,8
tick,0x7ff8da10fb34,120327293,0,0x0,8
tick,0x7ff8da10fb34,120342297,0,0x0,8
tick,0x7ff8da10fb34,120358148,0,0x0,8
tick,0x7ff8da10fb34,120373303,0,0x0,8
tick,0x7ff8da10fb34,120388430,0,0x0,8
tick,0x7ff8da10fb34,120404092,0,0x0,8
tick,0x7ff8da10fb34,120419437,0,0x0,8
tick,0x7ff8da10fb34,120434916,0,0x0,8
tick,0x7ff8da10fb34,120450617,0,0x0,8
tick,0x7ff8da10fb34,120466259,0,0x0,8
tick,0x7ff8da10fb34,120482104,0,0x0,8
tick,0x7ff8da10fb34,120497373,0,0x0,8
tick,0x7ff8da10fb34,120512332,0,0x0,8
tick,0x7ff8da10fb34,120528292,0,0x0,8
tick,0x7ff8da10fb34,120544369,0,0x0,8
tick,0x7ff8da10fb34,120559724,0,0x0,8
tick,0x7ff8da10fb34,120575247,0,0x0,8
tick,0x7ff8da10fb34,120590298,0,0x0,8
tick,0x7ff8da10fb34,120606258,0,0x0,8
tick,0x7ff8da10fb34,120621962,0,0x0,8
tick,0x7ff8da10fb34,120637425,0,0x0,8
tick,0x7ff8da10fb34,120652460,0,0x0,8
tick,0x7ff8da10fb34,120668150,0,0x0,8
tick,0x7ff8da10fb34,120684088,0,0x0,8
tick,0x7ff8da10fb34,120699421,0,0x0,8
tick,0x7ff8da10fb34,120715475,0,0x0,8
tick,0x7ff8da10fb34,120731381,0,0x0,8
tick,0x7ff8da10fb34,120747264,0,0x0,8
tick,0x7ff8da10fb34,120763375,0,0x0,8
tick,0x7ff8da10fb34,120778995,0,0x0,8
tick,0x7ff8da10fb34,120794141,0,0x0,8
tick,0x7ff8da10fb34,120809697,0,0x0,8
tick,0x7ff8da10fb34,120824707,0,0x0,8
tick,0x7ff8da10fb34,120840063,0,0x0,8
tick,0x7ff8da10fb34,120855230,0,0x0,8
tick,0x7ff8da10fb34,120870221,0,0x0,8
tick,0x7ff8da10fb34,120886199,0,0x0,8
tick,0x7ff8da10fb34,120901717,0,0x0,8
tick,0x7ff8da10fb34,120917027,0,0x0,8
tick,0x7ff8da10fb34,120932658,0,0x0,8
tick,0x7ff8da10fb34,120948039,0,0x0,8
tick,0x7ff8da10fb34,120963448,0,0x0,8
tick,0x7ff8da10fb34,120979732,0,0x0,8
tick,0x7ff8da10fb34,120994288,0,0x0,8
tick,0x7ff8da10fb34,121009575,0,0x0,8
tick,0x7ff8da10fb34,121025238,0,0x0,8
tick,0x7ff8da10fb34,121041288,0,0x0,8
tick,0x7ff8da10fb34,121056322,0,0x0,8
tick,0x7ff8da10fb34,121071298,0,0x0,8
tick,0x7ff8da10fb34,121086202,0,0x0,8
tick,0x7ff8da10fb34,121101222,0,0x0,8
tick,0x7ff8da10fb34,121116999,0,0x0,8
tick,0x7ff8da10fb34,121132592,0,0x0,8
tick,0x7ff8da10fb34,121148706,0,0x0,8
tick,0x7ff8da10fb34,121165441,0,0x0,8
tick,0x7ff8da10fb34,121181617,0,0x0,8
tick,0x7ff8da10fb34,121196826,0,0x0,8
tick,0x7ff8da10fb34,121212017,0,0x0,8
tick,0x7ff8da10fb34,121227248,0,0x0,8
tick,0x7ff8da10fb34,121242342,0,0x0,8
tick,0x7ff8da10fb34,121257647,0,0x0,8
tick,0x7ff8da10fb34,121272875,0,0x0,8
tick,0x7ff8da10fb34,121288246,0,0x0,8
tick,0x7ff8da10fb34,121303727,0,0x0,8
tick,0x7ff8da10fb34,121319616,0,0x0,8
tick,0x7ff8da10fb34,121334524,0,0x0,8
tick,0x7ff8da10fb34,121350210,0,0x0,8
tick,0x7ff8da10fb34,121365924,0,0x0,8
tick,0x7ff8da10fb34,121381733,0,0x0,8
tick,0x7ff8da10fb34,121397380,0,0x0,8
tick,0x7ff8da10fb34,121413248,0,0x0,8
tick,0x7ff8da10fb34,121428737,0,0x0,8
tick,0x7ff8da10fb34,121444246,0,0x0,8
tick,0x7ff8da10fb34,121459503,0,0x0,8
tick,0x7ff8da10fb34,121475165,0,0x0,8
tick,0x7ff8da10fb34,121490279,0,0x0,8
tick,0x7ff8da10fb34,121506218,0,0x0,8
tick,0x7ff8da10fb34,121522303,0,0x0,8
tick,0x7ff8da10fb34,121538249,0,0x0,8
tick,0x7ff8da10fb34,121554295,0,0x0,8
tick,0x7ff8da10fb34,121569669,0,0x0,8
tick,0x7ff8da10fb34,121584533,0,0x0,8
tick,0x7ff8da10fb34,121600058,0,0x0,8
tick,0x7ff8da10fb34,121615763,0,0x0,8
tick,0x7ff8da10fb34,121631610,0,0x0,8
tick,0x7ff8da10fb34,121646802,0,0x0,8
tick,0x7ff8da10fb34,121661295,0,0x0,8
tick,0x7ff8da10fb34,121677248,0,0x0,8
tick,0x7ff8da10fb34,121692281,0,0x0,8
tick,0x7ff8da10fb34,121707142,0,0x0,8
tick,0x7ff8da10fb34,121722278,0,0x0,8
tick,0x7ff8da10fb34,121737890,0,0x0,8
tick,0x7ff8da10fb34,121752978,0,0x0,8
tick,0x7ff8da10fb34,121768337,0,0x0,8
tick,0x7ff8da10fb34,121783686,0,0x0,8
tick,0x7ff8da10fb34,121798985,0,0x0,8
tick,0x7ff8da10fb34,121815055,0,0x0,8
tick,0x7ff8da10fb34,121829768,0,0x0,8
tick,0x7ff8da10fb34,121845036,0,0x0,8
tick,0x7ff8da10fb34,121860242,0,0x0,8
tick,0x7ff8da10fb34,121876304,0,0x0,8
tick,0x7ff8da10fb34,121892296,0,0x0,8
tick,0x7ff8da10fb34,121907226,0,0x0,8
tick,0x7ff8da10fb34,121922237,0,0x0,8
tick,0x7ff8da10fb34,121937627,0,0x0,8
tick,0x7ff8da10fb34,121952870,0,0x0,8
tick,0x7ff8da10fb34,121968290,0,0x0,8
tick,0x7ff8da10fb34,121983241,0,0x0,8
tick,0x7ff8da10fb34,121998922,0,0x0,8
tick,0x7ff8da10fb34,122015010,0,0x0,8
tick,0x7ff8da10fb34,122029598,0,0x0,8
tick,0x7ff8da10fb34,122044276,0,0x0,8
tick,0x7ff8da10fb34,122059758,0,0x0,8
tick,0x7ff8da10fb34,122075203,0,0x0,8
tick,0x7ff8da10fb34,122090385,0,0x0,8
tick,0x7ff8da10fb34,122106213,0,0x0,8
tick,0x7ff8da10fb34,122122272,0,0x0,8
tick,0x7ff8da10fb34,122138260,0,0x0,8
tick,0x7ff8da10fb34,122154293,0,0x0,8
tick,0x7ff8da10fb34,122169268,0,0x0,8
tick,0x7ff8da10fb34,122184187,0,0x0,8
tick,0x7ff8da10fb34,122199574,0,0x0,8
tick,0x7ff8da10fb34,122215566,0,0x0,8
tick,0x7ff8da10fb34,122231161,0,0x0,8
tick,0x7ff8da10fb34,122248830,0,0x0,8
tick,0x7ff8da10fb34,122265199,0,0x0,8
tick,0x7ff8da10fb34,122279544,0,0x0,8
tick,0x7ff8da10fb34,122294606,0,0x0,8
tick,0x7ff8da10fb34,122310296,0,0x0,8
tick,0x7ff8da10fb34,122326323,0,0x0,8
tick,0x7ff8da10fb34,122342349,0,0x0,8
tick,0x7ff8da10fb34,122357095,0,0x0,8
tick,0x7ff8da10fb34,122372387,0,0x0,8
tick,0x7ff8da10fb34,122387554,0,0x0,8
tick,0x7ff8da10fb34,122402738,0,0x0,8
tick,0x7ff8da10fb34,122418228,0,0x0,8
tick,0x7ff8da10fb34,122433403,0,0x0,8
tick,0x7ff8da10fb34,122448732,0,0x0,8
tick,0x7ff8da10fb34,122464467,0,0x0,8
tick,0x7ff8da10fb34,122479379,0,0x0,8
tick,0x7ff8da10fb34,122494278,0,0x0,8
tick,0x7ff8da10fb34,122509487,0,0x0,8
tick,0x7ff8da10fb34,122525223,0,0x0,8
tick,0x7ff8da10fb34,122541301,0,0x0,8
tick,0x7ff8da10fb34,122557231,0,0x0,8
tick,0x7ff8da10fb34,122572318,0,0x0,8
tick,0x7ff8da10fb34,122587365,0,0x0,8
tick,0x7ff8da10fb34,122603270,0,0x0,8
tick,0x7ff8da10fb34,122618929,0,0x0,8
tick,0x7ff8da10fb34,122634330,0,0x0,8
tick,0x7ff8da10fb34,122649731,0,0x0,8
tick,0x7ff8da10fb34,122665317,0,0x0,8
tick,0x7ff8da10fb34,122681011,0,0x0,8
tick,0x7ff8da10fb34,122696378,0,0x0,8
tick,0x7ff8da10fb34,122711188,0,0x0,8
tick,0x7ff8da10fb34,122726892,0,0x0,8
tick,0x7ff8da10fb34,122742384,0,0x0,8
tick,0x7ff8da10fb34,122757291,0,0x0,8
tick,0x7ff8da10fb34,122772317,0,0x0,8
tick,0x7ff8da10fb34,122788007,0,0x0,8
tick,0x7ff8da10fb34,122804015,0,0x0,8
tick,0x7ff8da10fb34,122819365,0,0x0,8
tick,0x7ff8da10fb34,122835194,0,0x0,8
tick,0x7ff8da10fb34,122850185,0,0x0,8
tick,0x7ff8da10fb34,122865229,0,0x0,8
tick,0x7ff8da10fb34,122881027,0,0x0,8
tick,0x7ff8da10fb34,122896202,0,0x0,8
tick,0x7ff8da10fb34,122912438,0,0x0,8
tick,0x7ff8da10fb34,122928297,0,0x0,8
tick,0x7ff8da10fb34,122944276,0,0x0,8
tick,0x7ff8da10fb34,122959800,0,0x0,8
tick,0x7ff8da10fb34,122975148,0,0x0,8
tick,0x7ff8da10fb34,122991285,0,0x0,8
tick,0x7ff8da10fb34,123006879,0,0x0,8
tick,0x7ff8da10fb34,123022533,0,0x0,8
tick,0x7ff8da10fb34,123037267,0,0x0,8
tick,0x7ff8da10fb34,123052871,0,0x0,8
tick,0x7ff8da10fb34,123068169,0,0x0,8
tick,0x7ff8da10fb34,123083180,0,0x0,8
tick,0x7ff8da10fb34,123098398,0,0x0,8
tick,0x7ff8da10fb34,123114332,0,0x0,8
tick,0x7ff8da10fb34,123129234,0,0x0,8
tick,0x7ff8da10fb34,123145623,0,0x0,8
tick,0x7ff8da10fb34,123160446,0,0x0,8
tick,0x7ff8da10fb34,123176110,0,0x0,8
tick,0x7ff8da10fb34,123191465,0,0x0,8
tick,0x7ff8da10fb34,123207266,0,0x0,8
tick,0x7ff8da10fb34,123223301,0,0x0,8
tick,0x7ff8da10fb34,123238980,0,0x0,8
tick,0x7ff8da10fb34,123254155,0,0x0,8
tick,0x7ff8da10fb34,123270282,0,0x0,8
tick,0x7ff8da10fb34,123285215,0,0x0,8
tick,0x7ff8da10fb34,123301021,0,0x0,8
tick,0x7ff8da10fb34,123317127,0,0x0,8
tick,0x7ff8da10fb34,123333025,0,0x0,8
tick,0x7ff8da10fb34,123348212,0,0x0,8
tick,0x7ff8da10fb34,123363249,0,0x0,8
tick,0x7ff8da10fb34,123378828,0,0x0,8
tick,0x7ff8da10fb34,123393522,0,0x0,8
tick,0x7ff8da10fb34,123408517,0,0x0,8
tick,0x7ff8da10fb34,123424498,0,0x0,8
tick,0x7ff8da10fb34,123440524,0,0x0,8
tick,0x7ff8da10fb34,123456477,0,0x0,8
tick,0x7ff8da10fb34,123472501,0,0x0,8
tick,0x7ff8da10fb34,123488476,0,0x0,8
tick,0x7ff8da10fb34,123503445,0,0x0,8
tick,0x7ff8da10fb34,123518479,0,0x0,8
tick,0x7ff8da10fb34,123534460,0,0x0,8
tick,0x7ff8da10fb34,123550461,0,0x0,8
tick,0x7ff8da10fb34,123565456,0,0x0,8
tick,0x7ff8da10fb34,123580571,0,0x0,8
tick,0x7ff8da10fb34,123596494,0,0x0,8
tick,0x7ff8da10fb34,123612457,0,0x0,8
tick,0x7ff8da10fb34,123628638,0,0x0,8
tick,0x7ff8da10fb34,123644470,0,0x0,8
tick,0x7ff8da10fb34,123659948,0,0x0,8
tick,0x7ff8da10fb34,123676128,0,0x0,8
tick,0x7ff8da10fb34,123691374,0,0x0,8
tick,0x7ff8da10fb34,123707337,0,0x0,8
tick,0x7ff8da10fb34,123722181,0,0x0,8
tick,0x7ff8da10fb34,123737145,0,0x0,8
tick,0x7ff8da10fb34,123752320,0,0x0,8
tick,0x7ff8da10fb34,123767506,0,0x0,8
tick,0x7ff8da10fb34,123783647,0,0x0,8
tick,0x7ff8da10fb34,123799536,0,0x0,8
tick,0x7ff8da10fb34,123814753,0,0x0,8
tick,0x7ff8da10fb34,123830718,0,0x0,8
tick,0x7ff8da10fb34,123846459,0,0x0,8
tick,0x7ff8da10fb34,123861427,0,0x0,8
tick,0x7ff8da10fb34,123877243,0,0x0,8
tick,0x7ff8da10fb34,123892211,0,0x0,8
tick,0x7ff8da10fb34,123908162,0,0x0,8
tick,0x7ff8da10fb34,123924245,0,0x0,8
tick,0x7ff8da10fb34,123939720,0,0x0,8
tick,0x7ff8da10fb34,123955013,0,0x0,8
tick,0x7ff8da10fb34,123970229,0,0x0,8
tick,0x7ff8da10fb34,123986297,0,0x0,8
tick,0x7ff8da10fb34,124002116,0,0x0,8
tick,0x7ff8da10fb34,124017970,0,0x0,8
tick,0x7ff8da10fb34,124033457,0,0x0,8
tick,0x7ff8da10fb34,124049111,0,0x0,8
tick,0x7ff8da10fb34,124064689,0,0x0,8
tick,0x7ff8da10fb34,124080504,0,0x0,8
tick,0x7ff8da10fb34,124096239,0,0x0,8
tick,0x7ff8da10fb34,124111974,0,0x0,8
tick,0x7ff8da10fb34,124126895,0,0x0,8
tick,0x7ff8da10fb34,124142283,0,0x0,8
tick,0x7ff8da10fb34,124158339,0,0x0,8
tick,0x7ff8da10fb34,124174585,0,0x0,8
tick,0x7ff8da10fb34,124189607,0,0x0,8
tick,0x7ff8da10fb34,124204791,0,0x0,8
tick,0x7ff8da10fb34,124220101,0,0x0,8
tick,0x7ff8da10fb34,124236237,0,0x0,8
tick,0x7ff8da10fb34,124252107,0,0x0,8
tick,0x7ff8da10fb34,124267985,0,0x0,8
tick,0x7ff8da10fb34,124283298,0,0x0,8
tick,0x7ff8da10fb34,124298107,0,0x0,8
tick,0x7ff8da10fb34,124314013,0,0x0,8
tick,0x7ff8da10fb34,124328954,0,0x0,8
tick,0x7ff8da10fb34,124344243,0,0x0,8
tick,0x7ff8da10fb34,124359416,0,0x0,8
tick,0x7ff8da10fb34,124374504,0,0x0,8
tick,0x7ff8da10fb34,124390102,0,0x0,8
tick,0x7ff8da10fb34,124405122,0,0x0,8
tick,0x7ff8da10fb34,124421223,0,0x0,8
tick,0x7ff8da10fb34,124436185,0,0x0,8
tick,0x7ff8da10fb34,124451812,0,0x0,8
tick,0x7ff8da10fb34,124467156,0,0x0,8
tick,0x7ff8da10fb34,124482721,0,0x0,8
tick,0x7ff8da10fb34,124498243,0,0x0,8
tick,0x7ff8da10fb34,124513632,0,0x0,8
tick,0x7ff8da10fb34,124529130,0,0x0,8
tick,0x7ff8da10fb34,124545269,0,0x0,8
tick,0x7ff8da10fb34,124559972,0,0x0,8
tick,0x7ff8da10fb34,124575159,0,0x0,8
tick,0x7ff8da10fb34,124591305,0,0x0,8
tick,0x7ff8da10fb34,124606732,0,0x0,8
tick,0x7ff8da10fb34,124622239,0,0x0,8
tick,0x7ff8da10fb34,124637443,0,0x0,8
tick,0x7ff8da10fb34,124652556,0,0x0,8
tick,0x7ff8da10fb34,124667982,0,0x0,8
tick,0x7ff8da10fb34,124683471,0,0x0,8
tick,0x7ff8da10fb34,124699179,0,0x0,8
tick,0x7ff8da10fb34,124714535,0,0x0,8
tick,0x7ff8da10fb34,124729055,0,0x0,8
tick,0x7ff8da10fb34,124744274,0,0x0,8
tick,0x7ff8da10fb34,124759687,0,0x0,8
tick,0x7ff8da10fb34,124775156,0,0x0,8
tick,0x7ff8da10fb34,124790264,0,0x0,8
tick,0x7ff8da10fb34,124806215,0,0x0,8
tick,0x7ff8da10fb34,124821827,0,0x0,8
tick,0x7ff8da10fb34,124837367,0,0x0,8
tick,0x7ff8da10fb34,124852265,0,0x0,8
tick,0x7ff8da10fb34,124868120,0,0x0,8
tick,0x7ff8da10fb34,124883367,0,0x0,8
tick,0x7ff8da10fb34,124899196,0,0x0,8
tick,0x7ff8da10fb34,124914362,0,0x0,8
tick,0x7ff8da10fb34,124930166,0,0x0,8
tick,0x7ff8da10fb34,124945184,0,0x0,8
tick,0x7ff8da10fb34,124960752,0,0x0,8
tick,0x7ff8da10fb34,124976201,0,0x0,8
tick,0x7ff8da10fb34,124992277,0,0x0,8
tick,0x7ff8da10fb34,125008238,0,0x0,8
tick,0x7ff8da10fb34,125024103,0,0x0,8
tick,0x7ff8da10fb34,125038773,0,0x0,8
tick,0x7ff8da10fb34,125054068,0,0x0,8
tick,0x7ff8da10fb34,125069280,0,0x0,8
tick,0x7ff8da10fb34,125085162,0,0x0,8
tick,0x7ff8da10fb34,125100243,0,0x0,8
tick,0x7ff8da10fb34,125116188,0,0x0,8
tick,0x7ff8da10fb34,125131918,0,0x0,8
tick,0x7ff8da10fb34,125148015,0,0x0,8
tick,0x7ff8da10fb34,125164037,0,0x0,8
tick,0x7ff8da10fb34,125179976,0,0x0,8
tick,0x7ff8da10fb34,125196049,0,0x0,8
tick,0x7ff8da10fb34,125211605,0,0x0,8
tick,0x7ff8da10fb34,125226902,0,0x0,8
tick,0x7ff8da10fb34,125242237,0,0x0,8
tick,0x7ff8da10fb34,125257439,0,0x0,8
tick,0x7ff8da10fb34,125272267,0,0x0,8
tick,0x7ff8da10fb34,125287151,0,0x0,8
tick,0x7ff8da10fb34,125302197,0,0x0,8
tick,0x7ff8da10fb34,125317422,0,0x0,8
tick,0x7ff8da10fb34,125332608,0,0x0,8
tick,0x7ff8da10fb34,125348255,0,0x0,8
tick,0x7ff8da10fb34,125364102,0,0x0,8
tick,0x7ff8da10fb34,125380170,0,0x0,8
tick,0x7ff8da10fb34,125395266,0,0x0,8
tick,0x7ff8da10fb34,125410358,0,0x0,8
tick,0x7ff8da10fb34,125426270,0,0x0,8
tick,0x7ff8da10fb34,125442341,0,0x0,8
tick,0x7ff8da10fb34,125458154,0,0x0,8
tick,0x7ff8da10fb34,125473282,0,0x0,8
tick,0x7ff8da10fb34,125488606,0,0x0,8
tick,0x7ff8da10fb34,125504009,0,0x0,8
tick,0x7ff8da10fb34,125519686,0,0x0,8
tick,0x7ff8da10fb34,125535108,0,0x0,8
tick,0x7ff8da10fb34,125550535,0,0x0,8
tick,0x7ff8da10fb34,125566204,0,0x0,8
tick,0x7ff8da10fb34,125582283,0,0x0,8
tick,0x7ff8da10fb34,125598216,0,0x0,8
tick,0x7ff8da10fb34,125614084,0,0x0,8
tick,0x7ff8da10fb34,125629806,0,0x0,8
tick,0x7ff8da10fb34,125645257,0,0x0,8
tick,0x7ff8da10fb34,125660154,0,0x0,8
tick,0x7ff8da10fb34,125675227,0,0x0,8
tick,0x7ff8da10fb34,125690571,0,0x0,8
tick,0x7ff8da10fb34,125706329,0,0x0,8
tick,0x7ff8da10fb34,125722315,0,0x0,8
tick,0x7ff8da10fb34,125738275,0,0x0,8
tick,0x7ff8da10fb34,125753370,0,0x0,8
tick,0x7ff8da10fb34,125769026,0,0x0,8
tick,0x7ff8da10fb34,125784699,0,0x0,8
tick,0x7ff8da10fb34,125800091,0,0x0,8
tick,0x7ff8da10fb34,125816224,0,0x0,8
tick,0x7ff8da10fb34,125831595,0,0x0,8
tick,0x7ff8da10fb34,125847457,0,0x0,8
tick,0x7ff8da10fb34,125861953,0,0x0,8
tick,0x7ff8da10fb34,125877289,0,0x0,8
tick,0x7ff8da10fb34,125892284,0,0x0,8
tick,0x7ff8da10fb34,125907546,0,0x0,8
tick,0x7ff8da10fb34,125923278,0,0x0,8
tick,0x7ff8da10fb34,125939242,0,0x0,8
tick,0x7ff8da10fb34,125954197,0,0x0,8
tick,0x7ff8da10fb34,125969623,0,0x0,8
tick,0x7ff8da10fb34,125984993,0,0x0,8
tick,0x7ff8da10fb34,126000282,0,0x0,8
tick,0x7ff8da10fb34,126016184,0,0x0,8
tick,0x7ff8da10fb34,126031570,0,0x0,8
tick,0x7ff8da10fb34,126047320,0,0x0,8
tick,0x7ff8da10fb34,126063304,0,0x0,8
tick,0x7ff8da10fb34,126078052,0,0x0,8
tick,0x7ff8da10fb34,126093296,0,0x0,8
tick,0x7ff8da10fb34,126108566,0,0x0,8
tick,0x7ff8da10fb34,126124273,0,0x0,8
tick,0x7ff8da10fb34,126139520,0,0x0,8
tick,0x7ff8da10fb34,126154660,0,0x0,8
tick,0x7ff8da10fb34,126170691,0,0x0,8
tick,0x7ff8da10fb34,126186199,0,0x0,8
tick,0x7ff8da10fb34,126201617,0,0x0,8
tick,0x7ff8da10fb34,126217404,0,0x0,8
tick,0x7ff8da10fb34,126232821,0,0x0,8
tick,0x7ff8da10fb34,126248185,0,0x0,8
tick,0x7ff8da10fb34,126263819,0,0x0,8
tick,0x7ff8da10fb34,126279769,0,0x0,8
tick,0x7ff8da10fb34,126295105,0,0x0,8
tick,0x7ff8da10fb34,126311193,0,0x0,8
tick,0x7ff8da10fb34,126326213,0,0x0,8
tick,0x7ff8da10fb34,126342318,0,0x0,8
tick,0x7ff8da10fb34,126357285,0,0x0,8
tick,0x7ff8da10fb34,126373312,0,0x0,8
tick,0x7ff8da10fb34,126389370,0,0x0,8
tick,0x7ff8da10fb34,126405273,0,0x0,8
tick,0x7ff8da10fb34,126421044,0,0x0,8
tick,0x7ff8da10fb34,126436262,0,0x0,8
tick,0x7ff8da10fb34,126451950,0,0x0,8
tick,0x7ff8da10fb34,126467037,0,0x0,8
tick,0x7ff8da10fb34,126482225,0,0x0,8
tick,0x7ff8da10fb34,126497609,0,0x0,8
tick,0x7ff8da10fb34,126512742,0,0x0,8
tick,0x7ff8da10fb34,126528682,0,0x0,8
tick,0x7ff8da10fb34,126544295,0,0x0,8
tick,0x7ff8da10fb34,126559067,0,0x0,8
tick,0x7ff8da10fb34,126574263,0,0x0,8
tick,0x7ff8da10fb34,126589544,0,0x0,8
tick,0x7ff8da10fb34,126604198,0,0x0,8
tick,0x7ff8da10fb34,126619396,0,0x0,8
tick,0x7ff8da10fb34,126634583,0,0x0,8
tick,0x7ff8da10fb34,126650021,0,0x0,8
tick,0x7ff8da10fb34,126665210,0,0x0,8
tick,0x7ff8da10fb34,126680309,0,0x0,8
tick,0x7ff8da10fb34,126695985,0,0x0,8
tick,0x7ff8da10fb34,126711330,0,0x0,8
tick,0x7ff8da10fb34,126726327,0,0x0,8
tick,0x7ff8da10fb34,126741300,0,0x0,8
tick,0x7ff8da10fb34,126756713,0,0x0,8
tick,0x7ff8da10fb34,126772327,0,0x0,8
tick,0x7ff8da10fb34,126787154,0,0x0,8
tick,0x7ff8da10fb34,126802230,0,0x0,8
tick,0x7ff8da10fb34,126818128,0,0x0,8
tick,0x7ff8da10fb34,126834138,0,0x0,8
tick,0x7ff8da10fb34,126848862,0,0x0,8
tick,0x7ff8da10fb34,126864580,0,0x0,8
tick,0x7ff8da10fb34,126880122,0,0x0,8
tick,0x7ff8da10fb34,126896030,0,0x0,8
tick,0x7ff8da10fb34,126911461,0,0x0,8
tick,0x7ff8da10fb34,126926291,0,0x0,8
tick,0x7ff8da10fb34,126941253,0,0x0,8
tick,0x7ff8da10fb34,126956586,0,0x0,8
tick,0x7ff8da10fb34,126972376,0,0x0,8
tick,0x7ff8da10fb34,126987171,0,0x0,8
tick,0x7ff8da10fb34,127002244,0,0x0,8
tick,0x7ff8da10fb34,127018179,0,0x0,8
tick,0x7ff8da10fb34,127033406,0,0x0,8
tick,0x7ff8da10fb34,127048823,0,0x0,8
tick,0x7ff8da10fb34,127064400,0,0x0,8
tick,0x7ff8da10fb34,127079359,0,0x0,8
tick,0x7ff8da10fb34,127094239,0,0x0,8
tick,0x7ff8da10fb34,127110020,0,0x0,8
tick,0x7ff8da10fb34,127125184,0,0x0,8
tick,0x7ff8da10fb34,127140810,0,0x0,8
tick,0x7ff8da10fb34,127156899,0,0x0,8
tick,0x7ff8da10fb34,127172022,0,0x0,8
tick,0x7ff8da10fb34,127187092,0,0x0,8
tick,0x7ff8da10fb34,127202298,0,0x0,8
tick,0x7ff8da10fb34,127217537,0,0x0,8
tick,0x7ff8da10fb34,127233080,0,0x0,8
tick,0x7ff8da10fb34,127248352,0,0x0,8
tick,0x7ff8da10fb34,127264396,0,0x0,8
tick,0x7ff8da10fb34,127279886,0,0x0,8
tick,0x7ff8da10fb34,127295781,0,0x0,8
tick,0x7ff8da10fb34,127311327,0,0x0,8
tick,0x7ff8da10fb34,127326627,0,0x0,8
tick,0x7ff8da10fb34,127342100,0,0x0,8
tick,0x7ff8da10fb34,127357265,0,0x0,8
tick,0x7ff8da10fb34,127373302,0,0x0,8
tick,0x7ff8da10fb34,127388774,0,0x0,8
tick,0x7ff8da10fb34,127404289,0,0x0,8
tick,0x7ff8da10fb34,127419763,0,0x0,8
tick,0x7ff8da10fb34,127435194,0,0x0,8
tick,0x7ff8da10fb34,127451091,0,0x0,8
tick,0x7ff8da10fb34,127466280,0,0x0,8
tick,0x7ff8da10fb34,127481666,0,0x0,8
tick,0x7ff8da10fb34,127496712,0,0x0,8
tick,0x7ff8da10fb34,127512633,0,0x0,8
tick,0x7ff8da10fb34,127527616,0,0x0,8
tick,0x7ff8da10fb34,127543277,0,0x0,8
tick,0x7ff8da10fb34,127559218,0,0x0,8
tick,0x7ff8da10fb34,127575160,0,0x0,8
tick,0x7ff8da10fb34,127590717,0,0x0,8
tick,0x7ff8da10fb34,127606235,0,0x0,8
tick,0x7ff8da10fb34,127622298,0,0x0,8
tick,0x7ff8da10fb34,127637701,0,0x0,8
tick,0x7ff8da10fb34,127652797,0,0x0,8
tick,0x7ff8da10fb34,127668424,0,0x0,8
tick,0x7ff8da10fb34,127683550,0,0x0,8
tick,0x7ff8da10fb34,127699055,0,0x0,8
tick,0x7ff8da10fb34,127714339,0,0x0,8
tick,0x7ff8da10fb34,127729513,0,0x0,8
tick,0x7ff8da10fb34,127745907,0,0x0,8
tick,0x7ff8da10fb34,127760509,0,0x0,8
tick,0x7ff8da10fb34,127775224,0,0x0,8
tick,0x7ff8da10fb34,127791298,0,0x0,8
tick,0x7ff8da10fb34,127807230,0,0x0,8
tick,0x7ff8da10fb34,127822233,0,0x0,8
tick,0x7ff8da10fb34,127837577,0,0x0,8
tick,0x7ff8da10fb34,127853485,0,0x0,8
tick,0x7ff8da10fb34,127868930,0,0x0,8
tick,0x7ff8da10fb34,127884297,0,0x0,8
tick,0x7ff8da10fb34,127899629,0,0x0,8
tick,0x7ff8da10fb34,127915147,0,0x0,8
tick,0x7ff8da10fb34,127930263,0,0x0,8
tick,0x7ff8da10fb34,127946416,0,0x0,8
tick,0x7ff8da10fb34,127962242,0,0x0,8
tick,0x7ff8da10fb34,127978277,0,0x0,8
tick,0x7ff8da10fb34,127993588,0,0x0,8
tick,0x7ff8da10fb34,128008462,0,0x0,8
tick,0x7ff8da10fb34,128023328,0,0x0,8
tick,0x7ff8da10fb34,128039181,0,0x0,8
tick,0x7ff8da10fb34,128054430,0,0x0,8
tick,0x7ff8da10fb34,128069638,0,0x0,8
tick,0x7ff8da10fb34,128084971,0,0x0,8
tick,0x7ff8da10fb34,128100303,0,0x0,8
tick,0x7ff8da10fb34,128115390,0,0x0,8
tick,0x7ff8da10fb34,128130405,0,0x0,8
tick,0x7ff8da10fb34,128146451,0,0x0,8
tick,0x7ff8da10fb34,128162172,0,0x0,8
tick,0x7ff8da10fb34,128177945,0,0x0,8
tick,0x7ff8da10fb34,128194094,0,0x0,8
tick,0x7ff8da10fb34,128209969,0,0x0,8
tick,0x7ff8da10fb34,128225009,0,0x0,8
tick,0x7ff8da10fb34,128240339,0,0x0,8
tick,0x7ff8da10fb34,128256276,0,0x0,8
tick,0x7ff8da10fb34,128272282,0,0x0,8
tick,0x7ff8da10fb34,128288525,0,0x0,8
tick,0x7ff8da10fb34,128303093,0,0x0,8
tick,0x7ff8da10fb34,128317966,0,0x0,8
tick,0x7ff8da10fb34,128332962,0,0x0,8
tick,0x7ff8da10fb34,128348840,0,0x0,8
tick,0x7ff8da10fb34,128363998,0,0x0,8
tick,0x7ff8da10fb34,128379996,0,0x0,8
tick,0x7ff8da10fb34,128396087,0,0x0,8
tick,0x7ff8da10fb34,128411975,0,0x0,8
tick,0x7ff8da10fb34,128427849,0,0x0,8
tick,0x7ff8da10fb34,128443069,0,0x0,8
tick,0x7ff8da10fb34,128458964,0,0x0,8
tick,0x7ff8da10fb34,128473949,0,0x0,8
tick,0x7ff8da10fb34,128488926,0,0x0,8
tick,0x7ff8da10fb34,128504937,0,0x0,8
tick,0x7ff8da10fb34,128519986,0,0x0,8
tick,0x7ff8da10fb34,128534906,0,0x0,8
tick,0x7ff8da10fb34,128550932,0,0x0,8
tick,0x7ff8da10fb34,128565940,0,0x0,8
tick,0x7ff8da10fb34,128580888,0,0x0,8
tick,0x7ff8da10fb34,128596907,0,0x0,8
tick,0x7ff8da10fb34,128611886,0,0x0,8
tick,0x7ff8da10fb34,128626953,0,0x0,8
tick,0x7ff8da10fb34,128641976,0,0x0,8
tick,0x7ff8da10fb34,128657024,0,0x0,8
tick,0x7ff8da10fb34,128673157,0,0x0,8
tick,0x7ff8da10fb34,128688985,0,0x0,8
tick,0x7ff8da10fb34,128704251,0,0x0,8
tick,0x7ff8da10fb34,128719467,0,0x0,8
tick,0x7ff8da10fb34,128734796,0,0x0,8
tick,0x7ff8da10fb34,128750083,0,0x0,8
tick,0x7ff8da10fb34,128766323,0,0x0,8
tick,0x7ff8da10fb34,128781428,0,0x0,8
tick,0x7ff8da10fb34,128797140,0,0x0,8
tick,0x7ff8da10fb34,128812712,0,0x0,8
tick,0x7ff8da10fb34,128827348,0,0x0,8
tick,0x7ff8da10fb34,128842248,0,0x0,8
tick,0x7ff8da10fb34,128858162,0,0x0,8
tick,0x7ff8da10fb34,128874242,0,0x0,8
tick,0x7ff8da10fb34,128889633,0,0x0,8
tick,0x7ff8da10fb34,128905071,0,0x0,8
tick,0x7ff8da10fb34,128920257,0,0x0,8
tick,0x7ff8da10fb34,128936267,0,0x0,8
tick,0x7ff8da10fb34,128952195,0,0x0,8
tick,0x7ff8da10fb34,128967034,0,0x0,8
tick,0x7ff8da10fb34,128982670,0,0x0,8
tick,0x7ff8da10fb34,128997583,0,0x0,8
tick,0x7ff8da10fb34,129012595,0,0x0,8
tick,0x7ff8da10fb34,129028472,0,0x0,8
tick,0x7ff8da10fb34,129043940,0,0x0,8
tick,0x7ff8da10fb34,129059213,0,0x0,8
tick,0x7ff8da10fb34,129074238,0,0x0,8
tick,0x7ff8da10fb34,129089634,0,0x0,8
tick,0x7ff8da10fb34,129104933,0,0x0,8
tick,0x7ff8da10fb34,129120162,0,0x0,8
tick,0x7ff8da10fb34,129135172,0,0x0,8
tick,0x7ff8da10fb34,129150174,0,0x0,8
tick,0x7ff8da10fb34,129165169,0,0x0,8
tick,0x7ff8da10fb34,129180089,0,0x0,8
tick,0x7ff8da10fb34,129196174,0,0x0,8
tick,0x7ff8da10fb34,129211427,0,0x0,8
tick,0x7ff8da10fb34,129226995,0,0x0,8
tick,0x7ff8da10fb34,129242271,0,0x0,8
tick,0x7ff8da10fb34,129257186,0,0x0,8
tick,0x7ff8da10fb34,129272342,0,0x0,8
tick,0x7ff8da10fb34,129288198,0,0x0,8
tick,0x7ff8da10fb34,129303254,0,0x0,8
tick,0x7ff8da10fb34,129318719,0,0x0,8
tick,0x7ff8da10fb34,129334043,0,0x0,8
tick,0x7ff8da10fb34,129349331,0,0x0,8
tick,0x7ff8da10fb34,129364477,0,0x0,8
tick,0x7ff8da10fb34,129380032,0,0x0,8
tick,0x7ff8da10fb34,129395816,0,0x0,8
tick,0x7ff8da10fb34,129411870,0,0x0,8
tick,0x7ff8da10fb34,129427300,0,0x0,8
tick,0x7ff8da10fb34,129442432,0,0x0,8
tick,0x7ff8da10fb34,129458370,0,0x0,8
tick,0x7ff8da10fb34,129473267,0,0x0,8
tick,0x7ff8da10fb34,129488741,0,0x0,8
tick,0x7ff8da10fb34,129504153,0,0x0,8
tick,0x7ff8da10fb34,129519425,0,0x0,8
tick,0x7ff8da10fb34,129534381,0,0x0,8
tick,0x7ff8da10fb34,129549386,0,0x0,8
tick,0x7ff8da10fb34,129564792,0,0x0,8
tick,0x7ff8da10fb34,129580440,0,0x0,8
tick,0x7ff8da10fb34,129595706,0,0x0,8
tick,0x7ff8da10fb34,129611623,0,0x0,8
tick,0x7ff8da10fb34,129626997,0,0x0,8
tick,0x7ff8da10fb34,129642302,0,0x0,8
tick,0x7ff8da10fb34,129657400,0,0x0,8
tick,0x7ff8da10fb34,129673263,0,0x0,8
tick,0x7ff8da10fb34,129689226,0,0x0,8
tick,0x7ff8da10fb34,129705190,0,0x0,8
tick,0x7ff8da10fb34,129721282,0,0x0,8
tick,0x7ff8da10fb34,129737182,0,0x0,8
tick,0x7ff8da10fb34,129753329,0,0x0,8
tick,0x7ff8da10fb34,129768713,0,0x0,8
tick,0x7ff8da10fb34,129784108,0,0x0,8
tick,0x7ff8da10fb34,129799415,0,0x0,8
tick,0x7ff8da10fb34,129814602,0,0x0,8
tick,0x7ff8da10fb34,129829935,0,0x0,8
tick,0x7ff8da10fb34,129845595,0,0x0,8
tick,0x7ff8da10fb34,129861405,0,0x0,8
tick,0x7ff8da10fb34,129876997,0,0x0,8
tick,0x7ff8da10fb34,129892265,0,0x0,8
tick,0x7ff8da10fb34,129907385,0,0x0,8
tick,0x7ff8da10fb34,129923283,0,0x0,8
tick,0x7ff8da10fb34,129939235,0,0x0,8
tick,0x7ff8da10fb34,129955105,0,0x0,8
tick,0x7ff8da10fb34,129970364,0,0x0,8
tick,0x7ff8da10fb34,129986381,0,0x0,8
tick,0x7ff8da10fb34,130001281,0,0x0,8
tick,0x7ff8da10fb34,130017059,0,0x0,8
tick,0x7ff8da10fb34,130032327,0,0x0,8
tick,0x7ff8da10fb34,130047535,0,0x0,8
tick,0x7ff8da10fb34,130063544,0,0x0,8
tick,0x7ff8da10fb34,130078810,0,0x0,8
tick,0x7ff8da10fb34,130094656,0,0x0,8
tick,0x7ff8da10fb34,130110159,0,0x0,8
tick,0x7ff8da10fb34,130126410,0,0x0,8
tick,0x7ff8da10fb34,130141343,0,0x0,8
tick,0x7ff8da10fb34,130156405,0,0x0,8
tick,0x7ff8da10fb34,130172518,0,0x0,8
tick,0x7ff8da10fb34,130187570,0,0x0,8
tick,0x7ff8da10fb34,130203155,0,0x0,8
tick,0x7ff8da10fb34,130218407,0,0x0,8
tick,0x7ff8da10fb34,130233796,0,0x0,8
tick,0x7ff8da10fb34,130249725,0,0x0,8
tick,0x7ff8da10fb34,130265094,0,0x0,8
tick,0x7ff8da10fb34,130280396,0,0x0,8
tick,0x7ff8da10fb34,130296625,0,0x0,8
tick,0x7ff8da10fb34,130312024,0,0x0,8
tick,0x7ff8da10fb34,130328037,0,0x0,8
tick,0x7ff8da10fb34,130343469,0,0x0,8
tick,0x7ff8da10fb34,130358598,0,0x0,8
tick,0x7ff8da10fb34,130374097,0,0x0,8
tick,0x7ff8da10fb34,130389930,0,0x0,8
tick,0x7ff8da10fb34,130405069,0,0x0,8
tick,0x7ff8da10fb34,130420015,0,0x0,8
tick,0x7ff8da10fb34,130435082,0,0x0,8
tick,0x7ff8da10fb34,130451251,0,0x0,8
tick,0x7ff8da10fb34,130466317,0,0x0,8
tick,0x7ff8da10fb34,130481272,0,0x0,8
tick,0x7ff8da10fb34,130496492,0,0x0,8
tick,0x7ff8da10fb34,130512029,0,0x0,8
tick,0x7ff8da10fb34,130527731,0,0x0,8
tick,0x7ff8da10fb34,130543306,0,0x0,8
tick,0x7ff8da10fb34,130559270,0,0x0,8
tick,0x7ff8da10fb34,130574257,0,0x0,8
tick,0x7ff8da10fb34,130589408,0,0x0,8
tick,0x7ff8da10fb34,130605146,0,0x0,8
tick,0x7ff8da10fb34,130621098,0,0x0,8
tick,0x7ff8da10fb34,130636232,0,0x0,8
tick,0x7ff8da10fb34,130651970,0,0x0,8
tick,0x7ff8da10fb34,130666922,0,0x0,8
tick,0x7ff8da10fb34,130682641,0,0x0,8
tick,0x7ff8da10fb34,130698365,0,0x0,8
tick,0x7ff8da10fb34,130713913,0,0x0,8
tick,0x7ff8da10fb34,130729521,0,0x0,8
tick,0x7ff8da10fb34,130745211,0,0x0,8
tick,0x7ff8da10fb34,130761093,0,0x0,8
tick,0x7ff8da10fb34,130776448,0,0x0,8
tick,0x7ff8da10fb34,130791281,0,0x0,8
tick,0x7ff8da10fb34,130807319,0,0x0,8
tick,0x7ff8da10fb34,130823261,0,0x0,8
tick,0x7ff8da10fb34,130838995,0,0x0,8
tick,0x7ff8da10fb34,130854652,0,0x0,8
tick,0x7ff8da10fb34,130870248,0,0x0,8
tick,0x7ff8da10fb34,130886235,0,0x0,8
tick,0x7ff8da10fb34,130902216,0,0x0,8
tick,0x7ff8da10fb34,130917223,0,0x0,8
tick,0x7ff8da10fb34,130932431,0,0x0,8
tick,0x7ff8da10fb34,130947395,0,0x0,8
tick,0x7ff8da10fb34,130962773,0,0x0,8
tick,0x7ff8da10fb34,130978503,0,0x0,8
tick,0x7ff8da10fb34,130994404,0,0x0,8
tick,0x7ff8da10fb34,131009268,0,0x0,8
tick,0x7ff8da10fb34,131025173,0,0x0,8
tick,0x7ff8da10fb34,131040805,0,0x0,8
tick,0x7ff8da10fb34,131056315,0,0x0,8
tick,0x7ff8da10fb34,131071246,0,0x0,8
tick,0x7ff8da10fb34,131086189,0,0x0,8
tick,0x7ff8da10fb34,131102227,0,0x0,8
tick,0x7ff8da10fb34,131117085,0,0x0,8
tick,0x7ff8da10fb34,131132089,0,0x0,8
tick,0x7ff8da10fb34,131147185,0,0x0,8
tick,0x7ff8da10fb34,131163138,0,0x0,8
tick,0x7ff8da10fb34,131179249,0,0x0,8
tick,0x7ff8da10fb34,131195266,0,0x0,8
tick,0x7ff8da10fb34,131210838,0,0x0,8
tick,0x7ff8da10fb34,131226175,0,0x0,8
tick,0x7ff8da10fb34,131241306,0,0x0,8
tick,0x7ff8da10fb34,131257218,0,0x0,8
tick,0x7ff8da10fb34,131273008,0,0x0,8
tick,0x7ff8da10fb34,131287555,0,0x0,8
tick,0x7ff8da10fb34,131303014,0,0x0,8
tick,0x7ff8da10fb34,131318351,0,0x0,8
tick,0x7ff8da10fb34,131333960,0,0x0,8
tick,0x7ff8da10fb34,131349781,0,0x0,8
tick,0x7ff8da10fb34,131364909,0,0x0,8
tick,0x7ff8da10fb34,131380292,0,0x0,8
tick,0x7ff8da10fb34,131395936,0,0x0,8
tick,0x7ff8da10fb34,131411573,0,0x0,8
tick,0x7ff8da10fb34,131427809,0,0x0,8
tick,0x7ff8da10fb34,131442385,0,0x0,8
tick,0x7ff8da10fb34,131457417,0,0x0,8
tick,0x7ff8da10fb34,131473386,0,0x0,8
tick,0x7ff8da10fb34,131488177,0,0x0,8
tick,0x7ff8da10fb34,131502936,0,0x0,8
tick,0x7ff8da10fb34,131518340,0,0x0,8
tick,0x7ff8da10fb34,131534155,0,0x0,8
tick,0x7ff8da10fb34,131549541,0,0x0,8
tick,0x7ff8da10fb34,131564939,0,0x0,8
tick,0x7ff8da10fb34,131580707,0,0x0,8
tick,0x7ff8da10fb34,131596109,0,0x0,8
tick,0x7ff8da10fb34,131611531,0,0x0,8
tick,0x7ff8da10fb34,131627333,0,0x0,8
tick,0x7ff8da10fb34,131642852,0,0x0,8
tick,0x7ff8da10fb34,131658808,0,0x0,8
tick,0x7ff8da10fb34,131673939,0,0x0,8
tick,0x7ff8da10fb34,131689169,0,0x0,8
tick,0x7ff8da10fb34,131705193,0,0x0,8
tick,0x7ff8da10fb34,131721257,0,0x0,8
tick,0x7ff8da10fb34,131737097,0,0x0,8
tick,0x7ff8da10fb34,131752297,0,0x0,8
tick,0x7ff8da10fb34,131767588,0,0x0,8
tick,0x7ff8da10fb34,131783010,0,0x0,8
tick,0x7ff8da10fb34,131798228,0,0x0,8
tick,0x7ff8da10fb34,131813429,0,0x0,8
tick,0x7ff8da10fb34,131829198,0,0x0,8
tick,0x7ff8da10fb34,131844775,0,0x0,8
tick,0x7ff8da10fb34,131860604,0,0x0,8
tick,0x7ff8da10fb34,131875407,0,0x0,8
tick,0x7ff8da10fb34,131890729,0,0x0,8
tick,0x7ff8da10fb34,131906212,0,0x0,8
tick,0x7ff8da10fb34,131921239,0,0x0,8
tick,0x7ff8da10fb34,131936878,0,0x0,8
tick,0x7ff8da10fb34,131952170,0,0x0,8
tick,0x7ff8da10fb34,131967279,0,0x0,8
tick,0x7ff8da10fb34,131983042,0,0x0,8
tick,0x7ff8da10fb34,131998785,0,0x0,8
tick,0x7ff8da10fb34,132014355,0,0x0,8
tick,0x7ff8da10fb34,132029553,0,0x0,8
tick,0x7ff8da10fb34,132044678,0,0x0,8
tick,0x7ff8da10fb34,132060356,0,0x0,8
tick,0x7ff8da10fb34,132076806,0,0x0,8
tick,0x7ff8da10fb34,132091675,0,0x0,8
tick,0x7ff8da10fb34,132107187,0,0x0,8
tick,0x7ff8da10fb34,132122328,0,0x0,8
tick,0x7ff8da10fb34,132138102,0,0x0,8
tick,0x7ff8da10fb34,132154033,0,0x0,8
tick,0x7ff8da10fb34,132168970,0,0x0,8
tick,0x7ff8da10fb34,132185037,0,0x0,8
tick,0x7ff8da10fb34,132199953,0,0x0,8
tick,0x7ff8da10fb34,132215120,0,0x0,8
tick,0x7ff8da10fb34,132230920,0,0x0,8
tick,0x7ff8da10fb34,132246177,0,0x0,8
tick,0x7ff8da10fb34,132262259,0,0x0,8
tick,0x7ff8da10fb34,132278161,0,0x0,8
tick,0x7ff8da10fb34,132293798,0,0x0,8
tick,0x7ff8da10fb34,132309757,0,0x0,8
tick,0x7ff8da10fb34,132325248,0,0x0,8
tick,0x7ff8da10fb34,132340351,0,0x0,8
tick,0x7ff8da10fb34,132356232,0,0x0,8
tick,0x7ff8da10fb34,132372274,0,0x0,8
tick,0x7ff8da10fb34,132387131,0,0x0,8
tick,0x7ff8da10fb34,132402249,0,0x0,8
tick,0x7ff8da10fb34,132417592,0,0x0,8
tick,0x7ff8da10fb34,132433328,0,0x0,8
tick,0x7ff8da10fb34,132448516,0,0x0,8
tick,0x7ff8da10fb34,132463263,0,0x0,8
tick,0x7ff8da10fb34,132478175,0,0x0,8
tick,0x7ff8da10fb34,132493687,0,0x0,8
tick,0x7ff8da10fb34,132508648,0,0x0,8
tick,0x7ff8da10fb34,132524267,0,0x0,8
tick,0x7ff8da10fb34,132539443,0,0x0,8
tick,0x7ff8da10fb34,132555039,0,0x0,8
tick,0x7ff8da10fb34,132570298,0,0x0,8
tick,0x7ff8da10fb34,132586229,0,0x0,8
tick,0x7ff8da10fb34,132602250,0,0x0,8
tick,0x7ff8da10fb34,132616911,0,0x0,8
tick,0x7ff8da10fb34,132632221,0,0x0,8
tick,0x7ff8da10fb34,132647422,0,0x0,8
tick,0x7ff8da10fb34,132663051,0,0x0,8
tick,0x7ff8da10fb34,132678164,0,0x0,8
tick,0x7ff8da10fb34,132693750,0,0x0,8
tick,0x7ff8da10fb34,132708569,0,0x0,8
tick,0x7ff8da10fb34,132724242,0,0x0,8
tick,0x7ff8da10fb34,132739452,0,0x0,8
tick,0x7ff8da10fb34,132755170,0,0x0,8
tick,0x7ff8da10fb34,132770701,0,0x0,8
tick,0x7ff8da10fb34,132786208,0,0x0,8
tick,0x7ff8da10fb34,132802332,0,0x0,8
tick,0x7ff8da10fb34,132817975,0,0x0,8
tick,0x7ff8da10fb34,132833199,0,0x0,8
tick,0x7ff8da10fb34,132848421,0,0x0,8
tick,0x7ff8da10fb34,132863936,0,0x0,8
tick,0x7ff8da10fb34,132879236,0,0x0,8
tick,0x7ff8da10fb34,132894322,0,0x0,8
tick,0x7ff8da10fb34,132910072,0,0x0,8
tick,0x7ff8da10fb34,132925123,0,0x0,8
tick,0x7ff8da10fb34,132940354,0,0x0,8
tick,0x7ff8da10fb34,132956253,0,0x0,8
tick,0x7ff8da10fb34,132972260,0,0x0,8
tick,0x7ff8da10fb34,132987682,0,0x0,8
tick,0x7ff8da10fb34,133003443,0,0x0,8
tick,0x7ff8da10fb34,133018988,0,0x0,8
tick,0x7ff8da10fb34,133034250,0,0x0,8
tick,0x7ff8da10fb34,133049667,0,0x0,8
tick,0x7ff8da10fb34,133065195,0,0x0,8
tick,0x7ff8da10fb34,133080940,0,0x0,8
tick,0x7ff8da10fb34,133096237,0,0x0,8
tick,0x7ff8da10fb34,133111879,0,0x0,8
tick,0x7ff8da10fb34,133127244,0,0x0,8
tick,0x7ff8da10fb34,133143857,0,0x0,8
tick,0x7ff8da10fb34,133159103,0,0x0,8
tick,0x7ff8da10fb34,133175470,0,0x0,8
tick,0x7ff8da10fb34,133190439,0,0x0,8
tick,0x7ff8da10fb34,133206234,0,0x0,8
tick,0x7ff8da10fb34,133221244,0,0x0,8
tick,0x7ff8da10fb34,133237227,0,0x0,8
tick,0x7ff8da10fb34,133252483,0,0x0,8
tick,0x7ff8da10fb34,133268069,0,0x0,8
tick,0x7ff8da10fb34,133284046,0,0x0,8
tick,0x7ff8da10fb34,133300451,0,0x0,8
tick,0x7ff8da10fb34,133316001,0,0x0,8
tick,0x7ff8da10fb34,133330865,0,0x0,8
tick,0x7ff8da10fb34,133345969,0,0x0,8
tick,0x7ff8da10fb34,133361673,0,0x0,8
tick,0x7ff8da10fb34,133377410,0,0x0,8
tick,0x7ff8da10fb34,133393355,0,0x0,8
tick,0x7ff8da10fb34,133409444,0,0x0,8
tick,0x7ff8da10fb34,133425428,0,0x0,8
tick,0x7ff8da10fb34,133441358,0,0x0,8
tick,0x7ff8da10fb34,133457322,0,0x0,8
tick,0x7ff8da10fb34,133473373,0,0x0,8
tick,0x7ff8da10fb34,133488315,0,0x0,8
tick,0x7ff8da10fb34,133503305,0,0x0,8
tick,0x7ff8da10fb34,133518318,0,0x0,8
tick,0x7ff8da10fb34,133533183,0,0x0,8
tick,0x7ff8da10fb34,133549198,0,0x0,8
tick,0x7ff8da10fb34,133565207,0,0x0,8
tick,0x7ff8da10fb34,133581189,0,0x0,8
tick,0x7ff8da10fb34,133597162,0,0x0,8
tick,0x7ff8da10fb34,133613160,0,0x0,8
tick,0x7ff8da10fb34,133628160,0,0x0,8
tick,0x7ff8da10fb34,133643171,0,0x0,8
tick,0x7ff8da10fb34,133658539,0,0x0,8
tick,0x7ff8da10fb34,133673886,0,0x0,8
tick,0x7ff8da10fb34,133689182,0,0x0,8
tick,0x7ff8da10fb34,133704583,0,0x0,8
tick,0x7ff8da10fb34,133720115,0,0x0,8
tick,0x7ff8da10fb34,133735094,0,0x0,8
tick,0x7ff8da10fb34,133750522,0,0x0,8
tick,0x7ff8da10fb34,133766106,0,0x0,8
tick,0x7ff8da10fb34,133781207,0,0x0,8
tick,0x7ff8da10fb34,133796987,0,0x0,8
tick,0x7ff8da10fb34,133812702,0,0x0,8
tick,0x7ff8da10fb34,133828223,0,0x0,8
tick,0x7ff8da10fb34,133843155,0,0x0,8
tick,0x7ff8da10fb34,133858199,0,0x0,8
tick,0x7ff8da10fb34,133874521,0,0x0,8
tick,0x7ff8da10fb34,133889975,0,0x0,8
tick,0x7ff8da10fb34,133905228,0,0x0,8
tick,0x7ff8da10fb34,133920374,0,0x0,8
tick,0x7ff8da10fb34,133936181,0,0x0,8
tick,0x7ff8da10fb34,133951159,0,0x0,8
tick,0x7ff8da10fb34,133967222,0,0x0,8
tick,0x7ff8da10fb34,133982223,0,0x0,8
tick,0x7ff8da10fb34,133997894,0,0x0,8
tick,0x7ff8da10fb34,134013406,0,0x0,8
tick,0x7ff8da10fb34,134028188,0,0x0,8
tick,0x7ff8da10fb34,134043847,0,0x0,8
tick,0x7ff8da10fb34,134059702,0,0x0,8
tick,0x7ff8da10fb34,134075176,0,0x0,8
tick,0x7ff8da10fb34,134091239,0,0x0,8
tick,0x7ff8da10fb34,134106168,0,0x0,8
tick,0x7ff8da10fb34,134122221,0,0x0,8
tick,0x7ff8da10fb34,134137115,0,0x0,8
tick,0x7ff8da10fb34,134152092,0,0x0,8
tick,0x7ff8da10fb34,134168023,0,0x0,8
tick,0x7ff8da10fb34,134183104,0,0x0,8
tick,0x7ff8da10fb34,134198570,0,0x0,8
tick,0x7ff8da10fb34,134213853,0,0x0,8
tick,0x7ff8da10fb34,134229182,0,0x0,8
tick,0x7ff8da10fb34,134245148,0,0x0,8
tick,0x7ff8da10fb34,134260554,0,0x0,8
tick,0x7ff8da10fb34,134276519,0,0x0,8
tick,0x7ff8da10fb34,134291221,0,0x0,8
tick,0x7ff8da10fb34,134307591,0,0x0,8
tick,0x7ff8da10fb34,134322244,0,0x0,8
tick,0x7ff8da10fb34,134338081,0,0x0,8
tick,0x7ff8da10fb34,134353716,0,0x0,8
tick,0x7ff8da10fb34,134369476,0,0x0,8
tick,0x7ff8da10fb34,134385153,0,0x0,8
tick,0x7ff8da10fb34,134401231,0,0x0,8
tick,0x7ff8da10fb34,134417153,0,0x0,8
tick,0x7ff8da10fb34,134433284,0,0x0,8
tick,0x7ff8da10fb34,134448074,0,0x0,8
tick,0x7ff8da10fb34,134463175,0,0x0,8
tick,0x7ff8da10fb34,134479099,0,0x0,8
tick,0x7ff8da10fb34,134494657,0,0x0,8
tick,0x7ff8da10fb34,134510318,0,0x0,8
tick,0x7ff8da10fb34,134526491,0,0x0,8
tick,0x7ff8da10fb34,134541243,0,0x0,8
tick,0x7ff8da10fb34,134556921,0,0x0,8
tick,0x7ff8da10fb34,134572164,0,0x0,8
tick,0x7ff8da10fb34,134587317,0,0x0,8
tick,0x7ff8da10fb34,134603254,0,0x0,8
tick,0x7ff8da10fb34,134618078,0,0x0,8
tick,0x7ff8da10fb34,134632938,0,0x0,8
tick,0x7ff8da10fb34,134648499,0,0x0,8
tick,0x7ff8da10fb34,134663685,0,0x0,8
tick,0x7ff8da10fb34,134678986,0,0x0,8
tick,0x7ff8da10fb34,134694620,0,0x0,8
tick,0x7ff8da10fb34,134710543,0,0x0,8
tick,0x7ff8da10fb34,134726248,0,0x0,8
tick,0x7ff8da10fb34,134741290,0,0x0,8
tick,0x7ff8da10fb34,134757688,0,0x0,8
tick,0x7ff8da10fb34,134773255,0,0x0,8
tick,0x7ff8da10fb34,134787645,0,0x0,8
tick,0x7ff8da10fb34,134803707,0,0x0,8
tick,0x7ff8da10fb34,134818968,0,0x0,8
tick,0x7ff8da10fb34,134834212,0,0x0,8
tick,0x7ff8da10fb34,134849713,0,0x0,8
tick,0x7ff8da10fb34,134864979,0,0x0,8
tick,0x7ff8da10fb34,134880193,0,0x0,8
tick,0x7ff8da10fb34,134896274,0,0x0,8
tick,0x7ff8da10fb34,134911658,0,0x0,8
tick,0x7ff8da10fb34,134926755,0,0x0,8
tick,0x7ff8da10fb34,134942749,0,0x0,8
tick,0x7ff8da10fb34,134958581,0,0x0,8
tick,0x7ff8da10fb34,134974236,0,0x0,8
tick,0x7ff8da10fb34,134989110,0,0x0,8
tick,0x7ff8da10fb34,135004443,0,0x0,8
tick,0x7ff8da10fb34,135019849,0,0x0,8
tick,0x7ff8da10fb34,135035164,0,0x0,8
tick,0x7ff8da10fb34,135050397,0,0x0,8
tick,0x7ff8da10fb34,135066223,0,0x0,8
tick,0x7ff8da10fb34,135082226,0,0x0,8
tick,0x7ff8da10fb34,135098153,0,0x0,8
tick,0x7ff8da10fb34,135113393,0,0x0,8
tick,0x7ff8da10fb34,135128556,0,0x0,8
tick,0x7ff8da10fb34,135144549,0,0x0,8
tick,0x7ff8da10fb34,135160549,0,0x0,8
tick,0x7ff8da10fb34,135176656,0,0x0,8
tick,0x7ff8da10fb34,135192537,0,0x0,8
tick,0x7ff8da10fb34,135207953,0,0x0,8
tick,0x7ff8da10fb34,135223155,0,0x0,8
tick,0x7ff8da10fb34,135238494,0,0x0,8
tick,0x7ff8da10fb34,135254465,0,0x0,8
tick,0x7ff8da10fb34,135270169,0,0x0,8
tick,0x7ff8da10fb34,135286260,0,0x0,8
tick,0x7ff8da10fb34,135302214,0,0x0,8
tick,0x7ff8da10fb34,135316987,0,0x0,8
tick,0x7ff8da10fb34,135332223,0,0x0,8
tick,0x7ff8da10fb34,135347549,0,0x0,8
tick,0x7ff8da10fb34,135362715,0,0x0,8
tick,0x7ff8da10fb34,135378221,0,0x0,8
tick,0x7ff8da10fb34,135394208,0,0x0,8
tick,0x7ff8da10fb34,135409740,0,0x0,8
tick,0x7ff8da10fb34,135425667,0,0x0,8
tick,0x7ff8da10fb34,135441253,0,0x0,8
tick,0x7ff8da10fb34,135457393,0,0x0,8
tick,0x7ff8da10fb34,135472254,0,0x0,8
tick,0x7ff8da10fb34,135487360,0,0x0,8
tick,0x7ff8da10fb34,135502257,0,0x0,8
tick,0x7ff8da10fb34,135518244,0,0x0,8
tick,0x7ff8da10fb34,135533593,0,0x0,8
tick,0x7ff8da10fb34,135549439,0,0x0,8
tick,0x7ff8da10fb34,135564968,0,0x0,8
tick,0x7ff8da10fb34,135581006,0,0x0,8
tick,0x7ff8da10fb34,135596177,0,0x0,8
tick,0x7ff8da10fb34,135611220,0,0x0,8
tick,0x7ff8da10fb34,135626493,0,0x0,8
tick,0x7ff8da10fb34,135642381,0,0x0,8
tick,0x7ff8da10fb34,135657334,0,0x0,8
tick,0x7ff8da10fb34,135671974,0,0x0,8
tick,0x7ff8da10fb34,135687267,0,0x0,8
tick,0x7ff8da10fb34,135703278,0,0x0,8
tick,0x7ff8da10fb34,135718282,0,0x0,8
tick,0x7ff8da10fb34,135733217,0,0x0,8
tick,0x7ff8da10fb34,135748438,0,0x0,8
tick,0x7ff8da10fb34,135764083,0,0x0,8
tick,0x7ff8da10fb34,135779515,0,0x0,8
tick,0x7ff8da10fb34,135794337,0,0x0,8
tick,0x7ff8da10fb34,135809535,0,0x0,8
tick,0x7ff8da10fb34,135824395,0,0x0,8
tick,0x7ff8da10fb34,135839293,0,0x0,8
tick,0x7ff8da10fb34,135854478,0,0x0,8
tick,0x7ff8da10fb34,135870217,0,0x0,8
tick,0x7ff8da10fb34,135885133,0,0x0,8
tick,0x7ff8da10fb34,135900252,0,0x0,8
tick,0x7ff8da10fb34,135916281,0,0x0,8
tick,0x7ff8da10fb34,135931232,0,0x0,8
tick,0x7ff8da10fb34,135947089,0,0x0,8
tick,0x7ff8da10fb34,135962312,0,0x0,8
tick,0x7ff8da10fb34,135977333,0,0x0,8
tick,0x7ff8da10fb34,135993118,0,0x0,8
tick,0x7ff8da10fb34,136009190,0,0x0,8
tick,0x7ff8da10fb34,136024330,0,0x0,8
tick,0x7ff8da10fb34,136039599,0,0x0,8
tick,0x7ff8da10fb34,136055285,0,0x0,8
tick,0x7ff8da10fb34,136071283,0,0x0,8
tick,0x7ff8da10fb34,136086215,0,0x0,8
tick,0x7ff8da10fb34,136101241,0,0x0,8
tick,0x7ff8da10fb34,136117008,0,0x0,8
tick,0x7ff8da10fb34,136132246,0,0x0,8
tick,0x7ff8da10fb34,136147354,0,0x0,8
tick,0x7ff8da10fb34,136163506,0,0x0,8
tick,0x7ff8da10fb34,136179337,0,0x0,8
tick,0x7ff8da10fb34,136195132,0,0x0,8
tick,0x7ff8da10fb34,136210271,0,0x0,8
tick,0x7ff8da10fb34,136226251,0,0x0,8
tick,0x7ff8da10fb34,136242109,0,0x0,8
tick,0x7ff8da10fb34,136257202,0,0x0,8
tick,0x7ff8da10fb34,136272272,0,0x0,8
tick,0x7ff8da10fb34,136287670,0,0x0,8
tick,0x7ff8da10fb34,136303295,0,0x0,8
tick,0x7ff8da10fb34,136318402,0,0x0,8
tick,0x7ff8da10fb34,136334195,0,0x0,8
tick,0x7ff8da10fb34,136349808,0,0x0,8
tick,0x7ff8da10fb34,136365145,0,0x0,8
tick,0x7ff8da10fb34,136380502,0,0x0,8
tick,0x7ff8da10fb34,136396252,0,0x0,8
tick,0x7ff8da10fb34,136411409,0,0x0,8
tick,0x7ff8da10fb34,136427229,0,0x0,8
tick,0x7ff8da10fb34,136442218,0,0x0,8
tick,0x7ff8da10fb34,136458367,0,0x0,8
tick,0x7ff8da10fb34,136473477,0,0x0,8
tick,0x7ff8da10fb34,136488856,0,0x0,8
tick,0x7ff8da10fb34,136504297,0,0x0,8
tick,0x7ff8da10fb34,136520095,0,0x0,8
tick,0x7ff8da10fb34,136536459,0,0x0,8
tick,0x7ff8da10fb34,136551479,0,0x0,8
tick,0x7ff8da10fb34,136567134,0,0x0,8
tick,0x7ff8da10fb34,136582083,0,0x0,8
tick,0x7ff8da10fb34,136597509,0,0x0,8
tick,0x7ff8da10fb34,136612391,0,0x0,8
tick,0x7ff8da10fb34,136628104,0,0x0,8
tick,0x7ff8da10fb34,136643270,0,0x0,8
tick,0x7ff8da10fb34,136658665,0,0x0,8
tick,0x7ff8da10fb34,136674022,0,0x0,8
tick,0x7ff8da10fb34,136689266,0,0x0,8
tick,0x7ff8da10fb34,136705265,0,0x0,8
tick,0x7ff8da10fb34,136720667,0,0x0,8
tick,0x7ff8da10fb34,136736229,0,0x0,8
tick,0x7ff8da10fb34,136752226,0,0x0,8
tick,0x7ff8da10fb34,136767523,0,0x0,8
tick,0x7ff8da10fb34,136783237,0,0x0,8
tick,0x7ff8da10fb34,136798274,0,0x0,8
tick,0x7ff8da10fb34,136813575,0,0x0,8
tick,0x7ff8da10fb34,136828858,0,0x0,8
tick,0x7ff8da10fb34,136843744,0,0x0,8
tick,0x7ff8da10fb34,136859074,0,0x0,8
tick,0x7ff8da10fb34,136875278,0,0x0,8
tick,0x7ff8da10fb34,136889934,0,0x0,8
tick,0x7ff8da10fb34,136905251,0,0x0,8
tick,0x7ff8da10fb34,136920185,0,0x0,8
tick,0x7ff8da10fb34,136936373,0,0x0,8
tick,0x7ff8da10fb34,136952201,0,0x0,8
tick,0x7ff8da10fb34,136968144,0,0x0,8
tick,0x7ff8da10fb34,136984246,0,0x0,8
tick,0x7ff8da10fb34,136998395,0,0x0,8
tick,0x7ff8da10fb34,137013751,0,0x0,8
tick,0x7ff8da10fb34,137028892,0,0x0,8
tick,0x7ff8da10fb34,137044370,0,0x0,8
tick,0x7ff8da10fb34,137060509,0,0x0,8
tick,0x7ff8da10fb34,137075910,0,0x0,8
tick,0x7ff8da10fb34,137091687,0,0x0,8
tick,0x7ff8da10fb34,137107772,0,0x0,8
tick,0x7ff8da10fb34,137122212,0,0x0,8
tick,0x7ff8da10fb34,137138025,0,0x0,8
tick,0x7ff8da10fb34,137154079,0,0x0,8
tick,0x7ff8da10fb34,137169874,0,0x0,8
tick,0x7ff8da10fb34,137185065,0,0x0,8
tick,0x7ff8da10fb34,137201261,0,0x0,8
tick,0x7ff8da10fb34,137217250,0,0x0,8
tick,0x7ff8da10fb34,137233322,0,0x0,8
tick,0x7ff8da10fb34,137248996,0,0x0,8
tick,0x7ff8da10fb34,137264134,0,0x0,8
tick,0x7ff8da10fb34,137279515,0,0x0,8
tick,0x7ff8da10fb34,137294661,0,0x0,8
tick,0x7ff8da10fb34,137310021,0,0x0,8
tick,0x7ff8da10fb34,137324846,0,0x0,8
tick,0x7ff8da10fb34,137339841,0,0x0,8
tick,0x7ff8da10fb34,137355168,0,0x0,8
tick,0x7ff8da10fb34,137370508,0,0x0,8
tick,0x7ff8da10fb34,137386147,0,0x0,8
tick,0x7ff8da10fb34,137402270,0,0x0,8
tick,0x7ff8da10fb34,137418093,0,0x0,8
tick,0x7ff8da10fb34,137434269,0,0x0,8
tick,0x7ff8da10fb34,137449570,0,0x0,8
tick,0x7ff8da10fb34,137465123,0,0x0,8
tick,0x7ff8da10fb34,137480181,0,0x0,8
tick,0x7ff8da10fb34,137496429,0,0x0,8
tick,0x7ff8da10fb34,137511890,0,0x0,8
tick,0x7ff8da10fb34,137526961,0,0x0,8
tick,0x7ff8da10fb34,137542385,0,0x0,8
tick,0x7ff8da10fb34,137558327,0,0x0,8
tick,0x7ff8da10fb34,137573564,0,0x0,8
tick,0x7ff8da10fb34,137589079,0,0x0,8
tick,0x7ff8da10fb34,137604274,0,0x0,8
tick,0x7ff8da10fb34,137619460,0,0x0,8
tick,0x7ff8da10fb34,137634192,0,0x0,8
tick,0x7ff8da10fb34,137649308,0,0x0,8
tick,0x7ff8da10fb34,137665013,0,0x0,8
tick,0x7ff8da10fb34,137680428,0,0x0,8
tick,0x7ff8da10fb34,137695236,0,0x0,8
tick,0x7ff8da10fb34,137709965,0,0x0,8
tick,0x7ff8da10fb34,137725656,0,0x0,8
tick,0x7ff8da10fb34,137741464,0,0x0,8
tick,0x7ff8da10fb34,137757132,0,0x0,8
tick,0x7ff8da10fb34,137772240,0,0x0,8
tick,0x7ff8da10fb34,137787183,0,0x0,8
tick,0x7ff8da10fb34,137802251,0,0x0,8
tick,0x7ff8da10fb34,137818119,0,0x0,8
tick,0x7ff8da10fb34,137833287,0,0x0,8
tick,0x7ff8da10fb34,137848599,0,0x0,8
tick,0x7ff8da10fb34,137863865,0,0x0,8
tick,0x7ff8da10fb34,137879125,0,0x0,8
tick,0x7ff8da10fb34,137894591,0,0x0,8
tick,0x7ff8da10fb34,137909944,0,0x0,8
tick,0x7ff8da10fb34,137925557,0,0x0,8
tick,0x7ff8da10fb34,137941274,0,0x0,8
tick,0x7ff8da10fb34,137957583,0,0x0,8
tick,0x7ff8da10fb34,137972870,0,0x0,8
tick,0x7ff8da10fb34,137988032,0,0x0,8
tick,0x7ff8da10fb34,138003235,0,0x0,8
tick,0x7ff8da10fb34,138019194,0,0x0,8
tick,0x7ff8da10fb34,138034512,0,0x0,8
tick,0x7ff8da10fb34,138049882,0,0x0,8
tick,0x7ff8da10fb34,138065170,0,0x0,8
tick,0x7ff8da10fb34,138080494,0,0x0,8
tick,0x7ff8da10fb34,138096210,0,0x0,8
tick,0x7ff8da10fb34,138111879,0,0x0,8
tick,0x7ff8da10fb34,138127476,0,0x0,8
tick,0x7ff8da10fb34,138142538,0,0x0,8
tick,0x7ff8da10fb34,138158292,0,0x0,8
tick,0x7ff8da10fb34,138174190,0,0x0,8
tick,0x7ff8da10fb34,138190393,0,0x0,8
tick,0x7ff8da10fb34,138206209,0,0x0,8
tick,0x7ff8da10fb34,138221968,0,0x0,8
tick,0x7ff8da10fb34,138237249,0,0x0,8
tick,0x7ff8da10fb34,138252371,0,0x0,8
tick,0x7ff8da10fb34,138267568,0,0x0,8
tick,0x7ff8da10fb34,138282610,0,0x0,8
tick,0x7ff8da10fb34,138298374,0,0x0,8
tick,0x7ff8da10fb34,138313643,0,0x0,8
tick,0x7ff8da10fb34,138328214,0,0x0,8
tick,0x7ff8da10fb34,138344215,0,0x0,8
tick,0x7ff8da10fb34,138360374,0,0x0,8
tick,0x7ff8da10fb34,138375792,0,0x0,8
tick,0x7ff8da10fb34,138391683,0,0x0,8
tick,0x7ff8da10fb34,138407703,0,0x0,8
tick,0x7ff8da10fb34,138423559,0,0x0,8
tick,0x7ff8da10fb34,138439643,0,0x0,8
tick,0x7ff8da10fb34,138455760,0,0x0,8
tick,0x7ff8da10fb34,138471557,0,0x0,8
tick,0x7ff8da10fb34,138486868,0,0x0,8
tick,0x7ff8da10fb34,138502826,0,0x0,8
tick,0x7ff8da10fb34,138518791,0,0x0,8
tick,0x7ff8da10fb34,138534790,0,0x0,8
tick,0x7ff8da10fb34,138550823,0,0x0,8
tick,0x7ff8da10fb34,138566770,0,0x0,8
tick,0x7ff8da10fb34,138582891,0,0x0,8
tick,0x7ff8da10fb34,138597707,0,0x0,8
tick,0x7ff8da10fb34,138612698,0,0x0,8
tick,0x7ff8da10fb34,138628869,0,0x0,8
tick,0x7ff8da10fb34,138644980,0,0x0,8
tick,0x7ff8da10fb34,138659730,0,0x0,8
tick,0x7ff8da10fb34,138675102,0,0x0,8
tick,0x7ff8da10fb34,138690701,0,0x0,8
tick,0x7ff8da10fb34,138707472,0,0x0,8
tick,0x7ff8da10fb34,138721645,0,0x0,8
tick,0x7ff8da10fb34,138736857,0,0x0,8
tick,0x7ff8da10fb34,138752223,0,0x0,8
tick,0x7ff8da10fb34,138767605,0,0x0,8
tick,0x7ff8da10fb34,138782326,0,0x0,8
tick,0x7ff8da10fb34,138797297,0,0x0,8
tick,0x7ff8da10fb34,138812543,0,0x0,8
tick,0x7ff8da10fb34,138828725,0,0x0,8
tick,0x7ff8da10fb34,138843895,0,0x0,8
tick,0x7ff8da10fb34,138860069,0,0x0,8
tick,0x7ff8da10fb34,138875284,0,0x0,8
tick,0x7ff8da10fb34,138891415,0,0x0,8
tick,0x7ff8da10fb34,138906381,0,0x0,8
tick,0x7ff8da10fb34,138921315,0,0x0,8
tick,0x7ff8da10fb34,138936699,0,0x0,8
tick,0x7ff8da10fb34,138951961,0,0x0,8
tick,0x7ff8da10fb34,138967318,0,0x0,8
tick,0x7ff8da10fb34,138982438,0,0x0,8
tick,0x7ff8da10fb34,138997901,0,0x0,8
tick,0x7ff8da10fb34,139012966,0,0x0,8
tick,0x7ff8da10fb34,139028401,0,0x0,8
tick,0x7ff8da10fb34,139044066,0,0x0,8
tick,0x7ff8da10fb34,139059597,0,0x0,8
tick,0x7ff8da10fb34,139075170,0,0x0,8
tick,0x7ff8da10fb34,139091357,0,0x0,8
tick,0x7ff8da10fb34,139106174,0,0x0,8
tick,0x7ff8da10fb34,139122343,0,0x0,8
tick,0x7ff8da10fb34,139137405,0,0x0,8
tick,0x7ff8da10fb34,139152411,0,0x0,8
tick,0x7ff8da10fb34,139168331,0,0x0,8
tick,0x7ff8da10fb34,139183235,0,0x0,8
tick,0x7ff8da10fb34,139198816,0,0x0,8
tick,0x7ff8da10fb34,139214257,0,0x0,8
tick,0x7ff8da10fb34,139229455,0,0x0,8
tick,0x7ff8da10fb34,139244837,0,0x0,8
tick,0x7ff8da10fb34,139260394,0,0x0,8
tick,0x7ff8da10fb34,139276184,0,0x0,8
tick,0x7ff8da10fb34,139291726,0,0x0,8
tick,0x7ff8da10fb34,139307812,0,0x0,8
tick,0x7ff8da10fb34,139323138,0,0x0,8
tick,0x7ff8da10fb34,139338192,0,0x0,8
tick,0x7ff8da10fb34,139353338,0,0x0,8
tick,0x7ff8da10fb34,139368826,0,0x0,8
tick,0x7ff8da10fb34,139384403,0,0x0,8
tick,0x7ff8da10fb34,139399701,0,0x0,8
tick,0x7ff8da10fb34,139415123,0,0x0,8
tick,0x7ff8da10fb34,139430167,0,0x0,8
tick,0x7ff8da10fb34,139446412,0,0x0,8
tick,0x7ff8da10fb34,139461324,0,0x0,8
tick,0x7ff8da10fb34,139477202,0,0x0,8
tick,0x7ff8da10fb34,139492831,0,0x0,8
tick,0x7ff8da10fb34,139508285,0,0x0,8
tick,0x7ff8da10fb34,139524010,0,0x0,8
tick,0x7ff8da10fb34,139539212,0,0x0,8
tick,0x7ff8da10fb34,139555551,0,0x0,8
tick,0x7ff8da10fb34,139570469,0,0x0,8
tick,0x7ff8da10fb34,139586621,0,0x0,8
tick,0x7ff8da10fb34,139601388,0,0x0,8
tick,0x7ff8da10fb34,139617215,0,0x0,8
tick,0x7ff8da10fb34,139632428,0,0x0,8
tick,0x7ff8da10fb34,139647284,0,0x0,8
tick,0x7ff8da10fb34,139662247,0,0x0,8
tick,0x7ff8da10fb34,139678323,0,0x0,8
tick,0x7ff8da10fb34,139693460,0,0x0,8
tick,0x7ff8da10fb34,139709386,0,0x0,8
tick,0x7ff8da10fb34,139724833,0,0x0,8
tick,0x7ff8da10fb34,139740687,0,0x0,8
tick,0x7ff8da10fb34,139756545,0,0x0,8
tick,0x7ff8da10fb34,139772109,0,0x0,8
tick,0x7ff8da10fb34,139787398,0,0x0,8
tick,0x7ff8da10fb34,139802311,0,0x0,8
tick,0x7ff8da10fb34,139818134,0,0x0,8
tick,0x7ff8da10fb34,139833260,0,0x0,8
tick,0x7ff8da10fb34,139848409,0,0x0,8
tick,0x7ff8da10fb34,139864129,0,0x0,8
tick,0x7ff8da10fb34,139879644,0,0x0,8
tick,0x7ff8da10fb34,139894359,0,0x0,8
tick,0x7ff8da10fb34,139909206,0,0x0,8
tick,0x7ff8da10fb34,139924736,0,0x0,8
tick,0x7ff8da10fb34,139940789,0,0x0,8
tick,0x7ff8da10fb34,139956255,0,0x0,8
tick,0x7ff8da10fb34,139971881,0,0x0,8
tick,0x7ff8da10fb34,139987430,0,0x0,8
tick,0x7ff8da10fb34,140003316,0,0x0,8
tick,0x7ff8da10fb34,140019317,0,0x0,8
tick,0x7ff8da10fb34,140035180,0,0x0,8
tick,0x7ff8da10fb34,140051253,0,0x0,8
tick,0x7ff8da10fb34,140066416,0,0x0,8
tick,0x7ff8da10fb34,140081666,0,0x0,8
tick,0x7ff8da10fb34,140097998,0,0x0,8
tick,0x7ff8da10fb34,140113243,0,0x0,8
tick,0x7ff8da10fb34,140129513,0,0x0,8
tick,0x7ff8da10fb34,140145425,0,0x0,8
tick,0x7ff8da10fb34,140160234,0,0x0,8
tick,0x7ff8da10fb34,140175475,0,0x0,8
tick,0x7ff8da10fb34,140191332,0,0x0,8
tick,0x7ff8da10fb34,140207403,0,0x0,8
tick,0x7ff8da10fb34,140222530,0,0x0,8
tick,0x7ff8da10fb34,140238308,0,0x0,8
tick,0x7ff8da10fb34,140253679,0,0x0,8
tick,0x7ff8da10fb34,140268380,0,0x0,8
tick,0x7ff8da10fb34,140283847,0,0x0,8
tick,0x7ff8da10fb34,140299118,0,0x0,8
tick,0x7ff8da10fb34,140314259,0,0x0,8
tick,0x7ff8da10fb34,140329710,0,0x0,8
tick,0x7ff8da10fb34,140345314,0,0x0,8
tick,0x7ff8da10fb34,140360065,0,0x0,8
tick,0x7ff8da10fb34,140375505,0,0x0,8
tick,0x7ff8da10fb34,140391383,0,0x0,8
tick,0x7ff8da10fb34,140407288,0,0x0,8
tick,0x7ff8da10fb34,140422453,0,0x0,8
tick,0x7ff8da10fb34,140438940,0,0x0,8
tick,0x7ff8da10fb34,140453952,0,0x0,8
tick,0x7ff8da10fb34,140469291,0,0x0,8
tick,0x7ff8da10fb34,140485404,0,0x0,8
tick,0x7ff8da10fb34,140500218,0,0x0,8
tick,0x7ff8da10fb34,140515369,0,0x0,8
tick,0x7ff8da10fb34,140530448,0,0x0,8
tick,0x7ff8da10fb34,140546211,0,0x0,8
tick,0x7ff8da10fb34,140562165,0,0x0,8
tick,0x7ff8da10fb34,140578272,0,0x0,8
tick,0x7ff8da10fb34,140594124,0,0x0,8
tick,0x7ff8da10fb34,140610156,0,0x0,8
tick,0x7ff8da10fb34,140625747,0,0x0,8
tick,0x7ff8da10fb34,140641193,0,0x0,8
tick,0x7ff8da10fb34,140656503,0,0x0,8
tick,0x7ff8da10fb34,140671734,0,0x0,8
tick,0x7ff8da10fb34,140686618,0,0x0,8
tick,0x7ff8da10fb34,140701293,0,0x0,8
tick,0x7ff8da10fb34,140717415,0,0x0,8
tick,0x7ff8da10fb34,140733412,0,0x0,8
tick,0x7ff8da10fb34,140748713,0,0x0,8
tick,0x7ff8da10fb34,140764230,0,0x0,8
tick,0x7ff8da10fb34,140779519,0,0x0,8
tick,0x7ff8da10fb34,140794749,0,0x0,8
tick,0x7ff8da10fb34,140810304,0,0x0,8
tick,0x7ff8da10fb34,140826223,0,0x0,8
tick,0x7ff8da10fb34,140842033,0,0x0,8
tick,0x7ff8da10fb34,140857272,0,0x0,8
tick,0x7ff8da10fb34,140872329,0,0x0,8
tick,0x7ff8da10fb34,140887337,0,0x0,8
tick,0x7ff8da10fb34,140903428,0,0x0,8
tick,0x7ff8da10fb34,140918768,0,0x0,8
tick,0x7ff8da10fb34,140934376,0,0x0,8
tick,0x7ff8da10fb34,140949845,0,0x0,8
tick,0x7ff8da10fb34,140965297,0,0x0,8
tick,0x7ff8da10fb34,140981305,0,0x0,8
tick,0x7ff8da10fb34,140997533,0,0x0,8
tick,0x7ff8da10fb34,141012852,0,0x0,8
tick,0x7ff8da10fb34,141027512,0,0x0,8
tick,0x7ff8da10fb34,141042299,0,0x0,8
tick,0x7ff8da10fb34,141058224,0,0x0,8
tick,0x7ff8da10fb34,141074238,0,0x0,8
tick,0x7ff8da10fb34,141090319,0,0x0,8
tick,0x7ff8da10fb34,141105353,0,0x0,8
tick,0x7ff8da10fb34,141120478,0,0x0,8
tick,0x7ff8da10fb34,141136580,0,0x0,8
tick,0x7ff8da10fb34,141152357,0,0x0,8
tick,0x7ff8da10fb34,141167467,0,0x0,8
tick,0x7ff8da10fb34,141183242,0,0x0,8
tick,0x7ff8da10fb34,141198538,0,0x0,8
tick,0x7ff8da10fb34,141214114,0,0x0,8
tick,0x7ff8da10fb34,141230146,0,0x0,8
tick,0x7ff8da10fb34,141246414,0,0x0,8
tick,0x7ff8da10fb34,141262308,0,0x0,8
tick,0x7ff8da10fb34,141278291,0,0x0,8
tick,0x7ff8da10fb34,141293060,0,0x0,8
tick,0x7ff8da10fb34,141308338,0,0x0,8
tick,0x7ff8da10fb34,141324288,0,0x0,8
tick,0x7ff8da10fb34,141340183,0,0x0,8
tick,0x7ff8da10fb34,141354865,0,0x0,8
tick,0x7ff8da10fb34,141370656,0,0x0,8
tick,0x7ff8da10fb34,141386488,0,0x0,8
tick,0x7ff8da10fb34,141402447,0,0x0,8
tick,0x7ff8da10fb34,141417591,0,0x0,8
tick,0x7ff8da10fb34,141433246,0,0x0,8
tick,0x7ff8da10fb34,141449236,0,0x0,8
tick,0x7ff8da10fb34,141465247,0,0x0,8
tick,0x7ff8da10fb34,141481305,0,0x0,8
tick,0x7ff8da10fb34,141497291,0,0x0,8
tick,0x7ff8da10fb34,141512285,0,0x0,8
tick,0x7ff8da10fb34,141528100,0,0x0,8
tick,0x7ff8da10fb34,141542997,0,0x0,8
tick,0x7ff8da10fb34,141558234,0,0x0,8
tick,0x7ff8da10fb34,141574279,0,0x0,8
tick,0x7ff8da10fb34,141589948,0,0x0,8
tick,0x7ff8da10fb34,141605771,0,0x0,8
tick,0x7ff8da10fb34,141621372,0,0x0,8
tick,0x7ff8da10fb34,141636415,0,0x0,8
tick,0x7ff8da10fb34,141652265,0,0x0,8
tick,0x7ff8da10fb34,141667405,0,0x0,8
tick,0x7ff8da10fb34,141683381,0,0x0,8
tick,0x7ff8da10fb34,141698126,0,0x0,8
tick,0x7ff8da10fb34,141713396,0,0x0,8
tick,0x7ff8da10fb34,141728531,0,0x0,8
tick,0x7ff8da10fb34,141743762,0,0x0,8
tick,0x7ff8da10fb34,141759173,0,0x0,8
tick,0x7ff8da10fb34,141774527,0,0x0,8
tick,0x7ff8da10fb34,141789833,0,0x0,8
tick,0x7ff8da10fb34,141805307,0,0x0,8
tick,0x7ff8da10fb34,141820716,0,0x0,8
tick,0x7ff8da10fb34,141836622,0,0x0,8
tick,0x7ff8da10fb34,141851759,0,0x0,8
tick,0x7ff8da10fb34,141867132,0,0x0,8
tick,0x7ff8da10fb34,141882304,0,0x0,8
tick,0x7ff8da10fb34,141897704,0,0x0,8
tick,0x7ff8da10fb34,141913238,0,0x0,8
tick,0x7ff8da10fb34,141928339,0,0x0,8
tick,0x7ff8da10fb34,141943439,0,0x0,8
tick,0x7ff8da10fb34,141958701,0,0x0,8
tick,0x7ff8da10fb34,141975039,0,0x0,8
tick,0x7ff8da10fb34,141990682,0,0x0,8
tick,0x7ff8da10fb34,142006723,0,0x0,8
tick,0x7ff8da10fb34,142021729,0,0x0,8
tick,0x7ff8da10fb34,142037991,0,0x0,8
tick,0x7ff8da10fb34,142052285,0,0x0,8
tick,0x7ff8da10fb34,142068265,0,0x0,8
tick,0x7ff8da10fb34,142083361,0,0x0,8
tick,0x7ff8da10fb34,142098536,0,0x0,8
tick,0x7ff8da10fb34,142114632,0,0x0,8
tick,0x7ff8da10fb34,142130128,0,0x0,8
tick,0x7ff8da10fb34,142145912,0,0x0,8
tick,0x7ff8da10fb34,142159898,0,0x0,8
tick,0x7ff8da10fb34,142175232,0,0x0,8
tick,0x7ff8da10fb34,142190862,0,0x0,8
tick,0x7ff8da10fb34,142206007,0,0x0,8
tick,0x7ff8da10fb34,142221456,0,0x0,8
tick,0x7ff8da10fb34,142237808,0,0x0,8
tick,0x7ff8da10fb34,142253247,0,0x0,8
tick,0x7ff8da10fb34,142268275,0,0x0,8
tick,0x7ff8da10fb34,142283477,0,0x0,8
tick,0x7ff8da10fb34,142298641,0,0x0,8
tick,0x7ff8da10fb34,142314300,0,0x0,8
tick,0x7ff8da10fb34,142329785,0,0x0,8
tick,0x7ff8da10fb34,142344725,0,0x0,8
tick,0x7ff8da10fb34,142360130,0,0x0,8
tick,0x7ff8da10fb34,142375327,0,0x0,8
tick,0x7ff8da10fb34,142391287,0,0x0,8
tick,0x7ff8da10fb34,142407081,0,0x0,8
tick,0x7ff8da10fb34,142422706,0,0x0,8
tick,0x7ff8da10fb34,142438427,0,0x0,8
tick,0x7ff8da10fb34,142453265,0,0x0,8
tick,0x7ff8da10fb34,142468643,0,0x0,8
tick,0x7ff8da10fb34,142484294,0,0x0,8
tick,0x7ff8da10fb34,142499260,0,0x0,8
tick,0x7ff8da10fb34,142514984,0,0x0,8
tick,0x7ff8da10fb34,142530725,0,0x0,8
tick,0x7ff8da10fb34,142546632,0,0x0,8
tick,0x7ff8da10fb34,142561544,0,0x0,8
tick,0x7ff8da10fb34,142577409,0,0x0,8
tick,0x7ff8da10fb34,142592651,0,0x0,8
tick,0x7ff8da10fb34,142608140,0,0x0,8
tick,0x7ff8da10fb34,142623739,0,0x0,8
tick,0x7ff8da10fb34,142639649,0,0x0,8
tick,0x7ff8da10fb34,142654361,0,0x0,8
tick,0x7ff8da10fb34,142669077,0,0x0,8
tick,0x7ff8da10fb34,142684336,0,0x0,8
tick,0x7ff8da10fb34,142699993,0,0x0,8
tick,0x7ff8da10fb34,142715146,0,0x0,8
tick,0x7ff8da10fb34,142730752,0,0x0,8
tick,0x7ff8da10fb34,142746264,0,0x0,8
tick,0x7ff8da10fb34,142761288,0,0x0,8
tick,0x7ff8da10fb34,142777366,0,0x0,8
tick,0x7ff8da10fb34,142792540,0,0x0,8
tick,0x7ff8da10fb34,142807782,0,0x0,8
tick,0x7ff8da10fb34,142823479,0,0x0,8
tick,0x7ff8da10fb34,142839520,0,0x0,8
tick,0x7ff8da10fb34,142854805,0,0x0,8
tick,0x7ff8da10fb34,142870038,0,0x0,8
tick,0x7ff8da10fb34,142885226,0,0x0,8
tick,0x7ff8da10fb34,142900499,0,0x0,8
tick,0x7ff8da10fb34,142916708,0,0x0,8
tick,0x7ff8da10fb34,142931290,0,0x0,8
tick,0x7ff8da10fb34,142947560,0,0x0,8
tick,0x7ff8da10fb34,142962975,0,0x0,8
tick,0x7ff8da10fb34,142978320,0,0x0,8
tick,0x7ff8da10fb34,142993238,0,0x0,8
tick,0x7ff8da10fb34,143008174,0,0x0,8
tick,0x7ff8da10fb34,143023338,0,0x0,8
tick,0x7ff8da10fb34,143039175,0,0x0,8
tick,0x7ff8da10fb34,143054385,0,0x0,8
tick,0x7ff8da10fb34,143069276,0,0x0,8
tick,0x7ff8da10fb34,143085220,0,0x0,8
tick,0x7ff8da10fb34,143099992,0,0x0,8
tick,0x7ff8da10fb34,143115151,0,0x0,8
tick,0x7ff8da10fb34,143131269,0,0x0,8
tick,0x7ff8da10fb34,143147724,0,0x0,8
tick,0x7ff8da10fb34,143161723,0,0x0,8
tick,0x7ff8da10fb34,143177360,0,0x0,8
tick,0x7ff8da10fb34,143192281,0,0x0,8
tick,0x7ff8da10fb34,143208040,0,0x0,8
tick,0x7ff8da10fb34,143223300,0,0x0,8
tick,0x7ff8da10fb34,143239437,0,0x0,8
tick,0x7ff8da10fb34,143254763,0,0x0,8
tick,0x7ff8da10fb34,143271120,0,0x0,8
tick,0x7ff8da10fb34,143288710,0,0x0,8
tick,0x7ff8da10fb34,143301743,0,0x0,8
tick,0x7ff8da10fb34,143322003,0,0x0,8
tick,0x7ff8da10fb34,143331635,0,0x0,8
tick,0x7ff8da10fb34,143347622,0,0x0,8
tick,0x7ff8da10fb34,143362485,0,0x0,8
tick,0x7ff8da10fb34,143377826,0,0x0,8
tick,0x7ff8da10fb34,143393721,0,0x0,8
tick,0x7ff8da10fb34,143408945,0,0x0,8
tick,0x7ff8da10fb34,143423799,0,0x0,8
tick,0x7ff8da10fb34,143439175,0,0x0,8
tick,0x7ff8da10fb34,143455114,0,0x0,8
tick,0x7ff8da10fb34,143471268,0,0x0,8
tick,0x7ff8da10fb34,143487275,0,0x0,8
tick,0x7ff8da10fb34,143503108,0,0x0,8
tick,0x7ff8da10fb34,143519136,0,0x0,8
tick,0x7ff8da10fb34,143535156,0,0x0,8
tick,0x7ff8da10fb34,143551082,0,0x0,8
tick,0x7ff8da10fb34,143567185,0,0x0,8
tick,0x7ff8da10fb34,143583222,0,0x0,8
tick,0x7ff8da10fb34,143599169,0,0x0,8
tick,0x7ff8da10fb34,143615061,0,0x0,8
tick,0x7ff8da10fb34,143631204,0,0x0,8
tick,0x7ff8da10fb34,143646286,0,0x0,8
tick,0x7ff8da10fb34,143661425,0,0x0,8
tick,0x7ff8da10fb34,143676204,0,0x0,8
tick,0x7ff8da10fb34,143690950,0,0x0,8
tick,0x7ff8da10fb34,143706242,0,0x0,8
tick,0x7ff8da10fb34,143722225,0,0x0,8
tick,0x7ff8da10fb34,143737673,0,0x0,8
tick,0x7ff8da10fb34,143752812,0,0x0,8
tick,0x7ff8da10fb34,143768031,0,0x0,8
tick,0x7ff8da10fb34,143783337,0,0x0,8
tick,0x7ff8da10fb34,143799145,0,0x0,8
tick,0x7ff8da10fb34,143814385,0,0x0,8
tick,0x7ff8da10fb34,143830181,0,0x0,8
tick,0x7ff8da10fb34,143845170,0,0x0,8
tick,0x7ff8da10fb34,143860473,0,0x0,8
tick,0x7ff8da10fb34,143876409,0,0x0,8
tick,0x7ff8da10fb34,143891078,0,0x0,8
tick,0x7ff8da10fb34,143906576,0,0x0,8
tick,0x7ff8da10fb34,143922197,0,0x0,8
tick,0x7ff8da10fb34,143937457,0,0x0,8
tick,0x7ff8da10fb34,143952312,0,0x0,8
tick,0x7ff8da10fb34,143967861,0,0x0,8
tick,0x7ff8da10fb34,143983271,0,0x0,8
tick,0x7ff8da10fb34,143998391,0,0x0,8
tick,0x7ff8da10fb34,144014176,0,0x0,8
tick,0x7ff8da10fb34,144029512,0,0x0,8
tick,0x7ff8da10fb34,144044644,0,0x0,8
tick,0x7ff8da10fb34,144060426,0,0x0,8
tick,0x7ff8da10fb34,144076535,0,0x0,8
tick,0x7ff8da10fb34,144091655,0,0x0,8
tick,0x7ff8da10fb34,144107104,0,0x0,8
tick,0x7ff8da10fb34,144122141,0,0x0,8
tick,0x7ff8da10fb34,144138571,0,0x0,8
tick,0x7ff8da10fb34,144157891,0,0x0,8
tick,0x7ff8da10fb34,144168723,0,0x0,8
tick,0x7ff8da10fb34,144184594,0,0x0,8
tick,0x7ff8da10fb34,144199578,0,0x0,8
tick,0x7ff8da10fb34,144215019,0,0x0,8
tick,0x7ff8da10fb34,144230308,0,0x0,8
tick,0x7ff8da10fb34,144246168,0,0x0,8
tick,0x7ff8da10fb34,144261725,0,0x0,8
tick,0x7ff8da10fb34,144277764,0,0x0,8
tick,0x7ff8da10fb34,144292992,0,0x0,8
tick,0x7ff8da10fb34,144307689,0,0x0,8
tick,0x7ff8da10fb34,144322883,0,0x0,8
tick,0x7ff8da10fb34,144338773,0,0x0,8
tick,0x7ff8da10fb34,144354335,0,0x0,8
tick,0x7ff8da10fb34,144370364,0,0x0,8
tick,0x7ff8da10fb34,144385131,0,0x0,8
tick,0x7ff8da10fb34,144400570,0,0x0,8
tick,0x7ff8da10fb34,144416250,0,0x0,8
tick,0x7ff8da10fb34,144432286,0,0x0,8
tick,0x7ff8da10fb34,144447573,0,0x0,8
tick,0x7ff8da10fb34,144463308,0,0x0,8
tick,0x7ff8da10fb34,144479149,0,0x0,8
tick,0x7ff8da10fb34,144494781,0,0x0,8
tick,0x7ff8da10fb34,144510046,0,0x0,8
tick,0x7ff8da10fb34,144525303,0,0x0,8
tick,0x7ff8da10fb34,144540523,0,0x0,8
tick,0x7ff8da10fb34,144556213,0,0x0,8
tick,0x7ff8da10fb34,144572164,0,0x0,8
tick,0x7ff8da10fb34,144587465,0,0x0,8
tick,0x7ff8da10fb34,144603445,0,0x0,8
tick,0x7ff8da10fb34,144619192,0,0x0,8
tick,0x7ff8da10fb34,144634258,0,0x0,8
tick,0x7ff8da10fb34,144649680,0,0x0,8
tick,0x7ff8da10fb34,144664670,0,0x0,8
tick,0x7ff8da10fb34,144680111,0,0x0,8
tick,0x7ff8da10fb34,144695144,0,0x0,8
tick,0x7ff8da10fb34,144710320,0,0x0,8
tick,0x7ff8da10fb34,144726174,0,0x0,8
tick,0x7ff8da10fb34,144741350,0,0x0,8
tick,0x7ff8da10fb34,144756136,0,0x0,8
tick,0x7ff8da10fb34,144771863,0,0x0,8
tick,0x7ff8da10fb34,144787285,0,0x0,8
tick,0x7ff8da10fb34,144802225,0,0x0,8
tick,0x7ff8da10fb34,144817593,0,0x0,8
tick,0x7ff8da10fb34,144833429,0,0x0,8
tick,0x7ff8da10fb34,144849215,0,0x0,8
tick,0x7ff8da10fb34,144865161,0,0x0,8
tick,0x7ff8da10fb34,144880682,0,0x0,8
tick,0x7ff8da10fb34,144896191,0,0x0,8
tick,0x7ff8da10fb34,144912290,0,0x0,8
tick,0x7ff8da10fb34,144927579,0,0x0,8
tick,0x7ff8da10fb34,144942620,0,0x0,8
tick,0x7ff8da10fb34,144958313,0,0x0,8
tick,0x7ff8da10fb34,144973865,0,0x0,8
tick,0x7ff8da10fb34,144989084,0,0x0,8
tick,0x7ff8da10fb34,145005118,0,0x0,8
tick,0x7ff8da10fb34,145020584,0,0x0,8
tick,0x7ff8da10fb34,145036762,0,0x0,8
tick,0x7ff8da10fb34,145052037,0,0x0,8
tick,0x7ff8da10fb34,145067217,0,0x0,8
tick,0x7ff8da10fb34,145082515,0,0x0,8
tick,0x7ff8da10fb34,145097832,0,0x0,8
tick,0x7ff8da10fb34,145113352,0,0x0,8
tick,0x7ff8da10fb34,145128413,0,0x0,8
tick,0x7ff8da10fb34,145144571,0,0x0,8
tick,0x7ff8da10fb34,145159770,0,0x0,8
tick,0x7ff8da10fb34,145175771,0,0x0,8
tick,0x7ff8da10fb34,145191409,0,0x0,8
tick,0x7ff8da10fb34,145207749,0,0x0,8
tick,0x7ff8da10fb34,145222500,0,0x0,8
tick,0x7ff8da10fb34,145238531,0,0x0,8
tick,0x7ff8da10fb34,145253409,0,0x0,8
tick,0x7ff8da10fb34,145268877,0,0x0,8
tick,0x7ff8da10fb34,145284258,0,0x0,8
tick,0x7ff8da10fb34,145299617,0,0x0,8
tick,0x7ff8da10fb34,145314254,0,0x0,8
tick,0x7ff8da10fb34,145329607,0,0x0,8
tick,0x7ff8da10fb34,145344611,0,0x0,8
tick,0x7ff8da10fb34,145360554,0,0x0,8
tick,0x7ff8da10fb34,145376123,0,0x0,8
tick,0x7ff8da10fb34,145391579,0,0x0,8
tick,0x7ff8da10fb34,145406779,0,0x0,8
tick,0x7ff8da10fb34,145422317,0,0x0,8
tick,0x7ff8da10fb34,145438116,0,0x0,8
tick,0x7ff8da10fb34,145453145,0,0x0,8
tick,0x7ff8da10fb34,145468458,0,0x0,8
tick,0x7ff8da10fb34,145484259,0,0x0,8
tick,0x7ff8da10fb34,145499452,0,0x0,8
tick,0x7ff8da10fb34,145514986,0,0x0,8
tick,0x7ff8da10fb34,145530293,0,0x0,8
tick,0x7ff8da10fb34,145546377,0,0x0,8
tick,0x7ff8da10fb34,145562268,0,0x0,8
tick,0x7ff8da10fb34,145577944,0,0x0,8
tick,0x7ff8da10fb34,145593413,0,0x0,8
tick,0x7ff8da10fb34,145608401,0,0x0,8
tick,0x7ff8da10fb34,145623353,0,0x0,8
tick,0x7ff8da10fb34,145638974,0,0x0,8
tick,0x7ff8da10fb34,145654830,0,0x0,8
tick,0x7ff8da10fb34,145670261,0,0x0,8
tick,0x7ff8da10fb34,145686386,0,0x0,8
tick,0x7ff8da10fb34,145702241,0,0x0,8
tick,0x7ff8da10fb34,145717452,0,0x0,8
tick,0x7ff8da10fb34,145732296,0,0x0,8
tick,0x7ff8da10fb34,145747108,0,0x0,8
tick,0x7ff8da10fb34,145763074,0,0x0,8
tick,0x7ff8da10fb34,145778676,0,0x0,8
tick,0x7ff8da10fb34,145793910,0,0x0,8
tick,0x7ff8da10fb34,145809237,0,0x0,8
tick,0x7ff8da10fb34,145824524,0,0x0,8
tick,0x7ff8da10fb34,145839878,0,0x0,8
tick,0x7ff8da10fb34,145855555,0,0x0,8
tick,0x7ff8da10fb34,145871279,0,0x0,8
tick,0x7ff8da10fb34,145887636,0,0x0,8
tick,0x7ff8da10fb34,145902766,0,0x0,8
tick,0x7ff8da10fb34,145918109,0,0x0,8
tick,0x7ff8da10fb34,145933304,0,0x0,8
tick,0x7ff8da10fb34,145948583,0,0x0,8
tick,0x7ff8da10fb34,145963740,0,0x0,8
tick,0x7ff8da10fb34,145979210,0,0x0,8
tick,0x7ff8da10fb34,145994830,0,0x0,8
tick,0x7ff8da10fb34,146010212,0,0x0,8
tick,0x7ff8da10fb34,146026145,0,0x0,8
tick,0x7ff8da10fb34,146042244,0,0x0,8
tick,0x7ff8da10fb34,146058057,0,0x0,8
tick,0x7ff8da10fb34,146073415,0,0x0,8
tick,0x7ff8da10fb34,146088727,0,0x0,8
tick,0x7ff8da10fb34,146104541,0,0x0,8
tick,0x7ff8da10fb34,146120174,0,0x0,8
tick,0x7ff8da10fb34,146136373,0,0x0,8
tick,0x7ff8da10fb34,146152522,0,0x0,8
tick,0x7ff8da10fb34,146168140,0,0x0,8
tick,0x7ff8da10fb34,146183301,0,0x0,8
tick,0x7ff8da10fb34,146198949,0,0x0,8
tick,0x7ff8da10fb34,146214252,0,0x0,8
tick,0x7ff8da10fb34,146229530,0,0x0,8
tick,0x7ff8da10fb34,146244600,0,0x0,8
tick,0x7ff8da10fb34,146260040,0,0x0,8
tick,0x7ff8da10fb34,146276181,0,0x0,8
tick,0x7ff8da10fb34,146291709,0,0x0,8
tick,0x7ff8da10fb34,146306883,0,0x0,8
tick,0x7ff8da10fb34,146322964,0,0x0,8
tick,0x7ff8da10fb34,146337981,0,0x0,8
tick,0x7ff8da10fb34,146353259,0,0x0,8
tick,0x7ff8da10fb34,146369416,0,0x0,8
tick,0x7ff8da10fb34,146384219,0,0x0,8
tick,0x7ff8da10fb34,146399402,0,0x0,8
tick,0x7ff8da10fb34,146415151,0,0x0,8
tick,0x7ff8da10fb34,146429821,0,0x0,8
tick,0x7ff8da10fb34,146445126,0,0x0,8
tick,0x7ff8da10fb34,146460881,0,0x0,8
tick,0x7ff8da10fb34,146476175,0,0x0,8
tick,0x7ff8da10fb34,146491596,0,0x0,8
tick,0x7ff8da10fb34,146507247,0,0x0,8
tick,0x7ff8da10fb34,146522935,0,0x0,8
tick,0x7ff8da10fb34,146538581,0,0x0,8
tick,0x7ff8da10fb34,146554382,0,0x0,8
tick,0x7ff8da10fb34,146569394,0,0x0,8
tick,0x7ff8da10fb34,146585175,0,0x0,8
tick,0x7ff8da10fb34,146601232,0,0x0,8
tick,0x7ff8da10fb34,146617223,0,0x0,8
tick,0x7ff8da10fb34,146633120,0,0x0,8
tick,0x7ff8da10fb34,146648169,0,0x0,8
tick,0x7ff8da10fb34,146663688,0,0x0,8
tick,0x7ff8da10fb34,146679338,0,0x0,8
tick,0x7ff8da10fb34,146695240,0,0x0,8
tick,0x7ff8da10fb34,146711054,0,0x0,8
tick,0x7ff8da10fb34,146727189,0,0x0,8
tick,0x7ff8da10fb34,146742544,0,0x0,8
tick,0x7ff8da10fb34,146758630,0,0x0,8
tick,0x7ff8da10fb34,146774060,0,0x0,8
tick,0x7ff8da10fb34,146789426,0,0x0,8
tick,0x7ff8da10fb34,146805151,0,0x0,8
tick,0x7ff8da10fb34,146820943,0,0x0,8
tick,0x7ff8da10fb34,146836238,0,0x0,8
tick,0x7ff8da10fb34,146851234,0,0x0,8
tick,0x7ff8da10fb34,146866604,0,0x0,8
tick,0x7ff8da10fb34,146882213,0,0x0,8
tick,0x7ff8da10fb34,146897220,0,0x0,8
tick,0x7ff8da10fb34,146912220,0,0x0,8
tick,0x7ff8da10fb34,146927644,0,0x0,8
tick,0x7ff8da10fb34,146943517,0,0x0,8
tick,0x7ff8da10fb34,146959298,0,0x0,8
tick,0x7ff8da10fb34,146974722,0,0x0,8
tick,0x7ff8da10fb34,146990039,0,0x0,8
tick,0x7ff8da10fb34,147004998,0,0x0,8
tick,0x7ff8da10fb34,147020923,0,0x0,8
tick,0x7ff8da10fb34,147036240,0,0x0,8
tick,0x7ff8da10fb34,147052313,0,0x0,8
tick,0x7ff8da10fb34,147067217,0,0x0,8
tick,0x7ff8da10fb34,147082240,0,0x0,8
tick,0x7ff8da10fb34,147098021,0,0x0,8
tick,0x7ff8da10fb34,147113308,0,0x0,8
tick,0x7ff8da10fb34,147128436,0,0x0,8
tick,0x7ff8da10fb34,147144506,0,0x0,8
tick,0x7ff8da10fb34,147159982,0,0x0,8
tick,0x7ff8da10fb34,147174924,0,0x0,8
tick,0x7ff8da10fb34,147190053,0,0x0,8
tick,0x7ff8da10fb34,147205975,0,0x0,8
tick,0x7ff8da10fb34,147221586,0,0x0,8
tick,0x7ff8da10fb34,147237794,0,0x0,8
tick,0x7ff8da10fb34,147252451,0,0x0,8
tick,0x7ff8da10fb34,147267228,0,0x0,8
tick,0x7ff8da10fb34,147282264,0,0x0,8
tick,0x7ff8da10fb34,147298184,0,0x0,8
tick,0x7ff8da10fb34,147314166,0,0x0,8
tick,0x7ff8da10fb34,147329172,0,0x0,8
tick,0x7ff8da10fb34,147344075,0,0x0,8
tick,0x7ff8da10fb34,147358933,0,0x0,8
tick,0x7ff8da10fb34,147374189,0,0x0,8
tick,0x7ff8da10fb34,147389837,0,0x0,8
tick,0x7ff8da10fb34,147405884,0,0x0,8
tick,0x7ff8da10fb34,147421489,0,0x0,8
tick,0x7ff8da10fb34,147437605,0,0x0,8
tick,0x7ff8da10fb34,147452435,0,0x0,8
tick,0x7ff8da10fb34,147468022,0,0x0,8
tick,0x7ff8da10fb34,147483246,0,0x0,8
tick,0x7ff8da10fb34,147498424,0,0x0,8
tick,0x7ff8da10fb34,147514257,0,0x0,8
tick,0x7ff8da10fb34,147529479,0,0x0,8
tick,0x7ff8da10fb34,147545196,0,0x0,8
tick,0x7ff8da10fb34,147560136,0,0x0,8
tick,0x7ff8da10fb34,147576074,0,0x0,8
tick,0x7ff8da10fb34,147591873,0,0x0,8
tick,0x7ff8da10fb34,147607163,0,0x0,8
tick,0x7ff8da10fb34,147622404,0,0x0,8
tick,0x7ff8da10fb34,147638204,0,0x0,8
tick,0x7ff8da10fb34,147654149,0,0x0,8
tick,0x7ff8da10fb34,147669439,0,0x0,8
tick,0x7ff8da10fb34,147684260,0,0x0,8
tick,0x7ff8da10fb34,147699251,0,0x0,8
tick,0x7ff8da10fb34,147715133,0,0x0,8
tick,0x7ff8da10fb34,147730210,0,0x0,8
tick,0x7ff8da10fb34,147745181,0,0x0,8
tick,0x7ff8da10fb34,147759928,0,0x0,8
tick,0x7ff8da10fb34,147775177,0,0x0,8
tick,0x7ff8da10fb34,147790805,0,0x0,8
tick,0x7ff8da10fb34,147806161,0,0x0,8
tick,0x7ff8da10fb34,147821399,0,0x0,8
tick,0x7ff8da10fb34,147837372,0,0x0,8
tick,0x7ff8da10fb34,147852660,0,0x0,8
tick,0x7ff8da10fb34,147868091,0,0x0,8
tick,0x7ff8da10fb34,147883216,0,0x0,8
tick,0x7ff8da10fb34,147898617,0,0x0,8
tick,0x7ff8da10fb34,147914166,0,0x0,8
tick,0x7ff8da10fb34,147929191,0,0x0,8
tick,0x7ff8da10fb34,147944759,0,0x0,8
tick,0x7ff8da10fb34,147959585,0,0x0,8
tick,0x7ff8da10fb34,147974708,0,0x0,8
tick,0x7ff8da10fb34,147989978,0,0x0,8
tick,0x7ff8da10fb34,148005602,0,0x0,8
tick,0x7ff8da10fb34,148021242,0,0x0,8
tick,0x7ff8da10fb34,148037499,0,0x0,8
tick,0x7ff8da10fb34,148052603,0,0x0,8
tick,0x7ff8da10fb34,148068604,0,0x0,8
tick,0x7ff8da10fb34,148084248,0,0x0,8
tick,0x7ff8da10fb34,148100036,0,0x0,8
tick,0x7ff8da10fb34,148116195,0,0x0,8
tick,0x7ff8da10fb34,148132206,0,0x0,8
tick,0x7ff8da10fb34,148147301,0,0x0,8
tick,0x7ff8da10fb34,148162413,0,0x0,8
tick,0x7ff8da10fb34,148178209,0,0x0,8
tick,0x7ff8da10fb34,148194143,0,0x0,8
tick,0x7ff8da10fb34,148209606,0,0x0,8
tick,0x7ff8da10fb34,148225253,0,0x0,8
tick,0x7ff8da10fb34,148240175,0,0x0,8
tick,0x7ff8da10fb34,148255499,0,0x0,8
tick,0x7ff8da10fb34,148271199,0,0x0,8
tick,0x7ff8da10fb34,148286257,0,0x0,8
tick,0x7ff8da10fb34,148301139,0,0x0,8
tick,0x7ff8da10fb34,148317217,0,0x0,8
tick,0x7ff8da10fb34,148331987,0,0x0,8
tick,0x7ff8da10fb34,148347317,0,0x0,8
tick,0x7ff8da10fb34,148363361,0,0x0,8
tick,0x7ff8da10fb34,148379361,0,0x0,8
tick,0x7ff8da10fb34,148395360,0,0x0,8
tick,0x7ff8da10fb34,148410360,0,0x0,8
tick,0x7ff8da10fb34,148425341,0,0x0,8
tick,0x7ff8da10fb34,148441351,0,0x0,8
tick,0x7ff8da10fb34,148457329,0,0x0,8
tick,0x7ff8da10fb34,148473344,0,0x0,8
tick,0x7ff8da10fb34,148488310,0,0x0,8
tick,0x7ff8da10fb34,148503307,0,0x0,8
tick,0x7ff8da10fb34,148518328,0,0x0,8
tick,0x7ff8da10fb34,148533291,0,0x0,8
tick,0x7ff8da10fb34,148549302,0,0x0,8
tick,0x7ff8da10fb34,148564342,0,0x0,8
tick,0x7ff8da10fb34,148579304,0,0x0,8
tick,0x7ff8da10fb34,148595273,0,0x0,8
tick,0x7ff8da10fb34,148610274,0,0x0,8
tick,0x7ff8da10fb34,148625258,0,0x0,8
tick,0x7ff8da10fb34,148641296,0,0x0,8
tick,0x7ff8da10fb34,148656810,0,0x0,8
tick,0x7ff8da10fb34,148673017,0,0x0,8
tick,0x7ff8da10fb34,148688217,0,0x0,8
tick,0x7ff8da10fb34,148704343,0,0x0,8
tick,0x7ff8da10fb34,148720081,0,0x0,8
tick,0x7ff8da10fb34,148736241,0,0x0,8
tick,0x7ff8da10fb34,148752567,0,0x0,8
tick,0x7ff8da10fb34,148767170,0,0x0,8
tick,0x7ff8da10fb34,148782719,0,0x0,8
tick,0x7ff8da10fb34,148797908,0,0x0,8
tick,0x7ff8da10fb34,148813148,0,0x0,8
tick,0x7ff8da10fb34,148828443,0,0x0,8
tick,0x7ff8da10fb34,148844185,0,0x0,8
tick,0x7ff8da10fb34,148859350,0,0x0,8
tick,0x7ff8da10fb34,148874936,0,0x0,8
tick,0x7ff8da10fb34,148890115,0,0x0,8
tick,0x7ff8da10fb34,148906258,0,0x0,8
tick,0x7ff8da10fb34,148920893,0,0x0,8
tick,0x7ff8da10fb34,148936133,0,0x0,8
tick,0x7ff8da10fb34,148952210,0,0x0,8
tick,0x7ff8da10fb34,148968287,0,0x0,8
tick,0x7ff8da10fb34,148984202,0,0x0,8
tick,0x7ff8da10fb34,148999476,0,0x0,8
tick,0x7ff8da10fb34,149015093,0,0x0,8
tick,0x7ff8da10fb34,149030291,0,0x0,8
tick,0x7ff8da10fb34,149046207,0,0x0,8
tick,0x7ff8da10fb34,149061024,0,0x0,8
tick,0x7ff8da10fb34,149076145,0,0x0,8
tick,0x7ff8da10fb34,149091764,0,0x0,8
tick,0x7ff8da10fb34,149107250,0,0x0,8
tick,0x7ff8da10fb34,149122157,0,0x0,8
tick,0x7ff8da10fb34,149138169,0,0x0,8
tick,0x7ff8da10fb34,149154091,0,0x0,8
tick,0x7ff8da10fb34,149169557,0,0x0,8
tick,0x7ff8da10fb34,149186295,0,0x0,8
tick,0x7ff8da10fb34,149201639,0,0x0,8
tick,0x7ff8da10fb34,149217134,0,0x0,8
tick,0x7ff8da10fb34,149233217,0,0x0,8
tick,0x7ff8da10fb34,149248567,0,0x0,8
tick,0x7ff8da10fb34,149264448,0,0x0,8
tick,0x7ff8da10fb34,149280124,0,0x0,8
tick,0x7ff8da10fb34,149296269,0,0x0,8
tick,0x7ff8da10fb34,149312218,0,0x0,8
tick,0x7ff8da10fb34,149327925,0,0x0,8
tick,0x7ff8da10fb34,149343202,0,0x0,8
tick,0x7ff8da10fb34,149358350,0,0x0,8
tick,0x7ff8da10fb34,149373992,0,0x0,8
tick,0x7ff8da10fb34,149389181,0,0x0,8
tick,0x7ff8da10fb34,149405003,0,0x0,8
tick,0x7ff8da10fb34,149420619,0,0x0,8
tick,0x7ff8da10fb34,149436848,0,0x0,8
tick,0x7ff8da10fb34,149451187,0,0x0,8
tick,0x7ff8da10fb34,149466182,0,0x0,8
tick,0x7ff8da10fb34,149482214,0,0x0,8
tick,0x7ff8da10fb34,149497560,0,0x0,8
tick,0x7ff8da10fb34,149512710,0,0x0,8
tick,0x7ff8da10fb34,149528543,0,0x0,8
tick,0x7ff8da10fb34,149544183,0,0x0,8
tick,0x7ff8da10fb34,149559663,0,0x0,8
tick,0x7ff8da10fb34,149575098,0,0x0,8
tick,0x7ff8da10fb34,149590218,0,0x0,8
tick,0x7ff8da10fb34,149606153,0,0x0,8
tick,0x7ff8da10fb34,149621596,0,0x0,8
tick,0x7ff8da10fb34,149637173,0,0x0,8
tick,0x7ff8da10fb34,149653111,0,0x0,8
tick,0x7ff8da10fb34,149668267,0,0x0,8
tick,0x7ff8da10fb34,149684615,0,0x0,8
tick,0x7ff8da10fb34,149699778,0,0x0,8
tick,0x7ff8da10fb34,149715116,0,0x0,8
tick,0x7ff8da10fb34,149730168,0,0x0,8
tick,0x7ff8da10fb34,149746204,0,0x0,8
tick,0x7ff8da10fb34,149761438,0,0x0,8
tick,0x7ff8da10fb34,149777182,0,0x0,8
tick,0x7ff8da10fb34,149792468,0,0x0,8
tick,0x7ff8da10fb34,149807866,0,0x0,8
tick,0x7ff8da10fb34,149823997,0,0x0,8
tick,0x7ff8da10fb34,149840018,0,0x0,8
tick,0x7ff8da10fb34,149855992,0,0x0,8
tick,0x7ff8da10fb34,149872279,0,0x0,8
tick,0x7ff8da10fb34,149887144,0,0x0,8
tick,0x7ff8da10fb34,149902912,0,0x0,8
tick,0x7ff8da10fb34,149918607,0,0x0,8
tick,0x7ff8da10fb34,149933645,0,0x0,8
tick,0x7ff8da10fb34,149949123,0,0x0,8
tick,0x7ff8da10fb34,149964865,0,0x0,8
tick,0x7ff8da10fb34,149980652,0,0x0,8
tick,0x7ff8da10fb34,149996328,0,0x0,8
tick,0x7ff8da10fb34,150012245,0,0x0,8
tick,0x7ff8da10fb34,150028092,0,0x0,8
tick,0x7ff8da10fb34,150044203,0,0x0,8
tick,0x7ff8da10fb34,150059567,0,0x0,8
tick,0x7ff8da10fb34,150074675,0,0x0,8
tick,0x7ff8da10fb34,150090104,0,0x0,8
tick,0x7ff8da10fb34,150106214,0,0x0,8
tick,0x7ff8da10fb34,150121813,0,0x0,8
tick,0x7ff8da10fb34,150137065,0,0x0,8
tick,0x7ff8da10fb34,150153253,0,0x0,8
tick,0x7ff8da10fb34,150169000,0,0x0,8
tick,0x7ff8da10fb34,150185396,0,0x0,8
tick,0x7ff8da10fb34,150201595,0,0x0,8
tick,0x7ff8da10fb34,150216334,0,0x0,8
tick,0x7ff8da10fb34,150232166,0,0x0,8
tick,0x7ff8da10fb34,150247549,0,0x0,8
tick,0x7ff8da10fb34,150262257,0,0x0,8
tick,0x7ff8da10fb34,150277117,0,0x0,8
tick,0x7ff8da10fb34,150292017,0,0x0,8
tick,0x7ff8da10fb34,150307234,0,0x0,8
tick,0x7ff8da10fb34,150322293,0,0x0,8
tick,0x7ff8da10fb34,150337966,0,0x0,8
tick,0x7ff8da10fb34,150353600,0,0x0,8
tick,0x7ff8da10fb34,150369665,0,0x0,8
tick,0x7ff8da10fb34,150384947,0,0x0,8
tick,0x7ff8da10fb34,150400262,0,0x0,8
tick,0x7ff8da10fb34,150416134,0,0x0,8
tick,0x7ff8da10fb34,150431214,0,0x0,8
tick,0x7ff8da10fb34,150446993,0,0x0,8
tick,0x7ff8da10fb34,150462242,0,0x0,8
tick,0x7ff8da10fb34,150477276,0,0x0,8
tick,0x7ff8da10fb34,150493244,0,0x0,8
tick,0x7ff8da10fb34,150508371,0,0x0,8
tick,0x7ff8da10fb34,150524305,0,0x0,8
tick,0x7ff8da10fb34,150538948,0,0x0,8
tick,0x7ff8da10fb34,150554514,0,0x0,8
tick,0x7ff8da10fb34,150570424,0,0x0,8
tick,0x7ff8da10fb34,150586448,0,0x0,8
tick,0x7ff8da10fb34,150601251,0,0x0,8
tick,0x7ff8da10fb34,150617574,0,0x0,8
tick,0x7ff8da10fb34,150633220,0,0x0,8
tick,0x7ff8da10fb34,150648966,0,0x0,8
tick,0x7ff8da10fb34,150664240,0,0x0,8
tick,0x7ff8da10fb34,150679173,0,0x0,8
tick,0x7ff8da10fb34,150694441,0,0x0,8
tick,0x7ff8da10fb34,150710582,0,0x0,8
tick,0x7ff8da10fb34,150726217,0,0x0,8
tick,0x7ff8da10fb34,150741210,0,0x0,8
tick,0x7ff8da10fb34,150757331,0,0x0,8
tick,0x7ff8da10fb34,150772020,0,0x0,8
tick,0x7ff8da10fb34,150787961,0,0x0,8
tick,0x7ff8da10fb34,150803437,0,0x0,8
tick,0x7ff8da10fb34,150819355,0,0x0,8
tick,0x7ff8da10fb34,150834408,0,0x0,8
tick,0x7ff8da10fb34,150849387,0,0x0,8
tick,0x7ff8da10fb34,150864619,0,0x0,8
tick,0x7ff8da10fb34,150880469,0,0x0,8
tick,0x7ff8da10fb34,150895437,0,0x0,8
tick,0x7ff8da10fb34,150910427,0,0x0,8
tick,0x7ff8da10fb34,150926545,0,0x0,8
tick,0x7ff8da10fb34,150941513,0,0x0,8
tick,0x7ff8da10fb34,150956813,0,0x0,8
tick,0x7ff8da10fb34,150971563,0,0x0,8
tick,0x7ff8da10fb34,150986685,0,0x0,8
tick,0x7ff8da10fb34,151002503,0,0x0,8
tick,0x7ff8da10fb34,151018543,0,0x0,8
tick,0x7ff8da10fb34,151033949,0,0x0,8
tick,0x7ff8da10fb34,151049426,0,0x0,8
tick,0x7ff8da10fb34,151065356,0,0x0,8
tick,0x7ff8da10fb34,151081249,0,0x0,8
tick,0x7ff8da10fb34,151097268,0,0x0,8
tick,0x7ff8da10fb34,151112201,0,0x0,8
tick,0x7ff8da10fb34,151127515,0,0x0,8
tick,0x7ff8da10fb34,151143442,0,0x0,8
tick,0x7ff8da10fb34,151159233,0,0x0,8
tick,0x7ff8da10fb34,151175000,0,0x0,8
tick,0x7ff8da10fb34,151191107,0,0x0,8
tick,0x7ff8da10fb34,151206404,0,0x0,8
tick,0x7ff8da10fb34,151222355,0,0x0,8
tick,0x7ff8da10fb34,151238418,0,0x0,8
tick,0x7ff8da10fb34,151253440,0,0x0,8
tick,0x7ff8da10fb34,151270102,0,0x0,8
tick,0x7ff8da10fb34,151284760,0,0x0,8
tick,0x7ff8da10fb34,151299490,0,0x0,8
tick,0x7ff8da10fb34,151314539,0,0x0,8
tick,0x7ff8da10fb34,151330374,0,0x0,8
tick,0x7ff8da10fb34,151346483,0,0x0,8
tick,0x7ff8da10fb34,151361281,0,0x0,8
tick,0x7ff8da10fb34,151376695,0,0x0,8
tick,0x7ff8da10fb34,151391862,0,0x0,8
tick,0x7ff8da10fb34,151407163,0,0x0,8
tick,0x7ff8da10fb34,151422403,0,0x0,8
tick,0x7ff8da10fb34,151437760,0,0x0,8
tick,0x7ff8da10fb34,151453144,0,0x0,8
tick,0x7ff8da10fb34,151468447,0,0x0,8
tick,0x7ff8da10fb34,151484549,0,0x0,8
tick,0x7ff8da10fb34,151499530,0,0x0,8
tick,0x7ff8da10fb34,151515192,0,0x0,8
tick,0x7ff8da10fb34,151530311,0,0x0,8
tick,0x7ff8da10fb34,151545257,0,0x0,8
tick,0x7ff8da10fb34,151560242,0,0x0,8
tick,0x7ff8da10fb34,151576256,0,0x0,8
tick,0x7ff8da10fb34,151591756,0,0x0,8
tick,0x7ff8da10fb34,151607287,0,0x0,8
tick,0x7ff8da10fb34,151622346,0,0x0,8
tick,0x7ff8da10fb34,151638399,0,0x0,8
tick,0x7ff8da10fb34,151654113,0,0x0,8
tick,0x7ff8da10fb34,151670061,0,0x0,8
tick,0x7ff8da10fb34,151685566,0,0x0,8
tick,0x7ff8da10fb34,151700630,0,0x0,8
tick,0x7ff8da10fb34,151716158,0,0x0,8
tick,0x7ff8da10fb34,151731453,0,0x0,8
tick,0x7ff8da10fb34,151747262,0,0x0,8
tick,0x7ff8da10fb34,151763212,0,0x0,8
tick,0x7ff8da10fb34,151779139,0,0x0,8
tick,0x7ff8da10fb34,151795131,0,0x0,8
tick,0x7ff8da10fb34,151810115,0,0x0,8
tick,0x7ff8da10fb34,151825640,0,0x0,8
tick,0x7ff8da10fb34,151841407,0,0x0,8
tick,0x7ff8da10fb34,151856960,0,0x0,8
tick,0x7ff8da10fb34,151872462,0,0x0,8
tick,0x7ff8da10fb34,151887939,0,0x0,8
tick,0x7ff8da10fb34,151902950,0,0x0,8
tick,0x7ff8da10fb34,151918682,0,0x0,8
tick,0x7ff8da10fb34,151933677,0,0x0,8
tick,0x7ff8da10fb34,151949017,0,0x0,8
tick,0x7ff8da10fb34,151964990,0,0x0,8
tick,0x7ff8da10fb34,151980494,0,0x0,8
tick,0x7ff8da10fb34,151996217,0,0x0,8
tick,0x7ff8da10fb34,152011705,0,0x0,8
tick,0x7ff8da10fb34,152027082,0,0x0,8
tick,0x7ff8da10fb34,152042204,0,0x0,8
tick,0x7ff8da10fb34,152057534,0,0x0,8
tick,0x7ff8da10fb34,152072976,0,0x0,8
tick,0x7ff8da10fb34,152088269,0,0x0,8
tick,0x7ff8da10fb34,152103870,0,0x0,8
tick,0x7ff8da10fb34,152119930,0,0x0,8
tick,0x7ff8da10fb34,152135439,0,0x0,8
tick,0x7ff8da10fb34,152151626,0,0x0,8
tick,0x7ff8da10fb34,152168961,0,0x0,8
tick,0x7ff8da10fb34,152183401,0,0x0,8
tick,0x7ff8da10fb34,152198047,0,0x0,8
tick,0x7ff8da10fb34,152213844,0,0x0,8
tick,0x7ff8da10fb34,152228517,0,0x0,8
tick,0x7ff8da10fb34,152244214,0,0x0,8
tick,0x7ff8da10fb34,152259254,0,0x0,8
tick,0x7ff8da10fb34,152274538,0,0x0,8
tick,0x7ff8da10fb34,152290074,0,0x0,8
tick,0x7ff8da10fb34,152305032,0,0x0,8
tick,0x7ff8da10fb34,152320777,0,0x0,8
tick,0x7ff8da10fb34,152336206,0,0x0,8
tick,0x7ff8da10fb34,152350895,0,0x0,8
tick,0x7ff8da10fb34,152365927,0,0x0,8
tick,0x7ff8da10fb34,152381643,0,0x0,8
tick,0x7ff8da10fb34,152396647,0,0x0,8
tick,0x7ff8da10fb34,152412597,0,0x0,8
tick,0x7ff8da10fb34,152428622,0,0x0,8
tick,0x7ff8da10fb34,152444675,0,0x0,8
tick,0x7ff8da10fb34,152460636,0,0x0,8
tick,0x7ff8da10fb34,152476054,0,0x0,8
tick,0x7ff8da10fb34,152491831,0,0x0,8
tick,0x7ff8da10fb34,152506652,0,0x0,8
tick,0x7ff8da10fb34,152522264,0,0x0,8
tick,0x7ff8da10fb34,152538198,0,0x0,8
tick,0x7ff8da10fb34,152553012,0,0x0,8
tick,0x7ff8da10fb34,152568809,0,0x0,8
tick,0x7ff8da10fb34,152584168,0,0x0,8
tick,0x7ff8da10fb34,152599055,0,0x0,8
tick,0x7ff8da10fb34,152614079,0,0x0,8
tick,0x7ff8da10fb34,152629932,0,0x0,8
tick,0x7ff8da10fb34,152644832,0,0x0,8
tick,0x7ff8da10fb34,152659601,0,0x0,8
tick,0x7ff8da10fb34,152675278,0,0x0,8
tick,0x7ff8da10fb34,152690944,0,0x0,8
tick,0x7ff8da10fb34,152707672,0,0x0,8
tick,0x7ff8da10fb34,152722263,0,0x0,8
tick,0x7ff8da10fb34,152738166,0,0x0,8
tick,0x7ff8da10fb34,152754213,0,0x0,8
tick,0x7ff8da10fb34,152769809,0,0x0,8
tick,0x7ff8da10fb34,152786271,0,0x0,8
tick,0x7ff8da10fb34,152801901,0,0x0,8
tick,0x7ff8da10fb34,152817869,0,0x0,8
tick,0x7ff8da10fb34,152832164,0,0x0,8
tick,0x7ff8da10fb34,152847784,0,0x0,8
tick,0x7ff8da10fb34,152863802,0,0x0,8
tick,0x7ff8da10fb34,152879063,0,0x0,8
tick,0x7ff8da10fb34,152894730,0,0x0,8
tick,0x7ff8da10fb34,152909955,0,0x0,8
tick,0x7ff8da10fb34,152925021,0,0x0,8
tick,0x7ff8da10fb34,152940598,0,0x0,8
tick,0x7ff8da10fb34,152956124,0,0x0,8
tick,0x7ff8da10fb34,152971301,0,0x0,8
tick,0x7ff8da10fb34,152987373,0,0x0,8
tick,0x7ff8da10fb34,153002335,0,0x0,8
tick,0x7ff8da10fb34,153018759,0,0x0,8
tick,0x7ff8da10fb34,153033812,0,0x0,8
tick,0x7ff8da10fb34,153048512,0,0x0,8
tick,0x7ff8da10fb34,153064498,0,0x0,8
tick,0x7ff8da10fb34,153079861,0,0x0,8
tick,0x7ff8da10fb34,153096004,0,0x0,8
tick,0x7ff8da10fb34,153112031,0,0x0,8
tick,0x7ff8da10fb34,153127854,0,0x0,8
tick,0x7ff8da10fb34,153143445,0,0x0,8
tick,0x7ff8da10fb34,153158842,0,0x0,8
tick,0x7ff8da10fb34,153174513,0,0x0,8
tick,0x7ff8da10fb34,153190131,0,0x0,8
tick,0x7ff8da10fb34,153205931,0,0x0,8
tick,0x7ff8da10fb34,153221069,0,0x0,8
tick,0x7ff8da10fb34,153236674,0,0x0,8
tick,0x7ff8da10fb34,153252156,0,0x0,8
tick,0x7ff8da10fb34,153269229,0,0x0,8
tick,0x7ff8da10fb34,153284893,0,0x0,8
tick,0x7ff8da10fb34,153298546,0,0x0,8
tick,0x7ff8da10fb34,153314493,0,0x0,8
tick,0x7ff8da10fb34,153330484,0,0x0,8
tick,0x7ff8da10fb34,153346988,0,0x0,8
tick,0x7ff8da10fb34,153362382,0,0x0,8
tick,0x7ff8da10fb34,153378417,0,0x0,8
tick,0x7ff8da10fb34,153394553,0,0x0,8
tick,0x7ff8da10fb34,153410399,0,0x0,8
tick,0x7ff8da10fb34,153425371,0,0x0,8
tick,0x7ff8da10fb34,153440368,0,0x0,8
tick,0x7ff8da10fb34,153456459,0,0x0,8
tick,0x7ff8da10fb34,153472339,0,0x0,8
tick,0x7ff8da10fb34,153487346,0,0x0,8
tick,0x7ff8da10fb34,153502340,0,0x0,8
tick,0x7ff8da10fb34,153518329,0,0x0,8
tick,0x7ff8da10fb34,153534327,0,0x0,8
tick,0x7ff8da10fb34,153550424,0,0x0,8
tick,0x7ff8da10fb34,153566494,0,0x0,8
tick,0x7ff8da10fb34,153582475,0,0x0,8
tick,0x7ff8da10fb34,153598385,0,0x0,8
tick,0x7ff8da10fb34,153614369,0,0x0,8
tick,0x7ff8da10fb34,153630298,0,0x0,8
tick,0x7ff8da10fb34,153646479,0,0x0,8
tick,0x7ff8da10fb34,153662296,0,0x0,8
tick,0x7ff8da10fb34,153678286,0,0x0,8
tick,0x7ff8da10fb34,153693501,0,0x0,8
tick,0x7ff8da10fb34,153708437,0,0x0,8
tick,0x7ff8da10fb34,153723694,0,0x0,8
tick,0x7ff8da10fb34,153739564,0,0x0,8
tick,0x7ff8da10fb34,153754347,0,0x0,8
tick,0x7ff8da10fb34,153769972,0,0x0,8
tick,0x7ff8da10fb34,153785528,0,0x0,8
tick,0x7ff8da10fb34,153801178,0,0x0,8
tick,0x7ff8da10fb34,153817098,0,0x0,8
tick,0x7ff8da10fb34,153832939,0,0x0,8
tick,0x7ff8da10fb34,153848391,0,0x0,8
tick,0x7ff8da10fb34,153863641,0,0x0,8
tick,0x7ff8da10fb34,153878863,0,0x0,8
tick,0x7ff8da10fb34,153894402,0,0x0,8
tick,0x7ff8da10fb34,153909662,0,0x0,8
tick,0x7ff8da10fb34,153924789,0,0x0,8
tick,0x7ff8da10fb34,153940461,0,0x0,8
tick,0x7ff8da10fb34,153955159,0,0x0,8
tick,0x7ff8da10fb34,153970168,0,0x0,8
tick,0x7ff8da10fb34,153985588,0,0x0,8
tick,0x7ff8da10fb34,154001170,0,0x0,8
tick,0x7ff8da10fb34,154016323,0,0x0,8
tick,0x7ff8da10fb34,154031289,0,0x0,8
tick,0x7ff8da10fb34,154047376,0,0x0,8
tick,0x7ff8da10fb34,154062170,0,0x0,8
tick,0x7ff8da10fb34,154077743,0,0x0,8
tick,0x7ff8da10fb34,154092429,0,0x0,8
tick,0x7ff8da10fb34,154107095,0,0x0,8
tick,0x7ff8da10fb34,154122543,0,0x0,8
tick,0x7ff8da10fb34,154137983,0,0x0,8
tick,0x7ff8da10fb34,154153036,0,0x0,8
tick,0x7ff8da10fb34,154168736,0,0x0,8
tick,0x7ff8da10fb34,154183992,0,0x0,8
tick,0x7ff8da10fb34,154199145,0,0x0,8
tick,0x7ff8da10fb34,154214464,0,0x0,8
tick,0x7ff8da10fb34,154230326,0,0x0,8
tick,0x7ff8da10fb34,154246183,0,0x0,8
tick,0x7ff8da10fb34,154262180,0,0x0,8
tick,0x7ff8da10fb34,154277167,0,0x0,8
tick,0x7ff8da10fb34,154292166,0,0x0,8
tick,0x7ff8da10fb34,154307669,0,0x0,8
tick,0x7ff8da10fb34,154322570,0,0x0,8
tick,0x7ff8da10fb34,154338232,0,0x0,8
tick,0x7ff8da10fb34,154353656,0,0x0,8
tick,0x7ff8da10fb34,154369618,0,0x0,8
tick,0x7ff8da10fb34,154385303,0,0x0,8
tick,0x7ff8da10fb34,154401058,0,0x0,8
tick,0x7ff8da10fb34,154416084,0,0x0,8
tick,0x7ff8da10fb34,154431206,0,0x0,8
tick,0x7ff8da10fb34,154447120,0,0x0,8
tick,0x7ff8da10fb34,154462174,0,0x0,8
tick,0x7ff8da10fb34,154477172,0,0x0,8
tick,0x7ff8da10fb34,154492200,0,0x0,8
tick,0x7ff8da10fb34,154507051,0,0x0,8
tick,0x7ff8da10fb34,154522260,0,0x0,8
tick,0x7ff8da10fb34,154537287,0,0x0,8
tick,0x7ff8da10fb34,154552685,0,0x0,8
tick,0x7ff8da10fb34,154568486,0,0x0,8
tick,0x7ff8da10fb34,154583563,0,0x0,8
tick,0x7ff8da10fb34,154599539,0,0x0,8
tick,0x7ff8da10fb34,154614420,0,0x0,8
tick,0x7ff8da10fb34,154630547,0,0x0,8
tick,0x7ff8da10fb34,154646508,0,0x0,8
tick,0x7ff8da10fb34,154661203,0,0x0,8
tick,0x7ff8da10fb34,154676444,0,0x0,8
tick,0x7ff8da10fb34,154692632,0,0x0,8
tick,0x7ff8da10fb34,154707799,0,0x0,8
tick,0x7ff8da10fb34,154723742,0,0x0,8
tick,0x7ff8da10fb34,154739492,0,0x0,8
tick,0x7ff8da10fb34,154754428,0,0x0,8
tick,0x7ff8da10fb34,154769449,0,0x0,8
tick,0x7ff8da10fb34,154785195,0,0x0,8
tick,0x7ff8da10fb34,154800964,0,0x0,8
tick,0x7ff8da10fb34,154816334,0,0x0,8
tick,0x7ff8da10fb34,154832261,0,0x0,8
tick,0x7ff8da10fb34,154847244,0,0x0,8
tick,0x7ff8da10fb34,154863241,0,0x0,8
tick,0x7ff8da10fb34,154878096,0,0x0,8
tick,0x7ff8da10fb34,154893092,0,0x0,8
tick,0x7ff8da10fb34,154908530,0,0x0,8
tick,0x7ff8da10fb34,154924702,0,0x0,8
tick,0x7ff8da10fb34,154939464,0,0x0,8
tick,0x7ff8da10fb34,154954325,0,0x0,8
tick,0x7ff8da10fb34,154970230,0,0x0,8
tick,0x7ff8da10fb34,154986174,0,0x0,8
tick,0x7ff8da10fb34,155001633,0,0x0,8
tick,0x7ff8da10fb34,155017159,0,0x0,8
tick,0x7ff8da10fb34,155032445,0,0x0,8
tick,0x7ff8da10fb34,155048465,0,0x0,8
tick,0x7ff8da10fb34,155063926,0,0x0,8
tick,0x7ff8da10fb34,155079696,0,0x0,8
tick,0x7ff8da10fb34,155095008,0,0x0,8
tick,0x7ff8da10fb34,155110349,0,0x0,8
tick,0x7ff8da10fb34,155126176,0,0x0,8
tick,0x7ff8da10fb34,155142239,0,0x0,8
tick,0x7ff8da10fb34,155157297,0,0x0,8
tick,0x7ff8da10fb34,155172261,0,0x0,8
tick,0x7ff8da10fb34,155188233,0,0x0,8
tick,0x7ff8da10fb34,155203759,0,0x0,8
tick,0x7ff8da10fb34,155219212,0,0x0,8
tick,0x7ff8da10fb34,155235330,0,0x0,8
tick,0x7ff8da10fb34,155249594,0,0x0,8
tick,0x7ff8da10fb34,155265299,0,0x0,8
tick,0x7ff8da10fb34,155280952,0,0x0,8
tick,0x7ff8da10fb34,155296284,0,0x0,8
tick,0x7ff8da10fb34,155312303,0,0x0,8
tick,0x7ff8da10fb34,155327599,0,0x0,8
tick,0x7ff8da10fb34,155342909,0,0x0,8
tick,0x7ff8da10fb34,155358199,0,0x0,8
tick,0x7ff8da10fb34,155373957,0,0x0,8
tick,0x7ff8da10fb34,155389817,0,0x0,8
tick,0x7ff8da10fb34,155405496,0,0x0,8
tick,0x7ff8da10fb34,155420180,0,0x0,8
tick,0x7ff8da10fb34,155435859,0,0x0,8
tick,0x7ff8da10fb34,155451465,0,0x0,8
tick,0x7ff8da10fb34,155467197,0,0x0,8
tick,0x7ff8da10fb34,155482782,0,0x0,8
tick,0x7ff8da10fb34,155498930,0,0x0,8
tick,0x7ff8da10fb34,155513217,0,0x0,8
tick,0x7ff8da10fb34,155528618,0,0x0,8
tick,0x7ff8da10fb34,155544095,0,0x0,8
tick,0x7ff8da10fb34,155559190,0,0x0,8
tick,0x7ff8da10fb34,155575029,0,0x0,8
tick,0x7ff8da10fb34,155590647,0,0x0,8
tick,0x7ff8da10fb34,155606140,0,0x0,8
tick,0x7ff8da10fb34,155622083,0,0x0,8
tick,0x7ff8da10fb34,155637936,0,0x0,8
tick,0x7ff8da10fb34,155653241,0,0x0,8
tick,0x7ff8da10fb34,155668251,0,0x0,8
tick,0x7ff8da10fb34,155683758,0,0x0,8
tick,0x7ff8da10fb34,155699400,0,0x0,8
tick,0x7ff8da10fb34,155714198,0,0x0,8
tick,0x7ff8da10fb34,155729529,0,0x0,8
tick,0x7ff8da10fb34,155745468,0,0x0,8
tick,0x7ff8da10fb34,155761348,0,0x0,8
tick,0x7ff8da10fb34,155777248,0,0x0,8
tick,0x7ff8da10fb34,155792434,0,0x0,8
tick,0x7ff8da10fb34,155808765,0,0x0,8
tick,0x7ff8da10fb34,155823539,0,0x0,8
tick,0x7ff8da10fb34,155839230,0,0x0,8
tick,0x7ff8da10fb34,155854376,0,0x0,8
tick,0x7ff8da10fb34,155869097,0,0x0,8
tick,0x7ff8da10fb34,155884487,0,0x0,8
tick,0x7ff8da10fb34,155900303,0,0x0,8
tick,0x7ff8da10fb34,155917414,0,0x0,8
tick,0x7ff8da10fb34,155930047,0,0x0,8
tick,0x7ff8da10fb34,155946059,0,0x0,8
tick,0x7ff8da10fb34,155961110,0,0x0,8
tick,0x7ff8da10fb34,155977105,0,0x0,8
tick,0x7ff8da10fb34,155991690,0,0x0,8
tick,0x7ff8da10fb34,156007262,0,0x0,8
tick,0x7ff8da10fb34,156022141,0,0x0,8
tick,0x7ff8da10fb34,156037083,0,0x0,8
tick,0x7ff8da10fb34,156052329,0,0x0,8
tick,0x7ff8da10fb34,156068203,0,0x0,8
tick,0x7ff8da10fb34,156083771,0,0x0,8
tick,0x7ff8da10fb34,156099401,0,0x0,8
tick,0x7ff8da10fb34,156115096,0,0x0,8
tick,0x7ff8da10fb34,156130614,0,0x0,8
tick,0x7ff8da10fb34,156145642,0,0x0,8
tick,0x7ff8da10fb34,156160869,0,0x0,8
tick,0x7ff8da10fb34,156176045,0,0x0,8
tick,0x7ff8da10fb34,156191619,0,0x0,8
tick,0x7ff8da10fb34,156207163,0,0x0,8
tick,0x7ff8da10fb34,156222628,0,0x0,8
tick,0x7ff8da10fb34,156238294,0,0x0,8
tick,0x7ff8da10fb34,156253492,0,0x0,8
tick,0x7ff8da10fb34,156268077,0,0x0,8
tick,0x7ff8da10fb34,156283659,0,0x0,8
tick,0x7ff8da10fb34,156298793,0,0x0,8
tick,0x7ff8da10fb34,156313206,0,0x0,8
tick,0x7ff8da10fb34,156328537,0,0x0,8
tick,0x7ff8da10fb34,156344267,0,0x0,8
tick,0x7ff8da10fb34,156359606,0,0x0,8
tick,0x7ff8da10fb34,156374844,0,0x0,8
tick,0x7ff8da10fb34,156390418,0,0x0,8
tick,0x7ff8da10fb34,156406044,0,0x0,8
tick,0x7ff8da10fb34,156422709,0,0x0,8
tick,0x7ff8da10fb34,156437630,0,0x0,8
tick,0x7ff8da10fb34,156452034,0,0x0,8
tick,0x7ff8da10fb34,156468551,0,0x0,8
tick,0x7ff8da10fb34,156483578,0,0x0,8
tick,0x7ff8da10fb34,156498642,0,0x0,8
tick,0x7ff8da10fb34,156514043,0,0x0,8
tick,0x7ff8da10fb34,156529711,0,0x0,8
tick,0x7ff8da10fb34,156545162,0,0x0,8
tick,0x7ff8da10fb34,156560153,0,0x0,8
tick,0x7ff8da10fb34,156575047,0,0x0,8
tick,0x7ff8da10fb34,156590308,0,0x0,8
tick,0x7ff8da10fb34,156606184,0,0x0,8
tick,0x7ff8da10fb34,156622128,0,0x0,8
tick,0x7ff8da10fb34,156637625,0,0x0,8
tick,0x7ff8da10fb34,156652827,0,0x0,8
tick,0x7ff8da10fb34,156668207,0,0x0,8
tick,0x7ff8da10fb34,156683316,0,0x0,8
tick,0x7ff8da10fb34,156698691,0,0x0,8
tick,0x7ff8da10fb34,156714006,0,0x0,8
tick,0x7ff8da10fb34,156729328,0,0x0,8
tick,0x7ff8da10fb34,156745096,0,0x0,8
tick,0x7ff8da10fb34,156759997,0,0x0,8
tick,0x7ff8da10fb34,156775116,0,0x0,8
tick,0x7ff8da10fb34,156791264,0,0x0,8
tick,0x7ff8da10fb34,156807177,0,0x0,8
tick,0x7ff8da10fb34,156822173,0,0x0,8
tick,0x7ff8da10fb34,156837272,0,0x0,8
tick,0x7ff8da10fb34,156852638,0,0x0,8
tick,0x7ff8da10fb34,156868268,0,0x0,8
tick,0x7ff8da10fb34,156883308,0,0x0,8
tick,0x7ff8da10fb34,156899308,0,0x0,8
tick,0x7ff8da10fb34,156915156,0,0x0,8
tick,0x7ff8da10fb34,156929669,0,0x0,8
tick,0x7ff8da10fb34,156945173,0,0x0,8
tick,0x7ff8da10fb34,156961373,0,0x0,8
tick,0x7ff8da10fb34,156977183,0,0x0,8
tick,0x7ff8da10fb34,156992361,0,0x0,8
tick,0x7ff8da10fb34,157008216,0,0x0,8
tick,0x7ff8da10fb34,157023131,0,0x0,8
tick,0x7ff8da10fb34,157038622,0,0x0,8
tick,0x7ff8da10fb34,157053853,0,0x0,8
tick,0x7ff8da10fb34,157069147,0,0x0,8
tick,0x7ff8da10fb34,157085120,0,0x0,8
tick,0x7ff8da10fb34,157100700,0,0x0,8
tick,0x7ff8da10fb34,157116463,0,0x0,8
tick,0x7ff8da10fb34,157132101,0,0x0,8
tick,0x7ff8da10fb34,157148183,0,0x0,8
tick,0x7ff8da10fb34,157164100,0,0x0,8
tick,0x7ff8da10fb34,157179935,0,0x0,8
tick,0x7ff8da10fb34,157195106,0,0x0,8
tick,0x7ff8da10fb34,157210252,0,0x0,8
tick,0x7ff8da10fb34,157226163,0,0x0,8
tick,0x7ff8da10fb34,157242248,0,0x0,8
tick,0x7ff8da10fb34,157258117,0,0x0,8
tick,0x7ff8da10fb34,157273963,0,0x0,8
tick,0x7ff8da10fb34,157289484,0,0x0,8
tick,0x7ff8da10fb34,157304535,0,0x0,8
tick,0x7ff8da10fb34,157319869,0,0x0,8
tick,0x7ff8da10fb34,157335156,0,0x0,8
tick,0x7ff8da10fb34,157350770,0,0x0,8
tick,0x7ff8da10fb34,157366199,0,0x0,8
tick,0x7ff8da10fb34,157381973,0,0x0,8
tick,0x7ff8da10fb34,157397126,0,0x0,8
tick,0x7ff8da10fb34,157412264,0,0x0,8
tick,0x7ff8da10fb34,157427694,0,0x0,8
tick,0x7ff8da10fb34,157443084,0,0x0,8
tick,0x7ff8da10fb34,157458231,0,0x0,8
tick,0x7ff8da10fb34,157473473,0,0x0,8
tick,0x7ff8da10fb34,157489688,0,0x0,8
tick,0x7ff8da10fb34,157504878,0,0x0,8
tick,0x7ff8da10fb34,157520236,0,0x0,8
tick,0x7ff8da10fb34,157536291,0,0x0,8
tick,0x7ff8da10fb34,157551601,0,0x0,8
tick,0x7ff8da10fb34,157567106,0,0x0,8
tick,0x7ff8da10fb34,157583188,0,0x0,8
tick,0x7ff8da10fb34,157598333,0,0x0,8
tick,0x7ff8da10fb34,157613548,0,0x0,8
tick,0x7ff8da10fb34,157628941,0,0x0,8
tick,0x7ff8da10fb34,157644182,0,0x0,8
tick,0x7ff8da10fb34,157659556,0,0x0,8
tick,0x7ff8da10fb34,157675111,0,0x0,8
tick,0x7ff8da10fb34,157690413,0,0x0,8
tick,0x7ff8da10fb34,157706198,0,0x0,8
tick,0x7ff8da10fb34,157721264,0,0x0,8
tick,0x7ff8da10fb34,157737262,0,0x0,8
tick,0x7ff8da10fb34,157752258,0,0x0,8
tick,0x7ff8da10fb34,157767124,0,0x0,8
tick,0x7ff8da10fb34,157782863,0,0x0,8
tick,0x7ff8da10fb34,157798967,0,0x0,8
tick,0x7ff8da10fb34,157814380,0,0x0,8
tick,0x7ff8da10fb34,157829375,0,0x0,8
tick,0x7ff8da10fb34,157845222,0,0x0,8
tick,0x7ff8da10fb34,157861247,0,0x0,8
tick,0x7ff8da10fb34,157876495,0,0x0,8
tick,0x7ff8da10fb34,157891769,0,0x0,8
tick,0x7ff8da10fb34,157906679,0,0x0,8
tick,0x7ff8da10fb34,157921627,0,0x0,8
tick,0x7ff8da10fb34,157937581,0,0x0,8
tick,0x7ff8da10fb34,157952456,0,0x0,8
tick,0x7ff8da10fb34,157968195,0,0x0,8
tick,0x7ff8da10fb34,157983667,0,0x0,8
tick,0x7ff8da10fb34,157999981,0,0x0,8
tick,0x7ff8da10fb34,158015021,0,0x0,8
tick,0x7ff8da10fb34,158030169,0,0x0,8
tick,0x7ff8da10fb34,158046196,0,0x0,8
tick,0x7ff8da10fb34,158062241,0,0x0,8
tick,0x7ff8da10fb34,158078146,0,0x0,8
tick,0x7ff8da10fb34,158093261,0,0x0,8
tick,0x7ff8da10fb34,158108621,0,0x0,8
tick,0x7ff8da10fb34,158123817,0,0x0,8
tick,0x7ff8da10fb34,158139146,0,0x0,8
tick,0x7ff8da10fb34,158155173,0,0x0,8
tick,0x7ff8da10fb34,158170021,0,0x0,8
tick,0x7ff8da10fb34,158186053,0,0x0,8
tick,0x7ff8da10fb34,158201319,0,0x0,8
tick,0x7ff8da10fb34,158217202,0,0x0,8
tick,0x7ff8da10fb34,158232667,0,0x0,8
tick,0x7ff8da10fb34,158249281,0,0x0,8
tick,0x7ff8da10fb34,158264001,0,0x0,8
tick,0x7ff8da10fb34,158279249,0,0x0,8
tick,0x7ff8da10fb34,158295508,0,0x0,8
tick,0x7ff8da10fb34,158311355,0,0x0,8
tick,0x7ff8da10fb34,158328076,0,0x0,8
tick,0x7ff8da10fb34,158342907,0,0x0,8
tick,0x7ff8da10fb34,158357877,0,0x0,8
tick,0x7ff8da10fb34,158372746,0,0x0,8
tick,0x7ff8da10fb34,158387753,0,0x0,8
tick,0x7ff8da10fb34,158402902,0,0x0,8
tick,0x7ff8da10fb34,158419023,0,0x0,8
tick,0x7ff8da10fb34,158435078,0,0x0,8
tick,0x7ff8da10fb34,158451382,0,0x0,8
tick,0x7ff8da10fb34,158467324,0,0x0,8
tick,0x7ff8da10fb34,158482466,0,0x0,8
tick,0x7ff8da10fb34,158496935,0,0x0,8
tick,0x7ff8da10fb34,158511854,0,0x0,8
tick,0x7ff8da10fb34,158527866,0,0x0,8
tick,0x7ff8da10fb34,158542873,0,0x0,8
tick,0x7ff8da10fb34,158557851,0,0x0,8
tick,0x7ff8da10fb34,158573837,0,0x0,8
tick,0x7ff8da10fb34,158588818,0,0x0,8
tick,0x7ff8da10fb34,158603855,0,0x0,8
tick,0x7ff8da10fb34,158619829,0,0x0,8
tick,0x7ff8da10fb34,158634837,0,0x0,8
tick,0x7ff8da10fb34,158649869,0,0x0,8
tick,0x7ff8da10fb34,158665886,0,0x0,8
tick,0x7ff8da10fb34,158680852,0,0x0,8
tick,0x7ff8da10fb34,158695814,0,0x0,8
tick,0x7ff8da10fb34,158711830,0,0x0,8
tick,0x7ff8da10fb34,158726771,0,0x0,8
tick,0x7ff8da10fb34,158741932,0,0x0,8
tick,0x7ff8da10fb34,158757144,0,0x0,8
tick,0x7ff8da10fb34,158772266,0,0x0,8
tick,0x7ff8da10fb34,158787533,0,0x0,8
tick,0x7ff8da10fb34,158802974,0,0x0,8
tick,0x7ff8da10fb34,158818693,0,0x0,8
tick,0x7ff8da10fb34,158834404,0,0x0,8
tick,0x7ff8da10fb34,158850017,0,0x0,8
tick,0x7ff8da10fb34,158865481,0,0x0,8
tick,0x7ff8da10fb34,158881162,0,0x0,8
tick,0x7ff8da10fb34,158896549,0,0x0,8
tick,0x7ff8da10fb34,158912264,0,0x0,8
tick,0x7ff8da10fb34,158928128,0,0x0,8
tick,0x7ff8da10fb34,158944207,0,0x0,8
tick,0x7ff8da10fb34,158959737,0,0x0,8
tick,0x7ff8da10fb34,158975196,0,0x0,8
tick,0x7ff8da10fb34,158990854,0,0x0,8
tick,0x7ff8da10fb34,159006596,0,0x0,8
tick,0x7ff8da10fb34,159022352,0,0x0,8
tick,0x7ff8da10fb34,159037308,0,0x0,8
tick,0x7ff8da10fb34,159052696,0,0x0,8
tick,0x7ff8da10fb34,159068420,0,0x0,8
tick,0x7ff8da10fb34,159084361,0,0x0,8
tick,0x7ff8da10fb34,159099982,0,0x0,8
tick,0x7ff8da10fb34,159115848,0,0x0,8
tick,0x7ff8da10fb34,159131494,0,0x0,8
tick,0x7ff8da10fb34,159147046,0,0x0,8
tick,0x7ff8da10fb34,159162329,0,0x0,8
tick,0x7ff8da10fb34,159177763,0,0x0,8
tick,0x7ff8da10fb34,159193479,0,0x0,8
tick,0x7ff8da10fb34,159209277,0,0x0,8
tick,0x7ff8da10fb34,159225366,0,0x0,8
tick,0x7ff8da10fb34,159240154,0,0x0,8
tick,0x7ff8da10fb34,159255062,0,0x0,8
tick,0x7ff8da10fb34,159270603,0,0x0,8
tick,0x7ff8da10fb34,159286117,0,0x0,8
tick,0x7ff8da10fb34,159301745,0,0x0,8
tick,0x7ff8da10fb34,159317586,0,0x0,8
tick,0x7ff8da10fb34,159333138,0,0x0,8
tick,0x7ff8da10fb34,159348700,0,0x0,8
tick,0x7ff8da10fb34,159364140,0,0x0,8
tick,0x7ff8da10fb34,159379492,0,0x0,8
tick,0x7ff8da10fb34,159394140,0,0x0,8
tick,0x7ff8da10fb34,159409011,0,0x0,8
tick,0x7ff8da10fb34,159424517,0,0x0,8
tick,0x7ff8da10fb34,159440129,0,0x0,8
tick,0x7ff8da10fb34,159456403,0,0x0,8
tick,0x7ff8da10fb34,159471660,0,0x0,8
tick,0x7ff8da10fb34,159487368,0,0x0,8
tick,0x7ff8da10fb34,159501975,0,0x0,8
tick,0x7ff8da10fb34,159517406,0,0x0,8
tick,0x7ff8da10fb34,159533141,0,0x0,8
tick,0x7ff8da10fb34,159547721,0,0x0,8
tick,0x7ff8da10fb34,159563557,0,0x0,8
tick,0x7ff8da10fb34,159578389,0,0x0,8
tick,0x7ff8da10fb34,159594235,0,0x0,8
tick,0x7ff8da10fb34,159610043,0,0x0,8
tick,0x7ff8da10fb34,159626141,0,0x0,8
tick,0x7ff8da10fb34,159641189,0,0x0,8
tick,0x7ff8da10fb34,159656750,0,0x0,8
tick,0x7ff8da10fb34,159672513,0,0x0,8
tick,0x7ff8da10fb34,159688340,0,0x0,8
tick,0x7ff8da10fb34,159703469,0,0x0,8
tick,0x7ff8da10fb34,159718337,0,0x0,8
tick,0x7ff8da10fb34,159734026,0,0x0,8
tick,0x7ff8da10fb34,159749470,0,0x0,8
tick,0x7ff8da10fb34,159764357,0,0x0,8
tick,0x7ff8da10fb34,159779210,0,0x0,8
tick,0x7ff8da10fb34,159795084,0,0x0,8
tick,0x7ff8da10fb34,159810727,0,0x0,8
tick,0x7ff8da10fb34,159826141,0,0x0,8
tick,0x7ff8da10fb34,159841753,0,0x0,8
tick,0x7ff8da10fb34,159856629,0,0x0,8
tick,0x7ff8da10fb34,159871774,0,0x0,8
tick,0x7ff8da10fb34,159887291,0,0x0,8
tick,0x7ff8da10fb34,159902364,0,0x0,8
tick,0x7ff8da10fb34,159918235,0,0x0,8
tick,0x7ff8da10fb34,159933954,0,0x0,8
tick,0x7ff8da10fb34,159949333,0,0x0,8
tick,0x7ff8da10fb34,159965313,0,0x0,8
tick,0x7ff8da10fb34,159980695,0,0x0,8
tick,0x7ff8da10fb34,159995203,0,0x0,8
tick,0x7ff8da10fb34,160011132,0,0x0,8
tick,0x7ff8da10fb34,160027055,0,0x0,8
tick,0x7ff8da10fb34,160042301,0,0x0,8
tick,0x7ff8da10fb34,160057038,0,0x0,8
tick,0x7ff8da10fb34,160072353,0,0x0,8
tick,0x7ff8da10fb34,160087482,0,0x0,8
tick,0x7ff8da10fb34,160102943,0,0x0,8
tick,0x7ff8da10fb34,160118187,0,0x0,8
tick,0x7ff8da10fb34,160134475,0,0x0,8
tick,0x7ff8da10fb34,160151266,0,0x0,8
tick,0x7ff8da10fb34,160168986,0,0x0,8
tick,0x7ff8da10fb34,160180923,0,0x0,8
tick,0x7ff8da10fb34,160196051,0,0x0,8
tick,0x7ff8da10fb34,160212199,0,0x0,8
tick,0x7ff8da10fb34,160227598,0,0x0,8
tick,0x7ff8da10fb34,160242865,0,0x0,8
tick,0x7ff8da10fb34,160258443,0,0x0,8
tick,0x7ff8da10fb34,160274209,0,0x0,8
tick,0x7ff8da10fb34,160290015,0,0x0,8
tick,0x7ff8da10fb34,160305123,0,0x0,8
tick,0x7ff8da10fb34,160320402,0,0x0,8
tick,0x7ff8da10fb34,160336268,0,0x0,8
tick,0x7ff8da10fb34,160351803,0,0x0,8
tick,0x7ff8da10fb34,160367644,0,0x0,8
tick,0x7ff8da10fb34,160382690,0,0x0,8
tick,0x7ff8da10fb34,160398264,0,0x0,8
tick,0x7ff8da10fb34,160414326,0,0x0,8
tick,0x7ff8da10fb34,160429077,0,0x0,8
tick,0x7ff8da10fb34,160445082,0,0x0,8
tick,0x7ff8da10fb34,160459062,0,0x0,8
tick,0x7ff8da10fb34,160474722,0,0x0,8
tick,0x7ff8da10fb34,160489998,0,0x0,8
tick,0x7ff8da10fb34,160505212,0,0x0,8
tick,0x7ff8da10fb34,160520848,0,0x0,8
tick,0x7ff8da10fb34,160536192,0,0x0,8
tick,0x7ff8da10fb34,160552430,0,0x0,8
tick,0x7ff8da10fb34,160567129,0,0x0,8
tick,0x7ff8da10fb34,160582083,0,0x0,8
tick,0x7ff8da10fb34,160597639,0,0x0,8
tick,0x7ff8da10fb34,160613137,0,0x0,8
tick,0x7ff8da10fb34,160628018,0,0x0,8
tick,0x7ff8da10fb34,160643226,0,0x0,8
tick,0x7ff8da10fb34,160658488,0,0x0,8
tick,0x7ff8da10fb34,160674504,0,0x0,8
tick,0x7ff8da10fb34,160689625,0,0x0,8
tick,0x7ff8da10fb34,160705181,0,0x0,8
tick,0x7ff8da10fb34,160721245,0,0x0,8
tick,0x7ff8da10fb34,160736972,0,0x0,8
tick,0x7ff8da10fb34,160752087,0,0x0,8
tick,0x7ff8da10fb34,160766943,0,0x0,8
tick,0x7ff8da10fb34,160782683,0,0x0,8
tick,0x7ff8da10fb34,160798147,0,0x0,8
tick,0x7ff8da10fb34,160813415,0,0x0,8
tick,0x7ff8da10fb34,160828566,0,0x0,8
tick,0x7ff8da10fb34,160844285,0,0x0,8
tick,0x7ff8da10fb34,160859486,0,0x0,8
tick,0x7ff8da10fb34,160875158,0,0x0,8
tick,0x7ff8da10fb34,160891200,0,0x0,8
tick,0x7ff8da10fb34,160906297,0,0x0,8
tick,0x7ff8da10fb34,160921243,0,0x0,8
tick,0x7ff8da10fb34,160936902,0,0x0,8
tick,0x7ff8da10fb34,160952097,0,0x0,8
tick,0x7ff8da10fb34,160967489,0,0x0,8
tick,0x7ff8da10fb34,160983597,0,0x0,8
tick,0x7ff8da10fb34,160999149,0,0x0,8
tick,0x7ff8da10fb34,161015002,0,0x0,8
tick,0x7ff8da10fb34,161030105,0,0x0,8
tick,0x7ff8da10fb34,161045171,0,0x0,8
tick,0x7ff8da10fb34,161060466,0,0x0,8
tick,0x7ff8da10fb34,161076350,0,0x0,8
tick,0x7ff8da10fb34,161091077,0,0x0,8
tick,0x7ff8da10fb34,161106234,0,0x0,8
tick,0x7ff8da10fb34,161122187,0,0x0,8
tick,0x7ff8da10fb34,161136947,0,0x0,8
tick,0x7ff8da10fb34,161152915,0,0x0,8
tick,0x7ff8da10fb34,161168335,0,0x0,8
tick,0x7ff8da10fb34,161183841,0,0x0,8
tick,0x7ff8da10fb34,161199129,0,0x0,8
tick,0x7ff8da10fb34,161214695,0,0x0,8
tick,0x7ff8da10fb34,161229967,0,0x0,8
tick,0x7ff8da10fb34,161245146,0,0x0,8
tick,0x7ff8da10fb34,161260712,0,0x0,8
tick,0x7ff8da10fb34,161276365,0,0x0,8
tick,0x7ff8da10fb34,161292270,0,0x0,8
tick,0x7ff8da10fb34,161307542,0,0x0,8
tick,0x7ff8da10fb34,161322970,0,0x0,8
tick,0x7ff8da10fb34,161338245,0,0x0,8
tick,0x7ff8da10fb34,161353431,0,0x0,8
tick,0x7ff8da10fb34,161368687,0,0x0,8
tick,0x7ff8da10fb34,161384194,0,0x0,8
tick,0x7ff8da10fb34,161399935,0,0x0,8
tick,0x7ff8da10fb34,161415676,0,0x0,8
tick,0x7ff8da10fb34,161431670,0,0x0,8
tick,0x7ff8da10fb34,161447798,0,0x0,8
tick,0x7ff8da10fb34,161463518,0,0x0,8
tick,0x7ff8da10fb34,161478458,0,0x0,8
tick,0x7ff8da10fb34,161493690,0,0x0,8
tick,0x7ff8da10fb34,161508880,0,0x0,8
tick,0x7ff8da10fb34,161523937,0,0x0,8
tick,0x7ff8da10fb34,161539601,0,0x0,8
tick,0x7ff8da10fb34,161554489,0,0x0,8
tick,0x7ff8da10fb34,161570618,0,0x0,8
tick,0x7ff8da10fb34,161586188,0,0x0,8
tick,0x7ff8da10fb34,161601689,0,0x0,8
tick,0x7ff8da10fb34,161616682,0,0x0,8
tick,0x7ff8da10fb34,161632264,0,0x0,8
tick,0x7ff8da10fb34,161647927,0,0x0,8
tick,0x7ff8da10fb34,161663950,0,0x0,8
tick,0x7ff8da10fb34,161679516,0,0x0,8
tick,0x7ff8da10fb34,161694448,0,0x0,8
tick,0x7ff8da10fb34,161710262,0,0x0,8
tick,0x7ff8da10fb34,161726219,0,0x0,8
tick,0x7ff8da10fb34,161742265,0,0x0,8
tick,0x7ff8da10fb34,161757428,0,0x0,8
tick,0x7ff8da10fb34,161772516,0,0x0,8
tick,0x7ff8da10fb34,161787473,0,0x0,8
tick,0x7ff8da10fb34,161802417,0,0x0,8
tick,0x7ff8da10fb34,161818543,0,0x0,8
tick,0x7ff8da10fb34,161834368,0,0x0,8
tick,0x7ff8da10fb34,161850440,0,0x0,8
tick,0x7ff8da10fb34,161866604,0,0x0,8
tick,0x7ff8da10fb34,161882095,0,0x0,8
tick,0x7ff8da10fb34,161898109,0,0x0,8
tick,0x7ff8da10fb34,161913344,0,0x0,8
tick,0x7ff8da10fb34,161928013,0,0x0,8
tick,0x7ff8da10fb34,161943277,0,0x0,8
tick,0x7ff8da10fb34,161958449,0,0x0,8
tick,0x7ff8da10fb34,161974296,0,0x0,8
tick,0x7ff8da10fb34,161990269,0,0x0,8
tick,0x7ff8da10fb34,162005456,0,0x0,8
tick,0x7ff8da10fb34,162020399,0,0x0,8
tick,0x7ff8da10fb34,162038174,0,0x0,8
tick,0x7ff8da10fb34,162051777,0,0x0,8
tick,0x7ff8da10fb34,162066548,0,0x0,8
tick,0x7ff8da10fb34,162081928,0,0x0,8
tick,0x7ff8da10fb34,162097712,0,0x0,8
tick,0x7ff8da10fb34,162113112,0,0x0,8
tick,0x7ff8da10fb34,162128046,0,0x0,8
tick,0x7ff8da10fb34,162143099,0,0x0,8
tick,0x7ff8da10fb34,162158302,0,0x0,8
tick,0x7ff8da10fb34,162174278,0,0x0,8
tick,0x7ff8da10fb34,162190092,0,0x0,8
tick,0x7ff8da10fb34,162206027,0,0x0,8
tick,0x7ff8da10fb34,162221182,0,0x0,8
tick,0x7ff8da10fb34,162236806,0,0x0,8
tick,0x7ff8da10fb34,162252494,0,0x0,8
tick,0x7ff8da10fb34,162268746,0,0x0,8
tick,0x7ff8da10fb34,162283867,0,0x0,8
tick,0x7ff8da10fb34,162299104,0,0x0,8
tick,0x7ff8da10fb34,162314482,0,0x0,8
tick,0x7ff8da10fb34,162330042,0,0x0,8
tick,0x7ff8da10fb34,162345760,0,0x0,8
tick,0x7ff8da10fb34,162361239,0,0x0,8
tick,0x7ff8da10fb34,162377185,0,0x0,8
tick,0x7ff8da10fb34,162392226,0,0x0,8
tick,0x7ff8da10fb34,162407206,0,0x0,8
tick,0x7ff8da10fb34,162422199,0,0x0,8
tick,0x7ff8da10fb34,162438306,0,0x0,8
tick,0x7ff8da10fb34,162453149,0,0x0,8
tick,0x7ff8da10fb34,162468614,0,0x0,8
tick,0x7ff8da10fb34,162483885,0,0x0,8
tick,0x7ff8da10fb34,162499512,0,0x0,8
tick,0x7ff8da10fb34,162514295,0,0x0,8
tick,0x7ff8da10fb34,162529573,0,0x0,8
tick,0x7ff8da10fb34,162544988,0,0x0,8
tick,0x7ff8da10fb34,162560146,0,0x0,8
tick,0x7ff8da10fb34,162576127,0,0x0,8
tick,0x7ff8da10fb34,162591165,0,0x0,8
tick,0x7ff8da10fb34,162606469,0,0x0,8
tick,0x7ff8da10fb34,162622167,0,0x0,8
tick,0x7ff8da10fb34,162637246,0,0x0,8
tick,0x7ff8da10fb34,162652077,0,0x0,8
tick,0x7ff8da10fb34,162667127,0,0x0,8
tick,0x7ff8da10fb34,162681819,0,0x0,8
tick,0x7ff8da10fb34,162697931,0,0x0,8
tick,0x7ff8da10fb34,162713097,0,0x0,8
tick,0x7ff8da10fb34,162729058,0,0x0,8
tick,0x7ff8da10fb34,162744019,0,0x0,8
tick,0x7ff8da10fb34,162759455,0,0x0,8
tick,0x7ff8da10fb34,162774873,0,0x0,8
tick,0x7ff8da10fb34,162790693,0,0x0,8
tick,0x7ff8da10fb34,162806183,0,0x0,8
tick,0x7ff8da10fb34,162821616,0,0x0,8
tick,0x7ff8da10fb34,162836956,0,0x0,8
tick,0x7ff8da10fb34,162852479,0,0x0,8
tick,0x7ff8da10fb34,162866985,0,0x0,8
tick,0x7ff8da10fb34,162882662,0,0x0,8
tick,0x7ff8da10fb34,162898291,0,0x0,8
tick,0x7ff8da10fb34,162914395,0,0x0,8
tick,0x7ff8da10fb34,162929698,0,0x0,8
tick,0x7ff8da10fb34,162945589,0,0x0,8
tick,0x7ff8da10fb34,162960654,0,0x0,8
tick,0x7ff8da10fb34,162976124,0,0x0,8
tick,0x7ff8da10fb34,162992229,0,0x0,8
tick,0x7ff8da10fb34,163008234,0,0x0,8
tick,0x7ff8da10fb34,163024264,0,0x0,8
tick,0x7ff8da10fb34,163039693,0,0x0,8
tick,0x7ff8da10fb34,163055435,0,0x0,8
tick,0x7ff8da10fb34,163070771,0,0x0,8
tick,0x7ff8da10fb34,163086206,0,0x0,8
tick,0x7ff8da10fb34,163101869,0,0x0,8
tick,0x7ff8da10fb34,163116950,0,0x0,8
tick,0x7ff8da10fb34,163131581,0,0x0,8
tick,0x7ff8da10fb34,163148093,0,0x0,8
tick,0x7ff8da10fb34,163163570,0,0x0,8
tick,0x7ff8da10fb34,163180352,0,0x0,8
tick,0x7ff8da10fb34,163195547,0,0x0,8
tick,0x7ff8da10fb34,163210353,0,0x0,8
tick,0x7ff8da10fb34,163226157,0,0x0,8
tick,0x7ff8da10fb34,163241184,0,0x0,8
tick,0x7ff8da10fb34,163256916,0,0x0,8
tick,0x7ff8da10fb34,163272141,0,0x0,8
tick,0x7ff8da10fb34,163287234,0,0x0,8
tick,0x7ff8da10fb34,163302393,0,0x0,8
tick,0x7ff8da10fb34,163318421,0,0x0,8
tick,0x7ff8da10fb34,163333514,0,0x0,8
tick,0x7ff8da10fb34,163353989,0,0x0,8
tick,0x7ff8da10fb34,163363726,0,0x0,8
tick,0x7ff8da10fb34,163379410,0,0x0,8
tick,0x7ff8da10fb34,163394152,0,0x0,8
tick,0x7ff8da10fb34,163409274,0,0x0,8
tick,0x7ff8da10fb34,163425156,0,0x0,8
tick,0x7ff8da10fb34,163441768,0,0x0,8
tick,0x7ff8da10fb34,163457198,0,0x0,8
tick,0x7ff8da10fb34,163472101,0,0x0,8
tick,0x7ff8da10fb34,163488119,0,0x0,8
tick,0x7ff8da10fb34,163503091,0,0x0,8
tick,0x7ff8da10fb34,163518136,0,0x0,8
tick,0x7ff8da10fb34,163534065,0,0x0,8
tick,0x7ff8da10fb34,163549127,0,0x0,8
tick,0x7ff8da10fb34,163564156,0,0x0,8
tick,0x7ff8da10fb34,163580080,0,0x0,8
tick,0x7ff8da10fb34,163595143,0,0x0,8
tick,0x7ff8da10fb34,163610086,0,0x0,8
tick,0x7ff8da10fb34,163626082,0,0x0,8
tick,0x7ff8da10fb34,163641094,0,0x0,8
tick,0x7ff8da10fb34,163656037,0,0x0,8
tick,0x7ff8da10fb34,163672043,0,0x0,8
tick,0x7ff8da10fb34,163687100,0,0x0,8
tick,0x7ff8da10fb34,163702259,0,0x0,8
tick,0x7ff8da10fb34,163718556,0,0x0,8
tick,0x7ff8da10fb34,163733471,0,0x0,8
tick,0x7ff8da10fb34,163748923,0,0x0,8
tick,0x7ff8da10fb34,163764477,0,0x0,8
tick,0x7ff8da10fb34,163780604,0,0x0,8
tick,0x7ff8da10fb34,163796814,0,0x0,8
tick,0x7ff8da10fb34,163811153,0,0x0,8
tick,0x7ff8da10fb34,163826091,0,0x0,8
tick,0x7ff8da10fb34,163842113,0,0x0,8
tick,0x7ff8da10fb34,163857878,0,0x0,8
tick,0x7ff8da10fb34,163873264,0,0x0,8
tick,0x7ff8da10fb34,163888457,0,0x0,8
tick,0x7ff8da10fb34,163904090,0,0x0,8
tick,0x7ff8da10fb34,163919283,0,0x0,8
tick,0x7ff8da10fb34,163935213,0,0x0,8
tick,0x7ff8da10fb34,163951340,0,0x0,8
tick,0x7ff8da10fb34,163966672,0,0x0,8
tick,0x7ff8da10fb34,163982209,0,0x0,8
tick,0x7ff8da10fb34,163998111,0,0x0,8
tick,0x7ff8da10fb34,164013519,0,0x0,8
tick,0x7ff8da10fb34,164029184,0,0x0,8
tick,0x7ff8da10fb34,164044203,0,0x0,8
tick,0x7ff8da10fb34,164058971,0,0x0,8
tick,0x7ff8da10fb34,164074124,0,0x0,8
tick,0x7ff8da10fb34,164089365,0,0x0,8
tick,0x7ff8da10fb34,164105041,0,0x0,8
tick,0x7ff8da10fb34,164121148,0,0x0,8
tick,0x7ff8da10fb34,164137136,0,0x0,8
tick,0x7ff8da10fb34,164153169,0,0x0,8
tick,0x7ff8da10fb34,164168593,0,0x0,8
tick,0x7ff8da10fb34,164184211,0,0x0,8
tick,0x7ff8da10fb34,164199220,0,0x0,8
tick,0x7ff8da10fb34,164214380,0,0x0,8
tick,0x7ff8da10fb34,164230140,0,0x0,8
tick,0x7ff8da10fb34,164246332,0,0x0,8
tick,0x7ff8da10fb34,164262040,0,0x0,8
tick,0x7ff8da10fb34,164277555,0,0x0,8
tick,0x7ff8da10fb34,164293446,0,0x0,8
tick,0x7ff8da10fb34,164309319,0,0x0,8
tick,0x7ff8da10fb34,164324774,0,0x0,8
tick,0x7ff8da10fb34,164340205,0,0x0,8
tick,0x7ff8da10fb34,164356122,0,0x0,8
tick,0x7ff8da10fb34,164371394,0,0x0,8
tick,0x7ff8da10fb34,164387478,0,0x0,8
tick,0x7ff8da10fb34,164402193,0,0x0,8
tick,0x7ff8da10fb34,164417465,0,0x0,8
tick,0x7ff8da10fb34,164433412,0,0x0,8
tick,0x7ff8da10fb34,164449610,0,0x0,8
tick,0x7ff8da10fb34,164464821,0,0x0,8
tick,0x7ff8da10fb34,164481232,0,0x0,8
tick,0x7ff8da10fb34,164497612,0,0x0,8
tick,0x7ff8da10fb34,164511409,0,0x0,8
tick,0x7ff8da10fb34,164526086,0,0x0,8
tick,0x7ff8da10fb34,164541093,0,0x0,8
tick,0x7ff8da10fb34,164557147,0,0x0,8
tick,0x7ff8da10fb34,164572203,0,0x0,8
tick,0x7ff8da10fb34,164587818,0,0x0,8
tick,0x7ff8da10fb34,164603076,0,0x0,8
tick,0x7ff8da10fb34,164618368,0,0x0,8
tick,0x7ff8da10fb34,164633754,0,0x0,8
tick,0x7ff8da10fb34,164649166,0,0x0,8
tick,0x7ff8da10fb34,164665230,0,0x0,8
tick,0x7ff8da10fb34,164680912,0,0x0,8
tick,0x7ff8da10fb34,164696487,0,0x0,8
tick,0x7ff8da10fb34,164711409,0,0x0,8
tick,0x7ff8da10fb34,164727110,0,0x0,8
tick,0x7ff8da10fb34,164743209,0,0x0,8
tick,0x7ff8da10fb34,164758582,0,0x0,8
tick,0x7ff8da10fb34,164774209,0,0x0,8
tick,0x7ff8da10fb34,164789193,0,0x0,8
tick,0x7ff8da10fb34,164803986,0,0x0,8
tick,0x7ff8da10fb34,164819640,0,0x0,8
tick,0x7ff8da10fb34,164834959,0,0x0,8
tick,0x7ff8da10fb34,164850134,0,0x0,8
tick,0x7ff8da10fb34,164866233,0,0x0,8
tick,0x7ff8da10fb34,164881808,0,0x0,8
tick,0x7ff8da10fb34,164897194,0,0x0,8
tick,0x7ff8da10fb34,164912147,0,0x0,8
tick,0x7ff8da10fb34,164927603,0,0x0,8
tick,0x7ff8da10fb34,164943231,0,0x0,8
tick,0x7ff8da10fb34,164958190,0,0x0,8
tick,0x7ff8da10fb34,164973259,0,0x0,8
tick,0x7ff8da10fb34,164988571,0,0x0,8
tick,0x7ff8da10fb34,165004224,0,0x0,8
tick,0x7ff8da10fb34,165019671,0,0x0,8
tick,0x7ff8da10fb34,165035178,0,0x0,8
tick,0x7ff8da10fb34,165050206,0,0x0,8
tick,0x7ff8da10fb34,165066133,0,0x0,8
tick,0x7ff8da10fb34,165081236,0,0x0,8
tick,0x7ff8da10fb34,165098044,0,0x0,8
tick,0x7ff8da10fb34,165111928,0,0x0,8
tick,0x7ff8da10fb34,165127964,0,0x0,8
tick,0x7ff8da10fb34,165143903,0,0x0,8
tick,0x7ff8da10fb34,165159909,0,0x0,8
tick,0x7ff8da10fb34,165175927,0,0x0,8
tick,0x7ff8da10fb34,165191907,0,0x0,8
tick,0x7ff8da10fb34,165207892,0,0x0,8
tick,0x7ff8da10fb34,165223924,0,0x0,8
tick,0x7ff8da10fb34,165239870,0,0x0,8
tick,0x7ff8da10fb34,165255884,0,0x0,8
tick,0x7ff8da10fb34,165271866,0,0x0,8
tick,0x7ff8da10fb34,165286886,0,0x0,8
tick,0x7ff8da10fb34,165301863,0,0x0,8
tick,0x7ff8da10fb34,165317889,0,0x0,8
tick,0x7ff8da10fb34,165333846,0,0x0,8
tick,0x7ff8da10fb34,165349255,0,0x0,8
tick,0x7ff8da10fb34,165364818,0,0x0,8
tick,0x7ff8da10fb34,165380634,0,0x0,8
tick,0x7ff8da10fb34,165396245,0,0x0,8
tick,0x7ff8da10fb34,165411913,0,0x0,8
tick,0x7ff8da10fb34,165427137,0,0x0,8
tick,0x7ff8da10fb34,165443197,0,0x0,8
tick,0x7ff8da10fb34,165459516,0,0x0,8
tick,0x7ff8da10fb34,165475147,0,0x0,8
tick,0x7ff8da10fb34,165491596,0,0x0,8
tick,0x7ff8da10fb34,165506851,0,0x0,8
tick,0x7ff8da10fb34,165522219,0,0x0,8
tick,0x7ff8da10fb34,165537425,0,0x0,8
tick,0x7ff8da10fb34,165553248,0,0x0,8
tick,0x7ff8da10fb34,165569192,0,0x0,8
tick,0x7ff8da10fb34,165585189,0,0x0,8
tick,0x7ff8da10fb34,165601135,0,0x0,8
tick,0x7ff8da10fb34,165616983,0,0x0,8
tick,0x7ff8da10fb34,165632096,0,0x0,8
tick,0x7ff8da10fb34,165648177,0,0x0,8
tick,0x7ff8da10fb34,165664039,0,0x0,8
tick,0x7ff8da10fb34,165680000,0,0x0,8
tick,0x7ff8da10fb34,165695150,0,0x0,8
tick,0x7ff8da10fb34,165710292,0,0x0,8
tick,0x7ff8da10fb34,165725152,0,0x0,8
tick,0x7ff8da10fb34,165740108,0,0x0,8
tick,0x7ff8da10fb34,165755122,0,0x0,8
tick,0x7ff8da10fb34,165771219,0,0x0,8
tick,0x7ff8da10fb34,165786319,0,0x0,8
tick,0x7ff8da10fb34,165800897,0,0x0,8
tick,0x7ff8da10fb34,165816131,0,0x0,8
tick,0x7ff8da10fb34,165831435,0,0x0,8
tick,0x7ff8da10fb34,165847690,0,0x0,8
tick,0x7ff8da10fb34,165862199,0,0x0,8
tick,0x7ff8da10fb34,165877600,0,0x0,8
tick,0x7ff8da10fb34,165892090,0,0x0,8
tick,0x7ff8da10fb34,165907550,0,0x0,8
tick,0x7ff8da10fb34,165923230,0,0x0,8
tick,0x7ff8da10fb34,165939294,0,0x0,8
tick,0x7ff8da10fb34,165954255,0,0x0,8
tick,0x7ff8da10fb34,165969870,0,0x0,8
tick,0x7ff8da10fb34,165985182,0,0x0,8
tick,0x7ff8da10fb34,166000930,0,0x0,8
tick,0x7ff8da10fb34,166016118,0,0x0,8
tick,0x7ff8da10fb34,166031516,0,0x0,8
tick,0x7ff8da10fb34,166047756,0,0x0,8
tick,0x7ff8da10fb34,166063351,0,0x0,8
tick,0x7ff8da10fb34,166078460,0,0x0,8
tick,0x7ff8da10fb34,166094632,0,0x0,8
tick,0x7ff8da10fb34,166110249,0,0x0,8
tick,0x7ff8da10fb34,166125209,0,0x0,8
tick,0x7ff8da10fb34,166141104,0,0x0,8
tick,0x7ff8da10fb34,166157291,0,0x0,8
tick,0x7ff8da10fb34,166173047,0,0x0,8
tick,0x7ff8da10fb34,166188365,0,0x0,8
tick,0x7ff8da10fb34,166203581,0,0x0,8
tick,0x7ff8da10fb34,166219463,0,0x0,8
tick,0x7ff8da10fb34,166235351,0,0x0,8
tick,0x7ff8da10fb34,166250824,0,0x0,8
tick,0x7ff8da10fb34,166266492,0,0x0,8
tick,0x7ff8da10fb34,166282187,0,0x0,8
tick,0x7ff8da10fb34,166297866,0,0x0,8
tick,0x7ff8da10fb34,166313469,0,0x0,8
tick,0x7ff8da10fb34,166329318,0,0x0,8
tick,0x7ff8da10fb34,166345116,0,0x0,8
tick,0x7ff8da10fb34,166360146,0,0x0,8
tick,0x7ff8da10fb34,166376243,0,0x0,8
tick,0x7ff8da10fb34,166392201,0,0x0,8
tick,0x7ff8da10fb34,166407167,0,0x0,8
tick,0x7ff8da10fb34,166422154,0,0x0,8
tick,0x7ff8da10fb34,166437298,0,0x0,8
tick,0x7ff8da10fb34,166452394,0,0x0,8
tick,0x7ff8da10fb34,166467581,0,0x0,8
tick,0x7ff8da10fb34,166482974,0,0x0,8
tick,0x7ff8da10fb34,166497906,0,0x0,8
tick,0x7ff8da10fb34,166513577,0,0x0,8
tick,0x7ff8da10fb34,166528258,0,0x0,8
tick,0x7ff8da10fb34,166543205,0,0x0,8
tick,0x7ff8da10fb34,166558530,0,0x0,8
tick,0x7ff8da10fb34,166574218,0,0x0,8
tick,0x7ff8da10fb34,166589997,0,0x0,8
tick,0x7ff8da10fb34,166605141,0,0x0,8
tick,0x7ff8da10fb34,166620390,0,0x0,8
tick,0x7ff8da10fb34,166636139,0,0x0,8
tick,0x7ff8da10fb34,166651678,0,0x0,8
tick,0x7ff8da10fb34,166667145,0,0x0,8
tick,0x7ff8da10fb34,166682755,0,0x0,8
tick,0x7ff8da10fb34,166697687,0,0x0,8
tick,0x7ff8da10fb34,166713475,0,0x0,8
tick,0x7ff8da10fb34,166729571,0,0x0,8
tick,0x7ff8da10fb34,166744729,0,0x0,8
tick,0x7ff8da10fb34,166760002,0,0x0,8
tick,0x7ff8da10fb34,166776253,0,0x0,8
tick,0x7ff8da10fb34,166791425,0,0x0,8
tick,0x7ff8da10fb34,166807237,0,0x0,8
tick,0x7ff8da10fb34,166822226,0,0x0,8
tick,0x7ff8da10fb34,166838401,0,0x0,8
tick,0x7ff8da10fb34,166854302,0,0x0,8
tick,0x7ff8da10fb34,166869962,0,0x0,8
tick,0x7ff8da10fb34,166885097,0,0x0,8
tick,0x7ff8da10fb34,166900680,0,0x0,8
tick,0x7ff8da10fb34,166916151,0,0x0,8
tick,0x7ff8da10fb34,166931745,0,0x0,8
tick,0x7ff8da10fb34,166946646,0,0x0,8
tick,0x7ff8da10fb34,166962268,0,0x0,8
tick,0x7ff8da10fb34,166978009,0,0x0,8
tick,0x7ff8da10fb34,166993262,0,0x0,8
tick,0x7ff8da10fb34,167008345,0,0x0,8
tick,0x7ff8da10fb34,167023229,0,0x0,8
tick,0x7ff8da10fb34,167038043,0,0x0,8
tick,0x7ff8da10fb34,167053523,0,0x0,8
tick,0x7ff8da10fb34,167069172,0,0x0,8
tick,0x7ff8da10fb34,167084619,0,0x0,8
tick,0x7ff8da10fb34,167100528,0,0x0,8
tick,0x7ff8da10fb34,167116309,0,0x0,8
tick,0x7ff8da10fb34,167131395,0,0x0,8
tick,0x7ff8da10fb34,167146923,0,0x0,8
tick,0x7ff8da10fb34,167162047,0,0x0,8
tick,0x7ff8da10fb34,167178169,0,0x0,8
tick,0x7ff8da10fb34,167193334,0,0x0,8
tick,0x7ff8da10fb34,167208913,0,0x0,8
tick,0x7ff8da10fb34,167224216,0,0x0,8
tick,0x7ff8da10fb34,167239457,0,0x0,8
tick,0x7ff8da10fb34,167255115,0,0x0,8
tick,0x7ff8da10fb34,167270082,0,0x0,8
tick,0x7ff8da10fb34,167285130,0,0x0,8
tick,0x7ff8da10fb34,167300587,0,0x0,8
tick,0x7ff8da10fb34,167316183,0,0x0,8
tick,0x7ff8da10fb34,167331501,0,0x0,8
tick,0x7ff8da10fb34,167346610,0,0x0,8
tick,0x7ff8da10fb34,167361117,0,0x0,8
tick,0x7ff8da10fb34,167376198,0,0x0,8
tick,0x7ff8da10fb34,167392223,0,0x0,8
tick,0x7ff8da10fb34,167407547,0,0x0,8
tick,0x7ff8da10fb34,167423252,0,0x0,8
tick,0x7ff8da10fb34,167438291,0,0x0,8
tick,0x7ff8da10fb34,167453503,0,0x0,8
tick,0x7ff8da10fb34,167468742,0,0x0,8
tick,0x7ff8da10fb34,167484581,0,0x0,8
tick,0x7ff8da10fb34,167499301,0,0x0,8
tick,0x7ff8da10fb34,167514863,0,0x0,8
tick,0x7ff8da10fb34,167530454,0,0x0,8
tick,0x7ff8da10fb34,167545440,0,0x0,8
tick,0x7ff8da10fb34,167560980,0,0x0,8
tick,0x7ff8da10fb34,167576181,0,0x0,8
tick,0x7ff8da10fb34,167591400,0,0x0,8
tick,0x7ff8da10fb34,167607229,0,0x0,8
tick,0x7ff8da10fb34,167622068,0,0x0,8
tick,0x7ff8da10fb34,167637160,0,0x0,8
tick,0x7ff8da10fb34,167652438,0,0x0,8
tick,0x7ff8da10fb34,167667528,0,0x0,8
tick,0x7ff8da10fb34,167682703,0,0x0,8
tick,0x7ff8da10fb34,167698208,0,0x0,8
tick,0x7ff8da10fb34,167714360,0,0x0,8
tick,0x7ff8da10fb34,167729603,0,0x0,8
tick,0x7ff8da10fb34,167745325,0,0x0,8
tick,0x7ff8da10fb34,167760753,0,0x0,8
tick,0x7ff8da10fb34,167776162,0,0x0,8
tick,0x7ff8da10fb34,167791230,0,0x0,8
tick,0x7ff8da10fb34,167807116,0,0x0,8
tick,0x7ff8da10fb34,167822254,0,0x0,8
tick,0x7ff8da10fb34,167837559,0,0x0,8
tick,0x7ff8da10fb34,167853113,0,0x0,8
tick,0x7ff8da10fb34,167868953,0,0x0,8
tick,0x7ff8da10fb34,167884268,0,0x0,8
tick,0x7ff8da10fb34,167899590,0,0x0,8
tick,0x7ff8da10fb34,167914583,0,0x0,8
tick,0x7ff8da10fb34,167930100,0,0x0,8
tick,0x7ff8da10fb34,167946224,0,0x0,8
tick,0x7ff8da10fb34,167961845,0,0x0,8
tick,0x7ff8da10fb34,167977331,0,0x0,8
tick,0x7ff8da10fb34,167992210,0,0x0,8
tick,0x7ff8da10fb34,168008384,0,0x0,8
tick,0x7ff8da10fb34,168023192,0,0x0,8
tick,0x7ff8da10fb34,168039025,0,0x0,8
tick,0x7ff8da10fb34,168054275,0,0x0,8
tick,0x7ff8da10fb34,168069524,0,0x0,8
tick,0x7ff8da10fb34,168085591,0,0x0,8
tick,0x7ff8da10fb34,168100929,0,0x0,8
tick,0x7ff8da10fb34,168116448,0,0x0,8
tick,0x7ff8da10fb34,168131440,0,0x0,8
tick,0x7ff8da10fb34,168148119,0,0x0,8
tick,0x7ff8da10fb34,168162351,0,0x0,8
tick,0x7ff8da10fb34,168177807,0,0x0,8
tick,0x7ff8da10fb34,168193382,0,0x0,8
tick,0x7ff8da10fb34,168208544,0,0x0,8
tick,0x7ff8da10fb34,168224214,0,0x0,8
tick,0x7ff8da10fb34,168239565,0,0x0,8
tick,0x7ff8da10fb34,168255167,0,0x0,8
tick,0x7ff8da10fb34,168270171,0,0x0,8
tick,0x7ff8da10fb34,168286231,0,0x0,8
tick,0x7ff8da10fb34,168302187,0,0x0,8
tick,0x7ff8da10fb34,168316882,0,0x0,8
tick,0x7ff8da10fb34,168331850,0,0x0,8
tick,0x7ff8da10fb34,168348199,0,0x0,8
tick,0x7ff8da10fb34,168364531,0,0x0,8
tick,0x7ff8da10fb34,168379737,0,0x0,8
tick,0x7ff8da10fb34,168394894,0,0x0,8
tick,0x7ff8da10fb34,168411211,0,0x0,8
tick,0x7ff8da10fb34,168426386,0,0x0,8
tick,0x7ff8da10fb34,168442281,0,0x0,8
tick,0x7ff8da10fb34,168458248,0,0x0,8
tick,0x7ff8da10fb34,168474251,0,0x0,8
tick,0x7ff8da10fb34,168490269,0,0x0,8
tick,0x7ff8da10fb34,168506215,0,0x0,8
tick,0x7ff8da10fb34,168522221,0,0x0,8
tick,0x7ff8da10fb34,168538202,0,0x0,8
tick,0x7ff8da10fb34,168554206,0,0x0,8
tick,0x7ff8da10fb34,168569160,0,0x0,8
tick,0x7ff8da10fb34,168584208,0,0x0,8
tick,0x7ff8da10fb34,168600176,0,0x0,8
tick,0x7ff8da10fb34,168615168,0,0x0,8
tick,0x7ff8da10fb34,168630187,0,0x0,8
tick,0x7ff8da10fb34,168646221,0,0x0,8
tick,0x7ff8da10fb34,168661207,0,0x0,8
tick,0x7ff8da10fb34,168676324,0,0x0,8
tick,0x7ff8da10fb34,168692144,0,0x0,8
tick,0x7ff8da10fb34,168708230,0,0x0,8
tick,0x7ff8da10fb34,168723335,0,0x0,8
tick,0x7ff8da10fb34,168738503,0,0x0,8
tick,0x7ff8da10fb34,168753914,0,0x0,8
tick,0x7ff8da10fb34,168769321,0,0x0,8
tick,0x7ff8da10fb34,168784610,0,0x0,8
tick,0x7ff8da10fb34,168799998,0,0x0,8
tick,0x7ff8da10fb34,168816134,0,0x0,8
tick,0x7ff8da10fb34,168832102,0,0x0,8
tick,0x7ff8da10fb34,168847726,0,0x0,8
tick,0x7ff8da10fb34,168862991,0,0x0,8
tick,0x7ff8da10fb34,168878604,0,0x0,8
tick,0x7ff8da10fb34,168893806,0,0x0,8
tick,0x7ff8da10fb34,168908963,0,0x0,8
tick,0x7ff8da10fb34,168924883,0,0x0,8
tick,0x7ff8da10fb34,168940448,0,0x0,8
tick,0x7ff8da10fb34,168956124,0,0x0,8
tick,0x7ff8da10fb34,168972003,0,0x0,8
tick,0x7ff8da10fb34,168987246,0,0x0,8
tick,0x7ff8da10fb34,169002426,0,0x0,8
tick,0x7ff8da10fb34,169018185,0,0x0,8
tick,0x7ff8da10fb34,169033484,0,0x0,8
tick,0x7ff8da10fb34,169049587,0,0x0,8
tick,0x7ff8da10fb34,169065237,0,0x0,8
tick,0x7ff8da10fb34,169081059,0,0x0,8
tick,0x7ff8da10fb34,169096757,0,0x0,8
tick,0x7ff8da10fb34,169112369,0,0x0,8
tick,0x7ff8da10fb34,169128022,0,0x0,8
tick,0x7ff8da10fb34,169144574,0,0x0,8
tick,0x7ff8da10fb34,169159631,0,0x0,8
tick,0x7ff8da10fb34,169174960,0,0x0,8
tick,0x7ff8da10fb34,169190087,0,0x0,8
tick,0x7ff8da10fb34,169205987,0,0x0,8
tick,0x7ff8da10fb34,169222156,0,0x0,8
tick,0x7ff8da10fb34,169237438,0,0x0,8
tick,0x7ff8da10fb34,169252142,0,0x0,8
tick,0x7ff8da10fb34,169266961,0,0x0,8
tick,0x7ff8da10fb34,169282295,0,0x0,8
tick,0x7ff8da10fb34,169298455,0,0x0,8
tick,0x7ff8da10fb34,169314028,0,0x0,8
tick,0x7ff8da10fb34,169329981,0,0x0,8
tick,0x7ff8da10fb34,169345596,0,0x0,8
tick,0x7ff8da10fb34,169361337,0,0x0,8
tick,0x7ff8da10fb34,169377348,0,0x0,8
tick,0x7ff8da10fb34,169392180,0,0x0,8
tick,0x7ff8da10fb34,169407249,0,0x0,8
tick,0x7ff8da10fb34,169423208,0,0x0,8
tick,0x7ff8da10fb34,169438185,0,0x0,8
tick,0x7ff8da10fb34,169453178,0,0x0,8
tick,0x7ff8da10fb34,169468672,0,0x0,8
tick,0x7ff8da10fb34,169484099,0,0x0,8
tick,0x7ff8da10fb34,169499178,0,0x0,8
tick,0x7ff8da10fb34,169514502,0,0x0,8
tick,0x7ff8da10fb34,169530570,0,0x0,8
tick,0x7ff8da10fb34,169545524,0,0x0,8
tick,0x7ff8da10fb34,169561280,0,0x0,8
tick,0x7ff8da10fb34,169577394,0,0x0,8
tick,0x7ff8da10fb34,169592200,0,0x0,8
tick,0x7ff8da10fb34,169607488,0,0x0,8
tick,0x7ff8da10fb34,169623215,0,0x0,8
tick,0x7ff8da10fb34,169639135,0,0x0,8
tick,0x7ff8da10fb34,169654999,0,0x0,8
tick,0x7ff8da10fb34,169669648,0,0x0,8
tick,0x7ff8da10fb34,169684705,0,0x0,8
tick,0x7ff8da10fb34,169700089,0,0x0,8
tick,0x7ff8da10fb34,169716221,0,0x0,8
tick,0x7ff8da10fb34,169730915,0,0x0,8
tick,0x7ff8da10fb34,169746536,0,0x0,8
tick,0x7ff8da10fb34,169762060,0,0x0,8
tick,0x7ff8da10fb34,169778366,0,0x0,8
tick,0x7ff8da10fb34,169793265,0,0x0,8
tick,0x7ff8da10fb34,169808374,0,0x0,8
tick,0x7ff8da10fb34,169823984,0,0x0,8
tick,0x7ff8da10fb34,169839831,0,0x0,8
tick,0x7ff8da10fb34,169854977,0,0x0,8
tick,0x7ff8da10fb34,169870047,0,0x0,8
tick,0x7ff8da10fb34,169884735,0,0x0,8
tick,0x7ff8da10fb34,169900148,0,0x0,8
tick,0x7ff8da10fb34,169916134,0,0x0,8
tick,0x7ff8da10fb34,169931479,0,0x0,8
tick,0x7ff8da10fb34,169946878,0,0x0,8
tick,0x7ff8da10fb34,169961990,0,0x0,8
tick,0x7ff8da10fb34,169978204,0,0x0,8
tick,0x7ff8da10fb34,169993111,0,0x0,8
tick,0x7ff8da10fb34,170008099,0,0x0,8
tick,0x7ff8da10fb34,170023138,0,0x0,8
tick,0x7ff8da10fb34,170038333,0,0x0,8
tick,0x7ff8da10fb34,170054267,0,0x0,8
tick,0x7ff8da10fb34,170069061,0,0x0,8
tick,0x7ff8da10fb34,170084500,0,0x0,8
tick,0x7ff8da10fb34,170099720,0,0x0,8
tick,0x7ff8da10fb34,170115699,0,0x0,8
tick,0x7ff8da10fb34,170131696,0,0x0,8
tick,0x7ff8da10fb34,170147827,0,0x0,8
tick,0x7ff8da10fb34,170163813,0,0x0,8
tick,0x7ff8da10fb34,170179147,0,0x0,8
tick,0x7ff8da10fb34,170194182,0,0x0,8
tick,0x7ff8da10fb34,170209118,0,0x0,8
tick,0x7ff8da10fb34,170224030,0,0x0,8
tick,0x7ff8da10fb34,170239397,0,0x0,8
tick,0x7ff8da10fb34,170255438,0,0x0,8
tick,0x7ff8da10fb34,170270113,0,0x0,8
tick,0x7ff8da10fb34,170285941,0,0x0,8
tick,0x7ff8da10fb34,170300999,0,0x0,8
tick,0x7ff8da10fb34,170316339,0,0x0,8
tick,0x7ff8da10fb34,170332126,0,0x0,8
tick,0x7ff8da10fb34,170347244,0,0x0,8
tick,0x7ff8da10fb34,170362866,0,0x0,8
tick,0x7ff8da10fb34,170378520,0,0x0,8
tick,0x7ff8da10fb34,170393142,0,0x0,8
tick,0x7ff8da10fb34,170408418,0,0x0,8
tick,0x7ff8da10fb34,170424187,0,0x0,8
tick,0x7ff8da10fb34,170439725,0,0x0,8
tick,0x7ff8da10fb34,170455125,0,0x0,8
tick,0x7ff8da10fb34,170470133,0,0x0,8
tick,0x7ff8da10fb34,170486309,0,0x0,8
tick,0x7ff8da10fb34,170502143,0,0x0,8
tick,0x7ff8da10fb34,170517091,0,0x0,8
tick,0x7ff8da10fb34,170532382,0,0x0,8
tick,0x7ff8da10fb34,170547195,0,0x0,8
tick,0x7ff8da10fb34,170562770,0,0x0,8
tick,0x7ff8da10fb34,170578400,0,0x0,8
tick,0x7ff8da10fb34,170594271,0,0x0,8
tick,0x7ff8da10fb34,170609668,0,0x0,8
tick,0x7ff8da10fb34,170625122,0,0x0,8
tick,0x7ff8da10fb34,170640418,0,0x0,8
tick,0x7ff8da10fb34,170656151,0,0x0,8
tick,0x7ff8da10fb34,170671818,0,0x0,8
tick,0x7ff8da10fb34,170687021,0,0x0,8
tick,0x7ff8da10fb34,170701990,0,0x0,8
tick,0x7ff8da10fb34,170717258,0,0x0,8
tick,0x7ff8da10fb34,170733410,0,0x0,8
tick,0x7ff8da10fb34,170748796,0,0x0,8
tick,0x7ff8da10fb34,170764561,0,0x0,8
tick,0x7ff8da10fb34,170780295,0,0x0,8
tick,0x7ff8da10fb34,170796052,0,0x0,8
tick,0x7ff8da10fb34,170812008,0,0x0,8
tick,0x7ff8da10fb34,170827473,0,0x0,8
tick,0x7ff8da10fb34,170843026,0,0x0,8
tick,0x7ff8da10fb34,170858015,0,0x0,8
tick,0x7ff8da10fb34,170873242,0,0x0,8
tick,0x7ff8da10fb34,170888342,0,0x0,8
tick,0x7ff8da10fb34,170904210,0,0x0,8
tick,0x7ff8da10fb34,170919555,0,0x0,8
tick,0x7ff8da10fb34,170934347,0,0x0,8
tick,0x7ff8da10fb34,170949435,0,0x0,8
tick,0x7ff8da10fb34,170964722,0,0x0,8
tick,0x7ff8da10fb34,170980069,0,0x0,8
tick,0x7ff8da10fb34,170995921,0,0x0,8
tick,0x7ff8da10fb34,171011555,0,0x0,8
tick,0x7ff8da10fb34,171027744,0,0x0,8
tick,0x7ff8da10fb34,171042345,0,0x0,8
tick,0x7ff8da10fb34,171058251,0,0x0,8
tick,0x7ff8da10fb34,171074252,0,0x0,8
tick,0x7ff8da10fb34,171089685,0,0x0,8
tick,0x7ff8da10fb34,171105191,0,0x0,8
tick,0x7ff8da10fb34,171120116,0,0x0,8
tick,0x7ff8da10fb34,171135198,0,0x0,8
tick,0x7ff8da10fb34,171151248,0,0x0,8
tick,0x7ff8da10fb34,171166497,0,0x0,8
tick,0x7ff8da10fb34,171182062,0,0x0,8
tick,0x7ff8da10fb34,171198163,0,0x0,8
tick,0x7ff8da10fb34,171214050,0,0x0,8
tick,0x7ff8da10fb34,171230196,0,0x0,8
tick,0x7ff8da10fb34,171245791,0,0x0,8
tick,0x7ff8da10fb34,171261497,0,0x0,8
tick,0x7ff8da10fb34,171277743,0,0x0,8
tick,0x7ff8da10fb34,171292803,0,0x0,8
tick,0x7ff8da10fb34,171308003,0,0x0,8
tick,0x7ff8da10fb34,171323266,0,0x0,8
tick,0x7ff8da10fb34,171338462,0,0x0,8
tick,0x7ff8da10fb34,171353654,0,0x0,8
tick,0x7ff8da10fb34,171369304,0,0x0,8
tick,0x7ff8da10fb34,171384450,0,0x0,8
tick,0x7ff8da10fb34,171399804,0,0x0,8
tick,0x7ff8da10fb34,171415094,0,0x0,8
tick,0x7ff8da10fb34,171430198,0,0x0,8
tick,0x7ff8da10fb34,171445749,0,0x0,8
tick,0x7ff8da10fb34,171461368,0,0x0,8
tick,0x7ff8da10fb34,171476051,0,0x0,8
tick,0x7ff8da10fb34,171491231,0,0x0,8
tick,0x7ff8da10fb34,171506981,0,0x0,8
tick,0x7ff8da10fb34,171522216,0,0x0,8
tick,0x7ff8da10fb34,171537424,0,0x0,8
tick,0x7ff8da10fb34,171552775,0,0x0,8
tick,0x7ff8da10fb34,171568377,0,0x0,8
tick,0x7ff8da10fb34,171583743,0,0x0,8
tick,0x7ff8da10fb34,171599673,0,0x0,8
tick,0x7ff8da10fb34,171615139,0,0x0,8
tick,0x7ff8da10fb34,171630121,0,0x0,8
tick,0x7ff8da10fb34,171645749,0,0x0,8
tick,0x7ff8da10fb34,171661290,0,0x0,8
tick,0x7ff8da10fb34,171677775,0,0x0,8
tick,0x7ff8da10fb34,171691978,0,0x0,8
tick,0x7ff8da10fb34,171707101,0,0x0,8
tick,0x7ff8da10fb34,171723077,0,0x0,8
tick,0x7ff8da10fb34,171738632,0,0x0,8
tick,0x7ff8da10fb34,171754246,0,0x0,8
tick,0x7ff8da10fb34,171769110,0,0x0,8
tick,0x7ff8da10fb34,171783953,0,0x0,8
tick,0x7ff8da10fb34,171799547,0,0x0,8
tick,0x7ff8da10fb34,171815038,0,0x0,8
tick,0x7ff8da10fb34,171829977,0,0x0,8
tick,0x7ff8da10fb34,171845603,0,0x0,8
tick,0x7ff8da10fb34,171861957,0,0x0,8
tick,0x7ff8da10fb34,171876872,0,0x0,8
tick,0x7ff8da10fb34,171891889,0,0x0,8
tick,0x7ff8da10fb34,171907403,0,0x0,8
tick,0x7ff8da10fb34,171922950,0,0x0,8
tick,0x7ff8da10fb34,171937738,0,0x0,8
tick,0x7ff8da10fb34,171953209,0,0x0,8
tick,0x7ff8da10fb34,171968351,0,0x0,8
tick,0x7ff8da10fb34,171984197,0,0x0,8
tick,0x7ff8da10fb34,171999485,0,0x0,8
tick,0x7ff8da10fb34,172014995,0,0x0,8
tick,0x7ff8da10fb34,172030201,0,0x0,8
tick,0x7ff8da10fb34,172045554,0,0x0,8
tick,0x7ff8da10fb34,172061068,0,0x0,8
tick,0x7ff8da10fb34,172076249,0,0x0,8
tick,0x7ff8da10fb34,172091043,0,0x0,8
tick,0x7ff8da10fb34,172106184,0,0x0,8
tick,0x7ff8da10fb34,172122195,0,0x0,8
tick,0x7ff8da10fb34,172137217,0,0x0,8
tick,0x7ff8da10fb34,172152271,0,0x0,8
tick,0x7ff8da10fb34,172168080,0,0x0,8
tick,0x7ff8da10fb34,172183325,0,0x0,8
tick,0x7ff8da10fb34,172199311,0,0x0,8
tick,0x7ff8da10fb34,172214640,0,0x0,8
tick,0x7ff8da10fb34,172230083,0,0x0,8
tick,0x7ff8da10fb34,172245413,0,0x0,8
tick,0x7ff8da10fb34,172261063,0,0x0,8
tick,0x7ff8da10fb34,172277607,0,0x0,8
tick,0x7ff8da10fb34,172292352,0,0x0,8
tick,0x7ff8da10fb34,172308467,0,0x0,8
tick,0x7ff8da10fb34,172324185,0,0x0,8
tick,0x7ff8da10fb34,172339980,0,0x0,8
tick,0x7ff8da10fb34,172355315,0,0x0,8
tick,0x7ff8da10fb34,172370323,0,0x0,8
tick,0x7ff8da10fb34,172386262,0,0x0,8
tick,0x7ff8da10fb34,172401323,0,0x0,8
tick,0x7ff8da10fb34,172417157,0,0x0,8
tick,0x7ff8da10fb34,172432609,0,0x0,8
tick,0x7ff8da10fb34,172447444,0,0x0,8
tick,0x7ff8da10fb34,172462823,0,0x0,8
tick,0x7ff8da10fb34,172478124,0,0x0,8
tick,0x7ff8da10fb34,172493405,0,0x0,8
tick,0x7ff8da10fb34,172508984,0,0x0,8
tick,0x7ff8da10fb34,172524149,0,0x0,8
tick,0x7ff8da10fb34,172539933,0,0x0,8
tick,0x7ff8da10fb34,172555081,0,0x0,8
tick,0x7ff8da10fb34,172570625,0,0x0,8
tick,0x7ff8da10fb34,172586111,0,0x0,8
tick,0x7ff8da10fb34,172601307,0,0x0,8
tick,0x7ff8da10fb34,172616747,0,0x0,8
tick,0x7ff8da10fb34,172632218,0,0x0,8
tick,0x7ff8da10fb34,172647795,0,0x0,8
tick,0x7ff8da10fb34,172662548,0,0x0,8
tick,0x7ff8da10fb34,172679739,0,0x0,8
tick,0x7ff8da10fb34,172693254,0,0x0,8
tick,0x7ff8da10fb34,172708781,0,0x0,8
tick,0x7ff8da10fb34,172725455,0,0x0,8
tick,0x7ff8da10fb34,172739613,0,0x0,8
tick,0x7ff8da10fb34,172754587,0,0x0,8
tick,0x7ff8da10fb34,172769990,0,0x0,8
tick,0x7ff8da10fb34,172786121,0,0x0,8
tick,0x7ff8da10fb34,172802118,0,0x0,8
tick,0x7ff8da10fb34,172817408,0,0x0,8
tick,0x7ff8da10fb34,172833019,0,0x0,8
tick,0x7ff8da10fb34,172848676,0,0x0,8
tick,0x7ff8da10fb34,172863783,0,0x0,8
tick,0x7ff8da10fb34,172879030,0,0x0,8
tick,0x7ff8da10fb34,172895002,0,0x0,8
tick,0x7ff8da10fb34,172910301,0,0x0,8
tick,0x7ff8da10fb34,172926089,0,0x0,8
tick,0x7ff8da10fb34,172941264,0,0x0,8
tick,0x7ff8da10fb34,172956557,0,0x0,8
tick,0x7ff8da10fb34,172971712,0,0x0,8
tick,0x7ff8da10fb34,172987154,0,0x0,8
tick,0x7ff8da10fb34,173003146,0,0x0,8
tick,0x7ff8da10fb34,173019208,0,0x0,8
tick,0x7ff8da10fb34,173035078,0,0x0,8
tick,0x7ff8da10fb34,173051073,0,0x0,8
tick,0x7ff8da10fb34,173066211,0,0x0,8
tick,0x7ff8da10fb34,173082188,0,0x0,8
tick,0x7ff8da10fb34,173097373,0,0x0,8
tick,0x7ff8da10fb34,173111992,0,0x0,8
tick,0x7ff8da10fb34,173127981,0,0x0,8
tick,0x7ff8da10fb34,173143385,0,0x0,8
tick,0x7ff8da10fb34,173158963,0,0x0,8
tick,0x7ff8da10fb34,173174098,0,0x0,8
tick,0x7ff8da10fb34,173189321,0,0x0,8
tick,0x7ff8da10fb34,173205337,0,0x0,8
tick,0x7ff8da10fb34,173221034,0,0x0,8
tick,0x7ff8da10fb34,173236364,0,0x0,8
tick,0x7ff8da10fb34,173251990,0,0x0,8
tick,0x7ff8da10fb34,173267062,0,0x0,8
tick,0x7ff8da10fb34,173282199,0,0x0,8
tick,0x7ff8da10fb34,173297927,0,0x0,8
tick,0x7ff8da10fb34,173313416,0,0x0,8
tick,0x7ff8da10fb34,173329489,0,0x0,8
tick,0x7ff8da10fb34,173345642,0,0x0,8
tick,0x7ff8da10fb34,173361781,0,0x0,8
tick,0x7ff8da10fb34,173377336,0,0x0,8
tick,0x7ff8da10fb34,173392282,0,0x0,8
tick,0x7ff8da10fb34,173408216,0,0x0,8
tick,0x7ff8da10fb34,173423464,0,0x0,8
tick,0x7ff8da10fb34,173439545,0,0x0,8
tick,0x7ff8da10fb34,173455459,0,0x0,8
tick,0x7ff8da10fb34,173471437,0,0x0,8
tick,0x7ff8da10fb34,173487594,0,0x0,8
tick,0x7ff8da10fb34,173503553,0,0x0,8
tick,0x7ff8da10fb34,173518391,0,0x0,8
tick,0x7ff8da10fb34,173533407,0,0x0,8
tick,0x7ff8da10fb34,173549402,0,0x0,8
tick,0x7ff8da10fb34,173564984,0,0x0,8
tick,0x7ff8da10fb34,173581162,0,0x0,8
tick,0x7ff8da10fb34,173596950,0,0x0,8
tick,0x7ff8da10fb34,173612989,0,0x0,8
tick,0x7ff8da10fb34,173628977,0,0x0,8
tick,0x7ff8da10fb34,173645013,0,0x0,8
tick,0x7ff8da10fb34,173660927,0,0x0,8
tick,0x7ff8da10fb34,173675956,0,0x0,8
tick,0x7ff8da10fb34,173691100,0,0x0,8
tick,0x7ff8da10fb34,173706935,0,0x0,8
tick,0x7ff8da10fb34,173722905,0,0x0,8
tick,0x7ff8da10fb34,173738395,0,0x0,8
tick,0x7ff8da10fb34,173753701,0,0x0,8
tick,0x7ff8da10fb34,173769539,0,0x0,8
tick,0x7ff8da10fb34,173784025,0,0x0,8
tick,0x7ff8da10fb34,173799765,0,0x0,8
tick,0x7ff8da10fb34,173814950,0,0x0,8
tick,0x7ff8da10fb34,173830412,0,0x0,8
tick,0x7ff8da10fb34,173846004,0,0x0,8
tick,0x7ff8da10fb34,173861331,0,0x0,8
tick,0x7ff8da10fb34,173877073,0,0x0,8
tick,0x7ff8da10fb34,173892778,0,0x0,8
tick,0x7ff8da10fb34,173908886,0,0x0,8
tick,0x7ff8da10fb34,173924317,0,0x0,8
tick,0x7ff8da10fb34,173939255,0,0x0,8
tick,0x7ff8da10fb34,173955052,0,0x0,8
tick,0x7ff8da10fb34,173970854,0,0x0,8
tick,0x7ff8da10fb34,173986015,0,0x0,8
tick,0x7ff8da10fb34,174000645,0,0x0,8
tick,0x7ff8da10fb34,174016938,0,0x0,8
tick,0x7ff8da10fb34,174031986,0,0x0,8
tick,0x7ff8da10fb34,174047613,0,0x0,8
tick,0x7ff8da10fb34,174063680,0,0x0,8
tick,0x7ff8da10fb34,174078900,0,0x0,8
tick,0x7ff8da10fb34,174094863,0,0x0,8
tick,0x7ff8da10fb34,174110482,0,0x0,8
tick,0x7ff8da10fb34,174126115,0,0x0,8
tick,0x7ff8da10fb34,174142237,0,0x0,8
tick,0x7ff8da10fb34,174156745,0,0x0,8
tick,0x7ff8da10fb34,174178432,0,0x0,8
tick,0x7ff8da10fb34,174187485,0,0x0,8
tick,0x7ff8da10fb34,174202625,0,0x0,8
tick,0x7ff8da10fb34,174218502,0,0x0,8
tick,0x7ff8da10fb34,174234061,0,0x0,8
tick,0x7ff8da10fb34,174249909,0,0x0,8
tick,0x7ff8da10fb34,174265156,0,0x0,8
tick,0x7ff8da10fb34,174280845,0,0x0,8
tick,0x7ff8da10fb34,174295819,0,0x0,8
tick,0x7ff8da10fb34,174311518,0,0x0,8
tick,0x7ff8da10fb34,174326477,0,0x0,8
tick,0x7ff8da10fb34,174342839,0,0x0,8
tick,0x7ff8da10fb34,174356465,0,0x0,8
tick,0x7ff8da10fb34,174372009,0,0x0,8
tick,0x7ff8da10fb34,174387403,0,0x0,8
tick,0x7ff8da10fb34,174402396,0,0x0,8
tick,0x7ff8da10fb34,174417800,0,0x0,8
tick,0x7ff8da10fb34,174433750,0,0x0,8
tick,0x7ff8da10fb34,174448924,0,0x0,8
tick,0x7ff8da10fb34,174464000,0,0x0,8
tick,0x7ff8da10fb34,174479697,0,0x0,8
tick,0x7ff8da10fb34,174495369,0,0x0,8
tick,0x7ff8da10fb34,174510944,0,0x0,8
tick,0x7ff8da10fb34,174526873,0,0x0,8
tick,0x7ff8da10fb34,174542560,0,0x0,8
tick,0x7ff8da10fb34,174558662,0,0x0,8
tick,0x7ff8da10fb34,174574124,0,0x0,8
tick,0x7ff8da10fb34,174589097,0,0x0,8
tick,0x7ff8da10fb34,174605142,0,0x0,8
tick,0x7ff8da10fb34,174620571,0,0x0,8
tick,0x7ff8da10fb34,174636153,0,0x0,8
tick,0x7ff8da10fb34,174651143,0,0x0,8
tick,0x7ff8da10fb34,174666911,0,0x0,8
tick,0x7ff8da10fb34,174681785,0,0x0,8
tick,0x7ff8da10fb34,174697052,0,0x0,8
tick,0x7ff8da10fb34,174712273,0,0x0,8
tick,0x7ff8da10fb34,174727561,0,0x0,8
tick,0x7ff8da10fb34,174743455,0,0x0,8
tick,0x7ff8da10fb34,174759371,0,0x0,8
tick,0x7ff8da10fb34,174774969,0,0x0,8
tick,0x7ff8da10fb34,174790090,0,0x0,8
tick,0x7ff8da10fb34,174805101,0,0x0,8
tick,0x7ff8da10fb34,174821171,0,0x0,8
tick,0x7ff8da10fb34,174836198,0,0x0,8
tick,0x7ff8da10fb34,174851167,0,0x0,8
tick,0x7ff8da10fb34,174866569,0,0x0,8
tick,0x7ff8da10fb34,174882162,0,0x0,8
tick,0x7ff8da10fb34,174897449,0,0x0,8
tick,0x7ff8da10fb34,174912713,0,0x0,8
tick,0x7ff8da10fb34,174928649,0,0x0,8
tick,0x7ff8da10fb34,174944251,0,0x0,8
tick,0x7ff8da10fb34,174959482,0,0x0,8
tick,0x7ff8da10fb34,174974604,0,0x0,8
tick,0x7ff8da10fb34,174990361,0,0x0,8
tick,0x7ff8da10fb34,175005138,0,0x0,8
tick,0x7ff8da10fb34,175021196,0,0x0,8
tick,0x7ff8da10fb34,175037001,0,0x0,8
tick,0x7ff8da10fb34,175052148,0,0x0,8
tick,0x7ff8da10fb34,175067091,0,0x0,8
tick,0x7ff8da10fb34,175082141,0,0x0,8
tick,0x7ff8da10fb34,175098239,0,0x0,8
tick,0x7ff8da10fb34,175113438,0,0x0,8
tick,0x7ff8da10fb34,175128677,0,0x0,8
tick,0x7ff8da10fb34,175144690,0,0x0,8
tick,0x7ff8da10fb34,175160315,0,0x0,8
tick,0x7ff8da10fb34,175176985,0,0x0,8
tick,0x7ff8da10fb34,175192664,0,0x0,8
tick,0x7ff8da10fb34,175208226,0,0x0,8
tick,0x7ff8da10fb34,175223412,0,0x0,8
tick,0x7ff8da10fb34,175238686,0,0x0,8
tick,0x7ff8da10fb34,175254165,0,0x0,8
tick,0x7ff8da10fb34,175269828,0,0x0,8
tick,0x7ff8da10fb34,175285118,0,0x0,8
tick,0x7ff8da10fb34,175300191,0,0x0,8
tick,0x7ff8da10fb34,175316268,0,0x0,8
tick,0x7ff8da10fb34,175332226,0,0x0,8
tick,0x7ff8da10fb34,175347817,0,0x0,8
tick,0x7ff8da10fb34,175363013,0,0x0,8
tick,0x7ff8da10fb34,175378372,0,0x0,8
tick,0x7ff8da10fb34,175394199,0,0x0,8
tick,0x7ff8da10fb34,175409979,0,0x0,8
tick,0x7ff8da10fb34,175425468,0,0x0,8
tick,0x7ff8da10fb34,175440654,0,0x0,8
tick,0x7ff8da10fb34,175456156,0,0x0,8
tick,0x7ff8da10fb34,175471559,0,0x0,8
tick,0x7ff8da10fb34,175487293,0,0x0,8
tick,0x7ff8da10fb34,175502290,0,0x0,8
tick,0x7ff8da10fb34,175518327,0,0x0,8
tick,0x7ff8da10fb34,175534211,0,0x0,8
tick,0x7ff8da10fb34,175549724,0,0x0,8
tick,0x7ff8da10fb34,175565129,0,0x0,8
tick,0x7ff8da10fb34,175580185,0,0x0,8
tick,0x7ff8da10fb34,175596130,0,0x0,8
tick,0x7ff8da10fb34,175611881,0,0x0,8
tick,0x7ff8da10fb34,175627352,0,0x0,8
tick,0x7ff8da10fb34,175643208,0,0x0,8
tick,0x7ff8da10fb34,175659010,0,0x0,8
tick,0x7ff8da10fb34,175674248,0,0x0,8
tick,0x7ff8da10fb34,175689527,0,0x0,8
tick,0x7ff8da10fb34,175705121,0,0x0,8
tick,0x7ff8da10fb34,175721304,0,0x0,8
tick,0x7ff8da10fb34,175737211,0,0x0,8
tick,0x7ff8da10fb34,175753254,0,0x0,8
tick,0x7ff8da10fb34,175768970,0,0x0,8
tick,0x7ff8da10fb34,175784305,0,0x0,8
tick,0x7ff8da10fb34,175799152,0,0x0,8
tick,0x7ff8da10fb34,175813989,0,0x0,8
tick,0x7ff8da10fb34,175829176,0,0x0,8
tick,0x7ff8da10fb34,175844700,0,0x0,8
tick,0x7ff8da10fb34,175860660,0,0x0,8
tick,0x7ff8da10fb34,175876223,0,0x0,8
tick,0x7ff8da10fb34,175891897,0,0x0,8
tick,0x7ff8da10fb34,175907334,0,0x0,8
tick,0x7ff8da10fb34,175922281,0,0x0,8
tick,0x7ff8da10fb34,175938019,0,0x0,8
tick,0x7ff8da10fb34,175953186,0,0x0,8
tick,0x7ff8da10fb34,175968627,0,0x0,8
tick,0x7ff8da10fb34,175984226,0,0x0,8
tick,0x7ff8da10fb34,175999417,0,0x0,8
tick,0x7ff8da10fb34,176015125,0,0x0,8
tick,0x7ff8da10fb34,176031188,0,0x0,8
tick,0x7ff8da10fb34,176047271,0,0x0,8
tick,0x7ff8da10fb34,176062455,0,0x0,8
tick,0x7ff8da10fb34,176078072,0,0x0,8
tick,0x7ff8da10fb34,176093782,0,0x0,8
tick,0x7ff8da10fb34,176109324,0,0x0,8
tick,0x7ff8da10fb34,176125195,0,0x0,8
tick,0x7ff8da10fb34,176140755,0,0x0,8
tick,0x7ff8da10fb34,176156511,0,0x0,8
tick,0x7ff8da10fb34,176170825,0,0x0,8
tick,0x7ff8da10fb34,176186041,0,0x0,8
tick,0x7ff8da10fb34,176202017,0,0x0,8
tick,0x7ff8da10fb34,176217043,0,0x0,8
tick,0x7ff8da10fb34,176232186,0,0x0,8
tick,0x7ff8da10fb34,176247578,0,0x0,8
tick,0x7ff8da10fb34,176262923,0,0x0,8
tick,0x7ff8da10fb34,176279014,0,0x0,8
tick,0x7ff8da10fb34,176294902,0,0x0,8
tick,0x7ff8da10fb34,176310366,0,0x0,8
tick,0x7ff8da10fb34,176326253,0,0x0,8
tick,0x7ff8da10fb34,176340655,0,0x0,8
tick,0x7ff8da10fb34,176356475,0,0x0,8
tick,0x7ff8da10fb34,176371668,0,0x0,8
tick,0x7ff8da10fb34,176387029,0,0x0,8
tick,0x7ff8da10fb34,176402225,0,0x0,8
tick,0x7ff8da10fb34,176417520,0,0x0,8
tick,0x7ff8da10fb34,176432933,0,0x0,8
tick,0x7ff8da10fb34,176448265,0,0x0,8
tick,0x7ff8da10fb34,176463979,0,0x0,8
tick,0x7ff8da10fb34,176478981,0,0x0,8
tick,0x7ff8da10fb34,176494382,0,0x0,8
tick,0x7ff8da10fb34,176510225,0,0x0,8
tick,0x7ff8da10fb34,176526007,0,0x0,8
tick,0x7ff8da10fb34,176541683,0,0x0,8
tick,0x7ff8da10fb34,176557396,0,0x0,8
tick,0x7ff8da10fb34,176572591,0,0x0,8
tick,0x7ff8da10fb34,176588041,0,0x0,8
tick,0x7ff8da10fb34,176604257,0,0x0,8
tick,0x7ff8da10fb34,176619571,0,0x0,8
tick,0x7ff8da10fb34,176635116,0,0x0,8
tick,0x7ff8da10fb34,176651206,0,0x0,8
tick,0x7ff8da10fb34,176667133,0,0x0,8
tick,0x7ff8da10fb34,176683192,0,0x0,8
tick,0x7ff8da10fb34,176699158,0,0x0,8
tick,0x7ff8da10fb34,176714983,0,0x0,8
tick,0x7ff8da10fb34,176730459,0,0x0,8
tick,0x7ff8da10fb34,176746193,0,0x0,8
tick,0x7ff8da10fb34,176761251,0,0x0,8
tick,0x7ff8da10fb34,176776959,0,0x0,8
tick,0x7ff8da10fb34,176792449,0,0x0,8
tick,0x7ff8da10fb34,176808097,0,0x0,8
tick,0x7ff8da10fb34,176824040,0,0x0,8
tick,0x7ff8da10fb34,176839671,0,0x0,8
tick,0x7ff8da10fb34,176855140,0,0x0,8
tick,0x7ff8da10fb34,176871060,0,0x0,8
tick,0x7ff8da10fb34,176886168,0,0x0,8
tick,0x7ff8da10fb34,176901232,0,0x0,8
tick,0x7ff8da10fb34,176916139,0,0x0,8
tick,0x7ff8da10fb34,176931193,0,0x0,8
tick,0x7ff8da10fb34,176947270,0,0x0,8
tick,0x7ff8da10fb34,176961843,0,0x0,8
tick,0x7ff8da10fb34,176977736,0,0x0,8
tick,0x7ff8da10fb34,176993228,0,0x0,8
tick,0x7ff8da10fb34,177009194,0,0x0,8
tick,0x7ff8da10fb34,177024788,0,0x0,8
tick,0x7ff8da10fb34,177039922,0,0x0,8
tick,0x7ff8da10fb34,177055120,0,0x0,8
tick,0x7ff8da10fb34,177070732,0,0x0,8
tick,0x7ff8da10fb34,177086151,0,0x0,8
tick,0x7ff8da10fb34,177102208,0,0x0,8
tick,0x7ff8da10fb34,177118314,0,0x0,8
tick,0x7ff8da10fb34,177134194,0,0x0,8
tick,0x7ff8da10fb34,177150268,0,0x0,8
tick,0x7ff8da10fb34,177165305,0,0x0,8
tick,0x7ff8da10fb34,177180133,0,0x0,8
tick,0x7ff8da10fb34,177195111,0,0x0,8
tick,0x7ff8da10fb34,177211060,0,0x0,8
tick,0x7ff8da10fb34,177226686,0,0x0,8
tick,0x7ff8da10fb34,177242216,0,0x0,8
tick,0x7ff8da10fb34,177257952,0,0x0,8
tick,0x7ff8da10fb34,177273180,0,0x0,8
tick,0x7ff8da10fb34,177288977,0,0x0,8
tick,0x7ff8da10fb34,177304200,0,0x0,8
tick,0x7ff8da10fb34,177319413,0,0x0,8
tick,0x7ff8da10fb34,177334630,0,0x0,8
tick,0x7ff8da10fb34,177350828,0,0x0,8
tick,0x7ff8da10fb34,177366020,0,0x0,8
tick,0x7ff8da10fb34,177381207,0,0x0,8
tick,0x7ff8da10fb34,177396522,0,0x0,8
tick,0x7ff8da10fb34,177411849,0,0x0,8
tick,0x7ff8da10fb34,177427207,0,0x0,8
tick,0x7ff8da10fb34,177442240,0,0x0,8
tick,0x7ff8da10fb34,177457843,0,0x0,8
tick,0x7ff8da10fb34,177473128,0,0x0,8
tick,0x7ff8da10fb34,177488454,0,0x0,8
tick,0x7ff8da10fb34,177504174,0,0x0,8
tick,0x7ff8da10fb34,177519574,0,0x0,8
tick,0x7ff8da10fb34,177535154,0,0x0,8
tick,0x7ff8da10fb34,177551266,0,0x0,8
tick,0x7ff8da10fb34,177567198,0,0x0,8
tick,0x7ff8da10fb34,177582174,0,0x0,8
tick,0x7ff8da10fb34,177598154,0,0x0,8
tick,0x7ff8da10fb34,177613582,0,0x0,8
tick,0x7ff8da10fb34,177629357,0,0x0,8
tick,0x7ff8da10fb34,177644217,0,0x0,8
tick,0x7ff8da10fb34,177659819,0,0x0,8
tick,0x7ff8da10fb34,177675480,0,0x0,8
tick,0x7ff8da10fb34,177691184,0,0x0,8
tick,0x7ff8da10fb34,177706836,0,0x0,8
tick,0x7ff8da10fb34,177722236,0,0x0,8
tick,0x7ff8da10fb34,177737303,0,0x0,8
tick,0x7ff8da10fb34,177752251,0,0x0,8
tick,0x7ff8da10fb34,177768154,0,0x0,8
tick,0x7ff8da10fb34,177783300,0,0x0,8
tick,0x7ff8da10fb34,177798643,0,0x0,8
tick,0x7ff8da10fb34,177814707,0,0x0,8
tick,0x7ff8da10fb34,177830117,0,0x0,8
tick,0x7ff8da10fb34,177846047,0,0x0,8
tick,0x7ff8da10fb34,177860735,0,0x0,8
tick,0x7ff8da10fb34,177876340,0,0x0,8
tick,0x7ff8da10fb34,177892017,0,0x0,8
tick,0x7ff8da10fb34,177907749,0,0x0,8
tick,0x7ff8da10fb34,177923668,0,0x0,8
tick,0x7ff8da10fb34,177939215,0,0x0,8
tick,0x7ff8da10fb34,177954253,0,0x0,8
tick,0x7ff8da10fb34,177969961,0,0x0,8
tick,0x7ff8da10fb34,177985104,0,0x0,8
tick,0x7ff8da10fb34,178001208,0,0x0,8
tick,0x7ff8da10fb34,178016161,0,0x0,8
tick,0x7ff8da10fb34,178031139,0,0x0,8
tick,0x7ff8da10fb34,178046468,0,0x0,8
tick,0x7ff8da10fb34,178061646,0,0x0,8
tick,0x7ff8da10fb34,178076983,0,0x0,8
tick,0x7ff8da10fb34,178091879,0,0x0,8
tick,0x7ff8da10fb34,178107527,0,0x0,8
tick,0x7ff8da10fb34,178123229,0,0x0,8
tick,0x7ff8da10fb34,178139342,0,0x0,8
tick,0x7ff8da10fb34,178154141,0,0x0,8
tick,0x7ff8da10fb34,178169206,0,0x0,8
tick,0x7ff8da10fb34,178184146,0,0x0,8
tick,0x7ff8da10fb34,178199043,0,0x0,8
tick,0x7ff8da10fb34,178214164,0,0x0,8
tick,0x7ff8da10fb34,178229522,0,0x0,8
tick,0x7ff8da10fb34,178244621,0,0x0,8
tick,0x7ff8da10fb34,178260249,0,0x0,8
tick,0x7ff8da10fb34,178276224,0,0x0,8
tick,0x7ff8da10fb34,178291799,0,0x0,8
tick,0x7ff8da10fb34,178307519,0,0x0,8
tick,0x7ff8da10fb34,178323341,0,0x0,8
tick,0x7ff8da10fb34,178338294,0,0x0,8
tick,0x7ff8da10fb34,178354342,0,0x0,8
tick,0x7ff8da10fb34,178370286,0,0x0,8
tick,0x7ff8da10fb34,178386336,0,0x0,8
tick,0x7ff8da10fb34,178402230,0,0x0,8
tick,0x7ff8da10fb34,178418178,0,0x0,8
tick,0x7ff8da10fb34,178433967,0,0x0,8
tick,0x7ff8da10fb34,178449507,0,0x0,8
tick,0x7ff8da10fb34,178465494,0,0x0,8
tick,0x7ff8da10fb34,178481486,0,0x0,8
tick,0x7ff8da10fb34,178496518,0,0x0,8
tick,0x7ff8da10fb34,178511453,0,0x0,8
tick,0x7ff8da10fb34,178527464,0,0x0,8
tick,0x7ff8da10fb34,178542471,0,0x0,8
tick,0x7ff8da10fb34,178558432,0,0x0,8
tick,0x7ff8da10fb34,178573555,0,0x0,8
tick,0x7ff8da10fb34,178588416,0,0x0,8
tick,0x7ff8da10fb34,178604425,0,0x0,8
tick,0x7ff8da10fb34,178619442,0,0x0,8
tick,0x7ff8da10fb34,178634460,0,0x0,8
tick,0x7ff8da10fb34,178650473,0,0x0,8
tick,0x7ff8da10fb34,178665412,0,0x0,8
tick,0x7ff8da10fb34,178680409,0,0x0,8
tick,0x7ff8da10fb34,178696433,0,0x0,8
tick,0x7ff8da10fb34,178711407,0,0x0,8
tick,0x7ff8da10fb34,178726178,0,0x0,8
tick,0x7ff8da10fb34,178741531,0,0x0,8
tick,0x7ff8da10fb34,178758058,0,0x0,8
tick,0x7ff8da10fb34,178772470,0,0x0,8
tick,0x7ff8da10fb34,178788272,0,0x0,8
tick,0x7ff8da10fb34,178804220,0,0x0,8
tick,0x7ff8da10fb34,178819560,0,0x0,8
tick,0x7ff8da10fb34,178834988,0,0x0,8
tick,0x7ff8da10fb34,178850190,0,0x0,8
tick,0x7ff8da10fb34,178865098,0,0x0,8
tick,0x7ff8da10fb34,178879919,0,0x0,8
tick,0x7ff8da10fb34,178895096,0,0x0,8
tick,0x7ff8da10fb34,178910254,0,0x0,8
tick,0x7ff8da10fb34,178925967,0,0x0,8
tick,0x7ff8da10fb34,178941581,0,0x0,8
tick,0x7ff8da10fb34,178957295,0,0x0,8
tick,0x7ff8da10fb34,178972883,0,0x0,8
tick,0x7ff8da10fb34,178988619,0,0x0,8
tick,0x7ff8da10fb34,179003124,0,0x0,8
tick,0x7ff8da10fb34,179018685,0,0x0,8
tick,0x7ff8da10fb34,179033890,0,0x0,8
tick,0x7ff8da10fb34,179049163,0,0x0,8
tick,0x7ff8da10fb34,179065070,0,0x0,8
tick,0x7ff8da10fb34,179081176,0,0x0,8
tick,0x7ff8da10fb34,179097053,0,0x0,8
tick,0x7ff8da10fb34,179112205,0,0x0,8
tick,0x7ff8da10fb34,179127509,0,0x0,8
tick,0x7ff8da10fb34,179143472,0,0x0,8
tick,0x7ff8da10fb34,179159150,0,0x0,8
tick,0x7ff8da10fb34,179175166,0,0x0,8
tick,0x7ff8da10fb34,179190531,0,0x0,8
tick,0x7ff8da10fb34,179205410,0,0x0,8
tick,0x7ff8da10fb34,179220181,0,0x0,8
tick,0x7ff8da10fb34,179236160,0,0x0,8
tick,0x7ff8da10fb34,179252196,0,0x0,8
tick,0x7ff8da10fb34,179267614,0,0x0,8
tick,0x7ff8da10fb34,179282815,0,0x0,8
tick,0x7ff8da10fb34,179298154,0,0x0,8
tick,0x7ff8da10fb34,179313883,0,0x0,8
tick,0x7ff8da10fb34,179329601,0,0x0,8
tick,0x7ff8da10fb34,179345420,0,0x0,8
tick,0x7ff8da10fb34,179361076,0,0x0,8
tick,0x7ff8da10fb34,179377235,0,0x0,8
tick,0x7ff8da10fb34,179392428,0,0x0,8
tick,0x7ff8da10fb34,179408176,0,0x0,8
tick,0x7ff8da10fb34,179424074,0,0x0,8
tick,0x7ff8da10fb34,179439988,0,0x0,8
tick,0x7ff8da10fb34,179455194,0,0x0,8
tick,0x7ff8da10fb34,179470382,0,0x0,8
tick,0x7ff8da10fb34,179486134,0,0x0,8
tick,0x7ff8da10fb34,179501174,0,0x0,8
tick,0x7ff8da10fb34,179516957,0,0x0,8
tick,0x7ff8da10fb34,179532032,0,0x0,8
tick,0x7ff8da10fb34,179547175,0,0x0,8
tick,0x7ff8da10fb34,179562318,0,0x0,8
tick,0x7ff8da10fb34,179577884,0,0x0,8
tick,0x7ff8da10fb34,179593086,0,0x0,8
tick,0x7ff8da10fb34,179609035,0,0x0,8
tick,0x7ff8da10fb34,179624617,0,0x0,8
tick,0x7ff8da10fb34,179640281,0,0x0,8
tick,0x7ff8da10fb34,179656308,0,0x0,8
tick,0x7ff8da10fb34,179671924,0,0x0,8
tick,0x7ff8da10fb34,179686910,0,0x0,8
tick,0x7ff8da10fb34,179702204,0,0x0,8
tick,0x7ff8da10fb34,179718332,0,0x0,8
tick,0x7ff8da10fb34,179734164,0,0x0,8
tick,0x7ff8da10fb34,179749976,0,0x0,8
tick,0x7ff8da10fb34,179766116,0,0x0,8
tick,0x7ff8da10fb34,179782233,0,0x0,8
tick,0x7ff8da10fb34,179797777,0,0x0,8
tick,0x7ff8da10fb34,179813534,0,0x0,8
tick,0x7ff8da10fb34,179829649,0,0x0,8
tick,0x7ff8da10fb34,179845206,0,0x0,8
tick,0x7ff8da10fb34,179860135,0,0x0,8
tick,0x7ff8da10fb34,179875869,0,0x0,8
tick,0x7ff8da10fb34,179891177,0,0x0,8
tick,0x7ff8da10fb34,179907521,0,0x0,8
tick,0x7ff8da10fb34,179922204,0,0x0,8
tick,0x7ff8da10fb34,179938358,0,0x0,8
tick,0x7ff8da10fb34,179953199,0,0x0,8
tick,0x7ff8da10fb34,179968736,0,0x0,8
tick,0x7ff8da10fb34,179984247,0,0x0,8
tick,0x7ff8da10fb34,179999597,0,0x0,8
tick,0x7ff8da10fb34,180015086,0,0x0,8
tick,0x7ff8da10fb34,180031187,0,0x0,8
tick,0x7ff8da10fb34,180047143,0,0x0,8
tick,0x7ff8da10fb34,180063162,0,0x0,8
tick,0x7ff8da10fb34,180078923,0,0x0,8
tick,0x7ff8da10fb34,180093886,0,0x0,8
tick,0x7ff8da10fb34,180109127,0,0x0,8
tick,0x7ff8da10fb34,180124380,0,0x0,8
tick,0x7ff8da10fb34,180140435,0,0x0,8
tick,0x7ff8da10fb34,180155373,0,0x0,8
tick,0x7ff8da10fb34,180170161,0,0x0,8
tick,0x7ff8da10fb34,180186025,0,0x0,8
tick,0x7ff8da10fb34,180201098,0,0x0,8
tick,0x7ff8da10fb34,180216900,0,0x0,8
tick,0x7ff8da10fb34,180232188,0,0x0,8
tick,0x7ff8da10fb34,180247139,0,0x0,8
tick,0x7ff8da10fb34,180262157,0,0x0,8
tick,0x7ff8da10fb34,180278168,0,0x0,8
tick,0x7ff8da10fb34,180293102,0,0x0,8
tick,0x7ff8da10fb34,180308098,0,0x0,8
tick,0x7ff8da10fb34,180323341,0,0x0,8
tick,0x7ff8da10fb34,180338419,0,0x0,8
tick,0x7ff8da10fb34,180353183,0,0x0,8
tick,0x7ff8da10fb34,180368695,0,0x0,8
tick,0x7ff8da10fb34,180384236,0,0x0,8
tick,0x7ff8da10fb34,180399352,0,0x0,8
tick,0x7ff8da10fb34,180415139,0,0x0,8
tick,0x7ff8da10fb34,180430184,0,0x0,8
tick,0x7ff8da10fb34,180446161,0,0x0,8
tick,0x7ff8da10fb34,180461987,0,0x0,8
tick,0x7ff8da10fb34,180477225,0,0x0,8
tick,0x7ff8da10fb34,180492703,0,0x0,8
tick,0x7ff8da10fb34,180508080,0,0x0,8
tick,0x7ff8da10fb34,180524204,0,0x0,8
tick,0x7ff8da10fb34,180538896,0,0x0,8
tick,0x7ff8da10fb34,180554212,0,0x0,8
tick,0x7ff8da10fb34,180569685,0,0x0,8
tick,0x7ff8da10fb34,180585030,0,0x0,8
tick,0x7ff8da10fb34,180600222,0,0x0,8
tick,0x7ff8da10fb34,180616286,0,0x0,8
tick,0x7ff8da10fb34,180632232,0,0x0,8
tick,0x7ff8da10fb34,180648120,0,0x0,8
tick,0x7ff8da10fb34,180664196,0,0x0,8
tick,0x7ff8da10fb34,180679502,0,0x0,8
tick,0x7ff8da10fb34,180694716,0,0x0,8
tick,0x7ff8da10fb34,180710145,0,0x0,8
tick,0x7ff8da10fb34,180726158,0,0x0,8
tick,0x7ff8da10fb34,180740809,0,0x0,8
tick,0x7ff8da10fb34,180756518,0,0x0,8
tick,0x7ff8da10fb34,180771739,0,0x0,8
tick,0x7ff8da10fb34,180786403,0,0x0,8
tick,0x7ff8da10fb34,180802371,0,0x0,8
tick,0x7ff8da10fb34,180817975,0,0x0,8
tick,0x7ff8da10fb34,180833225,0,0x0,8
tick,0x7ff8da10fb34,180848520,0,0x0,8
tick,0x7ff8da10fb34,180864248,0,0x0,8
tick,0x7ff8da10fb34,180880138,0,0x0,8
tick,0x7ff8da10fb34,180896193,0,0x0,8
tick,0x7ff8da10fb34,180912143,0,0x0,8
tick,0x7ff8da10fb34,180927620,0,0x0,8
tick,0x7ff8da10fb34,180942587,0,0x0,8
tick,0x7ff8da10fb34,180958221,0,0x0,8
tick,0x7ff8da10fb34,180974031,0,0x0,8
tick,0x7ff8da10fb34,180989853,0,0x0,8
tick,0x7ff8da10fb34,181005137,0,0x0,8
tick,0x7ff8da10fb34,181020515,0,0x0,8
tick,0x7ff8da10fb34,181036216,0,0x0,8
tick,0x7ff8da10fb34,181052206,0,0x0,8
tick,0x7ff8da10fb34,181068038,0,0x0,8
tick,0x7ff8da10fb34,181083233,0,0x0,8
tick,0x7ff8da10fb34,181098521,0,0x0,8
tick,0x7ff8da10fb34,181114226,0,0x0,8
tick,0x7ff8da10fb34,181129410,0,0x0,8
tick,0x7ff8da10fb34,181145519,0,0x0,8
tick,0x7ff8da10fb34,181160961,0,0x0,8
tick,0x7ff8da10fb34,181177042,0,0x0,8
tick,0x7ff8da10fb34,181192409,0,0x0,8
tick,0x7ff8da10fb34,181208015,0,0x0,8
tick,0x7ff8da10fb34,181223437,0,0x0,8
tick,0x7ff8da10fb34,181238119,0,0x0,8
tick,0x7ff8da10fb34,181253184,0,0x0,8
tick,0x7ff8da10fb34,181268427,0,0x0,8
tick,0x7ff8da10fb34,181284181,0,0x0,8
tick,0x7ff8da10fb34,181300070,0,0x0,8
tick,0x7ff8da10fb34,181316313,0,0x0,8
tick,0x7ff8da10fb34,181332166,0,0x0,8
tick,0x7ff8da10fb34,181347930,0,0x0,8
tick,0x7ff8da10fb34,181363221,0,0x0,8
tick,0x7ff8da10fb34,181378408,0,0x0,8
tick,0x7ff8da10fb34,181393592,0,0x0,8
tick,0x7ff8da10fb34,181409224,0,0x0,8
tick,0x7ff8da10fb34,181425046,0,0x0,8
tick,0x7ff8da10fb34,181440339,0,0x0,8
tick,0x7ff8da10fb34,181456118,0,0x0,8
tick,0x7ff8da10fb34,181471247,0,0x0,8
tick,0x7ff8da10fb34,181486216,0,0x0,8
tick,0x7ff8da10fb34,181500858,0,0x0,8
tick,0x7ff8da10fb34,181516183,0,0x0,8
tick,0x7ff8da10fb34,181531188,0,0x0,8
tick,0x7ff8da10fb34,181546603,0,0x0,8
tick,0x7ff8da10fb34,181561826,0,0x0,8
tick,0x7ff8da10fb34,181577127,0,0x0,8
tick,0x7ff8da10fb34,181592301,0,0x0,8
tick,0x7ff8da10fb34,181608139,0,0x0,8
tick,0x7ff8da10fb34,181623772,0,0x0,8
tick,0x7ff8da10fb34,181639818,0,0x0,8
tick,0x7ff8da10fb34,181654201,0,0x0,8
tick,0x7ff8da10fb34,181669598,0,0x0,8
tick,0x7ff8da10fb34,181684872,0,0x0,8
tick,0x7ff8da10fb34,181700218,0,0x0,8
tick,0x7ff8da10fb34,181716134,0,0x0,8
tick,0x7ff8da10fb34,181732143,0,0x0,8
tick,0x7ff8da10fb34,181748008,0,0x0,8
tick,0x7ff8da10fb34,181763590,0,0x0,8
tick,0x7ff8da10fb34,181779390,0,0x0,8
tick,0x7ff8da10fb34,181794428,0,0x0,8
tick,0x7ff8da10fb34,181809759,0,0x0,8
tick,0x7ff8da10fb34,181825120,0,0x0,8
tick,0x7ff8da10fb34,181840494,0,0x0,8
tick,0x7ff8da10fb34,181856458,0,0x0,8
tick,0x7ff8da10fb34,181870868,0,0x0,8
tick,0x7ff8da10fb34,181886137,0,0x0,8
tick,0x7ff8da10fb34,181901831,0,0x0,8
tick,0x7ff8da10fb34,181917863,0,0x0,8
tick,0x7ff8da10fb34,181933661,0,0x0,8
tick,0x7ff8da10fb34,181949092,0,0x0,8
tick,0x7ff8da10fb34,181964912,0,0x0,8
tick,0x7ff8da10fb34,181980038,0,0x0,8
tick,0x7ff8da10fb34,181996152,0,0x0,8
tick,0x7ff8da10fb34,182010939,0,0x0,8
tick,0x7ff8da10fb34,182026178,0,0x0,8
tick,0x7ff8da10fb34,182042114,0,0x0,8
tick,0x7ff8da10fb34,182056910,0,0x0,8
tick,0x7ff8da10fb34,182072564,0,0x0,8
tick,0x7ff8da10fb34,182088153,0,0x0,8
tick,0x7ff8da10fb34,182103178,0,0x0,8
tick,0x7ff8da10fb34,182118545,0,0x0,8
tick,0x7ff8da10fb34,182134216,0,0x0,8
tick,0x7ff8da10fb34,182149377,0,0x0,8
tick,0x7ff8da10fb34,182164625,0,0x0,8
tick,0x7ff8da10fb34,182180103,0,0x0,8
tick,0x7ff8da10fb34,182196127,0,0x0,8
tick,0x7ff8da10fb34,182211686,0,0x0,8
tick,0x7ff8da10fb34,182227324,0,0x0,8
tick,0x7ff8da10fb34,182242623,0,0x0,8
tick,0x7ff8da10fb34,182257838,0,0x0,8
tick,0x7ff8da10fb34,182273702,0,0x0,8
tick,0x7ff8da10fb34,182289585,0,0x0,8
tick,0x7ff8da10fb34,182304825,0,0x0,8
tick,0x7ff8da10fb34,182320263,0,0x0,8
tick,0x7ff8da10fb34,182336306,0,0x0,8
tick,0x7ff8da10fb34,182352239,0,0x0,8
tick,0x7ff8da10fb34,182367667,0,0x0,8
tick,0x7ff8da10fb34,182382307,0,0x0,8
tick,0x7ff8da10fb34,182397336,0,0x0,8
tick,0x7ff8da10fb34,182412793,0,0x0,8
tick,0x7ff8da10fb34,182427948,0,0x0,8
tick,0x7ff8da10fb34,182443144,0,0x0,8
tick,0x7ff8da10fb34,182458821,0,0x0,8
tick,0x7ff8da10fb34,182474362,0,0x0,8
tick,0x7ff8da10fb34,182489996,0,0x0,8
tick,0x7ff8da10fb34,182504700,0,0x0,8
tick,0x7ff8da10fb34,182519877,0,0x0,8
tick,0x7ff8da10fb34,182535101,0,0x0,8
tick,0x7ff8da10fb34,182550310,0,0x0,8
tick,0x7ff8da10fb34,182566227,0,0x0,8
tick,0x7ff8da10fb34,182582194,0,0x0,8
tick,0x7ff8da10fb34,182597889,0,0x0,8
tick,0x7ff8da10fb34,182612712,0,0x0,8
tick,0x7ff8da10fb34,182628265,0,0x0,8
tick,0x7ff8da10fb34,182643522,0,0x0,8
tick,0x7ff8da10fb34,182658667,0,0x0,8
tick,0x7ff8da10fb34,182674302,0,0x0,8
tick,0x7ff8da10fb34,182690436,0,0x0,8
tick,0x7ff8da10fb34,182707111,0,0x0,8
tick,0x7ff8da10fb34,182721045,0,0x0,8
tick,0x7ff8da10fb34,182736504,0,0x0,8
tick,0x7ff8da10fb34,182752198,0,0x0,8
tick,0x7ff8da10fb34,182768054,0,0x0,8
tick,0x7ff8da10fb34,182784220,0,0x0,8
tick,0x7ff8da10fb34,182798568,0,0x0,8
tick,0x7ff8da10fb34,182814644,0,0x0,8
tick,0x7ff8da10fb34,182829927,0,0x0,8
tick,0x7ff8da10fb34,182845161,0,0x0,8
tick,0x7ff8da10fb34,182861158,0,0x0,8
tick,0x7ff8da10fb34,182876113,0,0x0,8
tick,0x7ff8da10fb34,182891341,0,0x0,8
tick,0x7ff8da10fb34,182906625,0,0x0,8
tick,0x7ff8da10fb34,182922692,0,0x0,8
tick,0x7ff8da10fb34,182938268,0,0x0,8
tick,0x7ff8da10fb34,182954000,0,0x0,8
tick,0x7ff8da10fb34,182968648,0,0x0,8
tick,0x7ff8da10fb34,182984686,0,0x0,8
tick,0x7ff8da10fb34,182999690,0,0x0,8
tick,0x7ff8da10fb34,183015093,0,0x0,8
tick,0x7ff8da10fb34,183030623,0,0x0,8
tick,0x7ff8da10fb34,183046206,0,0x0,8
tick,0x7ff8da10fb34,183062195,0,0x0,8
tick,0x7ff8da10fb34,183077683,0,0x0,8
tick,0x7ff8da10fb34,183092587,0,0x0,8
tick,0x7ff8da10fb34,183108201,0,0x0,8
tick,0x7ff8da10fb34,183124130,0,0x0,8
tick,0x7ff8da10fb34,183139925,0,0x0,8
tick,0x7ff8da10fb34,183158090,0,0x0,8
tick,0x7ff8da10fb34,183171849,0,0x0,8
tick,0x7ff8da10fb34,183187471,0,0x0,8
tick,0x7ff8da10fb34,183202065,0,0x0,8
tick,0x7ff8da10fb34,183217495,0,0x0,8
tick,0x7ff8da10fb34,183233200,0,0x0,8
tick,0x7ff8da10fb34,183248240,0,0x0,8
tick,0x7ff8da10fb34,183263378,0,0x0,8
tick,0x7ff8da10fb34,183278875,0,0x0,8
tick,0x7ff8da10fb34,183294042,0,0x0,8
tick,0x7ff8da10fb34,183309413,0,0x0,8
tick,0x7ff8da10fb34,183324890,0,0x0,8
tick,0x7ff8da10fb34,183340050,0,0x0,8
tick,0x7ff8da10fb34,183356317,0,0x0,8
tick,0x7ff8da10fb34,183372455,0,0x0,8
tick,0x7ff8da10fb34,183387490,0,0x0,8
tick,0x7ff8da10fb34,183402660,0,0x0,8
tick,0x7ff8da10fb34,183418246,0,0x0,8
tick,0x7ff8da10fb34,183434292,0,0x0,8
tick,0x7ff8da10fb34,183449646,0,0x0,8
tick,0x7ff8da10fb34,183464637,0,0x0,8
tick,0x7ff8da10fb34,183480650,0,0x0,8
tick,0x7ff8da10fb34,183495672,0,0x0,8
tick,0x7ff8da10fb34,183510574,0,0x0,8
tick,0x7ff8da10fb34,183526596,0,0x0,8
tick,0x7ff8da10fb34,183541579,0,0x0,8
tick,0x7ff8da10fb34,183556601,0,0x0,8
tick,0x7ff8da10fb34,183571548,0,0x0,8
tick,0x7ff8da10fb34,183586643,0,0x0,8
tick,0x7ff8da10fb34,183601830,0,0x0,8
tick,0x7ff8da10fb34,183617825,0,0x0,8
tick,0x7ff8da10fb34,183633809,0,0x0,8
tick,0x7ff8da10fb34,183649856,0,0x0,8
tick,0x7ff8da10fb34,183665807,0,0x0,8
tick,0x7ff8da10fb34,183681815,0,0x0,8
tick,0x7ff8da10fb34,183697801,0,0x0,8
tick,0x7ff8da10fb34,183712779,0,0x0,8
tick,0x7ff8da10fb34,183727799,0,0x0,8
tick,0x7ff8da10fb34,183742686,0,0x0,8
tick,0x7ff8da10fb34,183758359,0,0x0,8
tick,0x7ff8da10fb34,183773837,0,0x0,8
tick,0x7ff8da10fb34,183789935,0,0x0,8
tick,0x7ff8da10fb34,183805258,0,0x0,8
tick,0x7ff8da10fb34,183820503,0,0x0,8
tick,0x7ff8da10fb34,183836139,0,0x0,8
tick,0x7ff8da10fb34,183851358,0,0x0,8
tick,0x7ff8da10fb34,183867183,0,0x0,8
tick,0x7ff8da10fb34,183883266,0,0x0,8
tick,0x7ff8da10fb34,183899080,0,0x0,8
tick,0x7ff8da10fb34,183915077,0,0x0,8
tick,0x7ff8da10fb34,183930120,0,0x0,8
tick,0x7ff8da10fb34,183945485,0,0x0,8
tick,0x7ff8da10fb34,183961235,0,0x0,8
tick,0x7ff8da10fb34,183977127,0,0x0,8
tick,0x7ff8da10fb34,183992444,0,0x0,8
tick,0x7ff8da10fb34,184007930,0,0x0,8
tick,0x7ff8da10fb34,184023749,0,0x0,8
tick,0x7ff8da10fb34,184039035,0,0x0,8
tick,0x7ff8da10fb34,184054094,0,0x0,8
tick,0x7ff8da10fb34,184069486,0,0x0,8
tick,0x7ff8da10fb34,184085026,0,0x0,8
tick,0x7ff8da10fb34,184100199,0,0x0,8
tick,0x7ff8da10fb34,184116109,0,0x0,8
tick,0x7ff8da10fb34,184132117,0,0x0,8
tick,0x7ff8da10fb34,184147229,0,0x0,8
tick,0x7ff8da10fb34,184163266,0,0x0,8
tick,0x7ff8da10fb34,184178136,0,0x0,8
tick,0x7ff8da10fb34,184192867,0,0x0,8
tick,0x7ff8da10fb34,184208099,0,0x0,8
tick,0x7ff8da10fb34,184223969,0,0x0,8
tick,0x7ff8da10fb34,184239385,0,0x0,8
tick,0x7ff8da10fb34,184255179,0,0x0,8
tick,0x7ff8da10fb34,184270241,0,0x0,8
tick,0x7ff8da10fb34,184285076,0,0x0,8
tick,0x7ff8da10fb34,184300565,0,0x0,8
tick,0x7ff8da10fb34,184316169,0,0x0,8
tick,0x7ff8da10fb34,184332145,0,0x0,8
tick,0x7ff8da10fb34,184347127,0,0x0,8
tick,0x7ff8da10fb34,184362182,0,0x0,8
tick,0x7ff8da10fb34,184378053,0,0x0,8
tick,0x7ff8da10fb34,184393979,0,0x0,8
tick,0x7ff8da10fb34,184408566,0,0x0,8
tick,0x7ff8da10fb34,184424095,0,0x0,8
tick,0x7ff8da10fb34,184439244,0,0x0,8
tick,0x7ff8da10fb34,184455637,0,0x0,8
tick,0x7ff8da10fb34,184470155,0,0x0,8
tick,0x7ff8da10fb34,184485139,0,0x0,8
tick,0x7ff8da10fb34,184501168,0,0x0,8
tick,0x7ff8da10fb34,184517170,0,0x0,8
tick,0x7ff8da10fb34,184532180,0,0x0,8
tick,0x7ff8da10fb34,184547596,0,0x0,8
tick,0x7ff8da10fb34,184563161,0,0x0,8
tick,0x7ff8da10fb34,184579019,0,0x0,8
tick,0x7ff8da10fb34,184595044,0,0x0,8
tick,0x7ff8da10fb34,184610554,0,0x0,8
tick,0x7ff8da10fb34,184626096,0,0x0,8
tick,0x7ff8da10fb34,184641232,0,0x0,8
tick,0x7ff8da10fb34,184656816,0,0x0,8
tick,0x7ff8da10fb34,184672140,0,0x0,8
tick,0x7ff8da10fb34,184688142,0,0x0,8
tick,0x7ff8da10fb34,184703772,0,0x0,8
tick,0x7ff8da10fb34,184719739,0,0x0,8
tick,0x7ff8da10fb34,184735108,0,0x0,8
tick,0x7ff8da10fb34,184751193,0,0x0,8
tick,0x7ff8da10fb34,184766611,0,0x0,8
tick,0x7ff8da10fb34,184782060,0,0x0,8
tick,0x7ff8da10fb34,184797117,0,0x0,8
tick,0x7ff8da10fb34,184813163,0,0x0,8
tick,0x7ff8da10fb34,184828023,0,0x0,8
tick,0x7ff8da10fb34,184843156,0,0x0,8
tick,0x7ff8da10fb34,184858478,0,0x0,8
tick,0x7ff8da10fb34,184873885,0,0x0,8
tick,0x7ff8da10fb34,184889045,0,0x0,8
tick,0x7ff8da10fb34,184904799,0,0x0,8
tick,0x7ff8da10fb34,184919904,0,0x0,8
tick,0x7ff8da10fb34,184935084,0,0x0,8
tick,0x7ff8da10fb34,184950488,0,0x0,8
tick,0x7ff8da10fb34,184966203,0,0x0,8
tick,0x7ff8da10fb34,184981474,0,0x0,8
tick,0x7ff8da10fb34,184997364,0,0x0,8
tick,0x7ff8da10fb34,185013101,0,0x0,8
tick,0x7ff8da10fb34,185028366,0,0x0,8
tick,0x7ff8da10fb34,185043635,0,0x0,8
tick,0x7ff8da10fb34,185059022,0,0x0,8
tick,0x7ff8da10fb34,185075019,0,0x0,8
tick,0x7ff8da10fb34,185090753,0,0x0,8
tick,0x7ff8da10fb34,185106635,0,0x0,8
tick,0x7ff8da10fb34,185122326,0,0x0,8
tick,0x7ff8da10fb34,185137952,0,0x0,8
tick,0x7ff8da10fb34,185156075,0,0x0,8
tick,0x7ff8da10fb34,185170101,0,0x0,8
tick,0x7ff8da10fb34,185186611,0,0x0,8
tick,0x7ff8da10fb34,185202210,0,0x0,8
tick,0x7ff8da10fb34,185217420,0,0x0,8
tick,0x7ff8da10fb34,185233314,0,0x0,8
tick,0x7ff8da10fb34,185248224,0,0x0,8
tick,0x7ff8da10fb34,185263188,0,0x0,8
tick,0x7ff8da10fb34,185278663,0,0x0,8
tick,0x7ff8da10fb34,185293926,0,0x0,8
tick,0x7ff8da10fb34,185309099,0,0x0,8
tick,0x7ff8da10fb34,185324205,0,0x0,8
tick,0x7ff8da10fb34,185339939,0,0x0,8
tick,0x7ff8da10fb34,185355550,0,0x0,8
tick,0x7ff8da10fb34,185371211,0,0x0,8
tick,0x7ff8da10fb34,185386908,0,0x0,8
tick,0x7ff8da10fb34,185402285,0,0x0,8
tick,0x7ff8da10fb34,185417694,0,0x0,8
tick,0x7ff8da10fb34,185432223,0,0x0,8
tick,0x7ff8da10fb34,185447060,0,0x0,8
tick,0x7ff8da10fb34,185462227,0,0x0,8
tick,0x7ff8da10fb34,185478282,0,0x0,8
tick,0x7ff8da10fb34,185493915,0,0x0,8
tick,0x7ff8da10fb34,185509423,0,0x0,8
tick,0x7ff8da10fb34,185524118,0,0x0,8
tick,0x7ff8da10fb34,185539839,0,0x0,8
tick,0x7ff8da10fb34,185555026,0,0x0,8
tick,0x7ff8da10fb34,185571153,0,0x0,8
tick,0x7ff8da10fb34,185586226,0,0x0,8
tick,0x7ff8da10fb34,185601388,0,0x0,8
tick,0x7ff8da10fb34,185616859,0,0x0,8
tick,0x7ff8da10fb34,185632182,0,0x0,8
tick,0x7ff8da10fb34,185647428,0,0x0,8
tick,0x7ff8da10fb34,185663220,0,0x0,8
tick,0x7ff8da10fb34,185679036,0,0x0,8
tick,0x7ff8da10fb34,185693751,0,0x0,8
tick,0x7ff8da10fb34,185709229,0,0x0,8
tick,0x7ff8da10fb34,185723808,0,0x0,8
tick,0x7ff8da10fb34,185739741,0,0x0,8
tick,0x7ff8da10fb34,185755378,0,0x0,8
tick,0x7ff8da10fb34,185771051,0,0x0,8
tick,0x7ff8da10fb34,185787354,0,0x0,8
tick,0x7ff8da10fb34,185802544,0,0x0,8
tick,0x7ff8da10fb34,185818322,0,0x0,8
tick,0x7ff8da10fb34,185833283,0,0x0,8
tick,0x7ff8da10fb34,185848948,0,0x0,8
tick,0x7ff8da10fb34,185864195,0,0x0,8
tick,0x7ff8da10fb34,185879449,0,0x0,8
tick,0x7ff8da10fb34,185894492,0,0x0,8
tick,0x7ff8da10fb34,185910042,0,0x0,8
tick,0x7ff8da10fb34,185925153,0,0x0,8
tick,0x7ff8da10fb34,185940396,0,0x0,8
tick,0x7ff8da10fb34,185956270,0,0x0,8
tick,0x7ff8da10fb34,185971978,0,0x0,8
tick,0x7ff8da10fb34,185988229,0,0x0,8
tick,0x7ff8da10fb34,186003451,0,0x0,8
tick,0x7ff8da10fb34,186018636,0,0x0,8
tick,0x7ff8da10fb34,186034138,0,0x0,8
tick,0x7ff8da10fb34,186049213,0,0x0,8
tick,0x7ff8da10fb34,186065111,0,0x0,8
tick,0x7ff8da10fb34,186081194,0,0x0,8
tick,0x7ff8da10fb34,186097056,0,0x0,8
tick,0x7ff8da10fb34,186112190,0,0x0,8
tick,0x7ff8da10fb34,186127208,0,0x0,8
tick,0x7ff8da10fb34,186142302,0,0x0,8
tick,0x7ff8da10fb34,186157274,0,0x0,8
tick,0x7ff8da10fb34,186172064,0,0x0,8
tick,0x7ff8da10fb34,186187108,0,0x0,8
tick,0x7ff8da10fb34,186203223,0,0x0,8
tick,0x7ff8da10fb34,186217932,0,0x0,8
tick,0x7ff8da10fb34,186233160,0,0x0,8
tick,0x7ff8da10fb34,186248479,0,0x0,8
tick,0x7ff8da10fb34,186264180,0,0x0,8
tick,0x7ff8da10fb34,186279462,0,0x0,8
tick,0x7ff8da10fb34,186295098,0,0x0,8
tick,0x7ff8da10fb34,186310158,0,0x0,8
tick,0x7ff8da10fb34,186326184,0,0x0,8
tick,0x7ff8da10fb34,186341530,0,0x0,8
tick,0x7ff8da10fb34,186357192,0,0x0,8
tick,0x7ff8da10fb34,186372827,0,0x0,8
tick,0x7ff8da10fb34,186387423,0,0x0,8
tick,0x7ff8da10fb34,186403072,0,0x0,8
tick,0x7ff8da10fb34,186418880,0,0x0,8
tick,0x7ff8da10fb34,186434153,0,0x0,8
tick,0x7ff8da10fb34,186449261,0,0x0,8
tick,0x7ff8da10fb34,186464517,0,0x0,8
tick,0x7ff8da10fb34,186479711,0,0x0,8
tick,0x7ff8da10fb34,186495393,0,0x0,8
tick,0x7ff8da10fb34,186510846,0,0x0,8
tick,0x7ff8da10fb34,186526935,0,0x0,8
tick,0x7ff8da10fb34,186542018,0,0x0,8
tick,0x7ff8da10fb34,186557307,0,0x0,8
tick,0x7ff8da10fb34,186572719,0,0x0,8
tick,0x7ff8da10fb34,186588358,0,0x0,8
tick,0x7ff8da10fb34,186604024,0,0x0,8
tick,0x7ff8da10fb34,186619630,0,0x0,8
tick,0x7ff8da10fb34,186635092,0,0x0,8
tick,0x7ff8da10fb34,186651248,0,0x0,8
tick,0x7ff8da10fb34,186667139,0,0x0,8
tick,0x7ff8da10fb34,186683182,0,0x0,8
tick,0x7ff8da10fb34,186699180,0,0x0,8
tick,0x7ff8da10fb34,186715114,0,0x0,8
tick,0x7ff8da10fb34,186731172,0,0x0,8
tick,0x7ff8da10fb34,186747095,0,0x0,8
tick,0x7ff8da10fb34,186762113,0,0x0,8
tick,0x7ff8da10fb34,186777512,0,0x0,8
tick,0x7ff8da10fb34,186792979,0,0x0,8
tick,0x7ff8da10fb34,186808220,0,0x0,8
tick,0x7ff8da10fb34,186823620,0,0x0,8
tick,0x7ff8da10fb34,186839420,0,0x0,8
tick,0x7ff8da10fb34,186854877,0,0x0,8
tick,0x7ff8da10fb34,186870622,0,0x0,8
tick,0x7ff8da10fb34,186886138,0,0x0,8
tick,0x7ff8da10fb34,186902270,0,0x0,8
tick,0x7ff8da10fb34,186917315,0,0x0,8
tick,0x7ff8da10fb34,186932744,0,0x0,8
tick,0x7ff8da10fb34,186948560,0,0x0,8
tick,0x7ff8da10fb34,186963909,0,0x0,8
tick,0x7ff8da10fb34,186979168,0,0x0,8
tick,0x7ff8da10fb34,186994986,0,0x0,8
tick,0x7ff8da10fb34,187010713,0,0x0,8
tick,0x7ff8da10fb34,187026084,0,0x0,8
tick,0x7ff8da10fb34,187041202,0,0x0,8
tick,0x7ff8da10fb34,187055855,0,0x0,8
tick,0x7ff8da10fb34,187071459,0,0x0,8
tick,0x7ff8da10fb34,187087552,0,0x0,8
tick,0x7ff8da10fb34,187103254,0,0x0,8
tick,0x7ff8da10fb34,187118974,0,0x0,8
tick,0x7ff8da10fb34,187135089,0,0x0,8
tick,0x7ff8da10fb34,187150922,0,0x0,8
tick,0x7ff8da10fb34,187166944,0,0x0,8
tick,0x7ff8da10fb34,187183221,0,0x0,8
tick,0x7ff8da10fb34,187199099,0,0x0,8
tick,0x7ff8da10fb34,187214291,0,0x0,8
tick,0x7ff8da10fb34,187229314,0,0x0,8
tick,0x7ff8da10fb34,187244878,0,0x0,8
tick,0x7ff8da10fb34,187260075,0,0x0,8
tick,0x7ff8da10fb34,187276183,0,0x0,8
tick,0x7ff8da10fb34,187292105,0,0x0,8
tick,0x7ff8da10fb34,187307895,0,0x0,8
tick,0x7ff8da10fb34,187323069,0,0x0,8
tick,0x7ff8da10fb34,187338130,0,0x0,8
tick,0x7ff8da10fb34,187353820,0,0x0,8
tick,0x7ff8da10fb34,187369059,0,0x0,8
tick,0x7ff8da10fb34,187385286,0,0x0,8
tick,0x7ff8da10fb34,187399798,0,0x0,8
tick,0x7ff8da10fb34,187415128,0,0x0,8
tick,0x7ff8da10fb34,187431169,0,0x0,8
tick,0x7ff8da10fb34,187447311,0,0x0,8
tick,0x7ff8da10fb34,187462128,0,0x0,8
tick,0x7ff8da10fb34,187477980,0,0x0,8
tick,0x7ff8da10fb34,187493556,0,0x0,8
tick,0x7ff8da10fb34,187509652,0,0x0,8
tick,0x7ff8da10fb34,187525292,0,0x0,8
tick,0x7ff8da10fb34,187540174,0,0x0,8
tick,0x7ff8da10fb34,187555683,0,0x0,8
tick,0x7ff8da10fb34,187571306,0,0x0,8
tick,0x7ff8da10fb34,187587172,0,0x0,8
tick,0x7ff8da10fb34,187602122,0,0x0,8
tick,0x7ff8da10fb34,187617407,0,0x0,8
tick,0x7ff8da10fb34,187633177,0,0x0,8
tick,0x7ff8da10fb34,187649081,0,0x0,8
tick,0x7ff8da10fb34,187665133,0,0x0,8
tick,0x7ff8da10fb34,187680569,0,0x0,8
tick,0x7ff8da10fb34,187696096,0,0x0,8
tick,0x7ff8da10fb34,187711157,0,0x0,8
tick,0x7ff8da10fb34,187727095,0,0x0,8
tick,0x7ff8da10fb34,187742136,0,0x0,8
tick,0x7ff8da10fb34,187757032,0,0x0,8
tick,0x7ff8da10fb34,187772939,0,0x0,8
tick,0x7ff8da10fb34,187788116,0,0x0,8
tick,0x7ff8da10fb34,187803512,0,0x0,8
tick,0x7ff8da10fb34,187819157,0,0x0,8
tick,0x7ff8da10fb34,187835458,0,0x0,8
tick,0x7ff8da10fb34,187850687,0,0x0,8
tick,0x7ff8da10fb34,187866124,0,0x0,8
tick,0x7ff8da10fb34,187881201,0,0x0,8
tick,0x7ff8da10fb34,187896466,0,0x0,8
tick,0x7ff8da10fb34,187912177,0,0x0,8
tick,0x7ff8da10fb34,187927069,0,0x0,8
tick,0x7ff8da10fb34,187942043,0,0x0,8
tick,0x7ff8da10fb34,187957679,0,0x0,8
tick,0x7ff8da10fb34,187972928,0,0x0,8
tick,0x7ff8da10fb34,187988158,0,0x0,8
tick,0x7ff8da10fb34,188003432,0,0x0,8
tick,0x7ff8da10fb34,188019449,0,0x0,8
tick,0x7ff8da10fb34,188035316,0,0x0,8
tick,0x7ff8da10fb34,188050142,0,0x0,8
tick,0x7ff8da10fb34,188066159,0,0x0,8
tick,0x7ff8da10fb34,188082203,0,0x0,8
tick,0x7ff8da10fb34,188097611,0,0x0,8
tick,0x7ff8da10fb34,188113174,0,0x0,8
tick,0x7ff8da10fb34,188128321,0,0x0,8
tick,0x7ff8da10fb34,188144363,0,0x0,8
tick,0x7ff8da10fb34,188159664,0,0x0,8
tick,0x7ff8da10fb34,188175779,0,0x0,8
tick,0x7ff8da10fb34,188191331,0,0x0,8
tick,0x7ff8da10fb34,188207448,0,0x0,8
tick,0x7ff8da10fb34,188222691,0,0x0,8
tick,0x7ff8da10fb34,188238146,0,0x0,8
tick,0x7ff8da10fb34,188253350,0,0x0,8
tick,0x7ff8da10fb34,188268590,0,0x0,8
tick,0x7ff8da10fb34,188284216,0,0x0,8
tick,0x7ff8da10fb34,188299395,0,0x0,8
tick,0x7ff8da10fb34,188314859,0,0x0,8
tick,0x7ff8da10fb34,188329642,0,0x0,8
tick,0x7ff8da10fb34,188344655,0,0x0,8
tick,0x7ff8da10fb34,188361727,0,0x0,8
tick,0x7ff8da10fb34,188378110,0,0x0,8
tick,0x7ff8da10fb34,188392030,0,0x0,8
tick,0x7ff8da10fb34,188408019,0,0x0,8
tick,0x7ff8da10fb34,188423444,0,0x0,8
tick,0x7ff8da10fb34,188439043,0,0x0,8
tick,0x7ff8da10fb34,188453976,0,0x0,8
tick,0x7ff8da10fb34,188469361,0,0x0,8
tick,0x7ff8da10fb34,188485059,0,0x0,8
tick,0x7ff8da10fb34,188500785,0,0x0,8
tick,0x7ff8da10fb34,188516143,0,0x0,8
tick,0x7ff8da10fb34,188532202,0,0x0,8
tick,0x7ff8da10fb34,188548166,0,0x0,8
tick,0x7ff8da10fb34,188564500,0,0x0,8
tick,0x7ff8da10fb34,188580189,0,0x0,8
tick,0x7ff8da10fb34,188595238,0,0x0,8
tick,0x7ff8da10fb34,188610103,0,0x0,8
tick,0x7ff8da10fb34,188626147,0,0x0,8
tick,0x7ff8da10fb34,188642243,0,0x0,8
tick,0x7ff8da10fb34,188658078,0,0x0,8
tick,0x7ff8da10fb34,188674151,0,0x0,8
tick,0x7ff8da10fb34,188690087,0,0x0,8
tick,0x7ff8da10fb34,188705102,0,0x0,8
tick,0x7ff8da10fb34,188720060,0,0x0,8
tick,0x7ff8da10fb34,188736133,0,0x0,8
tick,0x7ff8da10fb34,188751299,0,0x0,8
tick,0x7ff8da10fb34,188765992,0,0x0,8
tick,0x7ff8da10fb34,188781339,0,0x0,8
tick,0x7ff8da10fb34,188797174,0,0x0,8
tick,0x7ff8da10fb34,188812193,0,0x0,8
tick,0x7ff8da10fb34,188828202,0,0x0,8
tick,0x7ff8da10fb34,188844357,0,0x0,8
tick,0x7ff8da10fb34,188859726,0,0x0,8
tick,0x7ff8da10fb34,188875030,0,0x0,8
tick,0x7ff8da10fb34,188890344,0,0x0,8
tick,0x7ff8da10fb34,188905036,0,0x0,8
tick,0x7ff8da10fb34,188920620,0,0x0,8
tick,0x7ff8da10fb34,188937108,0,0x0,8
tick,0x7ff8da10fb34,188951418,0,0x0,8
tick,0x7ff8da10fb34,188967286,0,0x0,8
tick,0x7ff8da10fb34,188982266,0,0x0,8
tick,0x7ff8da10fb34,188998297,0,0x0,8
tick,0x7ff8da10fb34,189014165,0,0x0,8
tick,0x7ff8da10fb34,189029402,0,0x0,8
tick,0x7ff8da10fb34,189045243,0,0x0,8
tick,0x7ff8da10fb34,189060961,0,0x0,8
tick,0x7ff8da10fb34,189076514,0,0x0,8
tick,0x7ff8da10fb34,189092102,0,0x0,8
tick,0x7ff8da10fb34,189107058,0,0x0,8
tick,0x7ff8da10fb34,189122900,0,0x0,8
tick,0x7ff8da10fb34,189138174,0,0x0,8
tick,0x7ff8da10fb34,189154688,0,0x0,8
tick,0x7ff8da10fb34,189169152,0,0x0,8
tick,0x7ff8da10fb34,189185905,0,0x0,8
tick,0x7ff8da10fb34,189199123,0,0x0,8
tick,0x7ff8da10fb34,189214222,0,0x0,8
tick,0x7ff8da10fb34,189229338,0,0x0,8
tick,0x7ff8da10fb34,189244161,0,0x0,8
tick,0x7ff8da10fb34,189259999,0,0x0,8
tick,0x7ff8da10fb34,189275135,0,0x0,8
tick,0x7ff8da10fb34,189290035,0,0x0,8
tick,0x7ff8da10fb34,189304815,0,0x0,8
tick,0x7ff8da10fb34,189320617,0,0x0,8
tick,0x7ff8da10fb34,189336201,0,0x0,8
tick,0x7ff8da10fb34,189352286,0,0x0,8
tick,0x7ff8da10fb34,189367186,0,0x0,8
tick,0x7ff8da10fb34,189382205,0,0x0,8
tick,0x7ff8da10fb34,189397392,0,0x0,8
tick,0x7ff8da10fb34,189413195,0,0x0,8
tick,0x7ff8da10fb34,189428157,0,0x0,8
tick,0x7ff8da10fb34,189443671,0,0x0,8
tick,0x7ff8da10fb34,189458603,0,0x0,8
tick,0x7ff8da10fb34,189473848,0,0x0,8
tick,0x7ff8da10fb34,189489512,0,0x0,8
tick,0x7ff8da10fb34,189504770,0,0x0,8
tick,0x7ff8da10fb34,189520399,0,0x0,8
tick,0x7ff8da10fb34,189536931,0,0x0,8
tick,0x7ff8da10fb34,189551597,0,0x0,8
tick,0x7ff8da10fb34,189566731,0,0x0,8
tick,0x7ff8da10fb34,189582286,0,0x0,8
tick,0x7ff8da10fb34,189597641,0,0x0,8
tick,0x7ff8da10fb34,189613243,0,0x0,8
tick,0x7ff8da10fb34,189628315,0,0x0,8
tick,0x7ff8da10fb34,189643636,0,0x0,8
tick,0x7ff8da10fb34,189659022,0,0x0,8
tick,0x7ff8da10fb34,189674215,0,0x0,8
tick,0x7ff8da10fb34,189689032,0,0x0,8
tick,0x7ff8da10fb34,189704697,0,0x0,8
tick,0x7ff8da10fb34,189720433,0,0x0,8
tick,0x7ff8da10fb34,189736803,0,0x0,8
tick,0x7ff8da10fb34,189751129,0,0x0,8
tick,0x7ff8da10fb34,189766945,0,0x0,8
tick,0x7ff8da10fb34,189782140,0,0x0,8
tick,0x7ff8da10fb34,189797221,0,0x0,8
tick,0x7ff8da10fb34,189812180,0,0x0,8
tick,0x7ff8da10fb34,189827954,0,0x0,8
tick,0x7ff8da10fb34,189842832,0,0x0,8
tick,0x7ff8da10fb34,189858524,0,0x0,8
tick,0x7ff8da10fb34,189874100,0,0x0,8
tick,0x7ff8da10fb34,189889036,0,0x0,8
tick,0x7ff8da10fb34,189904694,0,0x0,8
tick,0x7ff8da10fb34,189920480,0,0x0,8
tick,0x7ff8da10fb34,189938349,0,0x0,8
tick,0x7ff8da10fb34,189951189,0,0x0,8
tick,0x7ff8da10fb34,189966432,0,0x0,8
tick,0x7ff8da10fb34,189981805,0,0x0,8
tick,0x7ff8da10fb34,189997279,0,0x0,8
tick,0x7ff8da10fb34,190012200,0,0x0,8
tick,0x7ff8da10fb34,190027213,0,0x0,8
tick,0x7ff8da10fb34,190042962,0,0x0,8
tick,0x7ff8da10fb34,190057903,0,0x0,8
tick,0x7ff8da10fb34,190073122,0,0x0,8
tick,0x7ff8da10fb34,190088933,0,0x0,8
tick,0x7ff8da10fb34,190104952,0,0x0,8
tick,0x7ff8da10fb34,190120645,0,0x0,8
tick,0x7ff8da10fb34,190136961,0,0x0,8
tick,0x7ff8da10fb34,190151041,0,0x0,8
tick,0x7ff8da10fb34,190166505,0,0x0,8
tick,0x7ff8da10fb34,190182144,0,0x0,8
tick,0x7ff8da10fb34,190196907,0,0x0,8
tick,0x7ff8da10fb34,190212152,0,0x0,8
tick,0x7ff8da10fb34,190227134,0,0x0,8
tick,0x7ff8da10fb34,190243149,0,0x0,8
tick,0x7ff8da10fb34,190258998,0,0x0,8
tick,0x7ff8da10fb34,190274326,0,0x0,8
tick,0x7ff8da10fb34,190289677,0,0x0,8
tick,0x7ff8da10fb34,190305167,0,0x0,8
tick,0x7ff8da10fb34,190320240,0,0x0,8
tick,0x7ff8da10fb34,190335982,0,0x0,8
tick,0x7ff8da10fb34,190351330,0,0x0,8
tick,0x7ff8da10fb34,190367495,0,0x0,8
tick,0x7ff8da10fb34,190383358,0,0x0,8
tick,0x7ff8da10fb34,190398550,0,0x0,8
tick,0x7ff8da10fb34,190414221,0,0x0,8
tick,0x7ff8da10fb34,190429154,0,0x0,8
tick,0x7ff8da10fb34,190443951,0,0x0,8
tick,0x7ff8da10fb34,190459612,0,0x0,8
tick,0x7ff8da10fb34,190474753,0,0x0,8
tick,0x7ff8da10fb34,190490347,0,0x0,8
tick,0x7ff8da10fb34,190506344,0,0x0,8
tick,0x7ff8da10fb34,190521758,0,0x0,8
tick,0x7ff8da10fb34,190537698,0,0x0,8
tick,0x7ff8da10fb34,190553308,0,0x0,8
tick,0x7ff8da10fb34,190569481,0,0x0,8
tick,0x7ff8da10fb34,190584344,0,0x0,8
tick,0x7ff8da10fb34,190599195,0,0x0,8
tick,0x7ff8da10fb34,190614346,0,0x0,8
tick,0x7ff8da10fb34,190629683,0,0x0,8
tick,0x7ff8da10fb34,190645130,0,0x0,8
tick,0x7ff8da10fb34,190661174,0,0x0,8
tick,0x7ff8da10fb34,190676976,0,0x0,8
tick,0x7ff8da10fb34,190692147,0,0x0,8
tick,0x7ff8da10fb34,190708150,0,0x0,8
tick,0x7ff8da10fb34,190723280,0,0x0,8
tick,0x7ff8da10fb34,190738510,0,0x0,8
tick,0x7ff8da10fb34,190754237,0,0x0,8
tick,0x7ff8da10fb34,190770273,0,0x0,8
tick,0x7ff8da10fb34,190786062,0,0x0,8
tick,0x7ff8da10fb34,190800787,0,0x0,8
tick,0x7ff8da10fb34,190816138,0,0x0,8
tick,0x7ff8da10fb34,190832251,0,0x0,8
tick,0x7ff8da10fb34,190847532,0,0x0,8
tick,0x7ff8da10fb34,190863181,0,0x0,8
tick,0x7ff8da10fb34,190878465,0,0x0,8
tick,0x7ff8da10fb34,190894175,0,0x0,8
tick,0x7ff8da10fb34,190909903,0,0x0,8
tick,0x7ff8da10fb34,190925138,0,0x0,8
tick,0x7ff8da10fb34,190941182,0,0x0,8
tick,0x7ff8da10fb34,190957298,0,0x0,8
tick,0x7ff8da10fb34,190971878,0,0x0,8
tick,0x7ff8da10fb34,190987512,0,0x0,8
tick,0x7ff8da10fb34,191003197,0,0x0,8
tick,0x7ff8da10fb34,191018863,0,0x0,8
tick,0x7ff8da10fb34,191033969,0,0x0,8
tick,0x7ff8da10fb34,191049322,0,0x0,8
tick,0x7ff8da10fb34,191065069,0,0x0,8
tick,0x7ff8da10fb34,191081304,0,0x0,8
tick,0x7ff8da10fb34,191097035,0,0x0,8
tick,0x7ff8da10fb34,191112278,0,0x0,8
tick,0x7ff8da10fb34,191127426,0,0x0,8
tick,0x7ff8da10fb34,191142234,0,0x0,8
tick,0x7ff8da10fb34,191157515,0,0x0,8
tick,0x7ff8da10fb34,191173224,0,0x0,8
tick,0x7ff8da10fb34,191188199,0,0x0,8
tick,0x7ff8da10fb34,191204176,0,0x0,8
tick,0x7ff8da10fb34,191220358,0,0x0,8
tick,0x7ff8da10fb34,191235467,0,0x0,8
tick,0x7ff8da10fb34,191251040,0,0x0,8
tick,0x7ff8da10fb34,191266170,0,0x0,8
tick,0x7ff8da10fb34,191282270,0,0x0,8
tick,0x7ff8da10fb34,191298186,0,0x0,8
tick,0x7ff8da10fb34,191314296,0,0x0,8
tick,0x7ff8da10fb34,191330048,0,0x0,8
tick,0x7ff8da10fb34,191346316,0,0x0,8
tick,0x7ff8da10fb34,191362233,0,0x0,8
tick,0x7ff8da10fb34,191377657,0,0x0,8
tick,0x7ff8da10fb34,191393295,0,0x0,8
tick,0x7ff8da10fb34,191408332,0,0x0,8
tick,0x7ff8da10fb34,191423314,0,0x0,8
tick,0x7ff8da10fb34,191438704,0,0x0,8
tick,0x7ff8da10fb34,191454038,0,0x0,8
tick,0x7ff8da10fb34,191469337,0,0x0,8
tick,0x7ff8da10fb34,191486111,0,0x0,8
tick,0x7ff8da10fb34,191500848,0,0x0,8
tick,0x7ff8da10fb34,191516431,0,0x0,8
tick,0x7ff8da10fb34,191531557,0,0x0,8
tick,0x7ff8da10fb34,191547224,0,0x0,8
tick,0x7ff8da10fb34,191562173,0,0x0,8
tick,0x7ff8da10fb34,191578507,0,0x0,8
tick,0x7ff8da10fb34,191594382,0,0x0,8
tick,0x7ff8da10fb34,191609894,0,0x0,8
tick,0x7ff8da10fb34,191625219,0,0x0,8
tick,0x7ff8da10fb34,191641359,0,0x0,8
tick,0x7ff8da10fb34,191656632,0,0x0,8
tick,0x7ff8da10fb34,191671566,0,0x0,8
tick,0x7ff8da10fb34,191687370,0,0x0,8
tick,0x7ff8da10fb34,191703085,0,0x0,8
tick,0x7ff8da10fb34,191719158,0,0x0,8
tick,0x7ff8da10fb34,191734219,0,0x0,8
tick,0x7ff8da10fb34,191750348,0,0x0,8
tick,0x7ff8da10fb34,191765107,0,0x0,8
tick,0x7ff8da10fb34,191779934,0,0x0,8
tick,0x7ff8da10fb34,191795108,0,0x0,8
tick,0x7ff8da10fb34,191810129,0,0x0,8
tick,0x7ff8da10fb34,191826167,0,0x0,8
tick,0x7ff8da10fb34,191841216,0,0x0,8
tick,0x7ff8da10fb34,191856145,0,0x0,8
tick,0x7ff8da10fb34,191871408,0,0x0,8
tick,0x7ff8da10fb34,191887599,0,0x0,8
tick,0x7ff8da10fb34,191902807,0,0x0,8
tick,0x7ff8da10fb34,191918707,0,0x0,8
tick,0x7ff8da10fb34,191933556,0,0x0,8
tick,0x7ff8da10fb34,191948056,0,0x0,8
tick,0x7ff8da10fb34,191963399,0,0x0,8
tick,0x7ff8da10fb34,191978597,0,0x0,8
tick,0x7ff8da10fb34,191994125,0,0x0,8
tick,0x7ff8da10fb34,192009318,0,0x0,8
tick,0x7ff8da10fb34,192024646,0,0x0,8
tick,0x7ff8da10fb34,192040307,0,0x0,8
tick,0x7ff8da10fb34,192056224,0,0x0,8
tick,0x7ff8da10fb34,192071468,0,0x0,8
tick,0x7ff8da10fb34,192087128,0,0x0,8
tick,0x7ff8da10fb34,192102716,0,0x0,8
tick,0x7ff8da10fb34,192119237,0,0x0,8
tick,0x7ff8da10fb34,192135035,0,0x0,8
tick,0x7ff8da10fb34,192151138,0,0x0,8
tick,0x7ff8da10fb34,192164580,0,0x0,8
tick,0x7ff8da10fb34,192180129,0,0x0,8
tick,0x7ff8da10fb34,192196221,0,0x0,8
tick,0x7ff8da10fb34,192212474,0,0x0,8
tick,0x7ff8da10fb34,192227846,0,0x0,8
tick,0x7ff8da10fb34,192243258,0,0x0,8
tick,0x7ff8da10fb34,192259103,0,0x0,8
tick,0x7ff8da10fb34,192274228,0,0x0,8
tick,0x7ff8da10fb34,192289554,0,0x0,8
tick,0x7ff8da10fb34,192304701,0,0x0,8
tick,0x7ff8da10fb34,192320384,0,0x0,8
tick,0x7ff8da10fb34,192336159,0,0x0,8
tick,0x7ff8da10fb34,192351314,0,0x0,8
tick,0x7ff8da10fb34,192367046,0,0x0,8
tick,0x7ff8da10fb34,192381701,0,0x0,8
tick,0x7ff8da10fb34,192397786,0,0x0,8
tick,0x7ff8da10fb34,192413093,0,0x0,8
tick,0x7ff8da10fb34,192428666,0,0x0,8
tick,0x7ff8da10fb34,192444209,0,0x0,8
tick,0x7ff8da10fb34,192459646,0,0x0,8
tick,0x7ff8da10fb34,192475006,0,0x0,8
tick,0x7ff8da10fb34,192490285,0,0x0,8
tick,0x7ff8da10fb34,192506271,0,0x0,8
tick,0x7ff8da10fb34,192521245,0,0x0,8
tick,0x7ff8da10fb34,192537080,0,0x0,8
tick,0x7ff8da10fb34,192552527,0,0x0,8
tick,0x7ff8da10fb34,192568328,0,0x0,8
tick,0x7ff8da10fb34,192584095,0,0x0,8
tick,0x7ff8da10fb34,192599046,0,0x0,8
tick,0x7ff8da10fb34,192614204,0,0x0,8
tick,0x7ff8da10fb34,192629609,0,0x0,8
tick,0x7ff8da10fb34,192645155,0,0x0,8
tick,0x7ff8da10fb34,192660454,0,0x0,8
tick,0x7ff8da10fb34,192676306,0,0x0,8
tick,0x7ff8da10fb34,192691213,0,0x0,8
tick,0x7ff8da10fb34,192707307,0,0x0,8
tick,0x7ff8da10fb34,192721927,0,0x0,8
tick,0x7ff8da10fb34,192736980,0,0x0,8
tick,0x7ff8da10fb34,192752232,0,0x0,8
tick,0x7ff8da10fb34,192768002,0,0x0,8
tick,0x7ff8da10fb34,192783133,0,0x0,8
tick,0x7ff8da10fb34,192798508,0,0x0,8
tick,0x7ff8da10fb34,192814022,0,0x0,8
tick,0x7ff8da10fb34,192829034,0,0x0,8
tick,0x7ff8da10fb34,192844265,0,0x0,8
tick,0x7ff8da10fb34,192859545,0,0x0,8
tick,0x7ff8da10fb34,192875019,0,0x0,8
tick,0x7ff8da10fb34,192890227,0,0x0,8
tick,0x7ff8da10fb34,192906351,0,0x0,8
tick,0x7ff8da10fb34,192921820,0,0x0,8
tick,0x7ff8da10fb34,192937146,0,0x0,8
tick,0x7ff8da10fb34,192952367,0,0x0,8
tick,0x7ff8da10fb34,192967346,0,0x0,8
tick,0x7ff8da10fb34,192983050,0,0x0,8
tick,0x7ff8da10fb34,192998227,0,0x0,8
tick,0x7ff8da10fb34,193013447,0,0x0,8
tick,0x7ff8da10fb34,193029306,0,0x0,8
tick,0x7ff8da10fb34,193044260,0,0x0,8
tick,0x7ff8da10fb34,193059287,0,0x0,8
tick,0x7ff8da10fb34,193074957,0,0x0,8
tick,0x7ff8da10fb34,193089685,0,0x0,8
tick,0x7ff8da10fb34,193104940,0,0x0,8
tick,0x7ff8da10fb34,193120531,0,0x0,8
tick,0x7ff8da10fb34,193135923,0,0x0,8
tick,0x7ff8da10fb34,193151176,0,0x0,8
tick,0x7ff8da10fb34,193168984,0,0x0,8
tick,0x7ff8da10fb34,193181163,0,0x0,8
tick,0x7ff8da10fb34,193197007,0,0x0,8
tick,0x7ff8da10fb34,193212248,0,0x0,8
tick,0x7ff8da10fb34,193227382,0,0x0,8
tick,0x7ff8da10fb34,193242308,0,0x0,8
tick,0x7ff8da10fb34,193258169,0,0x0,8
tick,0x7ff8da10fb34,193273743,0,0x0,8
tick,0x7ff8da10fb34,193289618,0,0x0,8
tick,0x7ff8da10fb34,193305140,0,0x0,8
tick,0x7ff8da10fb34,193320826,0,0x0,8
tick,0x7ff8da10fb34,193336847,0,0x0,8
tick,0x7ff8da10fb34,193352295,0,0x0,8
tick,0x7ff8da10fb34,193369468,0,0x0,8
tick,0x7ff8da10fb34,193391131,0,0x0,8
tick,0x7ff8da10fb34,193399707,0,0x0,8
tick,0x7ff8da10fb34,193414363,0,0x0,8
tick,0x7ff8da10fb34,193430592,0,0x0,8
tick,0x7ff8da10fb34,193446061,0,0x0,8
tick,0x7ff8da10fb34,193461880,0,0x0,8
tick,0x7ff8da10fb34,193477752,0,0x0,8
tick,0x7ff8da10fb34,193493627,0,0x0,8
tick,0x7ff8da10fb34,193509561,0,0x0,8
tick,0x7ff8da10fb34,193525235,0,0x0,8
tick,0x7ff8da10fb34,193541251,0,0x0,8
tick,0x7ff8da10fb34,193557320,0,0x0,8
tick,0x7ff8da10fb34,193573318,0,0x0,8
tick,0x7ff8da10fb34,193589341,0,0x0,8
tick,0x7ff8da10fb34,193605300,0,0x0,8
tick,0x7ff8da10fb34,193620228,0,0x0,8
tick,0x7ff8da10fb34,193635572,0,0x0,8
tick,0x7ff8da10fb34,193651264,0,0x0,8
tick,0x7ff8da10fb34,193667386,0,0x0,8
tick,0x7ff8da10fb34,193683332,0,0x0,8
tick,0x7ff8da10fb34,193699331,0,0x0,8
tick,0x7ff8da10fb34,193715228,0,0x0,8
tick,0x7ff8da10fb34,193731477,0,0x0,8
tick,0x7ff8da10fb34,193746116,0,0x0,8
tick,0x7ff8da10fb34,193760951,0,0x0,8
tick,0x7ff8da10fb34,193776181,0,0x0,8
tick,0x7ff8da10fb34,193792148,0,0x0,8
tick,0x7ff8da10fb34,193807935,0,0x0,8
tick,0x7ff8da10fb34,193823308,0,0x0,8
tick,0x7ff8da10fb34,193839367,0,0x0,8
tick,0x7ff8da10fb34,193854658,0,0x0,8
tick,0x7ff8da10fb34,193870640,0,0x0,8
tick,0x7ff8da10fb34,193885468,0,0x0,8
tick,0x7ff8da10fb34,193901080,0,0x0,8
tick,0x7ff8da10fb34,193916745,0,0x0,8
tick,0x7ff8da10fb34,193931321,0,0x0,8
tick,0x7ff8da10fb34,193947223,0,0x0,8
tick,0x7ff8da10fb34,193963270,0,0x0,8
tick,0x7ff8da10fb34,193979133,0,0x0,8
tick,0x7ff8da10fb34,193994637,0,0x0,8
tick,0x7ff8da10fb34,194009400,0,0x0,8
tick,0x7ff8da10fb34,194024416,0,0x0,8
tick,0x7ff8da10fb34,194039480,0,0x0,8
tick,0x7ff8da10fb34,194054955,0,0x0,8
tick,0x7ff8da10fb34,194070496,0,0x0,8
tick,0x7ff8da10fb34,194086426,0,0x0,8
tick,0x7ff8da10fb34,194101816,0,0x0,8
tick,0x7ff8da10fb34,194118108,0,0x0,8
tick,0x7ff8da10fb34,194133430,0,0x0,8
tick,0x7ff8da10fb34,194148198,0,0x0,8
tick,0x7ff8da10fb34,194163951,0,0x0,8
tick,0x7ff8da10fb34,194179105,0,0x0,8
tick,0x7ff8da10fb34,194194941,0,0x0,8
tick,0x7ff8da10fb34,194210101,0,0x0,8
tick,0x7ff8da10fb34,194226195,0,0x0,8
tick,0x7ff8da10fb34,194242464,0,0x0,8
tick,0x7ff8da10fb34,194257535,0,0x0,8
tick,0x7ff8da10fb34,194273316,0,0x0,8
tick,0x7ff8da10fb34,194288956,0,0x0,8
tick,0x7ff8da10fb34,194304432,0,0x0,8
tick,0x7ff8da10fb34,194320522,0,0x0,8
tick,0x7ff8da10fb34,194336327,0,0x0,8
tick,0x7ff8da10fb34,194351717,0,0x0,8
tick,0x7ff8da10fb34,194368123,0,0x0,8
tick,0x7ff8da10fb34,194383107,0,0x0,8
tick,0x7ff8da10fb34,194397985,0,0x0,8
tick,0x7ff8da10fb34,194413197,0,0x0,8
tick,0x7ff8da10fb34,194428417,0,0x0,8
tick,0x7ff8da10fb34,194444375,0,0x0,8
tick,0x7ff8da10fb34,194459573,0,0x0,8
tick,0x7ff8da10fb34,194474361,0,0x0,8
tick,0x7ff8da10fb34,194489845,0,0x0,8
tick,0x7ff8da10fb34,194504390,0,0x0,8
tick,0x7ff8da10fb34,194519324,0,0x0,8
tick,0x7ff8da10fb34,194535027,0,0x0,8
tick,0x7ff8da10fb34,194550954,0,0x0,8
tick,0x7ff8da10fb34,194566386,0,0x0,8
tick,0x7ff8da10fb34,194582361,0,0x0,8
tick,0x7ff8da10fb34,194597800,0,0x0,8
tick,0x7ff8da10fb34,194613425,0,0x0,8
tick,0x7ff8da10fb34,194629273,0,0x0,8
tick,0x7ff8da10fb34,194645128,0,0x0,8
tick,0x7ff8da10fb34,194661149,0,0x0,8
tick,0x7ff8da10fb34,194677317,0,0x0,8
tick,0x7ff8da10fb34,194692138,0,0x0,8
tick,0x7ff8da10fb34,194707221,0,0x0,8
tick,0x7ff8da10fb34,194723114,0,0x0,8
tick,0x7ff8da10fb34,194738948,0,0x0,8
tick,0x7ff8da10fb34,194753720,0,0x0,8
tick,0x7ff8da10fb34,194769417,0,0x0,8
tick,0x7ff8da10fb34,194784912,0,0x0,8
tick,0x7ff8da10fb34,194800637,0,0x0,8
tick,0x7ff8da10fb34,194816136,0,0x0,8
tick,0x7ff8da10fb34,194832382,0,0x0,8
tick,0x7ff8da10fb34,194848006,0,0x0,8
tick,0x7ff8da10fb34,194863132,0,0x0,8
tick,0x7ff8da10fb34,194878650,0,0x0,8
tick,0x7ff8da10fb34,194894196,0,0x0,8
tick,0x7ff8da10fb34,194909965,0,0x0,8
tick,0x7ff8da10fb34,194925121,0,0x0,8
tick,0x7ff8da10fb34,194941442,0,0x0,8
tick,0x7ff8da10fb34,194956914,0,0x0,8
tick,0x7ff8da10fb34,194972221,0,0x0,8
tick,0x7ff8da10fb34,194988300,0,0x0,8
tick,0x7ff8da10fb34,195004106,0,0x0,8
tick,0x7ff8da10fb34,195018864,0,0x0,8
tick,0x7ff8da10fb34,195033675,0,0x0,8
tick,0x7ff8da10fb34,195049480,0,0x0,8
tick,0x7ff8da10fb34,195065602,0,0x0,8
tick,0x7ff8da10fb34,195080279,0,0x0,8
tick,0x7ff8da10fb34,195096337,0,0x0,8
tick,0x7ff8da10fb34,195112406,0,0x0,8
tick,0x7ff8da10fb34,195127802,0,0x0,8
tick,0x7ff8da10fb34,195143732,0,0x0,8
tick,0x7ff8da10fb34,195159211,0,0x0,8
tick,0x7ff8da10fb34,195174708,0,0x0,8
tick,0x7ff8da10fb34,195190216,0,0x0,8
tick,0x7ff8da10fb34,195206365,0,0x0,8
tick,0x7ff8da10fb34,195221382,0,0x0,8
tick,0x7ff8da10fb34,195236954,0,0x0,8
tick,0x7ff8da10fb34,195252367,0,0x0,8
tick,0x7ff8da10fb34,195268191,0,0x0,8
tick,0x7ff8da10fb34,195284145,0,0x0,8
tick,0x7ff8da10fb34,195299425,0,0x0,8
tick,0x7ff8da10fb34,195314181,0,0x0,8
tick,0x7ff8da10fb34,195329274,0,0x0,8
tick,0x7ff8da10fb34,195345268,0,0x0,8
tick,0x7ff8da10fb34,195360199,0,0x0,8
tick,0x7ff8da10fb34,195375330,0,0x0,8
tick,0x7ff8da10fb34,195390037,0,0x0,8
tick,0x7ff8da10fb34,195406159,0,0x0,8
tick,0x7ff8da10fb34,195421049,0,0x0,8
tick,0x7ff8da10fb34,195436786,0,0x0,8
tick,0x7ff8da10fb34,195452307,0,0x0,8
tick,0x7ff8da10fb34,195468133,0,0x0,8
tick,0x7ff8da10fb34,195484609,0,0x0,8
tick,0x7ff8da10fb34,195499586,0,0x0,8
tick,0x7ff8da10fb34,195514207,0,0x0,8
tick,0x7ff8da10fb34,195529721,0,0x0,8
tick,0x7ff8da10fb34,195545251,0,0x0,8
tick,0x7ff8da10fb34,195561186,0,0x0,8
tick,0x7ff8da10fb34,195577287,0,0x0,8
tick,0x7ff8da10fb34,195592178,0,0x0,8
tick,0x7ff8da10fb34,195608510,0,0x0,8
tick,0x7ff8da10fb34,195623323,0,0x0,8
tick,0x7ff8da10fb34,195638384,0,0x0,8
tick,0x7ff8da10fb34,195653223,0,0x0,8
tick,0x7ff8da10fb34,195668103,0,0x0,8
tick,0x7ff8da10fb34,195684339,0,0x0,8
tick,0x7ff8da10fb34,195699463,0,0x0,8
tick,0x7ff8da10fb34,195715260,0,0x0,8
tick,0x7ff8da10fb34,195729978,0,0x0,8
tick,0x7ff8da10fb34,195745139,0,0x0,8
tick,0x7ff8da10fb34,195759789,0,0x0,8
tick,0x7ff8da10fb34,195775247,0,0x0,8
tick,0x7ff8da10fb34,195791488,0,0x0,8
tick,0x7ff8da10fb34,195807352,0,0x0,8
tick,0x7ff8da10fb34,195823123,0,0x0,8
tick,0x7ff8da10fb34,195838918,0,0x0,8
tick,0x7ff8da10fb34,195853963,0,0x0,8
tick,0x7ff8da10fb34,195869273,0,0x0,8
tick,0x7ff8da10fb34,195884453,0,0x0,8
tick,0x7ff8da10fb34,195899377,0,0x0,8
tick,0x7ff8da10fb34,195914378,0,0x0,8
tick,0x7ff8da10fb34,195929508,0,0x0,8
tick,0x7ff8da10fb34,195945340,0,0x0,8
tick,0x7ff8da10fb34,195960183,0,0x0,8
tick,0x7ff8da10fb34,195974935,0,0x0,8
tick,0x7ff8da10fb34,195990384,0,0x0,8
tick,0x7ff8da10fb34,196005138,0,0x0,8
tick,0x7ff8da10fb34,196020119,0,0x0,8
tick,0x7ff8da10fb34,196035448,0,0x0,8
tick,0x7ff8da10fb34,196051034,0,0x0,8
tick,0x7ff8da10fb34,196067441,0,0x0,8
tick,0x7ff8da10fb34,196082507,0,0x0,8
tick,0x7ff8da10fb34,196098687,0,0x0,8
tick,0x7ff8da10fb34,196114340,0,0x0,8
tick,0x7ff8da10fb34,196129822,0,0x0,8
tick,0x7ff8da10fb34,196146181,0,0x0,8
tick,0x7ff8da10fb34,196161624,0,0x0,8
tick,0x7ff8da10fb34,196177290,0,0x0,8
tick,0x7ff8da10fb34,196193186,0,0x0,8
tick,0x7ff8da10fb34,196207925,0,0x0,8
tick,0x7ff8da10fb34,196223284,0,0x0,8
tick,0x7ff8da10fb34,196238398,0,0x0,8
tick,0x7ff8da10fb34,196253611,0,0x0,8
tick,0x7ff8da10fb34,196269225,0,0x0,8
tick,0x7ff8da10fb34,196284354,0,0x0,8
tick,0x7ff8da10fb34,196300374,0,0x0,8
tick,0x7ff8da10fb34,196315177,0,0x0,8
tick,0x7ff8da10fb34,196331067,0,0x0,8
tick,0x7ff8da10fb34,196346373,0,0x0,8
tick,0x7ff8da10fb34,196361201,0,0x0,8
tick,0x7ff8da10fb34,196376805,0,0x0,8
tick,0x7ff8da10fb34,196392172,0,0x0,8
tick,0x7ff8da10fb34,196407523,0,0x0,8
tick,0x7ff8da10fb34,196422156,0,0x0,8
tick,0x7ff8da10fb34,196437948,0,0x0,8
tick,0x7ff8da10fb34,196452927,0,0x0,8
tick,0x7ff8da10fb34,196468152,0,0x0,8
tick,0x7ff8da10fb34,196484621,0,0x0,8
tick,0x7ff8da10fb34,196500079,0,0x0,8
tick,0x7ff8da10fb34,196515533,0,0x0,8
tick,0x7ff8da10fb34,196530346,0,0x0,8
tick,0x7ff8da10fb34,196546311,0,0x0,8
tick,0x7ff8da10fb34,196562198,0,0x0,8
tick,0x7ff8da10fb34,196576983,0,0x0,8
tick,0x7ff8da10fb34,196592221,0,0x0,8
tick,0x7ff8da10fb34,196607395,0,0x0,8
tick,0x7ff8da10fb34,196623624,0,0x0,8
tick,0x7ff8da10fb34,196639373,0,0x0,8
tick,0x7ff8da10fb34,196654899,0,0x0,8
tick,0x7ff8da10fb34,196669852,0,0x0,8
tick,0x7ff8da10fb34,196685245,0,0x0,8
tick,0x7ff8da10fb34,196700763,0,0x0,8
tick,0x7ff8da10fb34,196717460,0,0x0,8
tick,0x7ff8da10fb34,196731646,0,0x0,8
tick,0x7ff8da10fb34,196746795,0,0x0,8
tick,0x7ff8da10fb34,196762207,0,0x0,8
tick,0x7ff8da10fb34,196777294,0,0x0,8
tick,0x7ff8da10fb34,196792327,0,0x0,8
tick,0x7ff8da10fb34,196807968,0,0x0,8
tick,0x7ff8da10fb34,196823108,0,0x0,8
tick,0x7ff8da10fb34,196838423,0,0x0,8
tick,0x7ff8da10fb34,196853929,0,0x0,8
tick,0x7ff8da10fb34,196869169,0,0x0,8
tick,0x7ff8da10fb34,196885107,0,0x0,8
tick,0x7ff8da10fb34,196900697,0,0x0,8
tick,0x7ff8da10fb34,196917454,0,0x0,8
tick,0x7ff8da10fb34,196932006,0,0x0,8
tick,0x7ff8da10fb34,196947306,0,0x0,8
tick,0x7ff8da10fb34,196963403,0,0x0,8
tick,0x7ff8da10fb34,196978726,0,0x0,8
tick,0x7ff8da10fb34,196994376,0,0x0,8
tick,0x7ff8da10fb34,197009473,0,0x0,8
tick,0x7ff8da10fb34,197025206,0,0x0,8
tick,0x7ff8da10fb34,197040475,0,0x0,8
tick,0x7ff8da10fb34,197056323,0,0x0,8
tick,0x7ff8da10fb34,197071153,0,0x0,8
tick,0x7ff8da10fb34,197086235,0,0x0,8
tick,0x7ff8da10fb34,197101607,0,0x0,8
tick,0x7ff8da10fb34,197117210,0,0x0,8
tick,0x7ff8da10fb34,197133445,0,0x0,8
tick,0x7ff8da10fb34,197149715,0,0x0,8
tick,0x7ff8da10fb34,197168055,0,0x0,8
tick,0x7ff8da10fb34,197181527,0,0x0,8
tick,0x7ff8da10fb34,197196023,0,0x0,8
tick,0x7ff8da10fb34,197212199,0,0x0,8
tick,0x7ff8da10fb34,197227501,0,0x0,8
tick,0x7ff8da10fb34,197242420,0,0x0,8
tick,0x7ff8da10fb34,197258282,0,0x0,8
tick,0x7ff8da10fb34,197274089,0,0x0,8
tick,0x7ff8da10fb34,197289529,0,0x0,8
tick,0x7ff8da10fb34,197304690,0,0x0,8
tick,0x7ff8da10fb34,197320656,0,0x0,8
tick,0x7ff8da10fb34,197335200,0,0x0,8
tick,0x7ff8da10fb34,197350674,0,0x0,8
tick,0x7ff8da10fb34,197366630,0,0x0,8
tick,0x7ff8da10fb34,197382091,0,0x0,8
tick,0x7ff8da10fb34,197397817,0,0x0,8
tick,0x7ff8da10fb34,197413448,0,0x0,8
tick,0x7ff8da10fb34,197428077,0,0x0,8
tick,0x7ff8da10fb34,197443286,0,0x0,8
tick,0x7ff8da10fb34,197458682,0,0x0,8
tick,0x7ff8da10fb34,197474135,0,0x0,8
tick,0x7ff8da10fb34,197489463,0,0x0,8
tick,0x7ff8da10fb34,197504314,0,0x0,8
tick,0x7ff8da10fb34,197520108,0,0x0,8
tick,0x7ff8da10fb34,197536831,0,0x0,8
tick,0x7ff8da10fb34,197551383,0,0x0,8
tick,0x7ff8da10fb34,197567157,0,0x0,8
tick,0x7ff8da10fb34,197583254,0,0x0,8
tick,0x7ff8da10fb34,197598282,0,0x0,8
tick,0x7ff8da10fb34,197613320,0,0x0,8
tick,0x7ff8da10fb34,197629042,0,0x0,8
tick,0x7ff8da10fb34,197644391,0,0x0,8
tick,0x7ff8da10fb34,197659773,0,0x0,8
tick,0x7ff8da10fb34,197674990,0,0x0,8
tick,0x7ff8da10fb34,197690202,0,0x0,8
tick,0x7ff8da10fb34,197706377,0,0x0,8
tick,0x7ff8da10fb34,197722194,0,0x0,8
tick,0x7ff8da10fb34,197738089,0,0x0,8
tick,0x7ff8da10fb34,197752627,0,0x0,8
tick,0x7ff8da10fb34,197768087,0,0x0,8
tick,0x7ff8da10fb34,197783754,0,0x0,8
tick,0x7ff8da10fb34,197800196,0,0x0,8
tick,0x7ff8da10fb34,197816882,0,0x0,8
tick,0x7ff8da10fb34,197831194,0,0x0,8
tick,0x7ff8da10fb34,197846347,0,0x0,8
tick,0x7ff8da10fb34,197862208,0,0x0,8
tick,0x7ff8da10fb34,197878001,0,0x0,8
tick,0x7ff8da10fb34,197893224,0,0x0,8
tick,0x7ff8da10fb34,197908588,0,0x0,8
tick,0x7ff8da10fb34,197924291,0,0x0,8
tick,0x7ff8da10fb34,197940177,0,0x0,8
tick,0x7ff8da10fb34,197955030,0,0x0,8
tick,0x7ff8da10fb34,197969970,0,0x0,8
tick,0x7ff8da10fb34,197985309,0,0x0,8
tick,0x7ff8da10fb34,198000544,0,0x0,8
tick,0x7ff8da10fb34,198016594,0,0x0,8
tick,0x7ff8da10fb34,198031410,0,0x0,8
tick,0x7ff8da10fb34,198046657,0,0x0,8
tick,0x7ff8da10fb34,198061888,0,0x0,8
tick,0x7ff8da10fb34,198077362,0,0x0,8
tick,0x7ff8da10fb34,198092331,0,0x0,8
tick,0x7ff8da10fb34,198107368,0,0x0,8
tick,0x7ff8da10fb34,198122610,0,0x0,8
tick,0x7ff8da10fb34,198138762,0,0x0,8
tick,0x7ff8da10fb34,198154798,0,0x0,8
tick,0x7ff8da10fb34,198170073,0,0x0,8
tick,0x7ff8da10fb34,198185199,0,0x0,8
tick,0x7ff8da10fb34,198200840,0,0x0,8
tick,0x7ff8da10fb34,198217114,0,0x0,8
tick,0x7ff8da10fb34,198233064,0,0x0,8
tick,0x7ff8da10fb34,198248288,0,0x0,8
tick,0x7ff8da10fb34,198263446,0,0x0,8
tick,0x7ff8da10fb34,198279439,0,0x0,8
tick,0x7ff8da10fb34,198295124,0,0x0,8
tick,0x7ff8da10fb34,198311021,0,0x0,8
tick,0x7ff8da10fb34,198326365,0,0x0,8
tick,0x7ff8da10fb34,198342011,0,0x0,8
tick,0x7ff8da10fb34,198357137,0,0x0,8
tick,0x7ff8da10fb34,198373155,0,0x0,8
tick,0x7ff8da10fb34,198390160,0,0x0,8
tick,0x7ff8da10fb34,198403941,0,0x0,8
tick,0x7ff8da10fb34,198419833,0,0x0,8
tick,0x7ff8da10fb34,198435070,0,0x0,8
tick,0x7ff8da10fb34,198451131,0,0x0,8
tick,0x7ff8da10fb34,198467169,0,0x0,8
tick,0x7ff8da10fb34,198483316,0,0x0,8
tick,0x7ff8da10fb34,198498735,0,0x0,8
tick,0x7ff8da10fb34,198513102,0,0x0,8
tick,0x7ff8da10fb34,198528096,0,0x0,8
tick,0x7ff8da10fb34,198543012,0,0x0,8
tick,0x7ff8da10fb34,198559041,0,0x0,8
tick,0x7ff8da10fb34,198575136,0,0x0,8
tick,0x7ff8da10fb34,198590039,0,0x0,8
tick,0x7ff8da10fb34,198604999,0,0x0,8
tick,0x7ff8da10fb34,198621018,0,0x0,8
tick,0x7ff8da10fb34,198637280,0,0x0,8
tick,0x7ff8da10fb34,198653045,0,0x0,8
tick,0x7ff8da10fb34,198669042,0,0x0,8
tick,0x7ff8da10fb34,198684051,0,0x0,8
tick,0x7ff8da10fb34,198699015,0,0x0,8
tick,0x7ff8da10fb34,198715023,0,0x0,8
tick,0x7ff8da10fb34,198731001,0,0x0,8
tick,0x7ff8da10fb34,198746030,0,0x0,8
tick,0x7ff8da10fb34,198761067,0,0x0,8
tick,0x7ff8da10fb34,198776531,0,0x0,8
tick,0x7ff8da10fb34,198791968,0,0x0,8
tick,0x7ff8da10fb34,198807129,0,0x0,8
tick,0x7ff8da10fb34,198823067,0,0x0,8
tick,0x7ff8da10fb34,198837797,0,0x0,8
tick,0x7ff8da10fb34,198852850,0,0x0,8
tick,0x7ff8da10fb34,198868616,0,0x0,8
tick,0x7ff8da10fb34,198884003,0,0x0,8
tick,0x7ff8da10fb34,198899805,0,0x0,8
tick,0x7ff8da10fb34,198916349,0,0x0,8
tick,0x7ff8da10fb34,198931329,0,0x0,8
tick,0x7ff8da10fb34,198947489,0,0x0,8
tick,0x7ff8da10fb34,198962223,0,0x0,8
tick,0x7ff8da10fb34,198977334,0,0x0,8
tick,0x7ff8da10fb34,198992501,0,0x0,8
tick,0x7ff8da10fb34,199008309,0,0x0,8
tick,0x7ff8da10fb34,199023091,0,0x0,8
tick,0x7ff8da10fb34,199038658,0,0x0,8
tick,0x7ff8da10fb34,199054036,0,0x0,8
tick,0x7ff8da10fb34,199069071,0,0x0,8
tick,0x7ff8da10fb34,199084745,0,0x0,8
tick,0x7ff8da10fb34,199099960,0,0x0,8
tick,0x7ff8da10fb34,199115413,0,0x0,8
tick,0x7ff8da10fb34,199131053,0,0x0,8
tick,0x7ff8da10fb34,199147582,0,0x0,8
tick,0x7ff8da10fb34,199162460,0,0x0,8
tick,0x7ff8da10fb34,199177987,0,0x0,8
tick,0x7ff8da10fb34,199193232,0,0x0,8
tick,0x7ff8da10fb34,199208469,0,0x0,8
tick,0x7ff8da10fb34,199223675,0,0x0,8
tick,0x7ff8da10fb34,199239173,0,0x0,8
tick,0x7ff8da10fb34,199254368,0,0x0,8
tick,0x7ff8da10fb34,199270547,0,0x0,8
tick,0x7ff8da10fb34,199285698,0,0x0,8
tick,0x7ff8da10fb34,199301137,0,0x0,8
tick,0x7ff8da10fb34,199316320,0,0x0,8
tick,0x7ff8da10fb34,199332004,0,0x0,8
tick,0x7ff8da10fb34,199348034,0,0x0,8
tick,0x7ff8da10fb34,199363541,0,0x0,8
tick,0x7ff8da10fb34,199378554,0,0x0,8
tick,0x7ff8da10fb34,199394155,0,0x0,8
tick,0x7ff8da10fb34,199409401,0,0x0,8
tick,0x7ff8da10fb34,199425036,0,0x0,8
tick,0x7ff8da10fb34,199440129,0,0x0,8
tick,0x7ff8da10fb34,199456113,0,0x0,8
tick,0x7ff8da10fb34,199471070,0,0x0,8
tick,0x7ff8da10fb34,199487258,0,0x0,8
tick,0x7ff8da10fb34,199502434,0,0x0,8
tick,0x7ff8da10fb34,199518163,0,0x0,8
tick,0x7ff8da10fb34,199533896,0,0x0,8
tick,0x7ff8da10fb34,199549881,0,0x0,8
tick,0x7ff8da10fb34,199565200,0,0x0,8
tick,0x7ff8da10fb34,199580479,0,0x0,8
tick,0x7ff8da10fb34,199596112,0,0x0,8
tick,0x7ff8da10fb34,199611126,0,0x0,8
tick,0x7ff8da10fb34,199627080,0,0x0,8
tick,0x7ff8da10fb34,199642185,0,0x0,8
tick,0x7ff8da10fb34,199657915,0,0x0,8
tick,0x7ff8da10fb34,199673085,0,0x0,8
tick,0x7ff8da10fb34,199688358,0,0x0,8
tick,0x7ff8da10fb34,199704276,0,0x0,8
tick,0x7ff8da10fb34,199719532,0,0x0,8
tick,0x7ff8da10fb34,199734805,0,0x0,8
tick,0x7ff8da10fb34,199750474,0,0x0,8
tick,0x7ff8da10fb34,199766140,0,0x0,8
tick,0x7ff8da10fb34,199782580,0,0x0,8
tick,0x7ff8da10fb34,199797927,0,0x0,8
tick,0x7ff8da10fb34,199813335,0,0x0,8
tick,0x7ff8da10fb34,199828065,0,0x0,8
tick,0x7ff8da10fb34,199843178,0,0x0,8
tick,0x7ff8da10fb34,199858537,0,0x0,8
tick,0x7ff8da10fb34,199874160,0,0x0,8
tick,0x7ff8da10fb34,199889457,0,0x0,8
tick,0x7ff8da10fb34,199905035,0,0x0,8
tick,0x7ff8da10fb34,199920091,0,0x0,8
tick,0x7ff8da10fb34,199936267,0,0x0,8
tick,0x7ff8da10fb34,199951371,0,0x0,8
tick,0x7ff8da10fb34,199967009,0,0x0,8
tick,0x7ff8da10fb34,199982770,0,0x0,8
tick,0x7ff8da10fb34,199998416,0,0x0,8
tick,0x7ff8da10fb34,200013961,0,0x0,8
tick,0x7ff8da10fb34,200029746,0,0x0,8
tick,0x7ff8da10fb34,200045029,0,0x0,8
tick,0x7ff8da10fb34,200061011,0,0x0,8
tick,0x7ff8da10fb34,200076985,0,0x0,8
tick,0x7ff8da10fb34,200092200,0,0x0,8
tick,0x7ff8da10fb34,200107123,0,0x0,8
tick,0x7ff8da10fb34,200121994,0,0x0,8
tick,0x7ff8da10fb34,200137264,0,0x0,8
tick,0x7ff8da10fb34,200153304,0,0x0,8
tick,0x7ff8da10fb34,200169114,0,0x0,8
tick,0x7ff8da10fb34,200184873,0,0x0,8
tick,0x7ff8da10fb34,200199864,0,0x0,8
tick,0x7ff8da10fb34,200215446,0,0x0,8
tick,0x7ff8da10fb34,200231125,0,0x0,8
tick,0x7ff8da10fb34,200247071,0,0x0,8
tick,0x7ff8da10fb34,200262221,0,0x0,8
tick,0x7ff8da10fb34,200277121,0,0x0,8
tick,0x7ff8da10fb34,200292240,0,0x0,8
tick,0x7ff8da10fb34,200307968,0,0x0,8
tick,0x7ff8da10fb34,200323113,0,0x0,8
tick,0x7ff8da10fb34,200338445,0,0x0,8
tick,0x7ff8da10fb34,200354174,0,0x0,8
tick,0x7ff8da10fb34,200369076,0,0x0,8
tick,0x7ff8da10fb34,200384207,0,0x0,8
tick,0x7ff8da10fb34,200400211,0,0x0,8
tick,0x7ff8da10fb34,200415902,0,0x0,8
tick,0x7ff8da10fb34,200431206,0,0x0,8
tick,0x7ff8da10fb34,200447215,0,0x0,8
tick,0x7ff8da10fb34,200462220,0,0x0,8
tick,0x7ff8da10fb34,200478040,0,0x0,8
tick,0x7ff8da10fb34,200493313,0,0x0,8
tick,0x7ff8da10fb34,200508354,0,0x0,8
tick,0x7ff8da10fb34,200524170,0,0x0,8
tick,0x7ff8da10fb34,200540078,0,0x0,8
tick,0x7ff8da10fb34,200556130,0,0x0,8
tick,0x7ff8da10fb34,200572157,0,0x0,8
tick,0x7ff8da10fb34,200587948,0,0x0,8
tick,0x7ff8da10fb34,200603708,0,0x0,8
tick,0x7ff8da10fb34,200619474,0,0x0,8
tick,0x7ff8da10fb34,200634133,0,0x0,8
tick,0x7ff8da10fb34,200650050,0,0x0,8
tick,0x7ff8da10fb34,200665755,0,0x0,8
tick,0x7ff8da10fb34,200681152,0,0x0,8
tick,0x7ff8da10fb34,200696406,0,0x0,8
tick,0x7ff8da10fb34,200711405,0,0x0,8
tick,0x7ff8da10fb34,200727189,0,0x0,8
tick,0x7ff8da10fb34,200742196,0,0x0,8
tick,0x7ff8da10fb34,200758123,0,0x0,8
tick,0x7ff8da10fb34,200774195,0,0x0,8
tick,0x7ff8da10fb34,200789596,0,0x0,8
tick,0x7ff8da10fb34,200804983,0,0x0,8
tick,0x7ff8da10fb34,200820735,0,0x0,8
tick,0x7ff8da10fb34,200836176,0,0x0,8
tick,0x7ff8da10fb34,200851830,0,0x0,8
tick,0x7ff8da10fb34,200866659,0,0x0,8
tick,0x7ff8da10fb34,200881825,0,0x0,8
tick,0x7ff8da10fb34,200896983,0,0x0,8
tick,0x7ff8da10fb34,200912268,0,0x0,8
tick,0x7ff8da10fb34,200928023,0,0x0,8
tick,0x7ff8da10fb34,200943370,0,0x0,8
tick,0x7ff8da10fb34,200958471,0,0x0,8
tick,0x7ff8da10fb34,200974185,0,0x0,8
tick,0x7ff8da10fb34,200989943,0,0x0,8
tick,0x7ff8da10fb34,201005115,0,0x0,8
tick,0x7ff8da10fb34,201020464,0,0x0,8
tick,0x7ff8da10fb34,201036176,0,0x0,8
tick,0x7ff8da10fb34,201050899,0,0x0,8
tick,0x7ff8da10fb34,201066571,0,0x0,8
tick,0x7ff8da10fb34,201082535,0,0x0,8
tick,0x7ff8da10fb34,201097982,0,0x0,8
tick,0x7ff8da10fb34,201113232,0,0x0,8
tick,0x7ff8da10fb34,201128474,0,0x0,8
tick,0x7ff8da10fb34,201144481,0,0x0,8
tick,0x7ff8da10fb34,201159985,0,0x0,8
tick,0x7ff8da10fb34,201176034,0,0x0,8
tick,0x7ff8da10fb34,201192188,0,0x0,8
tick,0x7ff8da10fb34,201207439,0,0x0,8
tick,0x7ff8da10fb34,201223503,0,0x0,8
tick,0x7ff8da10fb34,201239197,0,0x0,8
tick,0x7ff8da10fb34,201254658,0,0x0,8
tick,0x7ff8da10fb34,201269543,0,0x0,8
tick,0x7ff8da10fb34,201284901,0,0x0,8
tick,0x7ff8da10fb34,201300847,0,0x0,8
tick,0x7ff8da10fb34,201316986,0,0x0,8
tick,0x7ff8da10fb34,201332238,0,0x0,8
tick,0x7ff8da10fb34,201347836,0,0x0,8
tick,0x7ff8da10fb34,201363165,0,0x0,8
tick,0x7ff8da10fb34,201378369,0,0x0,8
tick,0x7ff8da10fb34,201394153,0,0x0,8
tick,0x7ff8da10fb34,201410089,0,0x0,8
tick,0x7ff8da10fb34,201426147,0,0x0,8
tick,0x7ff8da10fb34,201442205,0,0x0,8
tick,0x7ff8da10fb34,201457899,0,0x0,8
tick,0x7ff8da10fb34,201473161,0,0x0,8
tick,0x7ff8da10fb34,201488379,0,0x0,8
tick,0x7ff8da10fb34,201503535,0,0x0,8
tick,0x7ff8da10fb34,201519616,0,0x0,8
tick,0x7ff8da10fb34,201535086,0,0x0,8
tick,0x7ff8da10fb34,201550668,0,0x0,8
tick,0x7ff8da10fb34,201566386,0,0x0,8
tick,0x7ff8da10fb34,201582109,0,0x0,8
tick,0x7ff8da10fb34,201597721,0,0x0,8
tick,0x7ff8da10fb34,201613187,0,0x0,8
tick,0x7ff8da10fb34,201628518,0,0x0,8
tick,0x7ff8da10fb34,201644230,0,0x0,8
tick,0x7ff8da10fb34,201659363,0,0x0,8
tick,0x7ff8da10fb34,201675124,0,0x0,8
tick,0x7ff8da10fb34,201690642,0,0x0,8
tick,0x7ff8da10fb34,201706128,0,0x0,8
tick,0x7ff8da10fb34,201722170,0,0x0,8
tick,0x7ff8da10fb34,201737187,0,0x0,8
tick,0x7ff8da10fb34,201751990,0,0x0,8
tick,0x7ff8da10fb34,201768156,0,0x0,8
tick,0x7ff8da10fb34,201783580,0,0x0,8
tick,0x7ff8da10fb34,201799549,0,0x0,8
tick,0x7ff8da10fb34,201815282,0,0x0,8
tick,0x7ff8da10fb34,201831681,0,0x0,8
tick,0x7ff8da10fb34,201846651,0,0x0,8
tick,0x7ff8da10fb34,201862397,0,0x0,8
tick,0x7ff8da10fb34,201876921,0,0x0,8
tick,0x7ff8da10fb34,201892154,0,0x0,8
tick,0x7ff8da10fb34,201907316,0,0x0,8
tick,0x7ff8da10fb34,201923175,0,0x0,8
tick,0x7ff8da10fb34,201938065,0,0x0,8
tick,0x7ff8da10fb34,201953554,0,0x0,8
tick,0x7ff8da10fb34,201969414,0,0x0,8
tick,0x7ff8da10fb34,201984696,0,0x0,8
tick,0x7ff8da10fb34,202000247,0,0x0,8
tick,0x7ff8da10fb34,202016257,0,0x0,8
tick,0x7ff8da10fb34,202031793,0,0x0,8
tick,0x7ff8da10fb34,202047580,0,0x0,8
tick,0x7ff8da10fb34,202063193,0,0x0,8
tick,0x7ff8da10fb34,202078348,0,0x0,8
tick,0x7ff8da10fb34,202094224,0,0x0,8
tick,0x7ff8da10fb34,202109724,0,0x0,8
tick,0x7ff8da10fb34,202125059,0,0x0,8
tick,0x7ff8da10fb34,202140186,0,0x0,8
tick,0x7ff8da10fb34,202156362,0,0x0,8
tick,0x7ff8da10fb34,202173224,0,0x0,8
tick,0x7ff8da10fb34,202187993,0,0x0,8
tick,0x7ff8da10fb34,202203213,0,0x0,8
tick,0x7ff8da10fb34,202218446,0,0x0,8
tick,0x7ff8da10fb34,202233611,0,0x0,8
tick,0x7ff8da10fb34,202248457,0,0x0,8
tick,0x7ff8da10fb34,202264462,0,0x0,8
tick,0x7ff8da10fb34,202279450,0,0x0,8
tick,0x7ff8da10fb34,202295080,0,0x0,8
tick,0x7ff8da10fb34,202310100,0,0x0,8
tick,0x7ff8da10fb34,202326103,0,0x0,8
tick,0x7ff8da10fb34,202342238,0,0x0,8
tick,0x7ff8da10fb34,202357881,0,0x0,8
tick,0x7ff8da10fb34,202373056,0,0x0,8
tick,0x7ff8da10fb34,202388342,0,0x0,8
tick,0x7ff8da10fb34,202404308,0,0x0,8
tick,0x7ff8da10fb34,202420097,0,0x0,8
tick,0x7ff8da10fb34,202436125,0,0x0,8
tick,0x7ff8da10fb34,202451264,0,0x0,8
tick,0x7ff8da10fb34,202465965,0,0x0,8
tick,0x7ff8da10fb34,202481663,0,0x0,8
tick,0x7ff8da10fb34,202497433,0,0x0,8
tick,0x7ff8da10fb34,202512941,0,0x0,8
tick,0x7ff8da10fb34,202528258,0,0x0,8
tick,0x7ff8da10fb34,202543764,0,0x0,8
tick,0x7ff8da10fb34,202558918,0,0x0,8
tick,0x7ff8da10fb34,202574320,0,0x0,8
tick,0x7ff8da10fb34,202590145,0,0x0,8
tick,0x7ff8da10fb34,202606097,0,0x0,8
tick,0x7ff8da10fb34,202622174,0,0x0,8
tick,0x7ff8da10fb34,202637152,0,0x0,8
tick,0x7ff8da10fb34,202652128,0,0x0,8
tick,0x7ff8da10fb34,202666912,0,0x0,8
tick,0x7ff8da10fb34,202682542,0,0x0,8
tick,0x7ff8da10fb34,202698256,0,0x0,8
tick,0x7ff8da10fb34,202713904,0,0x0,8
tick,0x7ff8da10fb34,202729591,0,0x0,8
tick,0x7ff8da10fb34,202745221,0,0x0,8
tick,0x7ff8da10fb34,202759718,0,0x0,8
tick,0x7ff8da10fb34,202775162,0,0x0,8
tick,0x7ff8da10fb34,202790975,0,0x0,8
tick,0x7ff8da10fb34,202807078,0,0x0,8
tick,0x7ff8da10fb34,202823229,0,0x0,8
tick,0x7ff8da10fb34,202838705,0,0x0,8
tick,0x7ff8da10fb34,202854128,0,0x0,8
tick,0x7ff8da10fb34,202870143,0,0x0,8
tick,0x7ff8da10fb34,202886314,0,0x0,8
tick,0x7ff8da10fb34,202901904,0,0x0,8
tick,0x7ff8da10fb34,202916710,0,0x0,8
tick,0x7ff8da10fb34,202932239,0,0x0,8
tick,0x7ff8da10fb34,202948115,0,0x0,8
tick,0x7ff8da10fb34,202962924,0,0x0,8
tick,0x7ff8da10fb34,202977977,0,0x0,8
tick,0x7ff8da10fb34,202993178,0,0x0,8
tick,0x7ff8da10fb34,203009084,0,0x0,8
tick,0x7ff8da10fb34,203025135,0,0x0,8
tick,0x7ff8da10fb34,203040688,0,0x0,8
tick,0x7ff8da10fb34,203056140,0,0x0,8
tick,0x7ff8da10fb34,203071191,0,0x0,8
tick,0x7ff8da10fb34,203087188,0,0x0,8
tick,0x7ff8da10fb34,203101773,0,0x0,8
tick,0x7ff8da10fb34,203116799,0,0x0,8
tick,0x7ff8da10fb34,203132346,0,0x0,8
tick,0x7ff8da10fb34,203148376,0,0x0,8
tick,0x7ff8da10fb34,203164801,0,0x0,8
tick,0x7ff8da10fb34,203180502,0,0x0,8
tick,0x7ff8da10fb34,203196326,0,0x0,8
tick,0x7ff8da10fb34,203211464,0,0x0,8
tick,0x7ff8da10fb34,203226899,0,0x0,8
tick,0x7ff8da10fb34,203242151,0,0x0,8
tick,0x7ff8da10fb34,203257461,0,0x0,8
tick,0x7ff8da10fb34,203272189,0,0x0,8
tick,0x7ff8da10fb34,203287093,0,0x0,8
tick,0x7ff8da10fb34,203302784,0,0x0,8
tick,0x7ff8da10fb34,203318526,0,0x0,8
tick,0x7ff8da10fb34,203333288,0,0x0,8
tick,0x7ff8da10fb34,203348137,0,0x0,8
tick,0x7ff8da10fb34,203364250,0,0x0,8
tick,0x7ff8da10fb34,203379725,0,0x0,8
tick,0x7ff8da10fb34,203395073,0,0x0,8
tick,0x7ff8da10fb34,203410057,0,0x0,8
tick,0x7ff8da10fb34,203424593,0,0x0,8
tick,0x7ff8da10fb34,203440614,0,0x0,8
tick,0x7ff8da10fb34,203455692,0,0x0,8
tick,0x7ff8da10fb34,203471551,0,0x0,8
tick,0x7ff8da10fb34,203487571,0,0x0,8
tick,0x7ff8da10fb34,203503520,0,0x0,8
tick,0x7ff8da10fb34,203519546,0,0x0,8
tick,0x7ff8da10fb34,203534764,0,0x0,8
tick,0x7ff8da10fb34,203550740,0,0x0,8
tick,0x7ff8da10fb34,203565758,0,0x0,8
tick,0x7ff8da10fb34,203580729,0,0x0,8
tick,0x7ff8da10fb34,203596753,0,0x0,8
tick,0x7ff8da10fb34,203611770,0,0x0,8
tick,0x7ff8da10fb34,203627697,0,0x0,8
tick,0x7ff8da10fb34,203642743,0,0x0,8
tick,0x7ff8da10fb34,203657722,0,0x0,8
tick,0x7ff8da10fb34,203673719,0,0x0,8
tick,0x7ff8da10fb34,203689719,0,0x0,8
tick,0x7ff8da10fb34,203705701,0,0x0,8
tick,0x7ff8da10fb34,203720685,0,0x0,8
tick,0x7ff8da10fb34,203735696,0,0x0,8
tick,0x7ff8da10fb34,203750673,0,0x0,8
tick,0x7ff8da10fb34,203766011,0,0x0,8
tick,0x7ff8da10fb34,203781056,0,0x0,8
tick,0x7ff8da10fb34,203796899,0,0x0,8
tick,0x7ff8da10fb34,203812425,0,0x0,8
tick,0x7ff8da10fb34,203828301,0,0x0,8
tick,0x7ff8da10fb34,203843081,0,0x0,8
tick,0x7ff8da10fb34,203858270,0,0x0,8
tick,0x7ff8da10fb34,203874264,0,0x0,8
tick,0x7ff8da10fb34,203889106,0,0x0,8
tick,0x7ff8da10fb34,203903863,0,0x0,8
tick,0x7ff8da10fb34,203919168,0,0x0,8
tick,0x7ff8da10fb34,203934833,0,0x0,8
tick,0x7ff8da10fb34,203949896,0,0x0,8
tick,0x7ff8da10fb34,203965534,0,0x0,8
tick,0x7ff8da10fb34,203980979,0,0x0,8
tick,0x7ff8da10fb34,203997608,0,0x0,8
tick,0x7ff8da10fb34,204012270,0,0x0,8
tick,0x7ff8da10fb34,204028410,0,0x0,8
tick,0x7ff8da10fb34,204043203,0,0x0,8
tick,0x7ff8da10fb34,204058611,0,0x0,8
tick,0x7ff8da10fb34,204074125,0,0x0,8
tick,0x7ff8da10fb34,204089278,0,0x0,8
tick,0x7ff8da10fb34,204105020,0,0x0,8
tick,0x7ff8da10fb34,204121172,0,0x0,8
tick,0x7ff8da10fb34,204137171,0,0x0,8
tick,0x7ff8da10fb34,204153199,0,0x0,8
tick,0x7ff8da10fb34,204169152,0,0x0,8
tick,0x7ff8da10fb34,204184759,0,0x0,8
tick,0x7ff8da10fb34,204200060,0,0x0,8
tick,0x7ff8da10fb34,204216117,0,0x0,8
tick,0x7ff8da10fb34,204231883,0,0x0,8
tick,0x7ff8da10fb34,204248162,0,0x0,8
tick,0x7ff8da10fb34,204263217,0,0x0,8
tick,0x7ff8da10fb34,204279273,0,0x0,8
tick,0x7ff8da10fb34,204294099,0,0x0,8
tick,0x7ff8da10fb34,204309144,0,0x0,8
tick,0x7ff8da10fb34,204325083,0,0x0,8
tick,0x7ff8da10fb34,204340452,0,0x0,8
tick,0x7ff8da10fb34,204356059,0,0x0,8
tick,0x7ff8da10fb34,204372180,0,0x0,8
tick,0x7ff8da10fb34,204387402,0,0x0,8
tick,0x7ff8da10fb34,204403058,0,0x0,8
tick,0x7ff8da10fb34,204418634,0,0x0,8
tick,0x7ff8da10fb34,204433832,0,0x0,8
tick,0x7ff8da10fb34,204449105,0,0x0,8
tick,0x7ff8da10fb34,204465138,0,0x0,8
tick,0x7ff8da10fb34,204480830,0,0x0,8
tick,0x7ff8da10fb34,204496479,0,0x0,8
tick,0x7ff8da10fb34,204511249,0,0x0,8
tick,0x7ff8da10fb34,204526992,0,0x0,8
tick,0x7ff8da10fb34,204542201,0,0x0,8
tick,0x7ff8da10fb34,204557146,0,0x0,8
tick,0x7ff8da10fb34,204572171,0,0x0,8
tick,0x7ff8da10fb34,204588066,0,0x0,8
tick,0x7ff8da10fb34,204603071,0,0x0,8
tick,0x7ff8da10fb34,204618562,0,0x0,8
tick,0x7ff8da10fb34,204633790,0,0x0,8
tick,0x7ff8da10fb34,204649092,0,0x0,8
tick,0x7ff8da10fb34,204665034,0,0x0,8
tick,0x7ff8da10fb34,204680508,0,0x0,8
tick,0x7ff8da10fb34,204696365,0,0x0,8
tick,0x7ff8da10fb34,204712086,0,0x0,8
tick,0x7ff8da10fb34,204727095,0,0x0,8
tick,0x7ff8da10fb34,204742156,0,0x0,8
tick,0x7ff8da10fb34,204758109,0,0x0,8
tick,0x7ff8da10fb34,204774160,0,0x0,8
tick,0x7ff8da10fb34,204789584,0,0x0,8
tick,0x7ff8da10fb34,204804654,0,0x0,8
tick,0x7ff8da10fb34,204820087,0,0x0,8
tick,0x7ff8da10fb34,204836106,0,0x0,8
tick,0x7ff8da10fb34,204852105,0,0x0,8
tick,0x7ff8da10fb34,204867887,0,0x0,8
tick,0x7ff8da10fb34,204883266,0,0x0,8
tick,0x7ff8da10fb34,204899039,0,0x0,8
tick,0x7ff8da10fb34,204913979,0,0x0,8
tick,0x7ff8da10fb34,204929644,0,0x0,8
tick,0x7ff8da10fb34,204945081,0,0x0,8
tick,0x7ff8da10fb34,204960294,0,0x0,8
tick,0x7ff8da10fb34,204976245,0,0x0,8
tick,0x7ff8da10fb34,204992328,0,0x0,8
tick,0x7ff8da10fb34,205008050,0,0x0,8
tick,0x7ff8da10fb34,205024139,0,0x0,8
tick,0x7ff8da10fb34,205039576,0,0x0,8
tick,0x7ff8da10fb34,205055058,0,0x0,8
tick,0x7ff8da10fb34,205070091,0,0x0,8
tick,0x7ff8da10fb34,205086090,0,0x0,8
tick,0x7ff8da10fb34,205101713,0,0x0,8
tick,0x7ff8da10fb34,205116897,0,0x0,8
tick,0x7ff8da10fb34,205132159,0,0x0,8
tick,0x7ff8da10fb34,205148347,0,0x0,8
tick,0x7ff8da10fb34,205164253,0,0x0,8
tick,0x7ff8da10fb34,205180610,0,0x0,8
tick,0x7ff8da10fb34,205196648,0,0x0,8
tick,0x7ff8da10fb34,205211853,0,0x0,8
tick,0x7ff8da10fb34,205227063,0,0x0,8
tick,0x7ff8da10fb34,205242205,0,0x0,8
tick,0x7ff8da10fb34,205258125,0,0x0,8
tick,0x7ff8da10fb34,205274152,0,0x0,8
tick,0x7ff8da10fb34,205289638,0,0x0,8
tick,0x7ff8da10fb34,205304899,0,0x0,8
tick,0x7ff8da10fb34,205320177,0,0x0,8
tick,0x7ff8da10fb34,205336193,0,0x0,8
tick,0x7ff8da10fb34,205351971,0,0x0,8
tick,0x7ff8da10fb34,205367981,0,0x0,8
tick,0x7ff8da10fb34,205383965,0,0x0,8
tick,0x7ff8da10fb34,205399115,0,0x0,8
tick,0x7ff8da10fb34,205414624,0,0x0,8
tick,0x7ff8da10fb34,205430534,0,0x0,8
tick,0x7ff8da10fb34,205446892,0,0x0,8
tick,0x7ff8da10fb34,205461682,0,0x0,8
tick,0x7ff8da10fb34,205477421,0,0x0,8
tick,0x7ff8da10fb34,205493325,0,0x0,8
tick,0x7ff8da10fb34,205509216,0,0x0,8
tick,0x7ff8da10fb34,205525088,0,0x0,8
tick,0x7ff8da10fb34,205541205,0,0x0,8
tick,0x7ff8da10fb34,205557192,0,0x0,8
tick,0x7ff8da10fb34,205572131,0,0x0,8
tick,0x7ff8da10fb34,205587535,0,0x0,8
tick,0x7ff8da10fb34,205603058,0,0x0,8
tick,0x7ff8da10fb34,205618179,0,0x0,8
tick,0x7ff8da10fb34,205634045,0,0x0,8
tick,0x7ff8da10fb34,205648986,0,0x0,8
tick,0x7ff8da10fb34,205664673,0,0x0,8
tick,0x7ff8da10fb34,205680202,0,0x0,8
tick,0x7ff8da10fb34,205694966,0,0x0,8
tick,0x7ff8da10fb34,205710112,0,0x0,8
tick,0x7ff8da10fb34,205726115,0,0x0,8
tick,0x7ff8da10fb34,205741184,0,0x0,8
tick,0x7ff8da10fb34,205757132,0,0x0,8
tick,0x7ff8da10fb34,205772215,0,0x0,8
tick,0x7ff8da10fb34,205787131,0,0x0,8
tick,0x7ff8da10fb34,205801917,0,0x0,8
tick,0x7ff8da10fb34,205817936,0,0x0,8
tick,0x7ff8da10fb34,205833206,0,0x0,8
tick,0x7ff8da10fb34,205848943,0,0x0,8
tick,0x7ff8da10fb34,205864521,0,0x0,8
tick,0x7ff8da10fb34,205880138,0,0x0,8
tick,0x7ff8da10fb34,205895917,0,0x0,8
tick,0x7ff8da10fb34,205911336,0,0x0,8
tick,0x7ff8da10fb34,205926887,0,0x0,8
tick,0x7ff8da10fb34,205942225,0,0x0,8
tick,0x7ff8da10fb34,205957331,0,0x0,8
tick,0x7ff8da10fb34,205973202,0,0x0,8
tick,0x7ff8da10fb34,205988264,0,0x0,8
tick,0x7ff8da10fb34,206002832,0,0x0,8
tick,0x7ff8da10fb34,206018166,0,0x0,8
tick,0x7ff8da10fb34,206033820,0,0x0,8
tick,0x7ff8da10fb34,206048860,0,0x0,8
tick,0x7ff8da10fb34,206063444,0,0x0,8
tick,0x7ff8da10fb34,206079468,0,0x0,8
tick,0x7ff8da10fb34,206094770,0,0x0,8
tick,0x7ff8da10fb34,206110234,0,0x0,8
tick,0x7ff8da10fb34,206126113,0,0x0,8
tick,0x7ff8da10fb34,206141180,0,0x0,8
tick,0x7ff8da10fb34,206157134,0,0x0,8
tick,0x7ff8da10fb34,206171888,0,0x0,8
tick,0x7ff8da10fb34,206186959,0,0x0,8
tick,0x7ff8da10fb34,206203173,0,0x0,8
tick,0x7ff8da10fb34,206218530,0,0x0,8
tick,0x7ff8da10fb34,206233862,0,0x0,8
tick,0x7ff8da10fb34,206249522,0,0x0,8
tick,0x7ff8da10fb34,206265038,0,0x0,8
tick,0x7ff8da10fb34,206280548,0,0x0,8
tick,0x7ff8da10fb34,206296220,0,0x0,8
tick,0x7ff8da10fb34,206311128,0,0x0,8
tick,0x7ff8da10fb34,206326410,0,0x0,8
tick,0x7ff8da10fb34,206341165,0,0x0,8
tick,0x7ff8da10fb34,206356012,0,0x0,8
tick,0x7ff8da10fb34,206371969,0,0x0,8
tick,0x7ff8da10fb34,206388060,0,0x0,8
tick,0x7ff8da10fb34,206404174,0,0x0,8
tick,0x7ff8da10fb34,206419373,0,0x0,8
tick,0x7ff8da10fb34,206434834,0,0x0,8
tick,0x7ff8da10fb34,206450408,0,0x0,8
tick,0x7ff8da10fb34,206466082,0,0x0,8
tick,0x7ff8da10fb34,206481455,0,0x0,8
tick,0x7ff8da10fb34,206496665,0,0x0,8
tick,0x7ff8da10fb34,206512547,0,0x0,8
tick,0x7ff8da10fb34,206527519,0,0x0,8
tick,0x7ff8da10fb34,206542098,0,0x0,8
tick,0x7ff8da10fb34,206558095,0,0x0,8
tick,0x7ff8da10fb34,206574112,0,0x0,8
tick,0x7ff8da10fb34,206588542,0,0x0,8
tick,0x7ff8da10fb34,206604529,0,0x0,8
tick,0x7ff8da10fb34,206620142,0,0x0,8
tick,0x7ff8da10fb34,206636102,0,0x0,8
tick,0x7ff8da10fb34,206651095,0,0x0,8
tick,0x7ff8da10fb34,206666940,0,0x0,8
tick,0x7ff8da10fb34,206682299,0,0x0,8
tick,0x7ff8da10fb34,206698268,0,0x0,8
tick,0x7ff8da10fb34,206714178,0,0x0,8
tick,0x7ff8da10fb34,206730215,0,0x0,8
tick,0x7ff8da10fb34,206745649,0,0x0,8
tick,0x7ff8da10fb34,206761116,0,0x0,8
tick,0x7ff8da10fb34,206777286,0,0x0,8
tick,0x7ff8da10fb34,206792243,0,0x0,8
tick,0x7ff8da10fb34,206807572,0,0x0,8
tick,0x7ff8da10fb34,206823188,0,0x0,8
tick,0x7ff8da10fb34,206838302,0,0x0,8
tick,0x7ff8da10fb34,206853141,0,0x0,8
tick,0x7ff8da10fb34,206867956,0,0x0,8
tick,0x7ff8da10fb34,206883975,0,0x0,8
tick,0x7ff8da10fb34,206899526,0,0x0,8
tick,0x7ff8da10fb34,206914948,0,0x0,8
tick,0x7ff8da10fb34,206931201,0,0x0,8
tick,0x7ff8da10fb34,206946648,0,0x0,8
tick,0x7ff8da10fb34,206962337,0,0x0,8
tick,0x7ff8da10fb34,206977591,0,0x0,8
tick,0x7ff8da10fb34,206993919,0,0x0,8
tick,0x7ff8da10fb34,207008209,0,0x0,8
tick,0x7ff8da10fb34,207024146,0,0x0,8
tick,0x7ff8da10fb34,207038922,0,0x0,8
tick,0x7ff8da10fb34,207054372,0,0x0,8
tick,0x7ff8da10fb34,207070097,0,0x0,8
tick,0x7ff8da10fb34,207086142,0,0x0,8
tick,0x7ff8da10fb34,207102148,0,0x0,8
tick,0x7ff8da10fb34,207118149,0,0x0,8
tick,0x7ff8da10fb34,207133340,0,0x0,8
tick,0x7ff8da10fb34,207149386,0,0x0,8
tick,0x7ff8da10fb34,207164483,0,0x0,8
tick,0x7ff8da10fb34,207180369,0,0x0,8
tick,0x7ff8da10fb34,207196462,0,0x0,8
tick,0x7ff8da10fb34,207211987,0,0x0,8
tick,0x7ff8da10fb34,207227969,0,0x0,8
tick,0x7ff8da10fb34,207243470,0,0x0,8
tick,0x7ff8da10fb34,207258395,0,0x0,8
tick,0x7ff8da10fb34,207274144,0,0x0,8
tick,0x7ff8da10fb34,207289409,0,0x0,8
tick,0x7ff8da10fb34,207305063,0,0x0,8
tick,0x7ff8da10fb34,207320127,0,0x0,8
tick,0x7ff8da10fb34,207336133,0,0x0,8
tick,0x7ff8da10fb34,207351910,0,0x0,8
tick,0x7ff8da10fb34,207367196,0,0x0,8
tick,0x7ff8da10fb34,207382286,0,0x0,8
tick,0x7ff8da10fb34,207398226,0,0x0,8
tick,0x7ff8da10fb34,207413540,0,0x0,8
tick,0x7ff8da10fb34,207428914,0,0x0,8
tick,0x7ff8da10fb34,207444452,0,0x0,8
tick,0x7ff8da10fb34,207459358,0,0x0,8
tick,0x7ff8da10fb34,207474987,0,0x0,8
tick,0x7ff8da10fb34,207490270,0,0x0,8
tick,0x7ff8da10fb34,207506265,0,0x0,8
tick,0x7ff8da10fb34,207522194,0,0x0,8
tick,0x7ff8da10fb34,207538229,0,0x0,8
tick,0x7ff8da10fb34,207554182,0,0x0,8
tick,0x7ff8da10fb34,207569893,0,0x0,8
tick,0x7ff8da10fb34,207585118,0,0x0,8
tick,0x7ff8da10fb34,207600379,0,0x0,8
tick,0x7ff8da10fb34,207616117,0,0x0,8
tick,0x7ff8da10fb34,207632209,0,0x0,8
tick,0x7ff8da10fb34,207647398,0,0x0,8
tick,0x7ff8da10fb34,207662735,0,0x0,8
tick,0x7ff8da10fb34,207678235,0,0x0,8
tick,0x7ff8da10fb34,207693385,0,0x0,8
tick,0x7ff8da10fb34,207708493,0,0x0,8
tick,0x7ff8da10fb34,207724232,0,0x0,8
tick,0x7ff8da10fb34,207739483,0,0x0,8
tick,0x7ff8da10fb34,207755085,0,0x0,8
tick,0x7ff8da10fb34,207769902,0,0x0,8
tick,0x7ff8da10fb34,207784815,0,0x0,8
tick,0x7ff8da10fb34,207800063,0,0x0,8
tick,0x7ff8da10fb34,207815068,0,0x0,8
tick,0x7ff8da10fb34,207829951,0,0x0,8
tick,0x7ff8da10fb34,207846127,0,0x0,8
tick,0x7ff8da10fb34,207861741,0,0x0,8
tick,0x7ff8da10fb34,207878036,0,0x0,8
tick,0x7ff8da10fb34,207893442,0,0x0,8
tick,0x7ff8da10fb34,207908362,0,0x0,8
tick,0x7ff8da10fb34,207923233,0,0x0,8
tick,0x7ff8da10fb34,207938126,0,0x0,8
tick,0x7ff8da10fb34,207953340,0,0x0,8
tick,0x7ff8da10fb34,207969463,0,0x0,8
tick,0x7ff8da10fb34,207984664,0,0x0,8
tick,0x7ff8da10fb34,208000092,0,0x0,8
tick,0x7ff8da10fb34,208016140,0,0x0,8
tick,0x7ff8da10fb34,208031319,0,0x0,8
tick,0x7ff8da10fb34,208047074,0,0x0,8
tick,0x7ff8da10fb34,208062577,0,0x0,8
tick,0x7ff8da10fb34,208078333,0,0x0,8
tick,0x7ff8da10fb34,208093927,0,0x0,8
tick,0x7ff8da10fb34,208109967,0,0x0,8
tick,0x7ff8da10fb34,208124749,0,0x0,8
tick,0x7ff8da10fb34,208140446,0,0x0,8
tick,0x7ff8da10fb34,208156472,0,0x0,8
tick,0x7ff8da10fb34,208172478,0,0x0,8
tick,0x7ff8da10fb34,208187912,0,0x0,8
tick,0x7ff8da10fb34,208204051,0,0x0,8
tick,0x7ff8da10fb34,208219500,0,0x0,8
tick,0x7ff8da10fb34,208234913,0,0x0,8
tick,0x7ff8da10fb34,208250178,0,0x0,8
tick,0x7ff8da10fb34,208266082,0,0x0,8
tick,0x7ff8da10fb34,208281232,0,0x0,8
tick,0x7ff8da10fb34,208297523,0,0x0,8
tick,0x7ff8da10fb34,208312213,0,0x0,8
tick,0x7ff8da10fb34,208327199,0,0x0,8
tick,0x7ff8da10fb34,208343274,0,0x0,8
tick,0x7ff8da10fb34,208360397,0,0x0,8
tick,0x7ff8da10fb34,208373210,0,0x0,8
tick,0x7ff8da10fb34,208388508,0,0x0,8
tick,0x7ff8da10fb34,208404095,0,0x0,8
tick,0x7ff8da10fb34,208419166,0,0x0,8
tick,0x7ff8da10fb34,208434062,0,0x0,8
tick,0x7ff8da10fb34,208450052,0,0x0,8
tick,0x7ff8da10fb34,208466212,0,0x0,8
tick,0x7ff8da10fb34,208482062,0,0x0,8
tick,0x7ff8da10fb34,208497116,0,0x0,8
tick,0x7ff8da10fb34,208512048,0,0x0,8
tick,0x7ff8da10fb34,208528029,0,0x0,8
tick,0x7ff8da10fb34,208543038,0,0x0,8
tick,0x7ff8da10fb34,208558016,0,0x0,8
tick,0x7ff8da10fb34,208574046,0,0x0,8
tick,0x7ff8da10fb34,208590030,0,0x0,8
tick,0x7ff8da10fb34,208606035,0,0x0,8
tick,0x7ff8da10fb34,208621994,0,0x0,8
tick,0x7ff8da10fb34,208638008,0,0x0,8
tick,0x7ff8da10fb34,208654015,0,0x0,8
tick,0x7ff8da10fb34,208669980,0,0x0,8
tick,0x7ff8da10fb34,208684993,0,0x0,8
tick,0x7ff8da10fb34,208699976,0,0x0,8
tick,0x7ff8da10fb34,208716000,0,0x0,8
tick,0x7ff8da10fb34,208731990,0,0x0,8
tick,0x7ff8da10fb34,208748040,0,0x0,8
tick,0x7ff8da10fb34,208763181,0,0x0,8
tick,0x7ff8da10fb34,208777891,0,0x0,8
tick,0x7ff8da10fb34,208793458,0,0x0,8
tick,0x7ff8da10fb34,208808961,0,0x0,8
tick,0x7ff8da10fb34,208824106,0,0x0,8
tick,0x7ff8da10fb34,208839429,0,0x0,8
tick,0x7ff8da10fb34,208855020,0,0x0,8
tick,0x7ff8da10fb34,208870025,0,0x0,8
tick,0x7ff8da10fb34,208886119,0,0x0,8
tick,0x7ff8da10fb34,208901224,0,0x0,8
tick,0x7ff8da10fb34,208916093,0,0x0,8
tick,0x7ff8da10fb34,208930971,0,0x0,8
tick,0x7ff8da10fb34,208946727,0,0x0,8
tick,0x7ff8da10fb34,208962362,0,0x0,8
tick,0x7ff8da10fb34,208978016,0,0x0,8
tick,0x7ff8da10fb34,208993511,0,0x0,8
tick,0x7ff8da10fb34,209008261,0,0x0,8
tick,0x7ff8da10fb34,209024100,0,0x0,8
tick,0x7ff8da10fb34,209039603,0,0x0,8
tick,0x7ff8da10fb34,209055373,0,0x0,8
tick,0x7ff8da10fb34,209071433,0,0x0,8
tick,0x7ff8da10fb34,209086910,0,0x0,8
tick,0x7ff8da10fb34,209102994,0,0x0,8
tick,0x7ff8da10fb34,209118997,0,0x0,8
tick,0x7ff8da10fb34,209134281,0,0x0,8
tick,0x7ff8da10fb34,209149375,0,0x0,8
tick,0x7ff8da10fb34,209164587,0,0x0,8
tick,0x7ff8da10fb34,209180293,0,0x0,8
tick,0x7ff8da10fb34,209195354,0,0x0,8
tick,0x7ff8da10fb34,209211193,0,0x0,8
tick,0x7ff8da10fb34,209227310,0,0x0,8
tick,0x7ff8da10fb34,209242090,0,0x0,8
tick,0x7ff8da10fb34,209257044,0,0x0,8
tick,0x7ff8da10fb34,209273125,0,0x0,8
tick,0x7ff8da10fb34,209288467,0,0x0,8
tick,0x7ff8da10fb34,209304116,0,0x0,8
tick,0x7ff8da10fb34,209319067,0,0x0,8
tick,0x7ff8da10fb34,209333786,0,0x0,8
tick,0x7ff8da10fb34,209349471,0,0x0,8
tick,0x7ff8da10fb34,209364849,0,0x0,8
tick,0x7ff8da10fb34,209380741,0,0x0,8
tick,0x7ff8da10fb34,209396475,0,0x0,8
tick,0x7ff8da10fb34,209412596,0,0x0,8
tick,0x7ff8da10fb34,209428782,0,0x0,8
tick,0x7ff8da10fb34,209443805,0,0x0,8
tick,0x7ff8da10fb34,209460168,0,0x0,8
tick,0x7ff8da10fb34,209474639,0,0x0,8
tick,0x7ff8da10fb34,209490044,0,0x0,8
tick,0x7ff8da10fb34,209505025,0,0x0,8
tick,0x7ff8da10fb34,209520224,0,0x0,8
tick,0x7ff8da10fb34,209535668,0,0x0,8
tick,0x7ff8da10fb34,209551174,0,0x0,8
tick,0x7ff8da10fb34,209566378,0,0x0,8
tick,0x7ff8da10fb34,209582733,0,0x0,8
tick,0x7ff8da10fb34,209597483,0,0x0,8
tick,0x7ff8da10fb34,209612957,0,0x0,8
tick,0x7ff8da10fb34,209628708,0,0x0,8
tick,0x7ff8da10fb34,209644342,0,0x0,8
tick,0x7ff8da10fb34,209659693,0,0x0,8
tick,0x7ff8da10fb34,209674672,0,0x0,8
tick,0x7ff8da10fb34,209689758,0,0x0,8
tick,0x7ff8da10fb34,209704950,0,0x0,8
tick,0x7ff8da10fb34,209721153,0,0x0,8
tick,0x7ff8da10fb34,209737061,0,0x0,8
tick,0x7ff8da10fb34,209753163,0,0x0,8
tick,0x7ff8da10fb34,209768507,0,0x0,8
tick,0x7ff8da10fb34,209784395,0,0x0,8
tick,0x7ff8da10fb34,209799623,0,0x0,8
tick,0x7ff8da10fb34,209814901,0,0x0,8
tick,0x7ff8da10fb34,209830365,0,0x0,8
tick,0x7ff8da10fb34,209846218,0,0x0,8
tick,0x7ff8da10fb34,209861855,0,0x0,8
tick,0x7ff8da10fb34,209877622,0,0x0,8
tick,0x7ff8da10fb34,209893114,0,0x0,8
tick,0x7ff8da10fb34,209908113,0,0x0,8
tick,0x7ff8da10fb34,209924168,0,0x0,8
tick,0x7ff8da10fb34,209939576,0,0x0,8
tick,0x7ff8da10fb34,209955086,0,0x0,8
tick,0x7ff8da10fb34,209971156,0,0x0,8
tick,0x7ff8da10fb34,209987252,0,0x0,8
tick,0x7ff8da10fb34,210002064,0,0x0,8
tick,0x7ff8da10fb34,210017097,0,0x0,8
tick,0x7ff8da10fb34,210032449,0,0x0,8
tick,0x7ff8da10fb34,210048433,0,0x0,8
tick,0x7ff8da10fb34,210063795,0,0x0,8
tick,0x7ff8da10fb34,210079418,0,0x0,8
tick,0x7ff8da10fb34,210095713,0,0x0,8
tick,0x7ff8da10fb34,210110786,0,0x0,8
tick,0x7ff8da10fb34,210127196,0,0x0,8
tick,0x7ff8da10fb34,210141123,0,0x0,8
tick,0x7ff8da10fb34,210157382,0,0x0,8
tick,0x7ff8da10fb34,210173057,0,0x0,8
tick,0x7ff8da10fb34,210188587,0,0x0,8
tick,0x7ff8da10fb34,210203770,0,0x0,8
tick,0x7ff8da10fb34,210218971,0,0x0,8
tick,0x7ff8da10fb34,210235000,0,0x0,8
tick,0x7ff8da10fb34,210251175,0,0x0,8
tick,0x7ff8da10fb34,210267312,0,0x0,8
tick,0x7ff8da10fb34,210281349,0,0x0,8
tick,0x7ff8da10fb34,210296881,0,0x0,8
tick,0x7ff8da10fb34,210312544,0,0x0,8
tick,0x7ff8da10fb34,210328196,0,0x0,8
tick,0x7ff8da10fb34,210344698,0,0x0,8
tick,0x7ff8da10fb34,210360048,0,0x0,8
tick,0x7ff8da10fb34,210375382,0,0x0,8
tick,0x7ff8da10fb34,210391074,0,0x0,8
tick,0x7ff8da10fb34,210406705,0,0x0,8
tick,0x7ff8da10fb34,210422047,0,0x0,8
tick,0x7ff8da10fb34,210437360,0,0x0,8
tick,0x7ff8da10fb34,210452110,0,0x0,8
tick,0x7ff8da10fb34,210467972,0,0x0,8
tick,0x7ff8da10fb34,210483331,0,0x0,8
tick,0x7ff8da10fb34,210498441,0,0x0,8
tick,0x7ff8da10fb34,210513826,0,0x0,8
tick,0x7ff8da10fb34,210529371,0,0x0,8
tick,0x7ff8da10fb34,210544950,0,0x0,8
tick,0x7ff8da10fb34,210560694,0,0x0,8
tick,0x7ff8da10fb34,210576313,0,0x0,8
tick,0x7ff8da10fb34,210592427,0,0x0,8
tick,0x7ff8da10fb34,210607859,0,0x0,8
tick,0x7ff8da10fb34,210623113,0,0x0,8
tick,0x7ff8da10fb34,210638322,0,0x0,8
tick,0x7ff8da10fb34,210654130,0,0x0,8
tick,0x7ff8da10fb34,210668940,0,0x0,8
tick,0x7ff8da10fb34,210683974,0,0x0,8
tick,0x7ff8da10fb34,210699504,0,0x0,8
tick,0x7ff8da10fb34,210715090,0,0x0,8
tick,0x7ff8da10fb34,210730147,0,0x0,8
tick,0x7ff8da10fb34,210745863,0,0x0,8
tick,0x7ff8da10fb34,210761664,0,0x0,8
tick,0x7ff8da10fb34,210777532,0,0x0,8
tick,0x7ff8da10fb34,210792254,0,0x0,8
tick,0x7ff8da10fb34,210807127,0,0x0,8
tick,0x7ff8da10fb34,210823173,0,0x0,8
tick,0x7ff8da10fb34,210838951,0,0x0,8
tick,0x7ff8da10fb34,210854138,0,0x0,8
tick,0x7ff8da10fb34,210869492,0,0x0,8
tick,0x7ff8da10fb34,210884966,0,0x0,8
tick,0x7ff8da10fb34,210900272,0,0x0,8
tick,0x7ff8da10fb34,210916148,0,0x0,8
tick,0x7ff8da10fb34,210931089,0,0x0,8
tick,0x7ff8da10fb34,210946894,0,0x0,8
tick,0x7ff8da10fb34,210962407,0,0x0,8
tick,0x7ff8da10fb34,210978070,0,0x0,8
tick,0x7ff8da10fb34,210994180,0,0x0,8
tick,0x7ff8da10fb34,211009248,0,0x0,8
tick,0x7ff8da10fb34,211025492,0,0x0,8
tick,0x7ff8da10fb34,211041169,0,0x0,8
tick,0x7ff8da10fb34,211056864,0,0x0,8
tick,0x7ff8da10fb34,211072192,0,0x0,8
tick,0x7ff8da10fb34,211088294,0,0x0,8
tick,0x7ff8da10fb34,211104178,0,0x0,8
tick,0x7ff8da10fb34,211119976,0,0x0,8
tick,0x7ff8da10fb34,211135111,0,0x0,8
tick,0x7ff8da10fb34,211151162,0,0x0,8
tick,0x7ff8da10fb34,211166175,0,0x0,8
tick,0x7ff8da10fb34,211181443,0,0x0,8
tick,0x7ff8da10fb34,211196945,0,0x0,8
tick,0x7ff8da10fb34,211212395,0,0x0,8
tick,0x7ff8da10fb34,211228240,0,0x0,8
tick,0x7ff8da10fb34,211243855,0,0x0,8
tick,0x7ff8da10fb34,211259054,0,0x0,8
tick,0x7ff8da10fb34,211275279,0,0x0,8
tick,0x7ff8da10fb34,211290464,0,0x0,8
tick,0x7ff8da10fb34,211306117,0,0x0,8
tick,0x7ff8da10fb34,211321181,0,0x0,8
tick,0x7ff8da10fb34,211337124,0,0x0,8
tick,0x7ff8da10fb34,211353144,0,0x0,8
tick,0x7ff8da10fb34,211369036,0,0x0,8
tick,0x7ff8da10fb34,211384256,0,0x0,8
tick,0x7ff8da10fb34,211399499,0,0x0,8
tick,0x7ff8da10fb34,211414899,0,0x0,8
tick,0x7ff8da10fb34,211430108,0,0x0,8
tick,0x7ff8da10fb34,211445572,0,0x0,8
tick,0x7ff8da10fb34,211461255,0,0x0,8
tick,0x7ff8da10fb34,211477604,0,0x0,8
tick,0x7ff8da10fb34,211492362,0,0x0,8
tick,0x7ff8da10fb34,211508521,0,0x0,8
tick,0x7ff8da10fb34,211523187,0,0x0,8
tick,0x7ff8da10fb34,211538896,0,0x0,8
tick,0x7ff8da10fb34,211554138,0,0x0,8
tick,0x7ff8da10fb34,211569378,0,0x0,8
tick,0x7ff8da10fb34,211584937,0,0x0,8
tick,0x7ff8da10fb34,211600123,0,0x0,8
tick,0x7ff8da10fb34,211616170,0,0x0,8
tick,0x7ff8da10fb34,211631453,0,0x0,8
tick,0x7ff8da10fb34,211647159,0,0x0,8
tick,0x7ff8da10fb34,211662177,0,0x0,8
tick,0x7ff8da10fb34,211678077,0,0x0,8
tick,0x7ff8da10fb34,211693687,0,0x0,8
tick,0x7ff8da10fb34,211708663,0,0x0,8
tick,0x7ff8da10fb34,211724114,0,0x0,8
tick,0x7ff8da10fb34,211739468,0,0x0,8
tick,0x7ff8da10fb34,211755031,0,0x0,8
tick,0x7ff8da10fb34,211771216,0,0x0,8
tick,0x7ff8da10fb34,211787055,0,0x0,8
tick,0x7ff8da10fb34,211803313,0,0x0,8
tick,0x7ff8da10fb34,211818541,0,0x0,8
tick,0x7ff8da10fb34,211834075,0,0x0,8
tick,0x7ff8da10fb34,211849488,0,0x0,8
tick,0x7ff8da10fb34,211865053,0,0x0,8
tick,0x7ff8da10fb34,211881118,0,0x0,8
tick,0x7ff8da10fb34,211897486,0,0x0,8
tick,0x7ff8da10fb34,211912958,0,0x0,8
tick,0x7ff8da10fb34,211928493,0,0x0,8
tick,0x7ff8da10fb34,211942844,0,0x0,8
tick,0x7ff8da10fb34,211958309,0,0x0,8
tick,0x7ff8da10fb34,211973267,0,0x0,8
tick,0x7ff8da10fb34,211988251,0,0x0,8
tick,0x7ff8da10fb34,212003230,0,0x0,8
tick,0x7ff8da10fb34,212018407,0,0x0,8
tick,0x7ff8da10fb34,212034031,0,0x0,8
tick,0x7ff8da10fb34,212049157,0,0x0,8
tick,0x7ff8da10fb34,212064723,0,0x0,8
tick,0x7ff8da10fb34,212079842,0,0x0,8
tick,0x7ff8da10fb34,212095408,0,0x0,8
tick,0x7ff8da10fb34,212110896,0,0x0,8
tick,0x7ff8da10fb34,212128161,0,0x0,8
tick,0x7ff8da10fb34,212143360,0,0x0,8
tick,0x7ff8da10fb34,212158492,0,0x0,8
tick,0x7ff8da10fb34,212173420,0,0x0,8
tick,0x7ff8da10fb34,212189392,0,0x0,8
tick,0x7ff8da10fb34,212205397,0,0x0,8
tick,0x7ff8da10fb34,212221362,0,0x0,8
tick,0x7ff8da10fb34,212237295,0,0x0,8
tick,0x7ff8da10fb34,212252341,0,0x0,8
tick,0x7ff8da10fb34,212267068,0,0x0,8
tick,0x7ff8da10fb34,212282066,0,0x0,8
tick,0x7ff8da10fb34,212298570,0,0x0,8
tick,0x7ff8da10fb34,212313900,0,0x0,8
tick,0x7ff8da10fb34,212329153,0,0x0,8
tick,0x7ff8da10fb34,212345308,0,0x0,8
tick,0x7ff8da10fb34,212361912,0,0x0,8
tick,0x7ff8da10fb34,212376815,0,0x0,8
tick,0x7ff8da10fb34,212391675,0,0x0,8
tick,0x7ff8da10fb34,212406898,0,0x0,8
tick,0x7ff8da10fb34,212422280,0,0x0,8
tick,0x7ff8da10fb34,212437508,0,0x0,8
tick,0x7ff8da10fb34,212452157,0,0x0,8
tick,0x7ff8da10fb34,212467924,0,0x0,8
tick,0x7ff8da10fb34,212483961,0,0x0,8
tick,0x7ff8da10fb34,212499064,0,0x0,8
tick,0x7ff8da10fb34,212514288,0,0x0,8
tick,0x7ff8da10fb34,212530059,0,0x0,8
tick,0x7ff8da10fb34,212546471,0,0x0,8
tick,0x7ff8da10fb34,212561748,0,0x0,8
tick,0x7ff8da10fb34,212577837,0,0x0,8
tick,0x7ff8da10fb34,212592059,0,0x0,8
tick,0x7ff8da10fb34,212608030,0,0x0,8
tick,0x7ff8da10fb34,212623130,0,0x0,8
tick,0x7ff8da10fb34,212638372,0,0x0,8
tick,0x7ff8da10fb34,212654208,0,0x0,8
tick,0x7ff8da10fb34,212669858,0,0x0,8
tick,0x7ff8da10fb34,212685003,0,0x0,8
tick,0x7ff8da10fb34,212700103,0,0x0,8
tick,0x7ff8da10fb34,212716064,0,0x0,8
tick,0x7ff8da10fb34,212731669,0,0x0,8
tick,0x7ff8da10fb34,212747053,0,0x0,8
tick,0x7ff8da10fb34,212762312,0,0x0,8
tick,0x7ff8da10fb34,212778068,0,0x0,8
tick,0x7ff8da10fb34,212793957,0,0x0,8
tick,0x7ff8da10fb34,212810133,0,0x0,8
tick,0x7ff8da10fb34,212825000,0,0x0,8
tick,0x7ff8da10fb34,212841322,0,0x0,8
tick,0x7ff8da10fb34,212857100,0,0x0,8
tick,0x7ff8da10fb34,212873118,0,0x0,8
tick,0x7ff8da10fb34,212888627,0,0x0,8
tick,0x7ff8da10fb34,212904161,0,0x0,8
tick,0x7ff8da10fb34,212919288,0,0x0,8
tick,0x7ff8da10fb34,212935051,0,0x0,8
tick,0x7ff8da10fb34,212950911,0,0x0,8
tick,0x7ff8da10fb34,212966095,0,0x0,8
tick,0x7ff8da10fb34,212981968,0,0x0,8
tick,0x7ff8da10fb34,212997269,0,0x0,8
tick,0x7ff8da10fb34,213012637,0,0x0,8
tick,0x7ff8da10fb34,213028055,0,0x0,8
tick,0x7ff8da10fb34,213044027,0,0x0,8
tick,0x7ff8da10fb34,213060014,0,0x0,8
tick,0x7ff8da10fb34,213074877,0,0x0,8
tick,0x7ff8da10fb34,213089962,0,0x0,8
tick,0x7ff8da10fb34,213105042,0,0x0,8
tick,0x7ff8da10fb34,213121117,0,0x0,8
tick,0x7ff8da10fb34,213136074,0,0x0,8
tick,0x7ff8da10fb34,213151111,0,0x0,8
tick,0x7ff8da10fb34,213166217,0,0x0,8
tick,0x7ff8da10fb34,213182030,0,0x0,8
tick,0x7ff8da10fb34,213197872,0,0x0,8
tick,0x7ff8da10fb34,213213032,0,0x0,8
tick,0x7ff8da10fb34,213228121,0,0x0,8
tick,0x7ff8da10fb34,213243770,0,0x0,8
tick,0x7ff8da10fb34,213259575,0,0x0,8
tick,0x7ff8da10fb34,213275033,0,0x0,8
tick,0x7ff8da10fb34,213290351,0,0x0,8
tick,0x7ff8da10fb34,213306138,0,0x0,8
tick,0x7ff8da10fb34,213322147,0,0x0,8
tick,0x7ff8da10fb34,213338310,0,0x0,8
tick,0x7ff8da10fb34,213354153,0,0x0,8
tick,0x7ff8da10fb34,213370059,0,0x0,8
tick,0x7ff8da10fb34,213385112,0,0x0,8
tick,0x7ff8da10fb34,213401175,0,0x0,8
tick,0x7ff8da10fb34,213416721,0,0x0,8
tick,0x7ff8da10fb34,213434163,0,0x0,8
tick,0x7ff8da10fb34,213447063,0,0x0,8
tick,0x7ff8da10fb34,213462000,0,0x0,8
tick,0x7ff8da10fb34,213476999,0,0x0,8
tick,0x7ff8da10fb34,213492501,0,0x0,8
tick,0x7ff8da10fb34,213508604,0,0x0,8
tick,0x7ff8da10fb34,213524496,0,0x0,8
tick,0x7ff8da10fb34,213540644,0,0x0,8
tick,0x7ff8da10fb34,213556455,0,0x0,8
tick,0x7ff8da10fb34,213572454,0,0x0,8
tick,0x7ff8da10fb34,213588465,0,0x0,8
tick,0x7ff8da10fb34,213604424,0,0x0,8
tick,0x7ff8da10fb34,213620436,0,0x0,8
tick,0x7ff8da10fb34,213636489,0,0x0,8
tick,0x7ff8da10fb34,213652393,0,0x0,8
tick,0x7ff8da10fb34,213668433,0,0x0,8
tick,0x7ff8da10fb34,213683383,0,0x0,8
tick,0x7ff8da10fb34,213698423,0,0x0,8
tick,0x7ff8da10fb34,213714386,0,0x0,8
tick,0x7ff8da10fb34,213730390,0,0x0,8
tick,0x7ff8da10fb34,213746415,0,0x0,8
tick,0x7ff8da10fb34,213761400,0,0x0,8
tick,0x7ff8da10fb34,213776379,0,0x0,8
tick,0x7ff8da10fb34,213792420,0,0x0,8
tick,0x7ff8da10fb34,213808204,0,0x0,8
tick,0x7ff8da10fb34,213824058,0,0x0,8
tick,0x7ff8da10fb34,213839602,0,0x0,8
tick,0x7ff8da10fb34,213855047,0,0x0,8
tick,0x7ff8da10fb34,213869978,0,0x0,8
tick,0x7ff8da10fb34,213885061,0,0x0,8
tick,0x7ff8da10fb34,213901122,0,0x0,8
tick,0x7ff8da10fb34,213916070,0,0x0,8
tick,0x7ff8da10fb34,213930917,0,0x0,8
tick,0x7ff8da10fb34,213946169,0,0x0,8
tick,0x7ff8da10fb34,213961734,0,0x0,8
tick,0x7ff8da10fb34,213977772,0,0x0,8
tick,0x7ff8da10fb34,213993504,0,0x0,8
tick,0x7ff8da10fb34,214008724,0,0x0,8
tick,0x7ff8da10fb34,214024175,0,0x0,8
tick,0x7ff8da10fb34,214039219,0,0x0,8
tick,0x7ff8da10fb34,214055176,0,0x0,8
tick,0x7ff8da10fb34,214070884,0,0x0,8
tick,0x7ff8da10fb34,214086125,0,0x0,8
tick,0x7ff8da10fb34,214102144,0,0x0,8
tick,0x7ff8da10fb34,214117491,0,0x0,8
tick,0x7ff8da10fb34,214132771,0,0x0,8
tick,0x7ff8da10fb34,214148830,0,0x0,8
tick,0x7ff8da10fb34,214164503,0,0x0,8
tick,0x7ff8da10fb34,214179807,0,0x0,8
tick,0x7ff8da10fb34,214194995,0,0x0,8
tick,0x7ff8da10fb34,214210935,0,0x0,8
tick,0x7ff8da10fb34,214225835,0,0x0,8
tick,0x7ff8da10fb34,214240738,0,0x0,8
tick,0x7ff8da10fb34,214256105,0,0x0,8
tick,0x7ff8da10fb34,214272137,0,0x0,8
tick,0x7ff8da10fb34,214287355,0,0x0,8
tick,0x7ff8da10fb34,214303144,0,0x0,8
tick,0x7ff8da10fb34,214318006,0,0x0,8
tick,0x7ff8da10fb34,214333524,0,0x0,8
tick,0x7ff8da10fb34,214349370,0,0x0,8
tick,0x7ff8da10fb34,214364601,0,0x0,8
tick,0x7ff8da10fb34,214380444,0,0x0,8
tick,0x7ff8da10fb34,214396178,0,0x0,8
tick,0x7ff8da10fb34,214411658,0,0x0,8
tick,0x7ff8da10fb34,214426628,0,0x0,8
tick,0x7ff8da10fb34,214442491,0,0x0,8
tick,0x7ff8da10fb34,214457542,0,0x0,8
tick,0x7ff8da10fb34,214473152,0,0x0,8
tick,0x7ff8da10fb34,214488220,0,0x0,8
tick,0x7ff8da10fb34,214504122,0,0x0,8
tick,0x7ff8da10fb34,214519522,0,0x0,8
tick,0x7ff8da10fb34,214535037,0,0x0,8
tick,0x7ff8da10fb34,214550378,0,0x0,8
tick,0x7ff8da10fb34,214566125,0,0x0,8
tick,0x7ff8da10fb34,214582125,0,0x0,8
tick,0x7ff8da10fb34,214598325,0,0x0,8
tick,0x7ff8da10fb34,214613966,0,0x0,8
tick,0x7ff8da10fb34,214629509,0,0x0,8
tick,0x7ff8da10fb34,214645075,0,0x0,8
tick,0x7ff8da10fb34,214660904,0,0x0,8
tick,0x7ff8da10fb34,214676526,0,0x0,8
tick,0x7ff8da10fb34,214692220,0,0x0,8
tick,0x7ff8da10fb34,214707217,0,0x0,8
tick,0x7ff8da10fb34,214722131,0,0x0,8
tick,0x7ff8da10fb34,214737389,0,0x0,8
tick,0x7ff8da10fb34,214753158,0,0x0,8
tick,0x7ff8da10fb34,214769125,0,0x0,8
tick,0x7ff8da10fb34,214784882,0,0x0,8
tick,0x7ff8da10fb34,214800636,0,0x0,8
tick,0x7ff8da10fb34,214816060,0,0x0,8
tick,0x7ff8da10fb34,214830834,0,0x0,8
tick,0x7ff8da10fb34,214846111,0,0x0,8
tick,0x7ff8da10fb34,214861347,0,0x0,8
tick,0x7ff8da10fb34,214877375,0,0x0,8
tick,0x7ff8da10fb34,214893087,0,0x0,8
tick,0x7ff8da10fb34,214908468,0,0x0,8
tick,0x7ff8da10fb34,214923809,0,0x0,8
tick,0x7ff8da10fb34,214939121,0,0x0,8
tick,0x7ff8da10fb34,214955067,0,0x0,8
tick,0x7ff8da10fb34,214970591,0,0x0,8
tick,0x7ff8da10fb34,214986183,0,0x0,8
tick,0x7ff8da10fb34,215001187,0,0x0,8
tick,0x7ff8da10fb34,215017160,0,0x0,8
tick,0x7ff8da10fb34,215032846,0,0x0,8
tick,0x7ff8da10fb34,215048611,0,0x0,8
tick,0x7ff8da10fb34,215064034,0,0x0,8
tick,0x7ff8da10fb34,215079179,0,0x0,8
tick,0x7ff8da10fb34,215094602,0,0x0,8
tick,0x7ff8da10fb34,215110740,0,0x0,8
tick,0x7ff8da10fb34,215126344,0,0x0,8
tick,0x7ff8da10fb34,215142277,0,0x0,8
tick,0x7ff8da10fb34,215158519,0,0x0,8
tick,0x7ff8da10fb34,215172914,0,0x0,8
tick,0x7ff8da10fb34,215187824,0,0x0,8
tick,0x7ff8da10fb34,215203076,0,0x0,8
tick,0x7ff8da10fb34,215218330,0,0x0,8
tick,0x7ff8da10fb34,215234022,0,0x0,8
tick,0x7ff8da10fb34,215249117,0,0x0,8
tick,0x7ff8da10fb34,215264279,0,0x0,8
tick,0x7ff8da10fb34,215279603,0,0x0,8
tick,0x7ff8da10fb34,215294953,0,0x0,8
tick,0x7ff8da10fb34,215310143,0,0x0,8
tick,0x7ff8da10fb34,215325318,0,0x0,8
tick,0x7ff8da10fb34,215340912,0,0x0,8
tick,0x7ff8da10fb34,215356174,0,0x0,8
tick,0x7ff8da10fb34,215371361,0,0x0,8
tick,0x7ff8da10fb34,215386789,0,0x0,8
tick,0x7ff8da10fb34,215402175,0,0x0,8
tick,0x7ff8da10fb34,215417432,0,0x0,8
tick,0x7ff8da10fb34,215433153,0,0x0,8
tick,0x7ff8da10fb34,215449043,0,0x0,8
tick,0x7ff8da10fb34,215464908,0,0x0,8
tick,0x7ff8da10fb34,215479534,0,0x0,8
tick,0x7ff8da10fb34,215494904,0,0x0,8
tick,0x7ff8da10fb34,215510383,0,0x0,8
tick,0x7ff8da10fb34,215526157,0,0x0,8
tick,0x7ff8da10fb34,215542121,0,0x0,8
tick,0x7ff8da10fb34,215557091,0,0x0,8
tick,0x7ff8da10fb34,215572524,0,0x0,8
tick,0x7ff8da10fb34,215588068,0,0x0,8
tick,0x7ff8da10fb34,215604188,0,0x0,8
tick,0x7ff8da10fb34,215619540,0,0x0,8
tick,0x7ff8da10fb34,215635054,0,0x0,8
tick,0x7ff8da10fb34,215649878,0,0x0,8
tick,0x7ff8da10fb34,215665083,0,0x0,8
tick,0x7ff8da10fb34,215681092,0,0x0,8
tick,0x7ff8da10fb34,215696894,0,0x0,8
tick,0x7ff8da10fb34,215712176,0,0x0,8
tick,0x7ff8da10fb34,215727113,0,0x0,8
tick,0x7ff8da10fb34,215742729,0,0x0,8
tick,0x7ff8da10fb34,215757978,0,0x0,8
tick,0x7ff8da10fb34,215773308,0,0x0,8
tick,0x7ff8da10fb34,215788420,0,0x0,8
tick,0x7ff8da10fb34,215804151,0,0x0,8
tick,0x7ff8da10fb34,215819134,0,0x0,8
tick,0x7ff8da10fb34,215834163,0,0x0,8
tick,0x7ff8da10fb34,215849542,0,0x0,8
tick,0x7ff8da10fb34,215864855,0,0x0,8
tick,0x7ff8da10fb34,215880565,0,0x0,8
tick,0x7ff8da10fb34,215896111,0,0x0,8
tick,0x7ff8da10fb34,215911355,0,0x0,8
tick,0x7ff8da10fb34,215926965,0,0x0,8
tick,0x7ff8da10fb34,215942673,0,0x0,8
tick,0x7ff8da10fb34,215958379,0,0x0,8
tick,0x7ff8da10fb34,215973300,0,0x0,8
tick,0x7ff8da10fb34,215987947,0,0x0,8
tick,0x7ff8da10fb34,216003169,0,0x0,8
tick,0x7ff8da10fb34,216019210,0,0x0,8
tick,0x7ff8da10fb34,216034222,0,0x0,8
tick,0x7ff8da10fb34,216049373,0,0x0,8
tick,0x7ff8da10fb34,216065035,0,0x0,8
tick,0x7ff8da10fb34,216080133,0,0x0,8
tick,0x7ff8da10fb34,216096073,0,0x0,8
tick,0x7ff8da10fb34,216111228,0,0x0,8
tick,0x7ff8da10fb34,216127184,0,0x0,8
tick,0x7ff8da10fb34,216142113,0,0x0,8
tick,0x7ff8da10fb34,216159028,0,0x0,8
tick,0x7ff8da10fb34,216173378,0,0x0,8
tick,0x7ff8da10fb34,216188546,0,0x0,8
tick,0x7ff8da10fb34,216204142,0,0x0,8
tick,0x7ff8da10fb34,216219366,0,0x0,8
tick,0x7ff8da10fb34,216235105,0,0x0,8
tick,0x7ff8da10fb34,216250255,0,0x0,8
tick,0x7ff8da10fb34,216266139,0,0x0,8
tick,0x7ff8da10fb34,216282036,0,0x0,8
tick,0x7ff8da10fb34,216297887,0,0x0,8
tick,0x7ff8da10fb34,216313846,0,0x0,8
tick,0x7ff8da10fb34,216329180,0,0x0,8
tick,0x7ff8da10fb34,216344531,0,0x0,8
tick,0x7ff8da10fb34,216359625,0,0x0,8
tick,0x7ff8da10fb34,216375069,0,0x0,8
tick,0x7ff8da10fb34,216390104,0,0x0,8
tick,0x7ff8da10fb34,216405068,0,0x0,8
tick,0x7ff8da10fb34,216419890,0,0x0,8
tick,0x7ff8da10fb34,216435048,0,0x0,8
tick,0x7ff8da10fb34,216450289,0,0x0,8
tick,0x7ff8da10fb34,216466033,0,0x0,8
tick,0x7ff8da10fb34,216482170,0,0x0,8
tick,0x7ff8da10fb34,216498136,0,0x0,8
tick,0x7ff8da10fb34,216513784,0,0x0,8
tick,0x7ff8da10fb34,216529365,0,0x0,8
tick,0x7ff8da10fb34,216544404,0,0x0,8
tick,0x7ff8da10fb34,216560053,0,0x0,8
tick,0x7ff8da10fb34,216575697,0,0x0,8
tick,0x7ff8da10fb34,216591159,0,0x0,8
tick,0x7ff8da10fb34,216606510,0,0x0,8
tick,0x7ff8da10fb34,216621093,0,0x0,8
tick,0x7ff8da10fb34,216637190,0,0x0,8
tick,0x7ff8da10fb34,216652204,0,0x0,8
tick,0x7ff8da10fb34,216667886,0,0x0,8
tick,0x7ff8da10fb34,216683890,0,0x0,8
tick,0x7ff8da10fb34,216699432,0,0x0,8
tick,0x7ff8da10fb34,216714665,0,0x0,8
tick,0x7ff8da10fb34,216729980,0,0x0,8
tick,0x7ff8da10fb34,216746099,0,0x0,8
tick,0x7ff8da10fb34,216761571,0,0x0,8
tick,0x7ff8da10fb34,216777605,0,0x0,8
tick,0x7ff8da10fb34,216793289,0,0x0,8
tick,0x7ff8da10fb34,216808992,0,0x0,8
tick,0x7ff8da10fb34,216824760,0,0x0,8
tick,0x7ff8da10fb34,216839994,0,0x0,8
tick,0x7ff8da10fb34,216856464,0,0x0,8
tick,0x7ff8da10fb34,216871266,0,0x0,8
tick,0x7ff8da10fb34,216886587,0,0x0,8
tick,0x7ff8da10fb34,216902174,0,0x0,8
tick,0x7ff8da10fb34,216918153,0,0x0,8
tick,0x7ff8da10fb34,216934135,0,0x0,8
tick,0x7ff8da10fb34,216949869,0,0x0,8
tick,0x7ff8da10fb34,216965031,0,0x0,8
tick,0x7ff8da10fb34,216980087,0,0x0,8
tick,0x7ff8da10fb34,216996101,0,0x0,8
tick,0x7ff8da10fb34,217010866,0,0x0,8
tick,0x7ff8da10fb34,217026630,0,0x0,8
tick,0x7ff8da10fb34,217042186,0,0x0,8
tick,0x7ff8da10fb34,217058135,0,0x0,8
tick,0x7ff8da10fb34,217073307,0,0x0,8
tick,0x7ff8da10fb34,217089071,0,0x0,8
tick,0x7ff8da10fb34,217104098,0,0x0,8
tick,0x7ff8da10fb34,217119356,0,0x0,8
tick,0x7ff8da10fb34,217135088,0,0x0,8
tick,0x7ff8da10fb34,217150136,0,0x0,8
tick,0x7ff8da10fb34,217166208,0,0x0,8
tick,0x7ff8da10fb34,217182117,0,0x0,8
tick,0x7ff8da10fb34,217197255,0,0x0,8
tick,0x7ff8da10fb34,217212670,0,0x0,8
tick,0x7ff8da10fb34,217227907,0,0x0,8
tick,0x7ff8da10fb34,217243186,0,0x0,8
tick,0x7ff8da10fb34,217258728,0,0x0,8
tick,0x7ff8da10fb34,217274539,0,0x0,8
tick,0x7ff8da10fb34,217290081,0,0x0,8
tick,0x7ff8da10fb34,217306300,0,0x0,8
tick,0x7ff8da10fb34,217322131,0,0x0,8
tick,0x7ff8da10fb34,217337965,0,0x0,8
tick,0x7ff8da10fb34,217353121,0,0x0,8
tick,0x7ff8da10fb34,217368325,0,0x0,8
tick,0x7ff8da10fb34,217384000,0,0x0,8
tick,0x7ff8da10fb34,217399484,0,0x0,8
tick,0x7ff8da10fb34,217414281,0,0x0,8
tick,0x7ff8da10fb34,217429728,0,0x0,8
tick,0x7ff8da10fb34,217445016,0,0x0,8
tick,0x7ff8da10fb34,217460744,0,0x0,8
tick,0x7ff8da10fb34,217476374,0,0x0,8
tick,0x7ff8da10fb34,217492018,0,0x0,8
tick,0x7ff8da10fb34,217507693,0,0x0,8
tick,0x7ff8da10fb34,217523129,0,0x0,8
tick,0x7ff8da10fb34,217538460,0,0x0,8
tick,0x7ff8da10fb34,217553788,0,0x0,8
tick,0x7ff8da10fb34,217569058,0,0x0,8
tick,0x7ff8da10fb34,217584658,0,0x0,8
tick,0x7ff8da10fb34,217600140,0,0x0,8
tick,0x7ff8da10fb34,217616060,0,0x0,8
tick,0x7ff8da10fb34,217632156,0,0x0,8
tick,0x7ff8da10fb34,217648178,0,0x0,8
tick,0x7ff8da10fb34,217663673,0,0x0,8
tick,0x7ff8da10fb34,217679592,0,0x0,8
tick,0x7ff8da10fb34,217694863,0,0x0,8
tick,0x7ff8da10fb34,217709638,0,0x0,8
tick,0x7ff8da10fb34,217725200,0,0x0,8
tick,0x7ff8da10fb34,217741030,0,0x0,8
tick,0x7ff8da10fb34,217756105,0,0x0,8
tick,0x7ff8da10fb34,217771393,0,0x0,8
tick,0x7ff8da10fb34,217786503,0,0x0,8
tick,0x7ff8da10fb34,217802200,0,0x0,8
tick,0x7ff8da10fb34,217818220,0,0x0,8
tick,0x7ff8da10fb34,217834149,0,0x0,8
tick,0x7ff8da10fb34,217848907,0,0x0,8
tick,0x7ff8da10fb34,217864461,0,0x0,8
tick,0x7ff8da10fb34,217879764,0,0x0,8
tick,0x7ff8da10fb34,217895013,0,0x0,8
tick,0x7ff8da10fb34,217910446,0,0x0,8
tick,0x7ff8da10fb34,217926142,0,0x0,8
tick,0x7ff8da10fb34,217941826,0,0x0,8
tick,0x7ff8da10fb34,217957521,0,0x0,8
tick,0x7ff8da10fb34,217973147,0,0x0,8
tick,0x7ff8da10fb34,217989328,0,0x0,8
tick,0x7ff8da10fb34,218005078,0,0x0,8
tick,0x7ff8da10fb34,218020514,0,0x0,8
tick,0x7ff8da10fb34,218036090,0,0x0,8
tick,0x7ff8da10fb34,218051140,0,0x0,8
tick,0x7ff8da10fb34,218067113,0,0x0,8
tick,0x7ff8da10fb34,218081658,0,0x0,8
tick,0x7ff8da10fb34,218096999,0,0x0,8
tick,0x7ff8da10fb34,218112037,0,0x0,8
tick,0x7ff8da10fb34,218127099,0,0x0,8
tick,0x7ff8da10fb34,218142722,0,0x0,8
tick,0x7ff8da10fb34,218158738,0,0x0,8
tick,0x7ff8da10fb34,218174633,0,0x0,8
tick,0x7ff8da10fb34,218190634,0,0x0,8
tick,0x7ff8da10fb34,218205978,0,0x0,8
tick,0x7ff8da10fb34,218222083,0,0x0,8
tick,0x7ff8da10fb34,218237539,0,0x0,8
tick,0x7ff8da10fb34,218253202,0,0x0,8
tick,0x7ff8da10fb34,218268994,0,0x0,8
tick,0x7ff8da10fb34,218284253,0,0x0,8
tick,0x7ff8da10fb34,218299856,0,0x0,8
tick,0x7ff8da10fb34,218315140,0,0x0,8
tick,0x7ff8da10fb34,218330416,0,0x0,8
tick,0x7ff8da10fb34,218346090,0,0x0,8
tick,0x7ff8da10fb34,218361377,0,0x0,8
tick,0x7ff8da10fb34,218376906,0,0x0,8
tick,0x7ff8da10fb34,218392581,0,0x0,8
tick,0x7ff8da10fb34,218408556,0,0x0,8
tick,0x7ff8da10fb34,218425402,0,0x0,8
tick,0x7ff8da10fb34,218440770,0,0x0,8
tick,0x7ff8da10fb34,218455892,0,0x0,8
tick,0x7ff8da10fb34,218470640,0,0x0,8
tick,0x7ff8da10fb34,218485650,0,0x0,8
tick,0x7ff8da10fb34,218501409,0,0x0,8
tick,0x7ff8da10fb34,218517426,0,0x0,8
tick,0x7ff8da10fb34,218532427,0,0x0,8
tick,0x7ff8da10fb34,218547401,0,0x0,8
tick,0x7ff8da10fb34,218562714,0,0x0,8
tick,0x7ff8da10fb34,218577726,0,0x0,8
tick,0x7ff8da10fb34,218592716,0,0x0,8
tick,0x7ff8da10fb34,218608731,0,0x0,8
tick,0x7ff8da10fb34,218624703,0,0x0,8
tick,0x7ff8da10fb34,218640712,0,0x0,8
tick,0x7ff8da10fb34,218656709,0,0x0,8
tick,0x7ff8da10fb34,218672750,0,0x0,8
tick,0x7ff8da10fb34,218688901,0,0x0,8
tick,0x7ff8da10fb34,218704701,0,0x0,8
tick,0x7ff8da10fb34,218720681,0,0x0,8
tick,0x7ff8da10fb34,218736749,0,0x0,8
tick,0x7ff8da10fb34,218752666,0,0x0,8
tick,0x7ff8da10fb34,218767662,0,0x0,8
tick,0x7ff8da10fb34,218782548,0,0x0,8
tick,0x7ff8da10fb34,218797945,0,0x0,8
tick,0x7ff8da10fb34,218813502,0,0x0,8
tick,0x7ff8da10fb34,218828504,0,0x0,8
tick,0x7ff8da10fb34,218843260,0,0x0,8
tick,0x7ff8da10fb34,218858499,0,0x0,8
tick,0x7ff8da10fb34,218873961,0,0x0,8
tick,0x7ff8da10fb34,218889091,0,0x0,8
tick,0x7ff8da10fb34,218905152,0,0x0,8
tick,0x7ff8da10fb34,218919972,0,0x0,8
tick,0x7ff8da10fb34,218934741,0,0x0,8
tick,0x7ff8da10fb34,218950072,0,0x0,8
tick,0x7ff8da10fb34,218966160,0,0x0,8
tick,0x7ff8da10fb34,218981388,0,0x0,8
tick,0x7ff8da10fb34,218997512,0,0x0,8
tick,0x7ff8da10fb34,219013271,0,0x0,8
tick,0x7ff8da10fb34,219029335,0,0x0,8
tick,0x7ff8da10fb34,219044510,0,0x0,8
tick,0x7ff8da10fb34,219060418,0,0x0,8
tick,0x7ff8da10fb34,219075806,0,0x0,8
tick,0x7ff8da10fb34,219091525,0,0x0,8
tick,0x7ff8da10fb34,219107573,0,0x0,8
tick,0x7ff8da10fb34,219122448,0,0x0,8
tick,0x7ff8da10fb34,219137944,0,0x0,8
tick,0x7ff8da10fb34,219152908,0,0x0,8
tick,0x7ff8da10fb34,219168170,0,0x0,8
tick,0x7ff8da10fb34,219184003,0,0x0,8
tick,0x7ff8da10fb34,219199401,0,0x0,8
tick,0x7ff8da10fb34,219215041,0,0x0,8
tick,0x7ff8da10fb34,219230567,0,0x0,8
tick,0x7ff8da10fb34,219246084,0,0x0,8
tick,0x7ff8da10fb34,219261760,0,0x0,8
tick,0x7ff8da10fb34,219277637,0,0x0,8
tick,0x7ff8da10fb34,219292782,0,0x0,8
tick,0x7ff8da10fb34,219308044,0,0x0,8
tick,0x7ff8da10fb34,219323689,0,0x0,8
tick,0x7ff8da10fb34,219339581,0,0x0,8
tick,0x7ff8da10fb34,219355141,0,0x0,8
tick,0x7ff8da10fb34,219370201,0,0x0,8
tick,0x7ff8da10fb34,219386093,0,0x0,8
tick,0x7ff8da10fb34,219401211,0,0x0,8
tick,0x7ff8da10fb34,219417050,0,0x0,8
tick,0x7ff8da10fb34,219432125,0,0x0,8
tick,0x7ff8da10fb34,219447147,0,0x0,8
tick,0x7ff8da10fb34,219462055,0,0x0,8
tick,0x7ff8da10fb34,219478100,0,0x0,8
tick,0x7ff8da10fb34,219493199,0,0x0,8
tick,0x7ff8da10fb34,219509084,0,0x0,8
tick,0x7ff8da10fb34,219524451,0,0x0,8
tick,0x7ff8da10fb34,219540333,0,0x0,8
tick,0x7ff8da10fb34,219555063,0,0x0,8
tick,0x7ff8da10fb34,219570275,0,0x0,8
tick,0x7ff8da10fb34,219586117,0,0x0,8
tick,0x7ff8da10fb34,219601141,0,0x0,8
tick,0x7ff8da10fb34,219617089,0,0x0,8
tick,0x7ff8da10fb34,219633189,0,0x0,8
tick,0x7ff8da10fb34,219648612,0,0x0,8
tick,0x7ff8da10fb34,219663995,0,0x0,8
tick,0x7ff8da10fb34,219679462,0,0x0,8
tick,0x7ff8da10fb34,219694585,0,0x0,8
tick,0x7ff8da10fb34,219710000,0,0x0,8
tick,0x7ff8da10fb34,219725383,0,0x0,8
tick,0x7ff8da10fb34,219741045,0,0x0,8
tick,0x7ff8da10fb34,219755991,0,0x0,8
tick,0x7ff8da10fb34,219770747,0,0x0,8
tick,0x7ff8da10fb34,219786098,0,0x0,8
tick,0x7ff8da10fb34,219802110,0,0x0,8
tick,0x7ff8da10fb34,219817435,0,0x0,8
tick,0x7ff8da10fb34,219833161,0,0x0,8
tick,0x7ff8da10fb34,219848104,0,0x0,8
tick,0x7ff8da10fb34,219863084,0,0x0,8
tick,0x7ff8da10fb34,219879041,0,0x0,8
tick,0x7ff8da10fb34,219894594,0,0x0,8
tick,0x7ff8da10fb34,219909721,0,0x0,8
tick,0x7ff8da10fb34,219925021,0,0x0,8
tick,0x7ff8da10fb34,219940986,0,0x0,8
tick,0x7ff8da10fb34,219957125,0,0x0,8
tick,0x7ff8da10fb34,219972157,0,0x0,8
tick,0x7ff8da10fb34,219987170,0,0x0,8
tick,0x7ff8da10fb34,220002132,0,0x0,8
tick,0x7ff8da10fb34,220018186,0,0x0,8
tick,0x7ff8da10fb34,220033157,0,0x0,8
tick,0x7ff8da10fb34,220047855,0,0x0,8
tick,0x7ff8da10fb34,220062658,0,0x0,8
tick,0x7ff8da10fb34,220078256,0,0x0,8
tick,0x7ff8da10fb34,220093518,0,0x0,8
tick,0x7ff8da10fb34,220109067,0,0x0,8
tick,0x7ff8da10fb34,220124196,0,0x0,8
tick,0x7ff8da10fb34,220140414,0,0x0,8
tick,0x7ff8da10fb34,220156423,0,0x0,8
tick,0x7ff8da10fb34,220172574,0,0x0,8
tick,0x7ff8da10fb34,220187968,0,0x0,8
tick,0x7ff8da10fb34,220203014,0,0x0,8
tick,0x7ff8da10fb34,220218338,0,0x0,8
tick,0x7ff8da10fb34,220234123,0,0x0,8
tick,0x7ff8da10fb34,220249303,0,0x0,8
tick,0x7ff8da10fb34,220264837,0,0x0,8
tick,0x7ff8da10fb34,220280099,0,0x0,8
tick,0x7ff8da10fb34,220296067,0,0x0,8
tick,0x7ff8da10fb34,220311724,0,0x0,8
tick,0x7ff8da10fb34,220327063,0,0x0,8
tick,0x7ff8da10fb34,220342324,0,0x0,8
tick,0x7ff8da10fb34,220358128,0,0x0,8
tick,0x7ff8da10fb34,220373490,0,0x0,8
tick,0x7ff8da10fb34,220389472,0,0x0,8
tick,0x7ff8da10fb34,220405083,0,0x0,8
tick,0x7ff8da10fb34,220420352,0,0x0,8
tick,0x7ff8da10fb34,220436170,0,0x0,8
tick,0x7ff8da10fb34,220452136,0,0x0,8
tick,0x7ff8da10fb34,220467578,0,0x0,8
tick,0x7ff8da10fb34,220482846,0,0x0,8
tick,0x7ff8da10fb34,220498265,0,0x0,8
tick,0x7ff8da10fb34,220514178,0,0x0,8
tick,0x7ff8da10fb34,220529448,0,0x0,8
tick,0x7ff8da10fb34,220544644,0,0x0,8
tick,0x7ff8da10fb34,220560062,0,0x0,8
tick,0x7ff8da10fb34,220575037,0,0x0,8
tick,0x7ff8da10fb34,220590651,0,0x0,8
tick,0x7ff8da10fb34,220606139,0,0x0,8
tick,0x7ff8da10fb34,220621324,0,0x0,8
tick,0x7ff8da10fb34,220637140,0,0x0,8
tick,0x7ff8da10fb34,220652169,0,0x0,8
tick,0x7ff8da10fb34,220668009,0,0x0,8
tick,0x7ff8da10fb34,220683962,0,0x0,8
tick,0x7ff8da10fb34,220699537,0,0x0,8
tick,0x7ff8da10fb34,220715075,0,0x0,8
tick,0x7ff8da10fb34,220729918,0,0x0,8
tick,0x7ff8da10fb34,220745084,0,0x0,8
tick,0x7ff8da10fb34,220761023,0,0x0,8
tick,0x7ff8da10fb34,220776095,0,0x0,8
tick,0x7ff8da10fb34,220791606,0,0x0,8
tick,0x7ff8da10fb34,220807058,0,0x0,8
tick,0x7ff8da10fb34,220822969,0,0x0,8
tick,0x7ff8da10fb34,220838983,0,0x0,8
tick,0x7ff8da10fb34,220854713,0,0x0,8
tick,0x7ff8da10fb34,220869457,0,0x0,8
tick,0x7ff8da10fb34,220884625,0,0x0,8
tick,0x7ff8da10fb34,220900124,0,0x0,8
tick,0x7ff8da10fb34,220916121,0,0x0,8
tick,0x7ff8da10fb34,220932144,0,0x0,8
tick,0x7ff8da10fb34,220946901,0,0x0,8
tick,0x7ff8da10fb34,220962139,0,0x0,8
tick,0x7ff8da10fb34,220977321,0,0x0,8
tick,0x7ff8da10fb34,220992592,0,0x0,8
tick,0x7ff8da10fb34,221008073,0,0x0,8
tick,0x7ff8da10fb34,221023835,0,0x0,8
tick,0x7ff8da10fb34,221039780,0,0x0,8
tick,0x7ff8da10fb34,221055046,0,0x0,8
tick,0x7ff8da10fb34,221070103,0,0x0,8
tick,0x7ff8da10fb34,221086111,0,0x0,8
tick,0x7ff8da10fb34,221101603,0,0x0,8
tick,0x7ff8da10fb34,221117137,0,0x0,8
tick,0x7ff8da10fb34,221133238,0,0x0,8
tick,0x7ff8da10fb34,221149240,0,0x0,8
tick,0x7ff8da10fb34,221165152,0,0x0,8
tick,0x7ff8da10fb34,221181092,0,0x0,8
tick,0x7ff8da10fb34,221197093,0,0x0,8
tick,0x7ff8da10fb34,221212444,0,0x0,8
tick,0x7ff8da10fb34,221228537,0,0x0,8
tick,0x7ff8da10fb34,221244395,0,0x0,8
tick,0x7ff8da10fb34,221259130,0,0x0,8
tick,0x7ff8da10fb34,221274829,0,0x0,8
tick,0x7ff8da10fb34,221290487,0,0x0,8
tick,0x7ff8da10fb34,221306921,0,0x0,8
tick,0x7ff8da10fb34,221321713,0,0x0,8
tick,0x7ff8da10fb34,221337590,0,0x0,8
tick,0x7ff8da10fb34,221352118,0,0x0,8
tick,0x7ff8da10fb34,221368109,0,0x0,8
tick,0x7ff8da10fb34,221383164,0,0x0,8
tick,0x7ff8da10fb34,221398509,0,0x0,8
tick,0x7ff8da10fb34,221413991,0,0x0,8
tick,0x7ff8da10fb34,221429344,0,0x0,8
tick,0x7ff8da10fb34,221445022,0,0x0,8
tick,0x7ff8da10fb34,221461115,0,0x0,8
tick,0x7ff8da10fb34,221476982,0,0x0,8
tick,0x7ff8da10fb34,221492211,0,0x0,8
tick,0x7ff8da10fb34,221506948,0,0x0,8
tick,0x7ff8da10fb34,221522880,0,0x0,8
tick,0x7ff8da10fb34,221538517,0,0x0,8
tick,0x7ff8da10fb34,221553804,0,0x0,8
tick,0x7ff8da10fb34,221569116,0,0x0,8
tick,0x7ff8da10fb34,221584260,0,0x0,8
tick,0x7ff8da10fb34,221599616,0,0x0,8
tick,0x7ff8da10fb34,221614986,0,0x0,8
tick,0x7ff8da10fb34,221630067,0,0x0,8
tick,0x7ff8da10fb34,221646087,0,0x0,8
tick,0x7ff8da10fb34,221661126,0,0x0,8
tick,0x7ff8da10fb34,221677196,0,0x0,8
tick,0x7ff8da10fb34,221692315,0,0x0,8
tick,0x7ff8da10fb34,221707885,0,0x0,8
tick,0x7ff8da10fb34,221723580,0,0x0,8
tick,0x7ff8da10fb34,221739408,0,0x0,8
tick,0x7ff8da10fb34,221754896,0,0x0,8
tick,0x7ff8da10fb34,221770143,0,0x0,8
tick,0x7ff8da10fb34,221786184,0,0x0,8
tick,0x7ff8da10fb34,221802103,0,0x0,8
tick,0x7ff8da10fb34,221817530,0,0x0,8
tick,0x7ff8da10fb34,221833153,0,0x0,8
tick,0x7ff8da10fb34,221849232,0,0x0,8
tick,0x7ff8da10fb34,221864632,0,0x0,8
tick,0x7ff8da10fb34,221879838,0,0x0,8
tick,0x7ff8da10fb34,221895066,0,0x0,8
tick,0x7ff8da10fb34,221910618,0,0x0,8
tick,0x7ff8da10fb34,221926111,0,0x0,8
tick,0x7ff8da10fb34,221941011,0,0x0,8
tick,0x7ff8da10fb34,221955893,0,0x0,8
tick,0x7ff8da10fb34,221971095,0,0x0,8
tick,0x7ff8da10fb34,221987171,0,0x0,8
tick,0x7ff8da10fb34,222002143,0,0x0,8
tick,0x7ff8da10fb34,222017992,0,0x0,8
tick,0x7ff8da10fb34,222033164,0,0x0,8
tick,0x7ff8da10fb34,222048536,0,0x0,8
tick,0x7ff8da10fb34,222064484,0,0x0,8
tick,0x7ff8da10fb34,222079655,0,0x0,8
tick,0x7ff8da10fb34,222094930,0,0x0,8
tick,0x7ff8da10fb34,222111247,0,0x0,8
tick,0x7ff8da10fb34,222126956,0,0x0,8
tick,0x7ff8da10fb34,222142195,0,0x0,8
tick,0x7ff8da10fb34,222158001,0,0x0,8
tick,0x7ff8da10fb34,222173061,0,0x0,8
tick,0x7ff8da10fb34,222189132,0,0x0,8
tick,0x7ff8da10fb34,222205091,0,0x0,8
tick,0x7ff8da10fb34,222221094,0,0x0,8
tick,0x7ff8da10fb34,222237501,0,0x0,8
tick,0x7ff8da10fb34,222253133,0,0x0,8
tick,0x7ff8da10fb34,222268678,0,0x0,8
tick,0x7ff8da10fb34,222284195,0,0x0,8
tick,0x7ff8da10fb34,222299407,0,0x0,8
tick,0x7ff8da10fb34,222314623,0,0x0,8
tick,0x7ff8da10fb34,222329927,0,0x0,8
tick,0x7ff8da10fb34,222346172,0,0x0,8
tick,0x7ff8da10fb34,222362075,0,0x0,8
tick,0x7ff8da10fb34,222377889,0,0x0,8
tick,0x7ff8da10fb34,222393024,0,0x0,8
tick,0x7ff8da10fb34,222408281,0,0x0,8
tick,0x7ff8da10fb34,222424230,0,0x0,8
tick,0x7ff8da10fb34,222439758,0,0x0,8
tick,0x7ff8da10fb34,222455664,0,0x0,8
tick,0x7ff8da10fb34,222471076,0,0x0,8
tick,0x7ff8da10fb34,222487183,0,0x0,8
tick,0x7ff8da10fb34,222502114,0,0x0,8
tick,0x7ff8da10fb34,222517940,0,0x0,8
tick,0x7ff8da10fb34,222533201,0,0x0,8
tick,0x7ff8da10fb34,222548464,0,0x0,8
tick,0x7ff8da10fb34,222564070,0,0x0,8
tick,0x7ff8da10fb34,222579125,0,0x0,8
tick,0x7ff8da10fb34,222594265,0,0x0,8
tick,0x7ff8da10fb34,222610444,0,0x0,8
tick,0x7ff8da10fb34,222625035,0,0x0,8
tick,0x7ff8da10fb34,222640270,0,0x0,8
tick,0x7ff8da10fb34,222655665,0,0x0,8
tick,0x7ff8da10fb34,222671144,0,0x0,8
tick,0x7ff8da10fb34,222687322,0,0x0,8
tick,0x7ff8da10fb34,222703196,0,0x0,8
tick,0x7ff8da10fb34,222718856,0,0x0,8
tick,0x7ff8da10fb34,222734157,0,0x0,8
tick,0x7ff8da10fb34,222749144,0,0x0,8
tick,0x7ff8da10fb34,222764097,0,0x0,8
tick,0x7ff8da10fb34,222780092,0,0x0,8
tick,0x7ff8da10fb34,222795059,0,0x0,8
tick,0x7ff8da10fb34,222810435,0,0x0,8
tick,0x7ff8da10fb34,222826085,0,0x0,8
tick,0x7ff8da10fb34,222841035,0,0x0,8
tick,0x7ff8da10fb34,222856428,0,0x0,8
tick,0x7ff8da10fb34,222872283,0,0x0,8
tick,0x7ff8da10fb34,222887234,0,0x0,8
tick,0x7ff8da10fb34,222902142,0,0x0,8
tick,0x7ff8da10fb34,222917466,0,0x0,8
tick,0x7ff8da10fb34,222933097,0,0x0,8
tick,0x7ff8da10fb34,222949240,0,0x0,8
tick,0x7ff8da10fb34,222965042,0,0x0,8
tick,0x7ff8da10fb34,222980032,0,0x0,8
tick,0x7ff8da10fb34,222996080,0,0x0,8
tick,0x7ff8da10fb34,223011124,0,0x0,8
tick,0x7ff8da10fb34,223026913,0,0x0,8
tick,0x7ff8da10fb34,223042264,0,0x0,8
tick,0x7ff8da10fb34,223057384,0,0x0,8
tick,0x7ff8da10fb34,223073098,0,0x0,8
tick,0x7ff8da10fb34,223089154,0,0x0,8
tick,0x7ff8da10fb34,223105599,0,0x0,8
tick,0x7ff8da10fb34,223120782,0,0x0,8
tick,0x7ff8da10fb34,223136143,0,0x0,8
tick,0x7ff8da10fb34,223152099,0,0x0,8
tick,0x7ff8da10fb34,223167515,0,0x0,8
tick,0x7ff8da10fb34,223182978,0,0x0,8
tick,0x7ff8da10fb34,223198189,0,0x0,8
tick,0x7ff8da10fb34,223214102,0,0x0,8
tick,0x7ff8da10fb34,223229393,0,0x0,8
tick,0x7ff8da10fb34,223245080,0,0x0,8
tick,0x7ff8da10fb34,223260033,0,0x0,8
tick,0x7ff8da10fb34,223276076,0,0x0,8
tick,0x7ff8da10fb34,223291868,0,0x0,8
tick,0x7ff8da10fb34,223307204,0,0x0,8
tick,0x7ff8da10fb34,223322443,0,0x0,8
tick,0x7ff8da10fb34,223337107,0,0x0,8
tick,0x7ff8da10fb34,223353280,0,0x0,8
tick,0x7ff8da10fb34,223368015,0,0x0,8
tick,0x7ff8da10fb34,223383189,0,0x0,8
tick,0x7ff8da10fb34,223398503,0,0x0,8
tick,0x7ff8da10fb34,223414502,0,0x0,8
tick,0x7ff8da10fb34,223430474,0,0x0,8
tick,0x7ff8da10fb34,223447453,0,0x0,8
tick,0x7ff8da10fb34,223462433,0,0x0,8
tick,0x7ff8da10fb34,223478515,0,0x0,8
tick,0x7ff8da10fb34,223494417,0,0x0,8
tick,0x7ff8da10fb34,223509768,0,0x0,8
tick,0x7ff8da10fb34,223525570,0,0x0,8
tick,0x7ff8da10fb34,223540608,0,0x0,8
tick,0x7ff8da10fb34,223555565,0,0x0,8
tick,0x7ff8da10fb34,223571518,0,0x0,8
tick,0x7ff8da10fb34,223587598,0,0x0,8
tick,0x7ff8da10fb34,223603556,0,0x0,8
tick,0x7ff8da10fb34,223619638,0,0x0,8
tick,0x7ff8da10fb34,223635509,0,0x0,8
tick,0x7ff8da10fb34,223650491,0,0x0,8
tick,0x7ff8da10fb34,223665500,0,0x0,8
tick,0x7ff8da10fb34,223681479,0,0x0,8
tick,0x7ff8da10fb34,223697503,0,0x0,8
tick,0x7ff8da10fb34,223713500,0,0x0,8
tick,0x7ff8da10fb34,223729533,0,0x0,8
tick,0x7ff8da10fb34,223745469,0,0x0,8
tick,0x7ff8da10fb34,223761492,0,0x0,8
tick,0x7ff8da10fb34,223777449,0,0x0,8
tick,0x7ff8da10fb34,223792228,0,0x0,8
tick,0x7ff8da10fb34,223807884,0,0x0,8
tick,0x7ff8da10fb34,223823486,0,0x0,8
tick,0x7ff8da10fb34,223838999,0,0x0,8
tick,0x7ff8da10fb34,223853955,0,0x0,8
tick,0x7ff8da10fb34,223869212,0,0x0,8
tick,0x7ff8da10fb34,223884456,0,0x0,8
tick,0x7ff8da10fb34,223900462,0,0x0,8
tick,0x7ff8da10fb34,223916041,0,0x0,8
tick,0x7ff8da10fb34,223932067,0,0x0,8
tick,0x7ff8da10fb34,223948157,0,0x0,8
tick,0x7ff8da10fb34,223964142,0,0x0,8
tick,0x7ff8da10fb34,223979607,0,0x0,8
tick,0x7ff8da10fb34,223994857,0,0x0,8
tick,0x7ff8da10fb34,224010005,0,0x0,8
tick,0x7ff8da10fb34,224026167,0,0x0,8
tick,0x7ff8da10fb34,224042054,0,0x0,8
tick,0x7ff8da10fb34,224057791,0,0x0,8
tick,0x7ff8da10fb34,224072968,0,0x0,8
tick,0x7ff8da10fb34,224088196,0,0x0,8
tick,0x7ff8da10fb34,224103873,0,0x0,8
tick,0x7ff8da10fb34,224118930,0,0x0,8
tick,0x7ff8da10fb34,224134148,0,0x0,8
tick,0x7ff8da10fb34,224150172,0,0x0,8
tick,0x7ff8da10fb34,224166083,0,0x0,8
tick,0x7ff8da10fb34,224181972,0,0x0,8
tick,0x7ff8da10fb34,224197982,0,0x0,8
tick,0x7ff8da10fb34,224214096,0,0x0,8
tick,0x7ff8da10fb34,224229506,0,0x0,8
tick,0x7ff8da10fb34,224244879,0,0x0,8
tick,0x7ff8da10fb34,224260166,0,0x0,8
tick,0x7ff8da10fb34,224276050,0,0x0,8
tick,0x7ff8da10fb34,224291136,0,0x0,8
tick,0x7ff8da10fb34,224306843,0,0x0,8
tick,0x7ff8da10fb34,224322098,0,0x0,8
tick,0x7ff8da10fb34,224338291,0,0x0,8
tick,0x7ff8da10fb34,224353767,0,0x0,8
tick,0x7ff8da10fb34,224369723,0,0x0,8
tick,0x7ff8da10fb34,224385090,0,0x0,8
tick,0x7ff8da10fb34,224400278,0,0x0,8
tick,0x7ff8da10fb34,224416142,0,0x0,8
tick,0x7ff8da10fb34,224431090,0,0x0,8
tick,0x7ff8da10fb34,224447020,0,0x0,8
tick,0x7ff8da10fb34,224463121,0,0x0,8
tick,0x7ff8da10fb34,224478588,0,0x0,8
tick,0x7ff8da10fb34,224494566,0,0x0,8
tick,0x7ff8da10fb34,224509798,0,0x0,8
tick,0x7ff8da10fb34,224524896,0,0x0,8
tick,0x7ff8da10fb34,224540704,0,0x0,8
tick,0x7ff8da10fb34,224555757,0,0x0,8
tick,0x7ff8da10fb34,224571713,0,0x0,8
tick,0x7ff8da10fb34,224587048,0,0x0,8
tick,0x7ff8da10fb34,224603048,0,0x0,8
tick,0x7ff8da10fb34,224617955,0,0x0,8
tick,0x7ff8da10fb34,224633154,0,0x0,8
tick,0x7ff8da10fb34,224648341,0,0x0,8
tick,0x7ff8da10fb34,224664076,0,0x0,8
tick,0x7ff8da10fb34,224679403,0,0x0,8
tick,0x7ff8da10fb34,224694432,0,0x0,8
tick,0x7ff8da10fb34,224710362,0,0x0,8
tick,0x7ff8da10fb34,224724921,0,0x0,8
tick,0x7ff8da10fb34,224740489,0,0x0,8
tick,0x7ff8da10fb34,224755601,0,0x0,8
tick,0x7ff8da10fb34,224771358,0,0x0,8
tick,0x7ff8da10fb34,224786413,0,0x0,8
tick,0x7ff8da10fb34,224801055,0,0x0,8
tick,0x7ff8da10fb34,224817178,0,0x0,8
tick,0x7ff8da10fb34,224833117,0,0x0,8
tick,0x7ff8da10fb34,224848942,0,0x0,8
tick,0x7ff8da10fb34,224864086,0,0x0,8
tick,0x7ff8da10fb34,224879342,0,0x0,8
tick,0x7ff8da10fb34,224894592,0,0x0,8
tick,0x7ff8da10fb34,224909947,0,0x0,8
tick,0x7ff8da10fb34,224926380,0,0x0,8
tick,0x7ff8da10fb34,224941441,0,0x0,8
tick,0x7ff8da10fb34,224956521,0,0x0,8
tick,0x7ff8da10fb34,224972173,0,0x0,8
tick,0x7ff8da10fb34,224987912,0,0x0,8
tick,0x7ff8da10fb34,225003129,0,0x0,8
tick,0x7ff8da10fb34,225018189,0,0x0,8
tick,0x7ff8da10fb34,225034107,0,0x0,8
tick,0x7ff8da10fb34,225049671,0,0x0,8
tick,0x7ff8da10fb34,225065072,0,0x0,8
tick,0x7ff8da10fb34,225080055,0,0x0,8
tick,0x7ff8da10fb34,225096075,0,0x0,8
tick,0x7ff8da10fb34,225112147,0,0x0,8
tick,0x7ff8da10fb34,225128022,0,0x0,8
tick,0x7ff8da10fb34,225143087,0,0x0,8
tick,0x7ff8da10fb34,225157950,0,0x0,8
tick,0x7ff8da10fb34,225173152,0,0x0,8
tick,0x7ff8da10fb34,225188413,0,0x0,8
tick,0x7ff8da10fb34,225204596,0,0x0,8
tick,0x7ff8da10fb34,225219410,0,0x0,8
tick,0x7ff8da10fb34,225234067,0,0x0,8
tick,0x7ff8da10fb34,225249942,0,0x0,8
tick,0x7ff8da10fb34,225265088,0,0x0,8
tick,0x7ff8da10fb34,225281119,0,0x0,8
tick,0x7ff8da10fb34,225296781,0,0x0,8
tick,0x7ff8da10fb34,225312115,0,0x0,8
tick,0x7ff8da10fb34,225327981,0,0x0,8
tick,0x7ff8da10fb34,225342745,0,0x0,8
tick,0x7ff8da10fb34,225358357,0,0x0,8
tick,0x7ff8da10fb34,225374402,0,0x0,8
tick,0x7ff8da10fb34,225389731,0,0x0,8
tick,0x7ff8da10fb34,225405324,0,0x0,8
tick,0x7ff8da10fb34,225421090,0,0x0,8
tick,0x7ff8da10fb34,225437325,0,0x0,8
tick,0x7ff8da10fb34,225452467,0,0x0,8
tick,0x7ff8da10fb34,225467439,0,0x0,8
tick,0x7ff8da10fb34,225483048,0,0x0,8
tick,0x7ff8da10fb34,225498070,0,0x0,8
tick,0x7ff8da10fb34,225514114,0,0x0,8
tick,0x7ff8da10fb34,225529374,0,0x0,8
tick,0x7ff8da10fb34,225544420,0,0x0,8
tick,0x7ff8da10fb34,225559959,0,0x0,8
tick,0x7ff8da10fb34,225576101,0,0x0,8
tick,0x7ff8da10fb34,225591272,0,0x0,8
tick,0x7ff8da10fb34,225607242,0,0x0,8
tick,0x7ff8da10fb34,225621886,0,0x0,8
tick,0x7ff8da10fb34,225638044,0,0x0,8
tick,0x7ff8da10fb34,225653158,0,0x0,8
tick,0x7ff8da10fb34,225668998,0,0x0,8
tick,0x7ff8da10fb34,225684877,0,0x0,8
tick,0x7ff8da10fb34,225699468,0,0x0,8
tick,0x7ff8da10fb34,225715028,0,0x0,8
tick,0x7ff8da10fb34,225730971,0,0x0,8
tick,0x7ff8da10fb34,225746116,0,0x0,8
tick,0x7ff8da10fb34,225762152,0,0x0,8
tick,0x7ff8da10fb34,225776888,0,0x0,8
tick,0x7ff8da10fb34,225792230,0,0x0,8
tick,0x7ff8da10fb34,225807162,0,0x0,8
tick,0x7ff8da10fb34,225822789,0,0x0,8
tick,0x7ff8da10fb34,225838668,0,0x0,8
tick,0x7ff8da10fb34,225854190,0,0x0,8
tick,0x7ff8da10fb34,225869345,0,0x0,8
tick,0x7ff8da10fb34,225884848,0,0x0,8
tick,0x7ff8da10fb34,225899842,0,0x0,8
tick,0x7ff8da10fb34,225915050,0,0x0,8
tick,0x7ff8da10fb34,225931125,0,0x0,8
tick,0x7ff8da10fb34,225947140,0,0x0,8
tick,0x7ff8da10fb34,225963112,0,0x0,8
tick,0x7ff8da10fb34,225979056,0,0x0,8
tick,0x7ff8da10fb34,225994276,0,0x0,8
tick,0x7ff8da10fb34,226009511,0,0x0,8
tick,0x7ff8da10fb34,226024368,0,0x0,8
tick,0x7ff8da10fb34,226039596,0,0x0,8
tick,0x7ff8da10fb34,226055476,0,0x0,8
tick,0x7ff8da10fb34,226070442,0,0x0,8
tick,0x7ff8da10fb34,226086494,0,0x0,8
tick,0x7ff8da10fb34,226101108,0,0x0,8
tick,0x7ff8da10fb34,226116803,0,0x0,8
tick,0x7ff8da10fb34,226132403,0,0x0,8
tick,0x7ff8da10fb34,226148551,0,0x0,8
tick,0x7ff8da10fb34,226162431,0,0x0,8
tick,0x7ff8da10fb34,226177772,0,0x0,8
tick,0x7ff8da10fb34,226193182,0,0x0,8
tick,0x7ff8da10fb34,226208884,0,0x0,8
tick,0x7ff8da10fb34,226224279,0,0x0,8
tick,0x7ff8da10fb34,226239334,0,0x0,8
tick,0x7ff8da10fb34,226254915,0,0x0,8
tick,0x7ff8da10fb34,226270702,0,0x0,8
tick,0x7ff8da10fb34,226286088,0,0x0,8
tick,0x7ff8da10fb34,226302444,0,0x0,8
tick,0x7ff8da10fb34,226317985,0,0x0,8
tick,0x7ff8da10fb34,226333398,0,0x0,8
tick,0x7ff8da10fb34,226349346,0,0x0,8
tick,0x7ff8da10fb34,226365265,0,0x0,8
tick,0x7ff8da10fb34,226380940,0,0x0,8
tick,0x7ff8da10fb34,226396227,0,0x0,8
tick,0x7ff8da10fb34,226411271,0,0x0,8
tick,0x7ff8da10fb34,226426557,0,0x0,8
tick,0x7ff8da10fb34,226442096,0,0x0,8
tick,0x7ff8da10fb34,226457205,0,0x0,8
tick,0x7ff8da10fb34,226472640,0,0x0,8
tick,0x7ff8da10fb34,226488388,0,0x0,8
tick,0x7ff8da10fb34,226504150,0,0x0,8
tick,0x7ff8da10fb34,226520075,0,0x0,8
tick,0x7ff8da10fb34,226534785,0,0x0,8
tick,0x7ff8da10fb34,226549630,0,0x0,8
tick,0x7ff8da10fb34,226565273,0,0x0,8
tick,0x7ff8da10fb34,226580958,0,0x0,8
tick,0x7ff8da10fb34,226596512,0,0x0,8
tick,0x7ff8da10fb34,226611823,0,0x0,8
tick,0x7ff8da10fb34,226626940,0,0x0,8
tick,0x7ff8da10fb34,226642092,0,0x0,8
tick,0x7ff8da10fb34,226657486,0,0x0,8
tick,0x7ff8da10fb34,226672863,0,0x0,8
tick,0x7ff8da10fb34,226688109,0,0x0,8
tick,0x7ff8da10fb34,226704176,0,0x0,8
tick,0x7ff8da10fb34,226718717,0,0x0,8
tick,0x7ff8da10fb34,226734149,0,0x0,8
tick,0x7ff8da10fb34,226749851,0,0x0,8
tick,0x7ff8da10fb34,226765000,0,0x0,8
tick,0x7ff8da10fb34,226780634,0,0x0,8
tick,0x7ff8da10fb34,226796110,0,0x0,8
tick,0x7ff8da10fb34,226812089,0,0x0,8
tick,0x7ff8da10fb34,226827453,0,0x0,8
tick,0x7ff8da10fb34,226842991,0,0x0,8
tick,0x7ff8da10fb34,226858731,0,0x0,8
tick,0x7ff8da10fb34,226873406,0,0x0,8
tick,0x7ff8da10fb34,226889041,0,0x0,8
tick,0x7ff8da10fb34,226904700,0,0x0,8
tick,0x7ff8da10fb34,226920432,0,0x0,8
tick,0x7ff8da10fb34,226936034,0,0x0,8
tick,0x7ff8da10fb34,226953047,0,0x0,8
tick,0x7ff8da10fb34,226967745,0,0x0,8
tick,0x7ff8da10fb34,226983267,0,0x0,8
tick,0x7ff8da10fb34,226998151,0,0x0,8
tick,0x7ff8da10fb34,227013413,0,0x0,8
tick,0x7ff8da10fb34,227028312,0,0x0,8
tick,0x7ff8da10fb34,227044022,0,0x0,8
tick,0x7ff8da10fb34,227059367,0,0x0,8
tick,0x7ff8da10fb34,227074493,0,0x0,8
tick,0x7ff8da10fb34,227089962,0,0x0,8
tick,0x7ff8da10fb34,227105336,0,0x0,8
tick,0x7ff8da10fb34,227121205,0,0x0,8
tick,0x7ff8da10fb34,227137528,0,0x0,8
tick,0x7ff8da10fb34,227153629,0,0x0,8
tick,0x7ff8da10fb34,227168044,0,0x0,8
tick,0x7ff8da10fb34,227182975,0,0x0,8
tick,0x7ff8da10fb34,227198405,0,0x0,8
tick,0x7ff8da10fb34,227214010,0,0x0,8
tick,0x7ff8da10fb34,227229136,0,0x0,8
tick,0x7ff8da10fb34,227244162,0,0x0,8
tick,0x7ff8da10fb34,227259593,0,0x0,8
tick,0x7ff8da10fb34,227274962,0,0x0,8
tick,0x7ff8da10fb34,227290076,0,0x0,8
tick,0x7ff8da10fb34,227305560,0,0x0,8
tick,0x7ff8da10fb34,227321194,0,0x0,8
tick,0x7ff8da10fb34,227336085,0,0x0,8
tick,0x7ff8da10fb34,227351276,0,0x0,8
tick,0x7ff8da10fb34,227367301,0,0x0,8
tick,0x7ff8da10fb34,227383145,0,0x0,8
tick,0x7ff8da10fb34,227399153,0,0x0,8
tick,0x7ff8da10fb34,227415054,0,0x0,8
tick,0x7ff8da10fb34,227430617,0,0x0,8
tick,0x7ff8da10fb34,227446074,0,0x0,8
tick,0x7ff8da10fb34,227462149,0,0x0,8
tick,0x7ff8da10fb34,227477441,0,0x0,8
tick,0x7ff8da10fb34,227492850,0,0x0,8
tick,0x7ff8da10fb34,227507904,0,0x0,8
tick,0x7ff8da10fb34,227523518,0,0x0,8
tick,0x7ff8da10fb34,227539028,0,0x0,8
tick,0x7ff8da10fb34,227554394,0,0x0,8
tick,0x7ff8da10fb34,227570653,0,0x0,8
tick,0x7ff8da10fb34,227586118,0,0x0,8
tick,0x7ff8da10fb34,227601574,0,0x0,8
tick,0x7ff8da10fb34,227616872,0,0x0,8
tick,0x7ff8da10fb34,227632147,0,0x0,8
tick,0x7ff8da10fb34,227647313,0,0x0,8
tick,0x7ff8da10fb34,227663135,0,0x0,8
tick,0x7ff8da10fb34,227678037,0,0x0,8
tick,0x7ff8da10fb34,227693516,0,0x0,8
tick,0x7ff8da10fb34,227709473,0,0x0,8
tick,0x7ff8da10fb34,227725355,0,0x0,8
tick,0x7ff8da10fb34,227741102,0,0x0,8
tick,0x7ff8da10fb34,227756328,0,0x0,8
tick,0x7ff8da10fb34,227771991,0,0x0,8
tick,0x7ff8da10fb34,227787092,0,0x0,8
tick,0x7ff8da10fb34,227802356,0,0x0,8
tick,0x7ff8da10fb34,227818586,0,0x0,8
tick,0x7ff8da10fb34,227833580,0,0x0,8
tick,0x7ff8da10fb34,227849511,0,0x0,8
tick,0x7ff8da10fb34,227865024,0,0x0,8
tick,0x7ff8da10fb34,227880360,0,0x0,8
tick,0x7ff8da10fb34,227896046,0,0x0,8
tick,0x7ff8da10fb34,227911260,0,0x0,8
tick,0x7ff8da10fb34,227927057,0,0x0,8
tick,0x7ff8da10fb34,227942209,0,0x0,8
tick,0x7ff8da10fb34,227957451,0,0x0,8
tick,0x7ff8da10fb34,227972914,0,0x0,8
tick,0x7ff8da10fb34,227988107,0,0x0,8
tick,0x7ff8da10fb34,228003854,0,0x0,8
tick,0x7ff8da10fb34,228019922,0,0x0,8
tick,0x7ff8da10fb34,228035006,0,0x0,8
tick,0x7ff8da10fb34,228049657,0,0x0,8
tick,0x7ff8da10fb34,228065042,0,0x0,8
tick,0x7ff8da10fb34,228081092,0,0x0,8
tick,0x7ff8da10fb34,228096338,0,0x0,8
tick,0x7ff8da10fb34,228112332,0,0x0,8
tick,0x7ff8da10fb34,228128322,0,0x0,8
tick,0x7ff8da10fb34,228144495,0,0x0,8
tick,0x7ff8da10fb34,228160258,0,0x0,8
tick,0x7ff8da10fb34,228175933,0,0x0,8
tick,0x7ff8da10fb34,228191247,0,0x0,8
tick,0x7ff8da10fb34,228206891,0,0x0,8
tick,0x7ff8da10fb34,228222144,0,0x0,8
tick,0x7ff8da10fb34,228238134,0,0x0,8
tick,0x7ff8da10fb34,228253348,0,0x0,8
tick,0x7ff8da10fb34,228268737,0,0x0,8
tick,0x7ff8da10fb34,228284206,0,0x0,8
tick,0x7ff8da10fb34,228299068,0,0x0,8
tick,0x7ff8da10fb34,228314201,0,0x0,8
tick,0x7ff8da10fb34,228329453,0,0x0,8
tick,0x7ff8da10fb34,228344675,0,0x0,8
tick,0x7ff8da10fb34,228359932,0,0x0,8
tick,0x7ff8da10fb34,228375754,0,0x0,8
tick,0x7ff8da10fb34,228391108,0,0x0,8
tick,0x7ff8da10fb34,228407059,0,0x0,8
tick,0x7ff8da10fb34,228423684,0,0x0,8
tick,0x7ff8da10fb34,228439520,0,0x0,8
tick,0x7ff8da10fb34,228453957,0,0x0,8
tick,0x7ff8da10fb34,228469744,0,0x0,8
tick,0x7ff8da10fb34,228485793,0,0x0,8
tick,0x7ff8da10fb34,228501188,0,0x0,8
tick,0x7ff8da10fb34,228515891,0,0x0,8
tick,0x7ff8da10fb34,228531928,0,0x0,8
tick,0x7ff8da10fb34,228548776,0,0x0,8
tick,0x7ff8da10fb34,228563892,0,0x0,8
tick,0x7ff8da10fb34,228579906,0,0x0,8
tick,0x7ff8da10fb34,228595868,0,0x0,8
tick,0x7ff8da10fb34,228611915,0,0x0,8
tick,0x7ff8da10fb34,228626856,0,0x0,8
tick,0x7ff8da10fb34,228641834,0,0x0,8
tick,0x7ff8da10fb34,228657864,0,0x0,8
tick,0x7ff8da10fb34,228673815,0,0x0,8
tick,0x7ff8da10fb34,228689155,0,0x0,8
tick,0x7ff8da10fb34,228703847,0,0x0,8
tick,0x7ff8da10fb34,228718870,0,0x0,8
tick,0x7ff8da10fb34,228733787,0,0x0,8
tick,0x7ff8da10fb34,228749830,0,0x0,8
tick,0x7ff8da10fb34,228765865,0,0x0,8
tick,0x7ff8da10fb34,228781818,0,0x0,8
tick,0x7ff8da10fb34,228797946,0,0x0,8
tick,0x7ff8da10fb34,228813262,0,0x0,8
tick,0x7ff8da10fb34,228829218,0,0x0,8
tick,0x7ff8da10fb34,228844291,0,0x0,8
tick,0x7ff8da10fb34,228859903,0,0x0,8
tick,0x7ff8da10fb34,228875442,0,0x0,8
tick,0x7ff8da10fb34,228890777,0,0x0,8
tick,0x7ff8da10fb34,228906654,0,0x0,8
tick,0x7ff8da10fb34,228921982,0,0x0,8
tick,0x7ff8da10fb34,228937596,0,0x0,8
tick,0x7ff8da10fb34,228953239,0,0x0,8
tick,0x7ff8da10fb34,228969208,0,0x0,8
tick,0x7ff8da10fb34,228985231,0,0x0,8
tick,0x7ff8da10fb34,228999900,0,0x0,8
tick,0x7ff8da10fb34,229015029,0,0x0,8
tick,0x7ff8da10fb34,229030151,0,0x0,8
tick,0x7ff8da10fb34,229046064,0,0x0,8
tick,0x7ff8da10fb34,229061656,0,0x0,8
tick,0x7ff8da10fb34,229077120,0,0x0,8
tick,0x7ff8da10fb34,229092057,0,0x0,8
tick,0x7ff8da10fb34,229108136,0,0x0,8
tick,0x7ff8da10fb34,229123390,0,0x0,8
tick,0x7ff8da10fb34,229139365,0,0x0,8
tick,0x7ff8da10fb34,229154498,0,0x0,8
tick,0x7ff8da10fb34,229172628,0,0x0,8
tick,0x7ff8da10fb34,229186100,0,0x0,8
tick,0x7ff8da10fb34,229201947,0,0x0,8
tick,0x7ff8da10fb34,229217913,0,0x0,8
tick,0x7ff8da10fb34,229233081,0,0x0,8
tick,0x7ff8da10fb34,229248437,0,0x0,8
tick,0x7ff8da10fb34,229263719,0,0x0,8
tick,0x7ff8da10fb34,229279206,0,0x0,8
tick,0x7ff8da10fb34,229294607,0,0x0,8
tick,0x7ff8da10fb34,229309676,0,0x0,8
tick,0x7ff8da10fb34,229324465,0,0x0,8
tick,0x7ff8da10fb34,229339888,0,0x0,8
tick,0x7ff8da10fb34,229356026,0,0x0,8
tick,0x7ff8da10fb34,229371797,0,0x0,8
tick,0x7ff8da10fb34,229386946,0,0x0,8
tick,0x7ff8da10fb34,229403032,0,0x0,8
tick,0x7ff8da10fb34,229419145,0,0x0,8
tick,0x7ff8da10fb34,229434119,0,0x0,8
tick,0x7ff8da10fb34,229449124,0,0x0,8
tick,0x7ff8da10fb34,229464457,0,0x0,8
tick,0x7ff8da10fb34,229480158,0,0x0,8
tick,0x7ff8da10fb34,229496285,0,0x0,8
tick,0x7ff8da10fb34,229511957,0,0x0,8
tick,0x7ff8da10fb34,229527418,0,0x0,8
tick,0x7ff8da10fb34,229542998,0,0x0,8
tick,0x7ff8da10fb34,229558494,0,0x0,8
tick,0x7ff8da10fb34,229573620,0,0x0,8
tick,0x7ff8da10fb34,229589058,0,0x0,8
tick,0x7ff8da10fb34,229604533,0,0x0,8
tick,0x7ff8da10fb34,229620195,0,0x0,8
tick,0x7ff8da10fb34,229637584,0,0x0,8
tick,0x7ff8da10fb34,229651103,0,0x0,8
tick,0x7ff8da10fb34,229667670,0,0x0,8
tick,0x7ff8da10fb34,229682966,0,0x0,8
tick,0x7ff8da10fb34,229698179,0,0x0,8
tick,0x7ff8da10fb34,229713501,0,0x0,8
tick,0x7ff8da10fb34,229728830,0,0x0,8
tick,0x7ff8da10fb34,229743949,0,0x0,8
tick,0x7ff8da10fb34,229759626,0,0x0,8
tick,0x7ff8da10fb34,229775756,0,0x0,8
tick,0x7ff8da10fb34,229790940,0,0x0,8
tick,0x7ff8da10fb34,229806890,0,0x0,8
tick,0x7ff8da10fb34,229822253,0,0x0,8
tick,0x7ff8da10fb34,229838089,0,0x0,8
tick,0x7ff8da10fb34,229853426,0,0x0,8
tick,0x7ff8da10fb34,229869521,0,0x0,8
tick,0x7ff8da10fb34,229886133,0,0x0,8
tick,0x7ff8da10fb34,229899790,0,0x0,8
tick,0x7ff8da10fb34,229915658,0,0x0,8
tick,0x7ff8da10fb34,229930958,0,0x0,8
tick,0x7ff8da10fb34,229945972,0,0x0,8
tick,0x7ff8da10fb34,229961897,0,0x0,8
tick,0x7ff8da10fb34,229978097,0,0x0,8
tick,0x7ff8da10fb34,229993234,0,0x0,8
tick,0x7ff8da10fb34,230008569,0,0x0,8
tick,0x7ff8da10fb34,230024642,0,0x0,8
tick,0x7ff8da10fb34,230039985,0,0x0,8
tick,0x7ff8da10fb34,230055599,0,0x0,8
tick,0x7ff8da10fb34,230071462,0,0x0,8
tick,0x7ff8da10fb34,230086905,0,0x0,8
tick,0x7ff8da10fb34,230102500,0,0x0,8
tick,0x7ff8da10fb34,230118568,0,0x0,8
tick,0x7ff8da10fb34,230133438,0,0x0,8
tick,0x7ff8da10fb34,230148206,0,0x0,8
tick,0x7ff8da10fb34,230163268,0,0x0,8
tick,0x7ff8da10fb34,230178445,0,0x0,8
tick,0x7ff8da10fb34,230193325,0,0x0,8
tick,0x7ff8da10fb34,230208625,0,0x0,8
tick,0x7ff8da10fb34,230223783,0,0x0,8
tick,0x7ff8da10fb34,230239162,0,0x0,8
tick,0x7ff8da10fb34,230254132,0,0x0,8
tick,0x7ff8da10fb34,230269768,0,0x0,8
tick,0x7ff8da10fb34,230285486,0,0x0,8
tick,0x7ff8da10fb34,230301153,0,0x0,8
tick,0x7ff8da10fb34,230316350,0,0x0,8
tick,0x7ff8da10fb34,230332051,0,0x0,8
tick,0x7ff8da10fb34,230346971,0,0x0,8
tick,0x7ff8da10fb34,230362094,0,0x0,8
tick,0x7ff8da10fb34,230377662,0,0x0,8
tick,0x7ff8da10fb34,230392674,0,0x0,8
tick,0x7ff8da10fb34,230408322,0,0x0,8
tick,0x7ff8da10fb34,230423273,0,0x0,8
tick,0x7ff8da10fb34,230438561,0,0x0,8
tick,0x7ff8da10fb34,230455020,0,0x0,8
tick,0x7ff8da10fb34,230470526,0,0x0,8
tick,0x7ff8da10fb34,230486874,0,0x0,8
tick,0x7ff8da10fb34,230502703,0,0x0,8
tick,0x7ff8da10fb34,230519537,0,0x0,8
tick,0x7ff8da10fb34,230534025,0,0x0,8
tick,0x7ff8da10fb34,230549018,0,0x0,8
tick,0x7ff8da10fb34,230564921,0,0x0,8
tick,0x7ff8da10fb34,230580005,0,0x0,8
tick,0x7ff8da10fb34,230596096,0,0x0,8
tick,0x7ff8da10fb34,230610972,0,0x0,8
tick,0x7ff8da10fb34,230627167,0,0x0,8
tick,0x7ff8da10fb34,230641589,0,0x0,8
tick,0x7ff8da10fb34,230657238,0,0x0,8
tick,0x7ff8da10fb34,230673139,0,0x0,8
tick,0x7ff8da10fb34,230688376,0,0x0,8
tick,0x7ff8da10fb34,230704108,0,0x0,8
tick,0x7ff8da10fb34,230719782,0,0x0,8
tick,0x7ff8da10fb34,230734509,0,0x0,8
tick,0x7ff8da10fb34,230749215,0,0x0,8
tick,0x7ff8da10fb34,230764545,0,0x0,8
tick,0x7ff8da10fb34,230779985,0,0x0,8
tick,0x7ff8da10fb34,230795207,0,0x0,8
tick,0x7ff8da10fb34,230810049,0,0x0,8
tick,0x7ff8da10fb34,230826511,0,0x0,8
tick,0x7ff8da10fb34,230841428,0,0x0,8
tick,0x7ff8da10fb34,230857048,0,0x0,8
tick,0x7ff8da10fb34,230872112,0,0x0,8
tick,0x7ff8da10fb34,230887991,0,0x0,8
tick,0x7ff8da10fb34,230903032,0,0x0,8
tick,0x7ff8da10fb34,230918335,0,0x0,8
tick,0x7ff8da10fb34,230933385,0,0x0,8
tick,0x7ff8da10fb34,230948408,0,0x0,8
tick,0x7ff8da10fb34,230964631,0,0x0,8
tick,0x7ff8da10fb34,230979610,0,0x0,8
tick,0x7ff8da10fb34,230995112,0,0x0,8
tick,0x7ff8da10fb34,231009985,0,0x0,8
tick,0x7ff8da10fb34,231026217,0,0x0,8
tick,0x7ff8da10fb34,231041415,0,0x0,8
tick,0x7ff8da10fb34,231056019,0,0x0,8
tick,0x7ff8da10fb34,231071638,0,0x0,8
tick,0x7ff8da10fb34,231087383,0,0x0,8
tick,0x7ff8da10fb34,231102911,0,0x0,8
tick,0x7ff8da10fb34,231118558,0,0x0,8
tick,0x7ff8da10fb34,231134746,0,0x0,8
tick,0x7ff8da10fb34,231152518,0,0x0,8
tick,0x7ff8da10fb34,231165968,0,0x0,8
tick,0x7ff8da10fb34,231181050,0,0x0,8
tick,0x7ff8da10fb34,231197119,0,0x0,8
tick,0x7ff8da10fb34,231212341,0,0x0,8
tick,0x7ff8da10fb34,231227051,0,0x0,8
tick,0x7ff8da10fb34,231242233,0,0x0,8
tick,0x7ff8da10fb34,231258186,0,0x0,8
tick,0x7ff8da10fb34,231274356,0,0x0,8
tick,0x7ff8da10fb34,231290695,0,0x0,8
tick,0x7ff8da10fb34,231306026,0,0x0,8
tick,0x7ff8da10fb34,231322008,0,0x0,8
tick,0x7ff8da10fb34,231337437,0,0x0,8
tick,0x7ff8da10fb34,231352792,0,0x0,8
tick,0x7ff8da10fb34,231369232,0,0x0,8
tick,0x7ff8da10fb34,231384478,0,0x0,8
tick,0x7ff8da10fb34,231399528,0,0x0,8
tick,0x7ff8da10fb34,231414662,0,0x0,8
tick,0x7ff8da10fb34,231429366,0,0x0,8
tick,0x7ff8da10fb34,231444340,0,0x0,8
tick,0x7ff8da10fb34,231459920,0,0x0,8
tick,0x7ff8da10fb34,231476732,0,0x0,8
tick,0x7ff8da10fb34,231490800,0,0x0,8
tick,0x7ff8da10fb34,231506636,0,0x0,8
tick,0x7ff8da10fb34,231521374,0,0x0,8
tick,0x7ff8da10fb34,231537434,0,0x0,8
tick,0x7ff8da10fb34,231552722,0,0x0,8
tick,0x7ff8da10fb34,231568430,0,0x0,8
tick,0x7ff8da10fb34,231583739,0,0x0,8
tick,0x7ff8da10fb34,231599133,0,0x0,8
tick,0x7ff8da10fb34,231615097,0,0x0,8
tick,0x7ff8da10fb34,231630374,0,0x0,8
tick,0x7ff8da10fb34,231646073,0,0x0,8
tick,0x7ff8da10fb34,231661765,0,0x0,8
tick,0x7ff8da10fb34,231677026,0,0x0,8
tick,0x7ff8da10fb34,231692189,0,0x0,8
tick,0x7ff8da10fb34,231707587,0,0x0,8
tick,0x7ff8da10fb34,231722337,0,0x0,8
tick,0x7ff8da10fb34,231737977,0,0x0,8
tick,0x7ff8da10fb34,231753652,0,0x0,8
tick,0x7ff8da10fb34,231769219,0,0x0,8
tick,0x7ff8da10fb34,231785236,0,0x0,8
tick,0x7ff8da10fb34,231801456,0,0x0,8
tick,0x7ff8da10fb34,231817110,0,0x0,8
tick,0x7ff8da10fb34,231832257,0,0x0,8
tick,0x7ff8da10fb34,231847579,0,0x0,8
tick,0x7ff8da10fb34,231863152,0,0x0,8
tick,0x7ff8da10fb34,231878449,0,0x0,8
tick,0x7ff8da10fb34,231894537,0,0x0,8
tick,0x7ff8da10fb34,231909492,0,0x0,8
tick,0x7ff8da10fb34,231925354,0,0x0,8
tick,0x7ff8da10fb34,231940930,0,0x0,8
tick,0x7ff8da10fb34,231956070,0,0x0,8
tick,0x7ff8da10fb34,231971381,0,0x0,8
tick,0x7ff8da10fb34,231987319,0,0x0,8
tick,0x7ff8da10fb34,232002522,0,0x0,8
tick,0x7ff8da10fb34,232018597,0,0x0,8
tick,0x7ff8da10fb34,232033255,0,0x0,8
tick,0x7ff8da10fb34,232048357,0,0x0,8
tick,0x7ff8da10fb34,232063515,0,0x0,8
tick,0x7ff8da10fb34,232078979,0,0x0,8
tick,0x7ff8da10fb34,232094336,0,0x0,8
tick,0x7ff8da10fb34,232109727,0,0x0,8
tick,0x7ff8da10fb34,232125166,0,0x0,8
tick,0x7ff8da10fb34,232140451,0,0x0,8
tick,0x7ff8da10fb34,232156602,0,0x0,8
tick,0x7ff8da10fb34,232171641,0,0x0,8
tick,0x7ff8da10fb34,232186722,0,0x0,8
tick,0x7ff8da10fb34,232202735,0,0x0,8
tick,0x7ff8da10fb34,232218201,0,0x0,8
tick,0x7ff8da10fb34,232233776,0,0x0,8
tick,0x7ff8da10fb34,232248476,0,0x0,8
tick,0x7ff8da10fb34,232264302,0,0x0,8
tick,0x7ff8da10fb34,232279591,0,0x0,8
tick,0x7ff8da10fb34,232294737,0,0x0,8
tick,0x7ff8da10fb34,232309673,0,0x0,8
tick,0x7ff8da10fb34,232324460,0,0x0,8
tick,0x7ff8da10fb34,232339567,0,0x0,8
tick,0x7ff8da10fb34,232354948,0,0x0,8
tick,0x7ff8da10fb34,232370840,0,0x0,8
tick,0x7ff8da10fb34,232386974,0,0x0,8
tick,0x7ff8da10fb34,232402403,0,0x0,8
tick,0x7ff8da10fb34,232417928,0,0x0,8
tick,0x7ff8da10fb34,232433499,0,0x0,8
tick,0x7ff8da10fb34,232448241,0,0x0,8
tick,0x7ff8da10fb34,232465657,0,0x0,8
tick,0x7ff8da10fb34,232480164,0,0x0,8
tick,0x7ff8da10fb34,232494986,0,0x0,8
tick,0x7ff8da10fb34,232511040,0,0x0,8
tick,0x7ff8da10fb34,232526728,0,0x0,8
tick,0x7ff8da10fb34,232542589,0,0x0,8
tick,0x7ff8da10fb34,232558164,0,0x0,8
tick,0x7ff8da10fb34,232573418,0,0x0,8
tick,0x7ff8da10fb34,232588492,0,0x0,8
tick,0x7ff8da10fb34,232604128,0,0x0,8
tick,0x7ff8da10fb34,232619934,0,0x0,8
tick,0x7ff8da10fb34,232636257,0,0x0,8
tick,0x7ff8da10fb34,232651753,0,0x0,8
tick,0x7ff8da10fb34,232667256,0,0x0,8
tick,0x7ff8da10fb34,232681077,0,0x0,8
tick,0x7ff8da10fb34,232697132,0,0x0,8
tick,0x7ff8da10fb34,232712127,0,0x0,8
tick,0x7ff8da10fb34,232727878,0,0x0,8
tick,0x7ff8da10fb34,232743625,0,0x0,8
tick,0x7ff8da10fb34,232759273,0,0x0,8
tick,0x7ff8da10fb34,232775075,0,0x0,8
tick,0x7ff8da10fb34,232790098,0,0x0,8
tick,0x7ff8da10fb34,232806237,0,0x0,8
tick,0x7ff8da10fb34,232821177,0,0x0,8
tick,0x7ff8da10fb34,232836644,0,0x0,8
tick,0x7ff8da10fb34,232852240,0,0x0,8
tick,0x7ff8da10fb34,232868302,0,0x0,8
tick,0x7ff8da10fb34,232884055,0,0x0,8
tick,0x7ff8da10fb34,232900046,0,0x0,8
tick,0x7ff8da10fb34,232915203,0,0x0,8
tick,0x7ff8da10fb34,232930445,0,0x0,8
tick,0x7ff8da10fb34,232945323,0,0x0,8
tick,0x7ff8da10fb34,232960285,0,0x0,8
tick,0x7ff8da10fb34,232976105,0,0x0,8
tick,0x7ff8da10fb34,232991409,0,0x0,8
tick,0x7ff8da10fb34,233007027,0,0x0,8
tick,0x7ff8da10fb34,233022645,0,0x0,8
tick,0x7ff8da10fb34,233038528,0,0x0,8
tick,0x7ff8da10fb34,233054445,0,0x0,8
tick,0x7ff8da10fb34,233069825,0,0x0,8
tick,0x7ff8da10fb34,233085707,0,0x0,8
tick,0x7ff8da10fb34,233101385,0,0x0,8
tick,0x7ff8da10fb34,233116527,0,0x0,8
tick,0x7ff8da10fb34,233131497,0,0x0,8
tick,0x7ff8da10fb34,233147919,0,0x0,8
tick,0x7ff8da10fb34,233162697,0,0x0,8
tick,0x7ff8da10fb34,233178196,0,0x0,8
tick,0x7ff8da10fb34,233194054,0,0x0,8
tick,0x7ff8da10fb34,233209242,0,0x0,8
tick,0x7ff8da10fb34,233224813,0,0x0,8
tick,0x7ff8da10fb34,233239940,0,0x0,8
tick,0x7ff8da10fb34,233256097,0,0x0,8
tick,0x7ff8da10fb34,233271798,0,0x0,8
tick,0x7ff8da10fb34,233287611,0,0x0,8
tick,0x7ff8da10fb34,233303048,0,0x0,8
tick,0x7ff8da10fb34,233318810,0,0x0,8
tick,0x7ff8da10fb34,233334946,0,0x0,8
tick,0x7ff8da10fb34,233349763,0,0x0,8
tick,0x7ff8da10fb34,233365117,0,0x0,8
tick,0x7ff8da10fb34,233381318,0,0x0,8
tick,0x7ff8da10fb34,233397327,0,0x0,8
tick,0x7ff8da10fb34,233412233,0,0x0,8
tick,0x7ff8da10fb34,233427349,0,0x0,8
tick,0x7ff8da10fb34,233447840,0,0x0,8
tick,0x7ff8da10fb34,233459254,0,0x0,8
tick,0x7ff8da10fb34,233475107,0,0x0,8
tick,0x7ff8da10fb34,233490922,0,0x0,8
tick,0x7ff8da10fb34,233506850,0,0x0,8
tick,0x7ff8da10fb34,233522226,0,0x0,8
tick,0x7ff8da10fb34,233538654,0,0x0,8
tick,0x7ff8da10fb34,233553286,0,0x0,8
tick,0x7ff8da10fb34,233568492,0,0x0,8
tick,0x7ff8da10fb34,233583732,0,0x0,8
tick,0x7ff8da10fb34,233599470,0,0x0,8
tick,0x7ff8da10fb34,233615630,0,0x0,8
tick,0x7ff8da10fb34,233631585,0,0x0,8
tick,0x7ff8da10fb34,233647520,0,0x0,8
tick,0x7ff8da10fb34,233663420,0,0x0,8
tick,0x7ff8da10fb34,233679532,0,0x0,8
tick,0x7ff8da10fb34,233695541,0,0x0,8
tick,0x7ff8da10fb34,233711400,0,0x0,8
tick,0x7ff8da10fb34,233727484,0,0x0,8
tick,0x7ff8da10fb34,233742428,0,0x0,8
tick,0x7ff8da10fb34,233757404,0,0x0,8
tick,0x7ff8da10fb34,233773550,0,0x0,8
tick,0x7ff8da10fb34,233789076,0,0x0,8
tick,0x7ff8da10fb34,233805813,0,0x0,8
tick,0x7ff8da10fb34,233819922,0,0x0,8
tick,0x7ff8da10fb34,233835123,0,0x0,8
tick,0x7ff8da10fb34,233850920,0,0x0,8
tick,0x7ff8da10fb34,233866233,0,0x0,8
tick,0x7ff8da10fb34,233881329,0,0x0,8
tick,0x7ff8da10fb34,233896926,0,0x0,8
tick,0x7ff8da10fb34,233913096,0,0x0,8
tick,0x7ff8da10fb34,233927412,0,0x0,8
tick,0x7ff8da10fb34,233942754,0,0x0,8
tick,0x7ff8da10fb34,233958373,0,0x0,8
tick,0x7ff8da10fb34,233973339,0,0x0,8
tick,0x7ff8da10fb34,233989674,0,0x0,8
tick,0x7ff8da10fb34,234005087,0,0x0,8
tick,0x7ff8da10fb34,234021647,0,0x0,8
tick,0x7ff8da10fb34,234038289,0,0x0,8
tick,0x7ff8da10fb34,234051817,0,0x0,8
tick,0x7ff8da10fb34,234068317,0,0x0,8
tick,0x7ff8da10fb34,234083296,0,0x0,8
tick,0x7ff8da10fb34,234098075,0,0x0,8
tick,0x7ff8da10fb34,234114005,0,0x0,8
tick,0x7ff8da10fb34,234129266,0,0x0,8
tick,0x7ff8da10fb34,234145374,0,0x0,8
tick,0x7ff8da10fb34,234159652,0,0x0,8
tick,0x7ff8da10fb34,234175036,0,0x0,8
tick,0x7ff8da10fb34,234190960,0,0x0,8
tick,0x7ff8da10fb34,234206685,0,0x0,8
tick,0x7ff8da10fb34,234222325,0,0x0,8
tick,0x7ff8da10fb34,234237633,0,0x0,8
tick,0x7ff8da10fb34,234252797,0,0x0,8
tick,0x7ff8da10fb34,234268407,0,0x0,8
tick,0x7ff8da10fb34,234284767,0,0x0,8
tick,0x7ff8da10fb34,234299085,0,0x0,8
tick,0x7ff8da10fb34,234314069,0,0x0,8
tick,0x7ff8da10fb34,234329614,0,0x0,8
tick,0x7ff8da10fb34,234344352,0,0x0,8
tick,0x7ff8da10fb34,234359491,0,0x0,8
tick,0x7ff8da10fb34,234375168,0,0x0,8
tick,0x7ff8da10fb34,234391232,0,0x0,8
tick,0x7ff8da10fb34,234407168,0,0x0,8
tick,0x7ff8da10fb34,234422237,0,0x0,8
tick,0x7ff8da10fb34,234436845,0,0x0,8
tick,0x7ff8da10fb34,234452524,0,0x0,8
tick,0x7ff8da10fb34,234468405,0,0x0,8
tick,0x7ff8da10fb34,234484842,0,0x0,8
tick,0x7ff8da10fb34,234499335,0,0x0,8
tick,0x7ff8da10fb34,234515565,0,0x0,8
tick,0x7ff8da10fb34,234530490,0,0x0,8
tick,0x7ff8da10fb34,234546575,0,0x0,8
tick,0x7ff8da10fb34,234562805,0,0x0,8
tick,0x7ff8da10fb34,234577530,0,0x0,8
tick,0x7ff8da10fb34,234592146,0,0x0,8
tick,0x7ff8da10fb34,234607612,0,0x0,8
tick,0x7ff8da10fb34,234623307,0,0x0,8
tick,0x7ff8da10fb34,234638426,0,0x0,8
tick,0x7ff8da10fb34,234653456,0,0x0,8
tick,0x7ff8da10fb34,234669082,0,0x0,8
tick,0x7ff8da10fb34,234684841,0,0x0,8
tick,0x7ff8da10fb34,234700719,0,0x0,8
tick,0x7ff8da10fb34,234716455,0,0x0,8
tick,0x7ff8da10fb34,234732116,0,0x0,8
tick,0x7ff8da10fb34,234747037,0,0x0,8
tick,0x7ff8da10fb34,234762132,0,0x0,8
tick,0x7ff8da10fb34,234777969,0,0x0,8
tick,0x7ff8da10fb34,234793352,0,0x0,8
tick,0x7ff8da10fb34,234808449,0,0x0,8
tick,0x7ff8da10fb34,234824067,0,0x0,8
tick,0x7ff8da10fb34,234839515,0,0x0,8
tick,0x7ff8da10fb34,234854381,0,0x0,8
tick,0x7ff8da10fb34,234870024,0,0x0,8
tick,0x7ff8da10fb34,234885920,0,0x0,8
tick,0x7ff8da10fb34,234901307,0,0x0,8
tick,0x7ff8da10fb34,234918198,0,0x0,8
tick,0x7ff8da10fb34,234932763,0,0x0,8
tick,0x7ff8da10fb34,234948201,0,0x0,8
tick,0x7ff8da10fb34,234963181,0,0x0,8
tick,0x7ff8da10fb34,234978606,0,0x0,8
tick,0x7ff8da10fb34,234993821,0,0x0,8
tick,0x7ff8da10fb34,235009077,0,0x0,8
tick,0x7ff8da10fb34,235024103,0,0x0,8
tick,0x7ff8da10fb34,235039345,0,0x0,8
tick,0x7ff8da10fb34,235055188,0,0x0,8
tick,0x7ff8da10fb34,235070162,0,0x0,8
tick,0x7ff8da10fb34,235085894,0,0x0,8
tick,0x7ff8da10fb34,235101487,0,0x0,8
tick,0x7ff8da10fb34,235118194,0,0x0,8
tick,0x7ff8da10fb34,235131202,0,0x0,8
tick,0x7ff8da10fb34,235147152,0,0x0,8
tick,0x7ff8da10fb34,235163301,0,0x0,8
tick,0x7ff8da10fb34,235178261,0,0x0,8
tick,0x7ff8da10fb34,235193540,0,0x0,8
tick,0x7ff8da10fb34,235209388,0,0x0,8
tick,0x7ff8da10fb34,235224862,0,0x0,8
tick,0x7ff8da10fb34,235240329,0,0x0,8
tick,0x7ff8da10fb34,235256151,0,0x0,8
tick,0x7ff8da10fb34,235271416,0,0x0,8
tick,0x7ff8da10fb34,235286065,0,0x0,8
tick,0x7ff8da10fb34,235302247,0,0x0,8
tick,0x7ff8da10fb34,235317943,0,0x0,8
tick,0x7ff8da10fb34,235332299,0,0x0,8
tick,0x7ff8da10fb34,235347068,0,0x0,8
tick,0x7ff8da10fb34,235363088,0,0x0,8
tick,0x7ff8da10fb34,235378468,0,0x0,8
tick,0x7ff8da10fb34,235394016,0,0x0,8
tick,0x7ff8da10fb34,235408840,0,0x0,8
tick,0x7ff8da10fb34,235424177,0,0x0,8
tick,0x7ff8da10fb34,235439322,0,0x0,8
tick,0x7ff8da10fb34,235454827,0,0x0,8
tick,0x7ff8da10fb34,235470064,0,0x0,8
tick,0x7ff8da10fb34,235487207,0,0x0,8
tick,0x7ff8da10fb34,235501171,0,0x0,8
tick,0x7ff8da10fb34,235517505,0,0x0,8
tick,0x7ff8da10fb34,235532889,0,0x0,8
tick,0x7ff8da10fb34,235547341,0,0x0,8
tick,0x7ff8da10fb34,235562165,0,0x0,8
tick,0x7ff8da10fb34,235578177,0,0x0,8
tick,0x7ff8da10fb34,235593971,0,0x0,8
tick,0x7ff8da10fb34,235609292,0,0x0,8
tick,0x7ff8da10fb34,235625175,0,0x0,8
tick,0x7ff8da10fb34,235640062,0,0x0,8
tick,0x7ff8da10fb34,235656023,0,0x0,8
tick,0x7ff8da10fb34,235671966,0,0x0,8
tick,0x7ff8da10fb34,235687714,0,0x0,8
tick,0x7ff8da10fb34,235703026,0,0x0,8
tick,0x7ff8da10fb34,235718989,0,0x0,8
tick,0x7ff8da10fb34,235734383,0,0x0,8
tick,0x7ff8da10fb34,235750073,0,0x0,8
tick,0x7ff8da10fb34,235765464,0,0x0,8
tick,0x7ff8da10fb34,235781208,0,0x0,8
tick,0x7ff8da10fb34,235796187,0,0x0,8
tick,0x7ff8da10fb34,235810976,0,0x0,8
tick,0x7ff8da10fb34,235827206,0,0x0,8
tick,0x7ff8da10fb34,235842156,0,0x0,8
tick,0x7ff8da10fb34,235857218,0,0x0,8
tick,0x7ff8da10fb34,235872294,0,0x0,8
tick,0x7ff8da10fb34,235887926,0,0x0,8
tick,0x7ff8da10fb34,235903144,0,0x0,8
tick,0x7ff8da10fb34,235919888,0,0x0,8
tick,0x7ff8da10fb34,235934224,0,0x0,8
tick,0x7ff8da10fb34,235950212,0,0x0,8
tick,0x7ff8da10fb34,235965630,0,0x0,8
tick,0x7ff8da10fb34,235981016,0,0x0,8
tick,0x7ff8da10fb34,235996740,0,0x0,8
tick,0x7ff8da10fb34,236011952,0,0x0,8
tick,0x7ff8da10fb34,236027872,0,0x0,8
tick,0x7ff8da10fb34,236043140,0,0x0,8
tick,0x7ff8da10fb34,236058573,0,0x0,8
tick,0x7ff8da10fb34,236074148,0,0x0,8
tick,0x7ff8da10fb34,236090073,0,0x0,8
tick,0x7ff8da10fb34,236106031,0,0x0,8
tick,0x7ff8da10fb34,236121115,0,0x0,8
tick,0x7ff8da10fb34,236138214,0,0x0,8
tick,0x7ff8da10fb34,236153277,0,0x0,8
tick,0x7ff8da10fb34,236169387,0,0x0,8
tick,0x7ff8da10fb34,236185284,0,0x0,8
tick,0x7ff8da10fb34,236200433,0,0x0,8
tick,0x7ff8da10fb34,236216618,0,0x0,8
tick,0x7ff8da10fb34,236232279,0,0x0,8
tick,0x7ff8da10fb34,236248341,0,0x0,8
tick,0x7ff8da10fb34,236264097,0,0x0,8
tick,0x7ff8da10fb34,236279594,0,0x0,8
tick,0x7ff8da10fb34,236295231,0,0x0,8
tick,0x7ff8da10fb34,236310450,0,0x0,8
tick,0x7ff8da10fb34,236326003,0,0x0,8
tick,0x7ff8da10fb34,236342123,0,0x0,8
tick,0x7ff8da10fb34,236357674,0,0x0,8
tick,0x7ff8da10fb34,236374143,0,0x0,8
tick,0x7ff8da10fb34,236389728,0,0x0,8
tick,0x7ff8da10fb34,236403701,0,0x0,8
tick,0x7ff8da10fb34,236419935,0,0x0,8
tick,0x7ff8da10fb34,236435547,0,0x0,8
tick,0x7ff8da10fb34,236450582,0,0x0,8
tick,0x7ff8da10fb34,236467412,0,0x0,8
tick,0x7ff8da10fb34,236481915,0,0x0,8
tick,0x7ff8da10fb34,236499021,0,0x0,8
tick,0x7ff8da10fb34,236513104,0,0x0,8
tick,0x7ff8da10fb34,236528894,0,0x0,8
tick,0x7ff8da10fb34,236544839,0,0x0,8
tick,0x7ff8da10fb34,236559957,0,0x0,8
tick,0x7ff8da10fb34,236576155,0,0x0,8
tick,0x7ff8da10fb34,236591968,0,0x0,8
tick,0x7ff8da10fb34,236607625,0,0x0,8
tick,0x7ff8da10fb34,236623057,0,0x0,8
tick,0x7ff8da10fb34,236639370,0,0x0,8
tick,0x7ff8da10fb34,236653595,0,0x0,8
tick,0x7ff8da10fb34,236668797,0,0x0,8
tick,0x7ff8da10fb34,236684765,0,0x0,8
tick,0x7ff8da10fb34,236700572,0,0x0,8
tick,0x7ff8da10fb34,236717178,0,0x0,8
tick,0x7ff8da10fb34,236731622,0,0x0,8
tick,0x7ff8da10fb34,236746832,0,0x0,8
tick,0x7ff8da10fb34,236762232,0,0x0,8
tick,0x7ff8da10fb34,236778114,0,0x0,8
tick,0x7ff8da10fb34,236793600,0,0x0,8
tick,0x7ff8da10fb34,236808625,0,0x0,8
tick,0x7ff8da10fb34,236824075,0,0x0,8
tick,0x7ff8da10fb34,236839683,0,0x0,8
tick,0x7ff8da10fb34,236855024,0,0x0,8
tick,0x7ff8da10fb34,236871051,0,0x0,8
tick,0x7ff8da10fb34,236887173,0,0x0,8
tick,0x7ff8da10fb34,236902173,0,0x0,8
tick,0x7ff8da10fb34,236918202,0,0x0,8
tick,0x7ff8da10fb34,236934349,0,0x0,8
tick,0x7ff8da10fb34,236949859,0,0x0,8
tick,0x7ff8da10fb34,236965119,0,0x0,8
tick,0x7ff8da10fb34,236980575,0,0x0,8
tick,0x7ff8da10fb34,236998320,0,0x0,8
tick,0x7ff8da10fb34,237012167,0,0x0,8
tick,0x7ff8da10fb34,237028388,0,0x0,8
tick,0x7ff8da10fb34,237044030,0,0x0,8
tick,0x7ff8da10fb34,237059544,0,0x0,8
tick,0x7ff8da10fb34,237075062,0,0x0,8
tick,0x7ff8da10fb34,237090323,0,0x0,8
tick,0x7ff8da10fb34,237105631,0,0x0,8
tick,0x7ff8da10fb34,237121485,0,0x0,8
tick,0x7ff8da10fb34,237137991,0,0x0,8
tick,0x7ff8da10fb34,237155057,0,0x0,8
tick,0x7ff8da10fb34,237167985,0,0x0,8
tick,0x7ff8da10fb34,237183170,0,0x0,8
tick,0x7ff8da10fb34,237198109,0,0x0,8
tick,0x7ff8da10fb34,237214485,0,0x0,8
tick,0x7ff8da10fb34,237229232,0,0x0,8
tick,0x7ff8da10fb34,237245079,0,0x0,8
tick,0x7ff8da10fb34,237260426,0,0x0,8
tick,0x7ff8da10fb34,237275007,0,0x0,8
tick,0x7ff8da10fb34,237290211,0,0x0,8
tick,0x7ff8da10fb34,237305591,0,0x0,8
tick,0x7ff8da10fb34,237320809,0,0x0,8
tick,0x7ff8da10fb34,237336274,0,0x0,8
tick,0x7ff8da10fb34,237352019,0,0x0,8
tick,0x7ff8da10fb34,237367232,0,0x0,8
tick,0x7ff8da10fb34,237382507,0,0x0,8
tick,0x7ff8da10fb34,237398681,0,0x0,8
tick,0x7ff8da10fb34,237414881,0,0x0,8
tick,0x7ff8da10fb34,237430010,0,0x0,8
tick,0x7ff8da10fb34,237444778,0,0x0,8
tick,0x7ff8da10fb34,237460690,0,0x0,8
tick,0x7ff8da10fb34,237477469,0,0x0,8
tick,0x7ff8da10fb34,237491501,0,0x0,8
tick,0x7ff8da10fb34,237507974,0,0x0,8
tick,0x7ff8da10fb34,237522599,0,0x0,8
tick,0x7ff8da10fb34,237538835,0,0x0,8
tick,0x7ff8da10fb34,237554397,0,0x0,8
tick,0x7ff8da10fb34,237569946,0,0x0,8
tick,0x7ff8da10fb34,237585216,0,0x0,8
tick,0x7ff8da10fb34,237601326,0,0x0,8
tick,0x7ff8da10fb34,237616604,0,0x0,8
tick,0x7ff8da10fb34,237631193,0,0x0,8
tick,0x7ff8da10fb34,237647679,0,0x0,8
tick,0x7ff8da10fb34,237661994,0,0x0,8
tick,0x7ff8da10fb34,237677398,0,0x0,8
tick,0x7ff8da10fb34,237692126,0,0x0,8
tick,0x7ff8da10fb34,237706996,0,0x0,8
tick,0x7ff8da10fb34,237723205,0,0x0,8
tick,0x7ff8da10fb34,237738394,0,0x0,8
tick,0x7ff8da10fb34,237753681,0,0x0,8
tick,0x7ff8da10fb34,237769380,0,0x0,8
tick,0x7ff8da10fb34,237784552,0,0x0,8
tick,0x7ff8da10fb34,237799352,0,0x0,8
tick,0x7ff8da10fb34,237816001,0,0x0,8
tick,0x7ff8da10fb34,237831187,0,0x0,8
tick,0x7ff8da10fb34,237848774,0,0x0,8
tick,0x7ff8da10fb34,237861770,0,0x0,8
tick,0x7ff8da10fb34,237877536,0,0x0,8
tick,0x7ff8da10fb34,237892267,0,0x0,8
tick,0x7ff8da10fb34,237907445,0,0x0,8
tick,0x7ff8da10fb34,237922819,0,0x0,8
tick,0x7ff8da10fb34,237938607,0,0x0,8
tick,0x7ff8da10fb34,237953355,0,0x0,8
tick,0x7ff8da10fb34,237968849,0,0x0,8
tick,0x7ff8da10fb34,237984599,0,0x0,8
tick,0x7ff8da10fb34,237999639,0,0x0,8
tick,0x7ff8da10fb34,238015768,0,0x0,8
tick,0x7ff8da10fb34,238032435,0,0x0,8
tick,0x7ff8da10fb34,238048063,0,0x0,8
tick,0x7ff8da10fb34,238064676,0,0x0,8
tick,0x7ff8da10fb34,238079687,0,0x0,8
tick,0x7ff8da10fb34,238094760,0,0x0,8
tick,0x7ff8da10fb34,238110088,0,0x0,8
tick,0x7ff8da10fb34,238125781,0,0x0,8
tick,0x7ff8da10fb34,238141917,0,0x0,8
tick,0x7ff8da10fb34,238155751,0,0x0,8
tick,0x7ff8da10fb34,238175901,0,0x0,8
tick,0x7ff8da10fb34,238186443,0,0x0,8
tick,0x7ff8da10fb34,238201285,0,0x0,8
tick,0x7ff8da10fb34,238217070,0,0x0,8
tick,0x7ff8da10fb34,238232231,0,0x0,8
tick,0x7ff8da10fb34,238247849,0,0x0,8
tick,0x7ff8da10fb34,238263009,0,0x0,8
tick,0x7ff8da10fb34,238278201,0,0x0,8
tick,0x7ff8da10fb34,238293252,0,0x0,8
tick,0x7ff8da10fb34,238309244,0,0x0,8
tick,0x7ff8da10fb34,238325221,0,0x0,8
tick,0x7ff8da10fb34,238341311,0,0x0,8
tick,0x7ff8da10fb34,238356991,0,0x0,8
tick,0x7ff8da10fb34,238372112,0,0x0,8
tick,0x7ff8da10fb34,238387384,0,0x0,8
tick,0x7ff8da10fb34,238402363,0,0x0,8
tick,0x7ff8da10fb34,238417681,0,0x0,8
tick,0x7ff8da10fb34,238433630,0,0x0,8
tick,0x7ff8da10fb34,238450426,0,0x0,8
tick,0x7ff8da10fb34,238470407,0,0x0,8
tick,0x7ff8da10fb34,238479502,0,0x0,8
tick,0x7ff8da10fb34,238494573,0,0x0,8
tick,0x7ff8da10fb34,238510632,0,0x0,8
tick,0x7ff8da10fb34,238526792,0,0x0,8
tick,0x7ff8da10fb34,238542761,0,0x0,8
tick,0x7ff8da10fb34,238558688,0,0x0,8
tick,0x7ff8da10fb34,238574648,0,0x0,8
tick,0x7ff8da10fb34,238589522,0,0x0,8
tick,0x7ff8da10fb34,238604606,0,0x0,8
tick,0x7ff8da10fb34,238620623,0,0x0,8
tick,0x7ff8da10fb34,238637102,0,0x0,8
tick,0x7ff8da10fb34,238652531,0,0x0,8
tick,0x7ff8da10fb34,238667575,0,0x0,8
tick,0x7ff8da10fb34,238682593,0,0x0,8
tick,0x7ff8da10fb34,238698459,0,0x0,8
tick,0x7ff8da10fb34,238714662,0,0x0,8
tick,0x7ff8da10fb34,238730836,0,0x0,8
tick,0x7ff8da10fb34,238746708,0,0x0,8
tick,0x7ff8da10fb34,238762458,0,0x0,8
tick,0x7ff8da10fb34,238778559,0,0x0,8
tick,0x7ff8da10fb34,238794490,0,0x0,8
tick,0x7ff8da10fb34,238810934,0,0x0,8
tick,0x7ff8da10fb34,238826059,0,0x0,8
tick,0x7ff8da10fb34,238841149,0,0x0,8
tick,0x7ff8da10fb34,238857097,0,0x0,8
tick,0x7ff8da10fb34,238873175,0,0x0,8
tick,0x7ff8da10fb34,238888523,0,0x0,8
tick,0x7ff8da10fb34,238903764,0,0x0,8
tick,0x7ff8da10fb34,238919321,0,0x0,8
tick,0x7ff8da10fb34,238935303,0,0x0,8
tick,0x7ff8da10fb34,238951184,0,0x0,8
tick,0x7ff8da10fb34,238966715,0,0x0,8
tick,0x7ff8da10fb34,238982368,0,0x0,8
tick,0x7ff8da10fb34,238998446,0,0x0,8
tick,0x7ff8da10fb34,239013636,0,0x0,8
tick,0x7ff8da10fb34,239028734,0,0x0,8
tick,0x7ff8da10fb34,239043900,0,0x0,8
tick,0x7ff8da10fb34,239059176,0,0x0,8
tick,0x7ff8da10fb34,239074722,0,0x0,8
tick,0x7ff8da10fb34,239089860,0,0x0,8
tick,0x7ff8da10fb34,239105978,0,0x0,8
tick,0x7ff8da10fb34,239121128,0,0x0,8
tick,0x7ff8da10fb34,239137058,0,0x0,8
tick,0x7ff8da10fb34,239153516,0,0x0,8
tick,0x7ff8da10fb34,239169411,0,0x0,8
tick,0x7ff8da10fb34,239185044,0,0x0,8
tick,0x7ff8da10fb34,239201652,0,0x0,8
tick,0x7ff8da10fb34,239216622,0,0x0,8
tick,0x7ff8da10fb34,239232420,0,0x0,8
tick,0x7ff8da10fb34,239247788,0,0x0,8
tick,0x7ff8da10fb34,239262657,0,0x0,8
tick,0x7ff8da10fb34,239278053,0,0x0,8
tick,0x7ff8da10fb34,239293118,0,0x0,8
tick,0x7ff8da10fb34,239308620,0,0x0,8
tick,0x7ff8da10fb34,239324206,0,0x0,8
tick,0x7ff8da10fb34,239339753,0,0x0,8
tick,0x7ff8da10fb34,239354935,0,0x0,8
tick,0x7ff8da10fb34,239370979,0,0x0,8
tick,0x7ff8da10fb34,239386563,0,0x0,8
tick,0x7ff8da10fb34,239402298,0,0x0,8
tick,0x7ff8da10fb34,239417003,0,0x0,8
tick,0x7ff8da10fb34,239432774,0,0x0,8
tick,0x7ff8da10fb34,239448541,0,0x0,8
tick,0x7ff8da10fb34,239464762,0,0x0,8
tick,0x7ff8da10fb34,239479326,0,0x0,8
tick,0x7ff8da10fb34,239494937,0,0x0,8
tick,0x7ff8da10fb34,239510703,0,0x0,8
tick,0x7ff8da10fb34,239526390,0,0x0,8
tick,0x7ff8da10fb34,239541962,0,0x0,8
tick,0x7ff8da10fb34,239557506,0,0x0,8
tick,0x7ff8da10fb34,239572945,0,0x0,8
tick,0x7ff8da10fb34,239588282,0,0x0,8
tick,0x7ff8da10fb34,239604231,0,0x0,8
tick,0x7ff8da10fb34,239620189,0,0x0,8
tick,0x7ff8da10fb34,239636334,0,0x0,8
tick,0x7ff8da10fb34,239652299,0,0x0,8
tick,0x7ff8da10fb34,239668094,0,0x0,8
tick,0x7ff8da10fb34,239683661,0,0x0,8
tick,0x7ff8da10fb34,239699174,0,0x0,8
tick,0x7ff8da10fb34,239714882,0,0x0,8
tick,0x7ff8da10fb34,239730972,0,0x0,8
tick,0x7ff8da10fb34,239747011,0,0x0,8
tick,0x7ff8da10fb34,239762977,0,0x0,8
tick,0x7ff8da10fb34,239778442,0,0x0,8
tick,0x7ff8da10fb34,239793747,0,0x0,8
tick,0x7ff8da10fb34,239808942,0,0x0,8
tick,0x7ff8da10fb34,239824328,0,0x0,8
tick,0x7ff8da10fb34,239839566,0,0x0,8
tick,0x7ff8da10fb34,239854952,0,0x0,8
tick,0x7ff8da10fb34,239870773,0,0x0,8
tick,0x7ff8da10fb34,239886203,0,0x0,8
tick,0x7ff8da10fb34,239901443,0,0x0,8
tick,0x7ff8da10fb34,239916961,0,0x0,8
tick,0x7ff8da10fb34,239932572,0,0x0,8
tick,0x7ff8da10fb34,239949534,0,0x0,8
tick,0x7ff8da10fb34,239967939,0,0x0,8
tick,0x7ff8da10fb34,239978721,0,0x0,8
tick,0x7ff8da10fb34,239994575,0,0x0,8
tick,0x7ff8da10fb34,240009572,0,0x0,8
tick,0x7ff8da10fb34,240025791,0,0x0,8
tick,0x7ff8da10fb34,240041274,0,0x0,8
tick,0x7ff8da10fb34,240057355,0,0x0,8
tick,0x7ff8da10fb34,240072349,0,0x0,8
tick,0x7ff8da10fb34,240087983,0,0x0,8
tick,0x7ff8da10fb34,240103369,0,0x0,8
tick,0x7ff8da10fb34,240118782,0,0x0,8
tick,0x7ff8da10fb34,240134564,0,0x0,8
tick,0x7ff8da10fb34,240153758,0,0x0,8
tick,0x7ff8da10fb34,240165572,0,0x0,8
tick,0x7ff8da10fb34,240181670,0,0x0,8
tick,0x7ff8da10fb34,240197359,0,0x0,8
tick,0x7ff8da10fb34,240212922,0,0x0,8
tick,0x7ff8da10fb34,240228031,0,0x0,8
tick,0x7ff8da10fb34,240243136,0,0x0,8
tick,0x7ff8da10fb34,240258551,0,0x0,8
tick,0x7ff8da10fb34,240274264,0,0x0,8
tick,0x7ff8da10fb34,240289419,0,0x0,8
tick,0x7ff8da10fb34,240304918,0,0x0,8
tick,0x7ff8da10fb34,240320541,0,0x0,8
tick,0x7ff8da10fb34,240336389,0,0x0,8
tick,0x7ff8da10fb34,240350927,0,0x0,8
tick,0x7ff8da10fb34,240366932,0,0x0,8
tick,0x7ff8da10fb34,240381913,0,0x0,8
tick,0x7ff8da10fb34,240398667,0,0x0,8
tick,0x7ff8da10fb34,240411752,0,0x0,8
tick,0x7ff8da10fb34,240427843,0,0x0,8
tick,0x7ff8da10fb34,240443363,0,0x0,8
tick,0x7ff8da10fb34,240458473,0,0x0,8
tick,0x7ff8da10fb34,240473476,0,0x0,8
tick,0x7ff8da10fb34,240488529,0,0x0,8
tick,0x7ff8da10fb34,240504125,0,0x0,8
tick,0x7ff8da10fb34,240519278,0,0x0,8
tick,0x7ff8da10fb34,240534285,0,0x0,8
tick,0x7ff8da10fb34,240550152,0,0x0,8
tick,0x7ff8da10fb34,240565293,0,0x0,8
tick,0x7ff8da10fb34,240580971,0,0x0,8
tick,0x7ff8da10fb34,240596201,0,0x0,8
tick,0x7ff8da10fb34,240611931,0,0x0,8
tick,0x7ff8da10fb34,240627404,0,0x0,8
tick,0x7ff8da10fb34,240643118,0,0x0,8
tick,0x7ff8da10fb34,240657860,0,0x0,8
tick,0x7ff8da10fb34,240673349,0,0x0,8
tick,0x7ff8da10fb34,240688105,0,0x0,8
tick,0x7ff8da10fb34,240703050,0,0x0,8
tick,0x7ff8da10fb34,240718660,0,0x0,8
tick,0x7ff8da10fb34,240734367,0,0x0,8
tick,0x7ff8da10fb34,240749897,0,0x0,8
tick,0x7ff8da10fb34,240765511,0,0x0,8
tick,0x7ff8da10fb34,240781411,0,0x0,8
tick,0x7ff8da10fb34,240797235,0,0x0,8
tick,0x7ff8da10fb34,240812118,0,0x0,8
tick,0x7ff8da10fb34,240827587,0,0x0,8
tick,0x7ff8da10fb34,240843399,0,0x0,8
tick,0x7ff8da10fb34,240858381,0,0x0,8
tick,0x7ff8da10fb34,240875203,0,0x0,8
tick,0x7ff8da10fb34,240889048,0,0x0,8
tick,0x7ff8da10fb34,240904741,0,0x0,8
tick,0x7ff8da10fb34,240920388,0,0x0,8
tick,0x7ff8da10fb34,240936060,0,0x0,8
tick,0x7ff8da10fb34,240951828,0,0x0,8
tick,0x7ff8da10fb34,240968032,0,0x0,8
tick,0x7ff8da10fb34,240983258,0,0x0,8
tick,0x7ff8da10fb34,240999250,0,0x0,8
tick,0x7ff8da10fb34,241015299,0,0x0,8
tick,0x7ff8da10fb34,241029849,0,0x0,8
tick,0x7ff8da10fb34,241044651,0,0x0,8
tick,0x7ff8da10fb34,241059688,0,0x0,8
tick,0x7ff8da10fb34,241075035,0,0x0,8
tick,0x7ff8da10fb34,241090952,0,0x0,8
tick,0x7ff8da10fb34,241105834,0,0x0,8
tick,0x7ff8da10fb34,241120507,0,0x0,8
tick,0x7ff8da10fb34,241136172,0,0x0,8
tick,0x7ff8da10fb34,241151987,0,0x0,8
tick,0x7ff8da10fb34,241167262,0,0x0,8
tick,0x7ff8da10fb34,241183226,0,0x0,8
tick,0x7ff8da10fb34,241198634,0,0x0,8
tick,0x7ff8da10fb34,241214228,0,0x0,8
tick,0x7ff8da10fb34,241229984,0,0x0,8
tick,0x7ff8da10fb34,241244337,0,0x0,8
tick,0x7ff8da10fb34,241259524,0,0x0,8
tick,0x7ff8da10fb34,241274972,0,0x0,8
tick,0x7ff8da10fb34,241289266,0,0x0,8
tick,0x7ff8da10fb34,241304331,0,0x0,8
tick,0x7ff8da10fb34,241319919,0,0x0,8
tick,0x7ff8da10fb34,241335201,0,0x0,8
tick,0x7ff8da10fb34,241350349,0,0x0,8
tick,0x7ff8da10fb34,241366249,0,0x0,8
tick,0x7ff8da10fb34,241381401,0,0x0,8
tick,0x7ff8da10fb34,241396488,0,0x0,8
tick,0x7ff8da10fb34,241411412,0,0x0,8
tick,0x7ff8da10fb34,241427086,0,0x0,8
tick,0x7ff8da10fb34,241442332,0,0x0,8
tick,0x7ff8da10fb34,241458001,0,0x0,8
tick,0x7ff8da10fb34,241473420,0,0x0,8
tick,0x7ff8da10fb34,241489590,0,0x0,8
tick,0x7ff8da10fb34,241504830,0,0x0,8
tick,0x7ff8da10fb34,241519957,0,0x0,8
tick,0x7ff8da10fb34,241536144,0,0x0,8
tick,0x7ff8da10fb34,241551430,0,0x0,8
tick,0x7ff8da10fb34,241566409,0,0x0,8
tick,0x7ff8da10fb34,241582042,0,0x0,8
tick,0x7ff8da10fb34,241597526,0,0x0,8
tick,0x7ff8da10fb34,241613408,0,0x0,8
tick,0x7ff8da10fb34,241629637,0,0x0,8
tick,0x7ff8da10fb34,241645936,0,0x0,8
tick,0x7ff8da10fb34,241661574,0,0x0,8
tick,0x7ff8da10fb34,241677474,0,0x0,8
tick,0x7ff8da10fb34,241693563,0,0x0,8
tick,0x7ff8da10fb34,241709621,0,0x0,8
tick,0x7ff8da10fb34,241725214,0,0x0,8
tick,0x7ff8da10fb34,241741431,0,0x0,8
tick,0x7ff8da10fb34,241756777,0,0x0,8
tick,0x7ff8da10fb34,241771688,0,0x0,8
tick,0x7ff8da10fb34,241786495,0,0x0,8
tick,0x7ff8da10fb34,241802094,0,0x0,8
tick,0x7ff8da10fb34,241817246,0,0x0,8
tick,0x7ff8da10fb34,241832856,0,0x0,8
tick,0x7ff8da10fb34,241848595,0,0x0,8
tick,0x7ff8da10fb34,241864989,0,0x0,8
tick,0x7ff8da10fb34,241880160,0,0x0,8
tick,0x7ff8da10fb34,241895118,0,0x0,8
tick,0x7ff8da10fb34,241910188,0,0x0,8
tick,0x7ff8da10fb34,241926070,0,0x0,8
tick,0x7ff8da10fb34,241941469,0,0x0,8
tick,0x7ff8da10fb34,241956599,0,0x0,8
tick,0x7ff8da10fb34,241973170,0,0x0,8
tick,0x7ff8da10fb34,241988772,0,0x0,8
tick,0x7ff8da10fb34,242003329,0,0x0,8
tick,0x7ff8da10fb34,242019030,0,0x0,8
tick,0x7ff8da10fb34,242034629,0,0x0,8
tick,0x7ff8da10fb34,242050425,0,0x0,8
tick,0x7ff8da10fb34,242066067,0,0x0,8
tick,0x7ff8da10fb34,242081498,0,0x0,8
tick,0x7ff8da10fb34,242096428,0,0x0,8
tick,0x7ff8da10fb34,242112998,0,0x0,8
tick,0x7ff8da10fb34,242126922,0,0x0,8
tick,0x7ff8da10fb34,242142144,0,0x0,8
tick,0x7ff8da10fb34,242158061,0,0x0,8
tick,0x7ff8da10fb34,242173510,0,0x0,8
tick,0x7ff8da10fb34,242188590,0,0x0,8
tick,0x7ff8da10fb34,242204147,0,0x0,8
tick,0x7ff8da10fb34,242219048,0,0x0,8
tick,0x7ff8da10fb34,242234812,0,0x0,8
tick,0x7ff8da10fb34,242249610,0,0x0,8
tick,0x7ff8da10fb34,242265295,0,0x0,8
tick,0x7ff8da10fb34,242281207,0,0x0,8
tick,0x7ff8da10fb34,242296140,0,0x0,8
tick,0x7ff8da10fb34,242311291,0,0x0,8
tick,0x7ff8da10fb34,242326342,0,0x0,8
tick,0x7ff8da10fb34,242342099,0,0x0,8
tick,0x7ff8da10fb34,242357035,0,0x0,8
tick,0x7ff8da10fb34,242372122,0,0x0,8
tick,0x7ff8da10fb34,242387289,0,0x0,8
tick,0x7ff8da10fb34,242403117,0,0x0,8
tick,0x7ff8da10fb34,242418740,0,0x0,8
tick,0x7ff8da10fb34,242434067,0,0x0,8
tick,0x7ff8da10fb34,242449271,0,0x0,8
tick,0x7ff8da10fb34,242464601,0,0x0,8
tick,0x7ff8da10fb34,242480673,0,0x0,8
tick,0x7ff8da10fb34,242496092,0,0x0,8
tick,0x7ff8da10fb34,242511151,0,0x0,8
tick,0x7ff8da10fb34,242527055,0,0x0,8
tick,0x7ff8da10fb34,242542146,0,0x0,8
tick,0x7ff8da10fb34,242558039,0,0x0,8
tick,0x7ff8da10fb34,242573148,0,0x0,8
tick,0x7ff8da10fb34,242588464,0,0x0,8
tick,0x7ff8da10fb34,242604175,0,0x0,8
tick,0x7ff8da10fb34,242619375,0,0x0,8
tick,0x7ff8da10fb34,242634981,0,0x0,8
tick,0x7ff8da10fb34,242650815,0,0x0,8
tick,0x7ff8da10fb34,242665959,0,0x0,8
tick,0x7ff8da10fb34,242681343,0,0x0,8
tick,0x7ff8da10fb34,242697642,0,0x0,8
tick,0x7ff8da10fb34,242712725,0,0x0,8
tick,0x7ff8da10fb34,242728490,0,0x0,8
tick,0x7ff8da10fb34,242743220,0,0x0,8
tick,0x7ff8da10fb34,242758507,0,0x0,8
tick,0x7ff8da10fb34,242773714,0,0x0,8
tick,0x7ff8da10fb34,242788958,0,0x0,8
tick,0x7ff8da10fb34,242804847,0,0x0,8
tick,0x7ff8da10fb34,242820450,0,0x0,8
tick,0x7ff8da10fb34,242836156,0,0x0,8
tick,0x7ff8da10fb34,242851755,0,0x0,8
tick,0x7ff8da10fb34,242866657,0,0x0,8
tick,0x7ff8da10fb34,242882298,0,0x0,8
tick,0x7ff8da10fb34,242898065,0,0x0,8
tick,0x7ff8da10fb34,242914146,0,0x0,8
tick,0x7ff8da10fb34,242929255,0,0x0,8
tick,0x7ff8da10fb34,242944105,0,0x0,8
tick,0x7ff8da10fb34,242958998,0,0x0,8
tick,0x7ff8da10fb34,242974171,0,0x0,8
tick,0x7ff8da10fb34,242989513,0,0x0,8
tick,0x7ff8da10fb34,243004756,0,0x0,8
tick,0x7ff8da10fb34,243020033,0,0x0,8
tick,0x7ff8da10fb34,243036121,0,0x0,8
tick,0x7ff8da10fb34,243052118,0,0x0,8
tick,0x7ff8da10fb34,243067361,0,0x0,8
tick,0x7ff8da10fb34,243081608,0,0x0,8
tick,0x7ff8da10fb34,243096914,0,0x0,8
tick,0x7ff8da10fb34,243112577,0,0x0,8
tick,0x7ff8da10fb34,243127526,0,0x0,8
tick,0x7ff8da10fb34,243142614,0,0x0,8
tick,0x7ff8da10fb34,243158087,0,0x0,8
tick,0x7ff8da10fb34,243173973,0,0x0,8
tick,0x7ff8da10fb34,243189303,0,0x0,8
tick,0x7ff8da10fb34,243205048,0,0x0,8
tick,0x7ff8da10fb34,243220105,0,0x0,8
tick,0x7ff8da10fb34,243236451,0,0x0,8
tick,0x7ff8da10fb34,243251268,0,0x0,8
tick,0x7ff8da10fb34,243266838,0,0x0,8
tick,0x7ff8da10fb34,243282137,0,0x0,8
tick,0x7ff8da10fb34,243298108,0,0x0,8
tick,0x7ff8da10fb34,243313546,0,0x0,8
tick,0x7ff8da10fb34,243329800,0,0x0,8
tick,0x7ff8da10fb34,243345289,0,0x0,8
tick,0x7ff8da10fb34,243360059,0,0x0,8
tick,0x7ff8da10fb34,243376156,0,0x0,8
tick,0x7ff8da10fb34,243392144,0,0x0,8
tick,0x7ff8da10fb34,243407917,0,0x0,8
tick,0x7ff8da10fb34,243423174,0,0x0,8
tick,0x7ff8da10fb34,243438249,0,0x0,8
tick,0x7ff8da10fb34,243455403,0,0x0,8
tick,0x7ff8da10fb34,243470156,0,0x0,8
tick,0x7ff8da10fb34,243486549,0,0x0,8
tick,0x7ff8da10fb34,243502273,0,0x0,8
tick,0x7ff8da10fb34,243516627,0,0x0,8
tick,0x7ff8da10fb34,243532567,0,0x0,8
tick,0x7ff8da10fb34,243548484,0,0x0,8
tick,0x7ff8da10fb34,243564519,0,0x0,8
tick,0x7ff8da10fb34,243580330,0,0x0,8
tick,0x7ff8da10fb34,243595493,0,0x0,8
tick,0x7ff8da10fb34,243610469,0,0x0,8
tick,0x7ff8da10fb34,243626304,0,0x0,8
tick,0x7ff8da10fb34,243642495,0,0x0,8
tick,0x7ff8da10fb34,243658275,0,0x0,8
tick,0x7ff8da10fb34,243674379,0,0x0,8
tick,0x7ff8da10fb34,243690336,0,0x0,8
tick,0x7ff8da10fb34,243706299,0,0x0,8
tick,0x7ff8da10fb34,243722240,0,0x0,8
tick,0x7ff8da10fb34,243737348,0,0x0,8
tick,0x7ff8da10fb34,243752370,0,0x0,8
tick,0x7ff8da10fb34,243768310,0,0x0,8
tick,0x7ff8da10fb34,243784291,0,0x0,8
tick,0x7ff8da10fb34,243800215,0,0x0,8
tick,0x7ff8da10fb34,243816011,0,0x0,8
tick,0x7ff8da10fb34,243830823,0,0x0,8
tick,0x7ff8da10fb34,243845820,0,0x0,8
tick,0x7ff8da10fb34,243861802,0,0x0,8
tick,0x7ff8da10fb34,243876738,0,0x0,8
tick,0x7ff8da10fb34,243892202,0,0x0,8
tick,0x7ff8da10fb34,243907245,0,0x0,8
tick,0x7ff8da10fb34,243922059,0,0x0,8
tick,0x7ff8da10fb34,243938196,0,0x0,8
tick,0x7ff8da10fb34,243953959,0,0x0,8
tick,0x7ff8da10fb34,243969453,0,0x0,8
tick,0x7ff8da10fb34,243985245,0,0x0,8
tick,0x7ff8da10fb34,244000298,0,0x0,8
tick,0x7ff8da10fb34,244016967,0,0x0,8
tick,0x7ff8da10fb34,244031524,0,0x0,8
tick,0x7ff8da10fb34,244047811,0,0x0,8
tick,0x7ff8da10fb34,244063449,0,0x0,8
tick,0x7ff8da10fb34,244080143,0,0x0,8
tick,0x7ff8da10fb34,244095173,0,0x0,8
tick,0x7ff8da10fb34,244109861,0,0x0,8
tick,0x7ff8da10fb34,244125086,0,0x0,8
tick,0x7ff8da10fb34,244140305,0,0x0,8
tick,0x7ff8da10fb34,244156808,0,0x0,8
tick,0x7ff8da10fb34,244172750,0,0x0,8
tick,0x7ff8da10fb34,244187939,0,0x0,8
tick,0x7ff8da10fb34,244203937,0,0x0,8
tick,0x7ff8da10fb34,244219390,0,0x0,8
tick,0x7ff8da10fb34,244234766,0,0x0,8
tick,0x7ff8da10fb34,244250238,0,0x0,8
tick,0x7ff8da10fb34,244266246,0,0x0,8
tick,0x7ff8da10fb34,244281839,0,0x0,8
tick,0x7ff8da10fb34,244298010,0,0x0,8
tick,0x7ff8da10fb34,244313801,0,0x0,8
tick,0x7ff8da10fb34,244329305,0,0x0,8
tick,0x7ff8da10fb34,244344741,0,0x0,8
tick,0x7ff8da10fb34,244360531,0,0x0,8
tick,0x7ff8da10fb34,244376171,0,0x0,8
tick,0x7ff8da10fb34,244391525,0,0x0,8
tick,0x7ff8da10fb34,244407066,0,0x0,8
tick,0x7ff8da10fb34,244422175,0,0x0,8
tick,0x7ff8da10fb34,244437061,0,0x0,8
tick,0x7ff8da10fb34,244451784,0,0x0,8
tick,0x7ff8da10fb34,244467031,0,0x0,8
tick,0x7ff8da10fb34,244482388,0,0x0,8
tick,0x7ff8da10fb34,244498084,0,0x0,8
tick,0x7ff8da10fb34,244513426,0,0x0,8
tick,0x7ff8da10fb34,244528350,0,0x0,8
tick,0x7ff8da10fb34,244543713,0,0x0,8
tick,0x7ff8da10fb34,244559001,0,0x0,8
tick,0x7ff8da10fb34,244574101,0,0x0,8
tick,0x7ff8da10fb34,244589441,0,0x0,8
tick,0x7ff8da10fb34,244605555,0,0x0,8
tick,0x7ff8da10fb34,244621158,0,0x0,8
tick,0x7ff8da10fb34,244637078,0,0x0,8
tick,0x7ff8da10fb34,244652020,0,0x0,8
tick,0x7ff8da10fb34,244667567,0,0x0,8
tick,0x7ff8da10fb34,244682681,0,0x0,8
tick,0x7ff8da10fb34,244698098,0,0x0,8
tick,0x7ff8da10fb34,244713848,0,0x0,8
tick,0x7ff8da10fb34,244729567,0,0x0,8
tick,0x7ff8da10fb34,244744348,0,0x0,8
tick,0x7ff8da10fb34,244759344,0,0x0,8
tick,0x7ff8da10fb34,244774914,0,0x0,8
tick,0x7ff8da10fb34,244790150,0,0x0,8
tick,0x7ff8da10fb34,244806139,0,0x0,8
tick,0x7ff8da10fb34,244822085,0,0x0,8
tick,0x7ff8da10fb34,244837820,0,0x0,8
tick,0x7ff8da10fb34,244853100,0,0x0,8
tick,0x7ff8da10fb34,244868251,0,0x0,8
tick,0x7ff8da10fb34,244883435,0,0x0,8
tick,0x7ff8da10fb34,244899040,0,0x0,8
tick,0x7ff8da10fb34,244914795,0,0x0,8
tick,0x7ff8da10fb34,244930517,0,0x0,8
tick,0x7ff8da10fb34,244946244,0,0x0,8
tick,0x7ff8da10fb34,244961760,0,0x0,8
tick,0x7ff8da10fb34,244977446,0,0x0,8
tick,0x7ff8da10fb34,244993091,0,0x0,8
tick,0x7ff8da10fb34,245008758,0,0x0,8
tick,0x7ff8da10fb34,245024155,0,0x0,8
tick,0x7ff8da10fb34,245039525,0,0x0,8
tick,0x7ff8da10fb34,245054857,0,0x0,8
tick,0x7ff8da10fb34,245070060,0,0x0,8
tick,0x7ff8da10fb34,245086169,0,0x0,8
tick,0x7ff8da10fb34,245102047,0,0x0,8
tick,0x7ff8da10fb34,245118180,0,0x0,8
tick,0x7ff8da10fb34,245134403,0,0x0,8
tick,0x7ff8da10fb34,245149544,0,0x0,8
tick,0x7ff8da10fb34,245165693,0,0x0,8
tick,0x7ff8da10fb34,245181329,0,0x0,8
tick,0x7ff8da10fb34,245196296,0,0x0,8
tick,0x7ff8da10fb34,245211722,0,0x0,8
tick,0x7ff8da10fb34,245227142,0,0x0,8
tick,0x7ff8da10fb34,245242191,0,0x0,8
tick,0x7ff8da10fb34,245257888,0,0x0,8
tick,0x7ff8da10fb34,245273852,0,0x0,8
tick,0x7ff8da10fb34,245289422,0,0x0,8
tick,0x7ff8da10fb34,245304994,0,0x0,8
tick,0x7ff8da10fb34,245320628,0,0x0,8
tick,0x7ff8da10fb34,245336144,0,0x0,8
tick,0x7ff8da10fb34,245351694,0,0x0,8
tick,0x7ff8da10fb34,245367261,0,0x0,8
tick,0x7ff8da10fb34,245381634,0,0x0,8
tick,0x7ff8da10fb34,245396930,0,0x0,8
tick,0x7ff8da10fb34,245412860,0,0x0,8
tick,0x7ff8da10fb34,245428430,0,0x0,8
tick,0x7ff8da10fb34,245445111,0,0x0,8
tick,0x7ff8da10fb34,245460657,0,0x0,8
tick,0x7ff8da10fb34,245476433,0,0x0,8
tick,0x7ff8da10fb34,245492176,0,0x0,8
tick,0x7ff8da10fb34,245508029,0,0x0,8
tick,0x7ff8da10fb34,245524112,0,0x0,8
tick,0x7ff8da10fb34,245538555,0,0x0,8
tick,0x7ff8da10fb34,245554154,0,0x0,8
tick,0x7ff8da10fb34,245569451,0,0x0,8
tick,0x7ff8da10fb34,245585036,0,0x0,8
tick,0x7ff8da10fb34,245600025,0,0x0,8
tick,0x7ff8da10fb34,245616527,0,0x0,8
tick,0x7ff8da10fb34,245631074,0,0x0,8
tick,0x7ff8da10fb34,245646466,0,0x0,8
tick,0x7ff8da10fb34,245661997,0,0x0,8
tick,0x7ff8da10fb34,245677582,0,0x0,8
tick,0x7ff8da10fb34,245692935,0,0x0,8
tick,0x7ff8da10fb34,245708388,0,0x0,8
tick,0x7ff8da10fb34,245724212,0,0x0,8
tick,0x7ff8da10fb34,245739288,0,0x0,8
tick,0x7ff8da10fb34,245754896,0,0x0,8
tick,0x7ff8da10fb34,245770091,0,0x0,8
tick,0x7ff8da10fb34,245785459,0,0x0,8
tick,0x7ff8da10fb34,245800626,0,0x0,8
tick,0x7ff8da10fb34,245816813,0,0x0,8
tick,0x7ff8da10fb34,245831487,0,0x0,8
tick,0x7ff8da10fb34,245847291,0,0x0,8
tick,0x7ff8da10fb34,245862934,0,0x0,8
tick,0x7ff8da10fb34,245879093,0,0x0,8
tick,0x7ff8da10fb34,245894350,0,0x0,8
tick,0x7ff8da10fb34,245910665,0,0x0,8
tick,0x7ff8da10fb34,245926246,0,0x0,8
tick,0x7ff8da10fb34,245941962,0,0x0,8
tick,0x7ff8da10fb34,245957956,0,0x0,8
tick,0x7ff8da10fb34,245973397,0,0x0,8
tick,0x7ff8da10fb34,245989346,0,0x0,8
tick,0x7ff8da10fb34,246005454,0,0x0,8
tick,0x7ff8da10fb34,246021210,0,0x0,8
tick,0x7ff8da10fb34,246037299,0,0x0,8
tick,0x7ff8da10fb34,246052771,0,0x0,8
tick,0x7ff8da10fb34,246068025,0,0x0,8
tick,0x7ff8da10fb34,246084312,0,0x0,8
tick,0x7ff8da10fb34,246099232,0,0x0,8
tick,0x7ff8da10fb34,246115179,0,0x0,8
tick,0x7ff8da10fb34,246130492,0,0x0,8
tick,0x7ff8da10fb34,246148310,0,0x0,8
tick,0x7ff8da10fb34,246162457,0,0x0,8
tick,0x7ff8da10fb34,246177612,0,0x0,8
tick,0x7ff8da10fb34,246192785,0,0x0,8
tick,0x7ff8da10fb34,246208271,0,0x0,8
tick,0x7ff8da10fb34,246223993,0,0x0,8
tick,0x7ff8da10fb34,246239254,0,0x0,8
tick,0x7ff8da10fb34,246254422,0,0x0,8
tick,0x7ff8da10fb34,246270478,0,0x0,8
tick,0x7ff8da10fb34,246286443,0,0x0,8
tick,0x7ff8da10fb34,246301780,0,0x0,8
tick,0x7ff8da10fb34,246317856,0,0x0,8
tick,0x7ff8da10fb34,246332246,0,0x0,8
tick,0x7ff8da10fb34,246347757,0,0x0,8
tick,0x7ff8da10fb34,246363217,0,0x0,8
tick,0x7ff8da10fb34,246378722,0,0x0,8
tick,0x7ff8da10fb34,246394475,0,0x0,8
tick,0x7ff8da10fb34,246408933,0,0x0,8
tick,0x7ff8da10fb34,246424023,0,0x0,8
tick,0x7ff8da10fb34,246439316,0,0x0,8
tick,0x7ff8da10fb34,246455345,0,0x0,8
tick,0x7ff8da10fb34,246470371,0,0x0,8
tick,0x7ff8da10fb34,246486544,0,0x0,8
tick,0x7ff8da10fb34,246501365,0,0x0,8
tick,0x7ff8da10fb34,246517479,0,0x0,8
tick,0x7ff8da10fb34,246532242,0,0x0,8
tick,0x7ff8da10fb34,246547408,0,0x0,8
tick,0x7ff8da10fb34,246563060,0,0x0,8
tick,0x7ff8da10fb34,246578458,0,0x0,8
tick,0x7ff8da10fb34,246593078,0,0x0,8
tick,0x7ff8da10fb34,246607799,0,0x0,8
tick,0x7ff8da10fb34,246623095,0,0x0,8
tick,0x7ff8da10fb34,246638644,0,0x0,8
tick,0x7ff8da10fb34,246653029,0,0x0,8
tick,0x7ff8da10fb34,246667974,0,0x0,8
tick,0x7ff8da10fb34,246683438,0,0x0,8
tick,0x7ff8da10fb34,246698534,0,0x0,8
tick,0x7ff8da10fb34,246714107,0,0x0,8
tick,0x7ff8da10fb34,246730078,0,0x0,8
tick,0x7ff8da10fb34,246745474,0,0x0,8
tick,0x7ff8da10fb34,246761079,0,0x0,8
tick,0x7ff8da10fb34,246777023,0,0x0,8
tick,0x7ff8da10fb34,246790827,0,0x0,8
tick,0x7ff8da10fb34,246806507,0,0x0,8
tick,0x7ff8da10fb34,246822311,0,0x0,8
tick,0x7ff8da10fb34,246838211,0,0x0,8
tick,0x7ff8da10fb34,246853563,0,0x0,8
tick,0x7ff8da10fb34,246868882,0,0x0,8
tick,0x7ff8da10fb34,246884733,0,0x0,8
tick,0x7ff8da10fb34,246900033,0,0x0,8
tick,0x7ff8da10fb34,246915587,0,0x0,8
tick,0x7ff8da10fb34,246931450,0,0x0,8
tick,0x7ff8da10fb34,246947476,0,0x0,8
tick,0x7ff8da10fb34,246963063,0,0x0,8
tick,0x7ff8da10fb34,246978865,0,0x0,8
tick,0x7ff8da10fb34,246994054,0,0x0,8
tick,0x7ff8da10fb34,247009202,0,0x0,8
tick,0x7ff8da10fb34,247024283,0,0x0,8
tick,0x7ff8da10fb34,247039531,0,0x0,8
tick,0x7ff8da10fb34,247055013,0,0x0,8
tick,0x7ff8da10fb34,247070082,0,0x0,8
tick,0x7ff8da10fb34,247086302,0,0x0,8
tick,0x7ff8da10fb34,247101450,0,0x0,8
tick,0x7ff8da10fb34,247117054,0,0x0,8
tick,0x7ff8da10fb34,247131866,0,0x0,8
tick,0x7ff8da10fb34,247147686,0,0x0,8
tick,0x7ff8da10fb34,247163756,0,0x0,8
tick,0x7ff8da10fb34,247179586,0,0x0,8
tick,0x7ff8da10fb34,247195707,0,0x0,8
tick,0x7ff8da10fb34,247211438,0,0x0,8
tick,0x7ff8da10fb34,247227062,0,0x0,8
tick,0x7ff8da10fb34,247243325,0,0x0,8
tick,0x7ff8da10fb34,247258256,0,0x0,8
tick,0x7ff8da10fb34,247274116,0,0x0,8
tick,0x7ff8da10fb34,247289421,0,0x0,8
tick,0x7ff8da10fb34,247305416,0,0x0,8
tick,0x7ff8da10fb34,247321360,0,0x0,8
tick,0x7ff8da10fb34,247337151,0,0x0,8
tick,0x7ff8da10fb34,247353005,0,0x0,8
tick,0x7ff8da10fb34,247368918,0,0x0,8
tick,0x7ff8da10fb34,247385949,0,0x0,8
tick,0x7ff8da10fb34,247400760,0,0x0,8
tick,0x7ff8da10fb34,247417622,0,0x0,8
tick,0x7ff8da10fb34,247431388,0,0x0,8
tick,0x7ff8da10fb34,247447196,0,0x0,8
tick,0x7ff8da10fb34,247463172,0,0x0,8
tick,0x7ff8da10fb34,247478743,0,0x0,8
tick,0x7ff8da10fb34,247494428,0,0x0,8
tick,0x7ff8da10fb34,247508680,0,0x0,8
tick,0x7ff8da10fb34,247524392,0,0x0,8
tick,0x7ff8da10fb34,247539540,0,0x0,8
tick,0x7ff8da10fb34,247554949,0,0x0,8
tick,0x7ff8da10fb34,247570736,0,0x0,8
tick,0x7ff8da10fb34,247586181,0,0x0,8
tick,0x7ff8da10fb34,247602028,0,0x0,8
tick,0x7ff8da10fb34,247618151,0,0x0,8
tick,0x7ff8da10fb34,247633268,0,0x0,8
tick,0x7ff8da10fb34,247648784,0,0x0,8
tick,0x7ff8da10fb34,247663541,0,0x0,8
tick,0x7ff8da10fb34,247679616,0,0x0,8
tick,0x7ff8da10fb34,247696647,0,0x0,8
tick,0x7ff8da10fb34,247711836,0,0x0,8
tick,0x7ff8da10fb34,247726812,0,0x0,8
tick,0x7ff8da10fb34,247741985,0,0x0,8
tick,0x7ff8da10fb34,247756930,0,0x0,8
tick,0x7ff8da10fb34,247772354,0,0x0,8
tick,0x7ff8da10fb34,247787923,0,0x0,8
tick,0x7ff8da10fb34,247802967,0,0x0,8
tick,0x7ff8da10fb34,247818687,0,0x0,8
tick,0x7ff8da10fb34,247834232,0,0x0,8
tick,0x7ff8da10fb34,247849039,0,0x0,8
tick,0x7ff8da10fb34,247864332,0,0x0,8
tick,0x7ff8da10fb34,247879268,0,0x0,8
tick,0x7ff8da10fb34,247895239,0,0x0,8
tick,0x7ff8da10fb34,247912077,0,0x0,8
tick,0x7ff8da10fb34,247927637,0,0x0,8
tick,0x7ff8da10fb34,247941011,0,0x0,8
tick,0x7ff8da10fb34,247956654,0,0x0,8
tick,0x7ff8da10fb34,247972605,0,0x0,8
tick,0x7ff8da10fb34,247988516,0,0x0,8
tick,0x7ff8da10fb34,248003378,0,0x0,8
tick,0x7ff8da10fb34,248018672,0,0x0,8
tick,0x7ff8da10fb34,248033865,0,0x0,8
tick,0x7ff8da10fb34,248049736,0,0x0,8
tick,0x7ff8da10fb34,248064459,0,0x0,8
tick,0x7ff8da10fb34,248079990,0,0x0,8
tick,0x7ff8da10fb34,248095944,0,0x0,8
tick,0x7ff8da10fb34,248111387,0,0x0,8
tick,0x7ff8da10fb34,248126921,0,0x0,8
tick,0x7ff8da10fb34,248141756,0,0x0,8
tick,0x7ff8da10fb34,248157215,0,0x0,8
tick,0x7ff8da10fb34,248172986,0,0x0,8
tick,0x7ff8da10fb34,248188245,0,0x0,8
tick,0x7ff8da10fb34,248203298,0,0x0,8
tick,0x7ff8da10fb34,248219129,0,0x0,8
tick,0x7ff8da10fb34,248234290,0,0x0,8
tick,0x7ff8da10fb34,248249739,0,0x0,8
tick,0x7ff8da10fb34,248265875,0,0x0,8
tick,0x7ff8da10fb34,248281465,0,0x0,8
tick,0x7ff8da10fb34,248296606,0,0x0,8
tick,0x7ff8da10fb34,248312098,0,0x0,8
tick,0x7ff8da10fb34,248328656,0,0x0,8
tick,0x7ff8da10fb34,248344609,0,0x0,8
tick,0x7ff8da10fb34,248360803,0,0x0,8
tick,0x7ff8da10fb34,248377208,0,0x0,8
tick,0x7ff8da10fb34,248391758,0,0x0,8
tick,0x7ff8da10fb34,248407162,0,0x0,8
tick,0x7ff8da10fb34,248423165,0,0x0,8
tick,0x7ff8da10fb34,248439149,0,0x0,8
tick,0x7ff8da10fb34,248455151,0,0x0,8
tick,0x7ff8da10fb34,248472076,0,0x0,8
tick,0x7ff8da10fb34,248487244,0,0x0,8
tick,0x7ff8da10fb34,248502212,0,0x0,8
tick,0x7ff8da10fb34,248518073,0,0x0,8
tick,0x7ff8da10fb34,248533464,0,0x0,8
tick,0x7ff8da10fb34,248548248,0,0x0,8
tick,0x7ff8da10fb34,248564472,0,0x0,8
tick,0x7ff8da10fb34,248579242,0,0x0,8
tick,0x7ff8da10fb34,248594722,0,0x0,8
tick,0x7ff8da10fb34,248610623,0,0x0,8
tick,0x7ff8da10fb34,248625081,0,0x0,8
tick,0x7ff8da10fb34,248641062,0,0x0,8
tick,0x7ff8da10fb34,248657056,0,0x0,8
tick,0x7ff8da10fb34,248673059,0,0x0,8
tick,0x7ff8da10fb34,248689036,0,0x0,8
tick,0x7ff8da10fb34,248705040,0,0x0,8
tick,0x7ff8da10fb34,248721079,0,0x0,8
tick,0x7ff8da10fb34,248737127,0,0x0,8
tick,0x7ff8da10fb34,248753033,0,0x0,8
tick,0x7ff8da10fb34,248769066,0,0x0,8
tick,0x7ff8da10fb34,248784995,0,0x0,8
tick,0x7ff8da10fb34,248800977,0,0x0,8
tick,0x7ff8da10fb34,248817116,0,0x0,8
tick,0x7ff8da10fb34,248833051,0,0x0,8
tick,0x7ff8da10fb34,248849236,0,0x0,8
tick,0x7ff8da10fb34,248865242,0,0x0,8
tick,0x7ff8da10fb34,248881256,0,0x0,8
tick,0x7ff8da10fb34,248897665,0,0x0,8
tick,0x7ff8da10fb34,248913109,0,0x0,8
tick,0x7ff8da10fb34,248929224,0,0x0,8
tick,0x7ff8da10fb34,248945924,0,0x0,8
tick,0x7ff8da10fb34,248960827,0,0x0,8
tick,0x7ff8da10fb34,248976480,0,0x0,8
tick,0x7ff8da10fb34,248990498,0,0x0,8
tick,0x7ff8da10fb34,249006238,0,0x0,8
tick,0x7ff8da10fb34,249021821,0,0x0,8
tick,0x7ff8da10fb34,249037120,0,0x0,8
tick,0x7ff8da10fb34,249052971,0,0x0,8
tick,0x7ff8da10fb34,249068716,0,0x0,8
tick,0x7ff8da10fb34,249083759,0,0x0,8
tick,0x7ff8da10fb34,249099227,0,0x0,8
tick,0x7ff8da10fb34,249114579,0,0x0,8
tick,0x7ff8da10fb34,249130634,0,0x0,8
tick,0x7ff8da10fb34,249147001,0,0x0,8
tick,0x7ff8da10fb34,249162608,0,0x0,8
tick,0x7ff8da10fb34,249177883,0,0x0,8
tick,0x7ff8da10fb34,249193607,0,0x0,8
tick,0x7ff8da10fb34,249209010,0,0x0,8
tick,0x7ff8da10fb34,249223935,0,0x0,8
tick,0x7ff8da10fb34,249239308,0,0x0,8
tick,0x7ff8da10fb34,249254705,0,0x0,8
tick,0x7ff8da10fb34,249269833,0,0x0,8
tick,0x7ff8da10fb34,249286081,0,0x0,8
tick,0x7ff8da10fb34,249302015,0,0x0,8
tick,0x7ff8da10fb34,249317680,0,0x0,8
tick,0x7ff8da10fb34,249333525,0,0x0,8
tick,0x7ff8da10fb34,249349507,0,0x0,8
tick,0x7ff8da10fb34,249367030,0,0x0,8
tick,0x7ff8da10fb34,249381144,0,0x0,8
tick,0x7ff8da10fb34,249396204,0,0x0,8
tick,0x7ff8da10fb34,249412059,0,0x0,8
tick,0x7ff8da10fb34,249427309,0,0x0,8
tick,0x7ff8da10fb34,249443482,0,0x0,8
tick,0x7ff8da10fb34,249461291,0,0x0,8
tick,0x7ff8da10fb34,249474406,0,0x0,8
tick,0x7ff8da10fb34,249489417,0,0x0,8
tick,0x7ff8da10fb34,249504826,0,0x0,8
tick,0x7ff8da10fb34,249520952,0,0x0,8
tick,0x7ff8da10fb34,249536332,0,0x0,8
tick,0x7ff8da10fb34,249551629,0,0x0,8
tick,0x7ff8da10fb34,249566872,0,0x0,8
tick,0x7ff8da10fb34,249582313,0,0x0,8
tick,0x7ff8da10fb34,249598168,0,0x0,8
tick,0x7ff8da10fb34,249614439,0,0x0,8
tick,0x7ff8da10fb34,249630501,0,0x0,8
tick,0x7ff8da10fb34,249645093,0,0x0,8
tick,0x7ff8da10fb34,249661106,0,0x0,8
tick,0x7ff8da10fb34,249675886,0,0x0,8
tick,0x7ff8da10fb34,249691347,0,0x0,8
tick,0x7ff8da10fb34,249706927,0,0x0,8
tick,0x7ff8da10fb34,249722792,0,0x0,8
tick,0x7ff8da10fb34,249738358,0,0x0,8
tick,0x7ff8da10fb34,249753122,0,0x0,8
tick,0x7ff8da10fb34,249767983,0,0x0,8
tick,0x7ff8da10fb34,249784033,0,0x0,8
tick,0x7ff8da10fb34,249799437,0,0x0,8
tick,0x7ff8da10fb34,249814755,0,0x0,8
tick,0x7ff8da10fb34,249829941,0,0x0,8
tick,0x7ff8da10fb34,249846102,0,0x0,8
tick,0x7ff8da10fb34,249861213,0,0x0,8
tick,0x7ff8da10fb34,249876586,0,0x0,8
tick,0x7ff8da10fb34,249891185,0,0x0,8
tick,0x7ff8da10fb34,249907015,0,0x0,8
tick,0x7ff8da10fb34,249922113,0,0x0,8
tick,0x7ff8da10fb34,249937650,0,0x0,8
tick,0x7ff8da10fb34,249953518,0,0x0,8
tick,0x7ff8da10fb34,249969643,0,0x0,8
tick,0x7ff8da10fb34,249985806,0,0x0,8
tick,0x7ff8da10fb34,250001295,0,0x0,8
tick,0x7ff8da10fb34,250017902,0,0x0,8
tick,0x7ff8da10fb34,250033059,0,0x0,8
tick,0x7ff8da10fb34,250049189,0,0x0,8
tick,0x7ff8da10fb34,250064030,0,0x0,8
tick,0x7ff8da10fb34,250080016,0,0x0,8
tick,0x7ff8da10fb34,250094773,0,0x0,8
tick,0x7ff8da10fb34,250110691,0,0x0,8
tick,0x7ff8da10fb34,250125871,0,0x0,8
tick,0x7ff8da10fb34,250140922,0,0x0,8
tick,0x7ff8da10fb34,250156416,0,0x0,8
tick,0x7ff8da10fb34,250171532,0,0x0,8
tick,0x7ff8da10fb34,250186710,0,0x0,8
tick,0x7ff8da10fb34,250201883,0,0x0,8
tick,0x7ff8da10fb34,250218175,0,0x0,8
tick,0x7ff8da10fb34,250233327,0,0x0,8
tick,0x7ff8da10fb34,250248483,0,0x0,8
tick,0x7ff8da10fb34,250263649,0,0x0,8
tick,0x7ff8da10fb34,250279179,0,0x0,8
tick,0x7ff8da10fb34,250295001,0,0x0,8
tick,0x7ff8da10fb34,250310515,0,0x0,8
tick,0x7ff8da10fb34,250326213,0,0x0,8
tick,0x7ff8da10fb34,250342079,0,0x0,8
tick,0x7ff8da10fb34,250357032,0,0x0,8
tick,0x7ff8da10fb34,250372632,0,0x0,8
tick,0x7ff8da10fb34,250387888,0,0x0,8
tick,0x7ff8da10fb34,250403092,0,0x0,8
tick,0x7ff8da10fb34,250418483,0,0x0,8
tick,0x7ff8da10fb34,250434004,0,0x0,8
tick,0x7ff8da10fb34,250449185,0,0x0,8
tick,0x7ff8da10fb34,250464429,0,0x0,8
tick,0x7ff8da10fb34,250480057,0,0x0,8
tick,0x7ff8da10fb34,250495995,0,0x0,8
tick,0x7ff8da10fb34,250511401,0,0x0,8
tick,0x7ff8da10fb34,250527432,0,0x0,8
tick,0x7ff8da10fb34,250542736,0,0x0,8
tick,0x7ff8da10fb34,250558417,0,0x0,8
tick,0x7ff8da10fb34,250573044,0,0x0,8
tick,0x7ff8da10fb34,250588540,0,0x0,8
tick,0x7ff8da10fb34,250604108,0,0x0,8
tick,0x7ff8da10fb34,250619255,0,0x0,8
tick,0x7ff8da10fb34,250635007,0,0x0,8
tick,0x7ff8da10fb34,250651191,0,0x0,8
tick,0x7ff8da10fb34,250666762,0,0x0,8
tick,0x7ff8da10fb34,250681997,0,0x0,8
tick,0x7ff8da10fb34,250697475,0,0x0,8
tick,0x7ff8da10fb34,250713303,0,0x0,8
tick,0x7ff8da10fb34,250729040,0,0x0,8
tick,0x7ff8da10fb34,250744737,0,0x0,8
tick,0x7ff8da10fb34,250760315,0,0x0,8
tick,0x7ff8da10fb34,250776688,0,0x0,8
tick,0x7ff8da10fb34,250791089,0,0x0,8
tick,0x7ff8da10fb34,250807206,0,0x0,8
tick,0x7ff8da10fb34,250822282,0,0x0,8
tick,0x7ff8da10fb34,250837544,0,0x0,8
tick,0x7ff8da10fb34,250853217,0,0x0,8
tick,0x7ff8da10fb34,250869238,0,0x0,8
tick,0x7ff8da10fb34,250884962,0,0x0,8
tick,0x7ff8da10fb34,250901073,0,0x0,8
tick,0x7ff8da10fb34,250916459,0,0x0,8
tick,0x7ff8da10fb34,250931584,0,0x0,8
tick,0x7ff8da10fb34,250947747,0,0x0,8
tick,0x7ff8da10fb34,250962149,0,0x0,8
tick,0x7ff8da10fb34,250978074,0,0x0,8
tick,0x7ff8da10fb34,250994289,0,0x0,8
tick,0x7ff8da10fb34,251009534,0,0x0,8
tick,0x7ff8da10fb34,251025221,0,0x0,8
tick,0x7ff8da10fb34,251040234,0,0x0,8
tick,0x7ff8da10fb34,251056011,0,0x0,8
tick,0x7ff8da10fb34,251071645,0,0x0,8
tick,0x7ff8da10fb34,251086942,0,0x0,8
tick,0x7ff8da10fb34,251102464,0,0x0,8
tick,0x7ff8da10fb34,251118329,0,0x0,8
tick,0x7ff8da10fb34,251134387,0,0x0,8
tick,0x7ff8da10fb34,251150414,0,0x0,8
tick,0x7ff8da10fb34,251165966,0,0x0,8
tick,0x7ff8da10fb34,251181604,0,0x0,8
tick,0x7ff8da10fb34,251196939,0,0x0,8
tick,0x7ff8da10fb34,251213128,0,0x0,8
tick,0x7ff8da10fb34,251229023,0,0x0,8
tick,0x7ff8da10fb34,251245022,0,0x0,8
tick,0x7ff8da10fb34,251261062,0,0x0,8
tick,0x7ff8da10fb34,251278189,0,0x0,8
tick,0x7ff8da10fb34,251290948,0,0x0,8
tick,0x7ff8da10fb34,251307047,0,0x0,8
tick,0x7ff8da10fb34,251322229,0,0x0,8
tick,0x7ff8da10fb34,251337544,0,0x0,8
tick,0x7ff8da10fb34,251353130,0,0x0,8
tick,0x7ff8da10fb34,251368998,0,0x0,8
tick,0x7ff8da10fb34,251384448,0,0x0,8
tick,0x7ff8da10fb34,251399475,0,0x0,8
tick,0x7ff8da10fb34,251415120,0,0x0,8
tick,0x7ff8da10fb34,251430991,0,0x0,8
tick,0x7ff8da10fb34,251446619,0,0x0,8
tick,0x7ff8da10fb34,251461997,0,0x0,8
tick,0x7ff8da10fb34,251478186,0,0x0,8
tick,0x7ff8da10fb34,251493452,0,0x0,8
tick,0x7ff8da10fb34,251509395,0,0x0,8
tick,0x7ff8da10fb34,251525074,0,0x0,8
tick,0x7ff8da10fb34,251539991,0,0x0,8
tick,0x7ff8da10fb34,251556114,0,0x0,8
tick,0x7ff8da10fb34,251572109,0,0x0,8
tick,0x7ff8da10fb34,251587851,0,0x0,8
tick,0x7ff8da10fb34,251603097,0,0x0,8
tick,0x7ff8da10fb34,251618313,0,0x0,8
tick,0x7ff8da10fb34,251633776,0,0x0,8
tick,0x7ff8da10fb34,251649070,0,0x0,8
tick,0x7ff8da10fb34,251664886,0,0x0,8
tick,0x7ff8da10fb34,251679880,0,0x0,8
tick,0x7ff8da10fb34,251695207,0,0x0,8
tick,0x7ff8da10fb34,251710868,0,0x0,8
tick,0x7ff8da10fb34,251726203,0,0x0,8
tick,0x7ff8da10fb34,251741481,0,0x0,8
tick,0x7ff8da10fb34,251756822,0,0x0,8
tick,0x7ff8da10fb34,251772316,0,0x0,8
tick,0x7ff8da10fb34,251788120,0,0x0,8
tick,0x7ff8da10fb34,251804219,0,0x0,8
tick,0x7ff8da10fb34,251819786,0,0x0,8
tick,0x7ff8da10fb34,251834814,0,0x0,8
tick,0x7ff8da10fb34,251850150,0,0x0,8
tick,0x7ff8da10fb34,251866009,0,0x0,8
tick,0x7ff8da10fb34,251882148,0,0x0,8
tick,0x7ff8da10fb34,251897964,0,0x0,8
tick,0x7ff8da10fb34,251912855,0,0x0,8
tick,0x7ff8da10fb34,251928100,0,0x0,8
tick,0x7ff8da10fb34,251944101,0,0x0,8
tick,0x7ff8da10fb34,251959861,0,0x0,8
tick,0x7ff8da10fb34,251975050,0,0x0,8
tick,0x7ff8da10fb34,251991365,0,0x0,8
tick,0x7ff8da10fb34,252006074,0,0x0,8
tick,0x7ff8da10fb34,252021586,0,0x0,8
tick,0x7ff8da10fb34,252036912,0,0x0,8
tick,0x7ff8da10fb34,252052174,0,0x0,8
tick,0x7ff8da10fb34,252067446,0,0x0,8
tick,0x7ff8da10fb34,252083141,0,0x0,8
tick,0x7ff8da10fb34,252098211,0,0x0,8
tick,0x7ff8da10fb34,252112750,0,0x0,8
tick,0x7ff8da10fb34,252128249,0,0x0,8
tick,0x7ff8da10fb34,252144619,0,0x0,8
tick,0x7ff8da10fb34,252161011,0,0x0,8
tick,0x7ff8da10fb34,252176623,0,0x0,8
tick,0x7ff8da10fb34,252192482,0,0x0,8
tick,0x7ff8da10fb34,252207392,0,0x0,8
tick,0x7ff8da10fb34,252222982,0,0x0,8
tick,0x7ff8da10fb34,252238662,0,0x0,8
tick,0x7ff8da10fb34,252254283,0,0x0,8
tick,0x7ff8da10fb34,252269511,0,0x0,8
tick,0x7ff8da10fb34,252284933,0,0x0,8
tick,0x7ff8da10fb34,252300172,0,0x0,8
tick,0x7ff8da10fb34,252315969,0,0x0,8
tick,0x7ff8da10fb34,252330913,0,0x0,8
tick,0x7ff8da10fb34,252346347,0,0x0,8
tick,0x7ff8da10fb34,252361973,0,0x0,8
tick,0x7ff8da10fb34,252377317,0,0x0,8
tick,0x7ff8da10fb34,252393765,0,0x0,8
tick,0x7ff8da10fb34,252409253,0,0x0,8
tick,0x7ff8da10fb34,252423055,0,0x0,8
tick,0x7ff8da10fb34,252439208,0,0x0,8
tick,0x7ff8da10fb34,252455150,0,0x0,8
tick,0x7ff8da10fb34,252470942,0,0x0,8
tick,0x7ff8da10fb34,252486351,0,0x0,8
tick,0x7ff8da10fb34,252501813,0,0x0,8
tick,0x7ff8da10fb34,252516942,0,0x0,8
tick,0x7ff8da10fb34,252532964,0,0x0,8
tick,0x7ff8da10fb34,252548816,0,0x0,8
tick,0x7ff8da10fb34,252564025,0,0x0,8
tick,0x7ff8da10fb34,252579070,0,0x0,8
tick,0x7ff8da10fb34,252593781,0,0x0,8
tick,0x7ff8da10fb34,252609565,0,0x0,8
tick,0x7ff8da10fb34,252625044,0,0x0,8
tick,0x7ff8da10fb34,252641258,0,0x0,8
tick,0x7ff8da10fb34,252656931,0,0x0,8
tick,0x7ff8da10fb34,252672051,0,0x0,8
tick,0x7ff8da10fb34,252687735,0,0x0,8
tick,0x7ff8da10fb34,252702942,0,0x0,8
tick,0x7ff8da10fb34,252717933,0,0x0,8
tick,0x7ff8da10fb34,252733637,0,0x0,8
tick,0x7ff8da10fb34,252749197,0,0x0,8
tick,0x7ff8da10fb34,252764548,0,0x0,8
tick,0x7ff8da10fb34,252779980,0,0x0,8
tick,0x7ff8da10fb34,252796078,0,0x0,8
tick,0x7ff8da10fb34,252811403,0,0x0,8
tick,0x7ff8da10fb34,252827335,0,0x0,8
tick,0x7ff8da10fb34,252843327,0,0x0,8
tick,0x7ff8da10fb34,252858935,0,0x0,8
tick,0x7ff8da10fb34,252874456,0,0x0,8
tick,0x7ff8da10fb34,252889399,0,0x0,8
tick,0x7ff8da10fb34,252904735,0,0x0,8
tick,0x7ff8da10fb34,252920460,0,0x0,8
tick,0x7ff8da10fb34,252936072,0,0x0,8
tick,0x7ff8da10fb34,252952192,0,0x0,8
tick,0x7ff8da10fb34,252967588,0,0x0,8
tick,0x7ff8da10fb34,252983058,0,0x0,8
tick,0x7ff8da10fb34,252998162,0,0x0,8
tick,0x7ff8da10fb34,253013444,0,0x0,8
tick,0x7ff8da10fb34,253028967,0,0x0,8
tick,0x7ff8da10fb34,253044693,0,0x0,8
tick,0x7ff8da10fb34,253060323,0,0x0,8
tick,0x7ff8da10fb34,253076126,0,0x0,8
tick,0x7ff8da10fb34,253091692,0,0x0,8
tick,0x7ff8da10fb34,253107013,0,0x0,8
tick,0x7ff8da10fb34,253122290,0,0x0,8
tick,0x7ff8da10fb34,253137961,0,0x0,8
tick,0x7ff8da10fb34,253155043,0,0x0,8
tick,0x7ff8da10fb34,253170180,0,0x0,8
tick,0x7ff8da10fb34,253184387,0,0x0,8
tick,0x7ff8da10fb34,253199915,0,0x0,8
tick,0x7ff8da10fb34,253215956,0,0x0,8
tick,0x7ff8da10fb34,253231392,0,0x0,8
tick,0x7ff8da10fb34,253247069,0,0x0,8
tick,0x7ff8da10fb34,253262376,0,0x0,8
tick,0x7ff8da10fb34,253277933,0,0x0,8
tick,0x7ff8da10fb34,253293608,0,0x0,8
tick,0x7ff8da10fb34,253309482,0,0x0,8
tick,0x7ff8da10fb34,253325274,0,0x0,8
tick,0x7ff8da10fb34,253341669,0,0x0,8
tick,0x7ff8da10fb34,253358117,0,0x0,8
tick,0x7ff8da10fb34,253373578,0,0x0,8
tick,0x7ff8da10fb34,253388510,0,0x0,8
tick,0x7ff8da10fb34,253403562,0,0x0,8
tick,0x7ff8da10fb34,253418930,0,0x0,8
tick,0x7ff8da10fb34,253434858,0,0x0,8
tick,0x7ff8da10fb34,253450793,0,0x0,8
tick,0x7ff8da10fb34,253466739,0,0x0,8
tick,0x7ff8da10fb34,253482706,0,0x0,8
tick,0x7ff8da10fb34,253497712,0,0x0,8
tick,0x7ff8da10fb34,253513253,0,0x0,8
tick,0x7ff8da10fb34,253529083,0,0x0,8
tick,0x7ff8da10fb34,253545365,0,0x0,8
tick,0x7ff8da10fb34,253561130,0,0x0,8
tick,0x7ff8da10fb34,253577171,0,0x0,8
tick,0x7ff8da10fb34,253593191,0,0x0,8
tick,0x7ff8da10fb34,253609055,0,0x0,8
tick,0x7ff8da10fb34,253625162,0,0x0,8
tick,0x7ff8da10fb34,253641262,0,0x0,8
tick,0x7ff8da10fb34,253657270,0,0x0,8
tick,0x7ff8da10fb34,253673060,0,0x0,8
tick,0x7ff8da10fb34,253688129,0,0x0,8
tick,0x7ff8da10fb34,253703078,0,0x0,8
tick,0x7ff8da10fb34,253719018,0,0x0,8
tick,0x7ff8da10fb34,253734021,0,0x0,8
tick,0x7ff8da10fb34,253749053,0,0x0,8
tick,0x7ff8da10fb34,253765024,0,0x0,8
tick,0x7ff8da10fb34,253781026,0,0x0,8
tick,0x7ff8da10fb34,253797152,0,0x0,8
tick,0x7ff8da10fb34,253813065,0,0x0,8
tick,0x7ff8da10fb34,253828015,0,0x0,8
tick,0x7ff8da10fb34,253843222,0,0x0,8
tick,0x7ff8da10fb34,253858914,0,0x0,8
tick,0x7ff8da10fb34,253874521,0,0x0,8
tick,0x7ff8da10fb34,253889733,0,0x0,8
tick,0x7ff8da10fb34,253904885,0,0x0,8
tick,0x7ff8da10fb34,253920257,0,0x0,8
tick,0x7ff8da10fb34,253935894,0,0x0,8
tick,0x7ff8da10fb34,253950991,0,0x0,8
tick,0x7ff8da10fb34,253966950,0,0x0,8
tick,0x7ff8da10fb34,253981622,0,0x0,8
tick,0x7ff8da10fb34,253996966,0,0x0,8
tick,0x7ff8da10fb34,254012278,0,0x0,8
tick,0x7ff8da10fb34,254027616,0,0x0,8
tick,0x7ff8da10fb34,254042378,0,0x0,8
tick,0x7ff8da10fb34,254057603,0,0x0,8
tick,0x7ff8da10fb34,254073042,0,0x0,8
tick,0x7ff8da10fb34,254088893,0,0x0,8
tick,0x7ff8da10fb34,254104059,0,0x0,8
tick,0x7ff8da10fb34,254119410,0,0x0,8
tick,0x7ff8da10fb34,254134558,0,0x0,8
tick,0x7ff8da10fb34,254150551,0,0x0,8
tick,0x7ff8da10fb34,254166046,0,0x0,8
tick,0x7ff8da10fb34,254181772,0,0x0,8
tick,0x7ff8da10fb34,254196564,0,0x0,8
tick,0x7ff8da10fb34,254211888,0,0x0,8
tick,0x7ff8da10fb34,254227565,0,0x0,8
tick,0x7ff8da10fb34,254243163,0,0x0,8
tick,0x7ff8da10fb34,254257872,0,0x0,8
tick,0x7ff8da10fb34,254274015,0,0x0,8
tick,0x7ff8da10fb34,254289324,0,0x0,8
tick,0x7ff8da10fb34,254304345,0,0x0,8
tick,0x7ff8da10fb34,254319913,0,0x0,8
tick,0x7ff8da10fb34,254335102,0,0x0,8
tick,0x7ff8da10fb34,254350573,0,0x0,8
tick,0x7ff8da10fb34,254366164,0,0x0,8
tick,0x7ff8da10fb34,254381091,0,0x0,8
tick,0x7ff8da10fb34,254397129,0,0x0,8
tick,0x7ff8da10fb34,254412266,0,0x0,8
tick,0x7ff8da10fb34,254427404,0,0x0,8
tick,0x7ff8da10fb34,254443046,0,0x0,8
tick,0x7ff8da10fb34,254459586,0,0x0,8
tick,0x7ff8da10fb34,254474396,0,0x0,8
tick,0x7ff8da10fb34,254489616,0,0x0,8
tick,0x7ff8da10fb34,254505039,0,0x0,8
tick,0x7ff8da10fb34,254521147,0,0x0,8
tick,0x7ff8da10fb34,254536431,0,0x0,8
tick,0x7ff8da10fb34,254552079,0,0x0,8
tick,0x7ff8da10fb34,254567993,0,0x0,8
tick,0x7ff8da10fb34,254583372,0,0x0,8
tick,0x7ff8da10fb34,254599466,0,0x0,8
tick,0x7ff8da10fb34,254617875,0,0x0,8
tick,0x7ff8da10fb34,254631305,0,0x0,8
tick,0x7ff8da10fb34,254647915,0,0x0,8
tick,0x7ff8da10fb34,254663193,0,0x0,8
tick,0x7ff8da10fb34,254678393,0,0x0,8
tick,0x7ff8da10fb34,254693811,0,0x0,8
tick,0x7ff8da10fb34,254709066,0,0x0,8
tick,0x7ff8da10fb34,254729652,0,0x0,8
tick,0x7ff8da10fb34,254743217,0,0x0,8
tick,0x7ff8da10fb34,254755097,0,0x0,8
tick,0x7ff8da10fb34,254772193,0,0x0,8
tick,0x7ff8da10fb34,254786155,0,0x0,8
tick,0x7ff8da10fb34,254801112,0,0x0,8
tick,0x7ff8da10fb34,254817214,0,0x0,8
tick,0x7ff8da10fb34,254833432,0,0x0,8
tick,0x7ff8da10fb34,254848488,0,0x0,8
tick,0x7ff8da10fb34,254863968,0,0x0,8
tick,0x7ff8da10fb34,254879254,0,0x0,8
tick,0x7ff8da10fb34,254895003,0,0x0,8
tick,0x7ff8da10fb34,254910986,0,0x0,8
tick,0x7ff8da10fb34,254927015,0,0x0,8
tick,0x7ff8da10fb34,254941988,0,0x0,8
tick,0x7ff8da10fb34,254956755,0,0x0,8
tick,0x7ff8da10fb34,254972185,0,0x0,8
tick,0x7ff8da10fb34,254987167,0,0x0,8
tick,0x7ff8da10fb34,255002961,0,0x0,8
tick,0x7ff8da10fb34,255019905,0,0x0,8
tick,0x7ff8da10fb34,255036316,0,0x0,8
tick,0x7ff8da10fb34,255049664,0,0x0,8
tick,0x7ff8da10fb34,255064920,0,0x0,8
tick,0x7ff8da10fb34,255080652,0,0x0,8
tick,0x7ff8da10fb34,255096026,0,0x0,8
tick,0x7ff8da10fb34,255111231,0,0x0,8
tick,0x7ff8da10fb34,255126915,0,0x0,8
tick,0x7ff8da10fb34,255141862,0,0x0,8
tick,0x7ff8da10fb34,255157828,0,0x0,8
tick,0x7ff8da10fb34,255172048,0,0x0,8
tick,0x7ff8da10fb34,255188034,0,0x0,8
tick,0x7ff8da10fb34,255203767,0,0x0,8
tick,0x7ff8da10fb34,255219030,0,0x0,8
tick,0x7ff8da10fb34,255235086,0,0x0,8
tick,0x7ff8da10fb34,255251271,0,0x0,8
tick,0x7ff8da10fb34,255266384,0,0x0,8
tick,0x7ff8da10fb34,255281977,0,0x0,8
tick,0x7ff8da10fb34,255296936,0,0x0,8
tick,0x7ff8da10fb34,255312596,0,0x0,8
tick,0x7ff8da10fb34,255327794,0,0x0,8
tick,0x7ff8da10fb34,255342655,0,0x0,8
tick,0x7ff8da10fb34,255358613,0,0x0,8
tick,0x7ff8da10fb34,255374765,0,0x0,8
tick,0x7ff8da10fb34,255391098,0,0x0,8
tick,0x7ff8da10fb34,255405902,0,0x0,8
tick,0x7ff8da10fb34,255420873,0,0x0,8
tick,0x7ff8da10fb34,255437004,0,0x0,8
tick,0x7ff8da10fb34,255451915,0,0x0,8
tick,0x7ff8da10fb34,255466895,0,0x0,8
tick,0x7ff8da10fb34,255482028,0,0x0,8
tick,0x7ff8da10fb34,255498496,0,0x0,8
tick,0x7ff8da10fb34,255513732,0,0x0,8
tick,0x7ff8da10fb34,255529753,0,0x0,8
tick,0x7ff8da10fb34,255546044,0,0x0,8
tick,0x7ff8da10fb34,255561763,0,0x0,8
tick,0x7ff8da10fb34,255577238,0,0x0,8
tick,0x7ff8da10fb34,255593323,0,0x0,8
tick,0x7ff8da10fb34,255608541,0,0x0,8
tick,0x7ff8da10fb34,255623716,0,0x0,8
tick,0x7ff8da10fb34,255638174,0,0x0,8
tick,0x7ff8da10fb34,255653159,0,0x0,8
tick,0x7ff8da10fb34,255669168,0,0x0,8
tick,0x7ff8da10fb34,255684075,0,0x0,8
tick,0x7ff8da10fb34,255699502,0,0x0,8
tick,0x7ff8da10fb34,255716227,0,0x0,8
tick,0x7ff8da10fb34,255730250,0,0x0,8
tick,0x7ff8da10fb34,255746481,0,0x0,8
tick,0x7ff8da10fb34,255762372,0,0x0,8
tick,0x7ff8da10fb34,255778192,0,0x0,8
tick,0x7ff8da10fb34,255794300,0,0x0,8
tick,0x7ff8da10fb34,255810151,0,0x0,8
tick,0x7ff8da10fb34,255826137,0,0x0,8
tick,0x7ff8da10fb34,255842066,0,0x0,8
tick,0x7ff8da10fb34,255858050,0,0x0,8
tick,0x7ff8da10fb34,255874431,0,0x0,8
tick,0x7ff8da10fb34,255888934,0,0x0,8
tick,0x7ff8da10fb34,255904096,0,0x0,8
tick,0x7ff8da10fb34,255919018,0,0x0,8
tick,0x7ff8da10fb34,255934342,0,0x0,8
tick,0x7ff8da10fb34,255950205,0,0x0,8
tick,0x7ff8da10fb34,255966507,0,0x0,8
tick,0x7ff8da10fb34,255982162,0,0x0,8
tick,0x7ff8da10fb34,255997799,0,0x0,8
tick,0x7ff8da10fb34,256013162,0,0x0,8
tick,0x7ff8da10fb34,256028179,0,0x0,8
tick,0x7ff8da10fb34,256042861,0,0x0,8
tick,0x7ff8da10fb34,256058911,0,0x0,8
tick,0x7ff8da10fb34,256075182,0,0x0,8
tick,0x7ff8da10fb34,256093354,0,0x0,8
tick,0x7ff8da10fb34,256108709,0,0x0,8
tick,0x7ff8da10fb34,256122959,0,0x0,8
tick,0x7ff8da10fb34,256138367,0,0x0,8
tick,0x7ff8da10fb34,256153315,0,0x0,8
tick,0x7ff8da10fb34,256169820,0,0x0,8
tick,0x7ff8da10fb34,256185306,0,0x0,8
tick,0x7ff8da10fb34,256201178,0,0x0,8
tick,0x7ff8da10fb34,256216856,0,0x0,8
tick,0x7ff8da10fb34,256232179,0,0x0,8
tick,0x7ff8da10fb34,256248272,0,0x0,8
tick,0x7ff8da10fb34,256263749,0,0x0,8
tick,0x7ff8da10fb34,256279504,0,0x0,8
tick,0x7ff8da10fb34,256294136,0,0x0,8
tick,0x7ff8da10fb34,256309829,0,0x0,8
tick,0x7ff8da10fb34,256325634,0,0x0,8
tick,0x7ff8da10fb34,256341255,0,0x0,8
tick,0x7ff8da10fb34,256357245,0,0x0,8
tick,0x7ff8da10fb34,256371912,0,0x0,8
tick,0x7ff8da10fb34,256387949,0,0x0,8
tick,0x7ff8da10fb34,256402893,0,0x0,8
tick,0x7ff8da10fb34,256418156,0,0x0,8
tick,0x7ff8da10fb34,256433437,0,0x0,8
tick,0x7ff8da10fb34,256448994,0,0x0,8
tick,0x7ff8da10fb34,256464670,0,0x0,8
tick,0x7ff8da10fb34,256480453,0,0x0,8
tick,0x7ff8da10fb34,256495871,0,0x0,8
tick,0x7ff8da10fb34,256511462,0,0x0,8
tick,0x7ff8da10fb34,256526400,0,0x0,8
tick,0x7ff8da10fb34,256542266,0,0x0,8
tick,0x7ff8da10fb34,256558260,0,0x0,8
tick,0x7ff8da10fb34,256574797,0,0x0,8
tick,0x7ff8da10fb34,256590369,0,0x0,8
tick,0x7ff8da10fb34,256605365,0,0x0,8
tick,0x7ff8da10fb34,256621094,0,0x0,8
tick,0x7ff8da10fb34,256637061,0,0x0,8
tick,0x7ff8da10fb34,256653086,0,0x0,8
tick,0x7ff8da10fb34,256668533,0,0x0,8
tick,0x7ff8da10fb34,256683724,0,0x0,8
tick,0x7ff8da10fb34,256699164,0,0x0,8
tick,0x7ff8da10fb34,256714792,0,0x0,8
tick,0x7ff8da10fb34,256730033,0,0x0,8
tick,0x7ff8da10fb34,256745133,0,0x0,8
tick,0x7ff8da10fb34,256760943,0,0x0,8
tick,0x7ff8da10fb34,256776568,0,0x0,8
tick,0x7ff8da10fb34,256792373,0,0x0,8
tick,0x7ff8da10fb34,256807916,0,0x0,8
tick,0x7ff8da10fb34,256823261,0,0x0,8
tick,0x7ff8da10fb34,256838420,0,0x0,8
tick,0x7ff8da10fb34,256854381,0,0x0,8
tick,0x7ff8da10fb34,256870263,0,0x0,8
tick,0x7ff8da10fb34,256885916,0,0x0,8
tick,0x7ff8da10fb34,256901845,0,0x0,8
tick,0x7ff8da10fb34,256917282,0,0x0,8
tick,0x7ff8da10fb34,256932127,0,0x0,8
tick,0x7ff8da10fb34,256947953,0,0x0,8
tick,0x7ff8da10fb34,256963520,0,0x0,8
tick,0x7ff8da10fb34,256979188,0,0x0,8
tick,0x7ff8da10fb34,256995470,0,0x0,8
tick,0x7ff8da10fb34,257010382,0,0x0,8
tick,0x7ff8da10fb34,257026439,0,0x0,8
tick,0x7ff8da10fb34,257041721,0,0x0,8
tick,0x7ff8da10fb34,257056169,0,0x0,8
tick,0x7ff8da10fb34,257072269,0,0x0,8
tick,0x7ff8da10fb34,257087109,0,0x0,8
tick,0x7ff8da10fb34,257102179,0,0x0,8
tick,0x7ff8da10fb34,257118162,0,0x0,8
tick,0x7ff8da10fb34,257133146,0,0x0,8
tick,0x7ff8da10fb34,257149106,0,0x0,8
tick,0x7ff8da10fb34,257167224,0,0x0,8
tick,0x7ff8da10fb34,257183868,0,0x0,8
tick,0x7ff8da10fb34,257208463,0,0x0,8
tick,0x7ff8da10fb34,257213685,0,0x0,8
tick,0x7ff8da10fb34,257233020,0,0x0,8
tick,0x7ff8da10fb34,257260014,0,0x0,8
tick,0x7ff8da10fb34,257278970,0,0x0,8
tick,0x7ff8da10fb34,257309438,0,0x0,8
tick,0x7ff8da10fb34,257327241,0,0x0,8
tick,0x7ff8da10fb34,257345634,0,0x0,8
tick,0x7ff8da10fb34,257355020,0,0x0,8
tick,0x7ff8da10fb34,257386982,0,0x0,8
tick,0x7ff8da10fb34,257399211,0,0x0,8
tick,0x7ff8da10fb34,257415429,0,0x0,8
tick,0x7ff8da10fb34,257443587,0,0x0,8
tick,0x7ff8da10fb34,257452991,0,0x0,8
tick,0x7ff8da10fb34,257462358,0,0x0,8
tick,0x7ff8da10fb34,257477158,0,0x0,8
tick,0x7ff8da10fb34,257492014,0,0x0,8
tick,0x7ff8da10fb34,257508019,0,0x0,8
tick,0x7ff8da10fb34,257523131,0,0x0,8
tick,0x7ff8da10fb34,257538029,0,0x0,8
tick,0x7ff8da10fb34,257553969,0,0x0,8
tick,0x7ff8da10fb34,257568986,0,0x0,8
tick,0x7ff8da10fb34,257584118,0,0x0,8
tick,0x7ff8da10fb34,257599242,0,0x0,8
tick,0x7ff8da10fb34,257614984,0,0x0,8
tick,0x7ff8da10fb34,257632539,0,0x0,8
tick,0x7ff8da10fb34,257646753,0,0x0,8
tick,0x7ff8da10fb34,257661456,0,0x0,8
tick,0x7ff8da10fb34,257677614,0,0x0,8
tick,0x7ff8da10fb34,257696668,0,0x0,8
tick,0x7ff8da10fb34,257713461,0,0x0,8
tick,0x7ff8da10fb34,257728791,0,0x0,8
tick,0x7ff8da10fb34,257747330,0,0x0,8
tick,0x7ff8da10fb34,257758703,0,0x0,8
tick,0x7ff8da10fb34,257776109,0,0x0,8
tick,0x7ff8da10fb34,257788208,0,0x0,8
tick,0x7ff8da10fb34,257802996,0,0x0,8
tick,0x7ff8da10fb34,257818427,0,0x0,8
tick,0x7ff8da10fb34,257834138,0,0x0,8
tick,0x7ff8da10fb34,257849031,0,0x0,8
tick,0x7ff8da10fb34,257864570,0,0x0,8
tick,0x7ff8da10fb34,257880045,0,0x0,8
tick,0x7ff8da10fb34,257895143,0,0x0,8
tick,0x7ff8da10fb34,257911198,0,0x0,8
tick,0x7ff8da10fb34,257926916,0,0x0,8
tick,0x7ff8da10fb34,257942109,0,0x0,8
tick,0x7ff8da10fb34,257957425,0,0x0,8
tick,0x7ff8da10fb34,257973478,0,0x0,8
tick,0x7ff8da10fb34,257990605,0,0x0,8
tick,0x7ff8da10fb34,258005526,0,0x0,8
tick,0x7ff8da10fb34,258019624,0,0x0,8
tick,0x7ff8da10fb34,258034859,0,0x0,8
tick,0x7ff8da10fb34,258049810,0,0x0,8
tick,0x7ff8da10fb34,258065815,0,0x0,8
tick,0x7ff8da10fb34,258081422,0,0x0,8
tick,0x7ff8da10fb34,258097003,0,0x0,8
tick,0x7ff8da10fb34,258112490,0,0x0,8
tick,0x7ff8da10fb34,258127557,0,0x0,8
tick,0x7ff8da10fb34,258142428,0,0x0,8
tick,0x7ff8da10fb34,258158431,0,0x0,8
tick,0x7ff8da10fb34,258173623,0,0x0,8
tick,0x7ff8da10fb34,258188672,0,0x0,8
tick,0x7ff8da10fb34,258204431,0,0x0,8
tick,0x7ff8da10fb34,258219218,0,0x0,8
tick,0x7ff8da10fb34,258234153,0,0x0,8
tick,0x7ff8da10fb34,258249542,0,0x0,8
tick,0x7ff8da10fb34,258264863,0,0x0,8
tick,0x7ff8da10fb34,258281019,0,0x0,8
tick,0x7ff8da10fb34,258296930,0,0x0,8
tick,0x7ff8da10fb34,258312290,0,0x0,8
tick,0x7ff8da10fb34,258328286,0,0x0,8
tick,0x7ff8da10fb34,258343542,0,0x0,8
tick,0x7ff8da10fb34,258359527,0,0x0,8
tick,0x7ff8da10fb34,258374846,0,0x0,8
tick,0x7ff8da10fb34,258390475,0,0x0,8
tick,0x7ff8da10fb34,258406422,0,0x0,8
tick,0x7ff8da10fb34,258422387,0,0x0,8
tick,0x7ff8da10fb34,258437801,0,0x0,8
tick,0x7ff8da10fb34,258453776,0,0x0,8
tick,0x7ff8da10fb34,258469249,0,0x0,8
tick,0x7ff8da10fb34,258485900,0,0x0,8
tick,0x7ff8da10fb34,258500157,0,0x0,8
tick,0x7ff8da10fb34,258515148,0,0x0,8
tick,0x7ff8da10fb34,258530148,0,0x0,8
tick,0x7ff8da10fb34,258546268,0,0x0,8
tick,0x7ff8da10fb34,258562265,0,0x0,8
tick,0x7ff8da10fb34,258577228,0,0x0,8
tick,0x7ff8da10fb34,258592391,0,0x0,8
tick,0x7ff8da10fb34,258607613,0,0x0,8
tick,0x7ff8da10fb34,258623076,0,0x0,8
tick,0x7ff8da10fb34,258641988,0,0x0,8
tick,0x7ff8da10fb34,258658572,0,0x0,8
tick,0x7ff8da10fb34,258670347,0,0x0,8
tick,0x7ff8da10fb34,258684239,0,0x0,8
tick,0x7ff8da10fb34,258699093,0,0x0,8
tick,0x7ff8da10fb34,258715203,0,0x0,8
tick,0x7ff8da10fb34,258731126,0,0x0,8
tick,0x7ff8da10fb34,258747794,0,0x0,8
tick,0x7ff8da10fb34,258763266,0,0x0,8
tick,0x7ff8da10fb34,258779483,0,0x0,8
tick,0x7ff8da10fb34,258795120,0,0x0,8
tick,0x7ff8da10fb34,258811201,0,0x0,8
tick,0x7ff8da10fb34,258827392,0,0x0,8
tick,0x7ff8da10fb34,258843291,0,0x0,8
tick,0x7ff8da10fb34,258858202,0,0x0,8
tick,0x7ff8da10fb34,258878227,0,0x0,8
tick,0x7ff8da10fb34,258888767,0,0x0,8
tick,0x7ff8da10fb34,258904010,0,0x0,8
tick,0x7ff8da10fb34,258919065,0,0x0,8
tick,0x7ff8da10fb34,258934002,0,0x0,8
tick,0x7ff8da10fb34,258950024,0,0x0,8
tick,0x7ff8da10fb34,258965458,0,0x0,8
tick,0x7ff8da10fb34,258981058,0,0x0,8
tick,0x7ff8da10fb34,258997224,0,0x0,8
tick,0x7ff8da10fb34,259012019,0,0x0,8
tick,0x7ff8da10fb34,259026774,0,0x0,8
tick,0x7ff8da10fb34,259042057,0,0x0,8
tick,0x7ff8da10fb34,259058135,0,0x0,8
tick,0x7ff8da10fb34,259074282,0,0x0,8
tick,0x7ff8da10fb34,259089190,0,0x0,8
tick,0x7ff8da10fb34,259105124,0,0x0,8
tick,0x7ff8da10fb34,259120290,0,0x0,8
tick,0x7ff8da10fb34,259134963,0,0x0,8
tick,0x7ff8da10fb34,259150079,0,0x0,8
tick,0x7ff8da10fb34,259164803,0,0x0,8
tick,0x7ff8da10fb34,259180217,0,0x0,8
tick,0x7ff8da10fb34,259194941,0,0x0,8
tick,0x7ff8da10fb34,259209999,0,0x0,8
tick,0x7ff8da10fb34,259225637,0,0x0,8
tick,0x7ff8da10fb34,259241278,0,0x0,8
tick,0x7ff8da10fb34,259257319,0,0x0,8
tick,0x7ff8da10fb34,259272475,0,0x0,8
tick,0x7ff8da10fb34,259287899,0,0x0,8
tick,0x7ff8da10fb34,259303943,0,0x0,8
tick,0x7ff8da10fb34,259319312,0,0x0,8
tick,0x7ff8da10fb34,259335036,0,0x0,8
tick,0x7ff8da10fb34,259350068,0,0x0,8
tick,0x7ff8da10fb34,259366147,0,0x0,8
tick,0x7ff8da10fb34,259382431,0,0x0,8
tick,0x7ff8da10fb34,259397257,0,0x0,8
tick,0x7ff8da10fb34,259412671,0,0x0,8
tick,0x7ff8da10fb34,259427976,0,0x0,8
tick,0x7ff8da10fb34,259443158,0,0x0,8
tick,0x7ff8da10fb34,259459326,0,0x0,8
tick,0x7ff8da10fb34,259475546,0,0x0,8
tick,0x7ff8da10fb34,259491101,0,0x0,8
tick,0x7ff8da10fb34,259507797,0,0x0,8
tick,0x7ff8da10fb34,259523174,0,0x0,8
tick,0x7ff8da10fb34,259539117,0,0x0,8
tick,0x7ff8da10fb34,259555470,0,0x0,8
tick,0x7ff8da10fb34,259571091,0,0x0,8
tick,0x7ff8da10fb34,259587190,0,0x0,8
tick,0x7ff8da10fb34,259602955,0,0x0,8
tick,0x7ff8da10fb34,259623143,0,0x0,8
tick,0x7ff8da10fb34,259635194,0,0x0,8
tick,0x7ff8da10fb34,259651218,0,0x0,8
tick,0x7ff8da10fb34,259666893,0,0x0,8
tick,0x7ff8da10fb34,259682959,0,0x0,8
tick,0x7ff8da10fb34,259698253,0,0x0,8
tick,0x7ff8da10fb34,259714172,0,0x0,8
tick,0x7ff8da10fb34,259729769,0,0x0,8
tick,0x7ff8da10fb34,259745913,0,0x0,8
tick,0x7ff8da10fb34,259761456,0,0x0,8
tick,0x7ff8da10fb34,259777727,0,0x0,8
tick,0x7ff8da10fb34,259793318,0,0x0,8
tick,0x7ff8da10fb34,259809334,0,0x0,8
tick,0x7ff8da10fb34,259824871,0,0x0,8
tick,0x7ff8da10fb34,259840306,0,0x0,8
tick,0x7ff8da10fb34,259855388,0,0x0,8
tick,0x7ff8da10fb34,259870275,0,0x0,8
tick,0x7ff8da10fb34,259885983,0,0x0,8
tick,0x7ff8da10fb34,259902048,0,0x0,8
tick,0x7ff8da10fb34,259917176,0,0x0,8
tick,0x7ff8da10fb34,259932956,0,0x0,8
tick,0x7ff8da10fb34,259948039,0,0x0,8
tick,0x7ff8da10fb34,259963020,0,0x0,8
tick,0x7ff8da10fb34,259978505,0,0x0,8
tick,0x7ff8da10fb34,259994780,0,0x0,8
tick,0x7ff8da10fb34,260009611,0,0x0,8
tick,0x7ff8da10fb34,260025153,0,0x0,8
tick,0x7ff8da10fb34,260040855,0,0x0,8
tick,0x7ff8da10fb34,260057192,0,0x0,8
tick,0x7ff8da10fb34,260073356,0,0x0,8
tick,0x7ff8da10fb34,260088544,0,0x0,8
tick,0x7ff8da10fb34,260103189,0,0x0,8
tick,0x7ff8da10fb34,260119060,0,0x0,8
tick,0x7ff8da10fb34,260135300,0,0x0,8
tick,0x7ff8da10fb34,260150387,0,0x0,8
tick,0x7ff8da10fb34,260165018,0,0x0,8
tick,0x7ff8da10fb34,260180092,0,0x0,8
tick,0x7ff8da10fb34,260196108,0,0x0,8
tick,0x7ff8da10fb34,260211070,0,0x0,8
tick,0x7ff8da10fb34,260226886,0,0x0,8
tick,0x7ff8da10fb34,260242593,0,0x0,8
tick,0x7ff8da10fb34,260258020,0,0x0,8
tick,0x7ff8da10fb34,260274148,0,0x0,8
tick,0x7ff8da10fb34,260289613,0,0x0,8
tick,0x7ff8da10fb34,260305181,0,0x0,8
tick,0x7ff8da10fb34,260320503,0,0x0,8
tick,0x7ff8da10fb34,260337234,0,0x0,8
tick,0x7ff8da10fb34,260351516,0,0x0,8
tick,0x7ff8da10fb34,260366948,0,0x0,8
tick,0x7ff8da10fb34,260383160,0,0x0,8
tick,0x7ff8da10fb34,260398564,0,0x0,8
tick,0x7ff8da10fb34,260414230,0,0x0,8
tick,0x7ff8da10fb34,260429981,0,0x0,8
tick,0x7ff8da10fb34,260446285,0,0x0,8
tick,0x7ff8da10fb34,260462069,0,0x0,8
tick,0x7ff8da10fb34,260478160,0,0x0,8
tick,0x7ff8da10fb34,260493578,0,0x0,8
tick,0x7ff8da10fb34,260509146,0,0x0,8
tick,0x7ff8da10fb34,260524306,0,0x0,8
tick,0x7ff8da10fb34,260542325,0,0x0,8
tick,0x7ff8da10fb34,260555010,0,0x0,8
tick,0x7ff8da10fb34,260570237,0,0x0,8
tick,0x7ff8da10fb34,260585203,0,0x0,8
tick,0x7ff8da10fb34,260601168,0,0x0,8
tick,0x7ff8da10fb34,260616217,0,0x0,8
tick,0x7ff8da10fb34,260631226,0,0x0,8
tick,0x7ff8da10fb34,260646688,0,0x0,8
tick,0x7ff8da10fb34,260662092,0,0x0,8
tick,0x7ff8da10fb34,260677010,0,0x0,8
tick,0x7ff8da10fb34,260691940,0,0x0,8
tick,0x7ff8da10fb34,260707966,0,0x0,8
tick,0x7ff8da10fb34,260724417,0,0x0,8
tick,0x7ff8da10fb34,260739990,0,0x0,8
tick,0x7ff8da10fb34,260756176,0,0x0,8
tick,0x7ff8da10fb34,260771434,0,0x0,8
tick,0x7ff8da10fb34,260785899,0,0x0,8
tick,0x7ff8da10fb34,260802474,0,0x0,8
tick,0x7ff8da10fb34,260818121,0,0x0,8
tick,0x7ff8da10fb34,260834228,0,0x0,8
tick,0x7ff8da10fb34,260850130,0,0x0,8
tick,0x7ff8da10fb34,260865924,0,0x0,8
tick,0x7ff8da10fb34,260881731,0,0x0,8
tick,0x7ff8da10fb34,260896825,0,0x0,8
tick,0x7ff8da10fb34,260912055,0,0x0,8
tick,0x7ff8da10fb34,260927427,0,0x0,8
tick,0x7ff8da10fb34,260942640,0,0x0,8
tick,0x7ff8da10fb34,260958054,0,0x0,8
tick,0x7ff8da10fb34,260973745,0,0x0,8
tick,0x7ff8da10fb34,260990685,0,0x0,8
tick,0x7ff8da10fb34,261005605,0,0x0,8
tick,0x7ff8da10fb34,261020172,0,0x0,8
tick,0x7ff8da10fb34,261036039,0,0x0,8
tick,0x7ff8da10fb34,261052264,0,0x0,8
tick,0x7ff8da10fb34,261068001,0,0x0,8
tick,0x7ff8da10fb34,261083177,0,0x0,8
tick,0x7ff8da10fb34,261098409,0,0x0,8
tick,0x7ff8da10fb34,261114322,0,0x0,8
tick,0x7ff8da10fb34,261130074,0,0x0,8
tick,0x7ff8da10fb34,261146522,0,0x0,8
tick,0x7ff8da10fb34,261162038,0,0x0,8
tick,0x7ff8da10fb34,261177928,0,0x0,8
tick,0x7ff8da10fb34,261193171,0,0x0,8
tick,0x7ff8da10fb34,261208967,0,0x0,8
tick,0x7ff8da10fb34,261224683,0,0x0,8
tick,0x7ff8da10fb34,261240032,0,0x0,8
tick,0x7ff8da10fb34,261255950,0,0x0,8
tick,0x7ff8da10fb34,261270683,0,0x0,8
tick,0x7ff8da10fb34,261286156,0,0x0,8
tick,0x7ff8da10fb34,261301680,0,0x0,8
tick,0x7ff8da10fb34,261317497,0,0x0,8
tick,0x7ff8da10fb34,261333248,0,0x0,8
tick,0x7ff8da10fb34,261349186,0,0x0,8
tick,0x7ff8da10fb34,261364782,0,0x0,8
tick,0x7ff8da10fb34,261380347,0,0x0,8
tick,0x7ff8da10fb34,261395533,0,0x0,8
tick,0x7ff8da10fb34,261410495,0,0x0,8
tick,0x7ff8da10fb34,261426360,0,0x0,8
tick,0x7ff8da10fb34,261441166,0,0x0,8
tick,0x7ff8da10fb34,261457160,0,0x0,8
tick,0x7ff8da10fb34,261472933,0,0x0,8
tick,0x7ff8da10fb34,261489148,0,0x0,8
tick,0x7ff8da10fb34,261505390,0,0x0,8
tick,0x7ff8da10fb34,261521304,0,0x0,8
tick,0x7ff8da10fb34,261537567,0,0x0,8
tick,0x7ff8da10fb34,261552517,0,0x0,8
tick,0x7ff8da10fb34,261568260,0,0x0,8
tick,0x7ff8da10fb34,261583176,0,0x0,8
tick,0x7ff8da10fb34,261598293,0,0x0,8
tick,0x7ff8da10fb34,261613026,0,0x0,8
tick,0x7ff8da10fb34,261627848,0,0x0,8
tick,0x7ff8da10fb34,261643153,0,0x0,8
tick,0x7ff8da10fb34,261658867,0,0x0,8
tick,0x7ff8da10fb34,261674781,0,0x0,8
tick,0x7ff8da10fb34,261690126,0,0x0,8
tick,0x7ff8da10fb34,261707073,0,0x0,8
tick,0x7ff8da10fb34,261721074,0,0x0,8
tick,0x7ff8da10fb34,261737297,0,0x0,8
tick,0x7ff8da10fb34,261752242,0,0x0,8
tick,0x7ff8da10fb34,261767547,0,0x0,8
tick,0x7ff8da10fb34,261782128,0,0x0,8
tick,0x7ff8da10fb34,261797076,0,0x0,8
tick,0x7ff8da10fb34,261811841,0,0x0,8
tick,0x7ff8da10fb34,261827785,0,0x0,8
tick,0x7ff8da10fb34,261843126,0,0x0,8
tick,0x7ff8da10fb34,261857815,0,0x0,8
tick,0x7ff8da10fb34,261873531,0,0x0,8
tick,0x7ff8da10fb34,261888722,0,0x0,8
tick,0x7ff8da10fb34,261904452,0,0x0,8
tick,0x7ff8da10fb34,261919441,0,0x0,8
tick,0x7ff8da10fb34,261935221,0,0x0,8
tick,0x7ff8da10fb34,261951098,0,0x0,8
tick,0x7ff8da10fb34,261967208,0,0x0,8
tick,0x7ff8da10fb34,261983339,0,0x0,8
tick,0x7ff8da10fb34,261999014,0,0x0,8
tick,0x7ff8da10fb34,262014273,0,0x0,8
tick,0x7ff8da10fb34,262029699,0,0x0,8
tick,0x7ff8da10fb34,262044541,0,0x0,8
tick,0x7ff8da10fb34,262060079,0,0x0,8
tick,0x7ff8da10fb34,262076672,0,0x0,8
tick,0x7ff8da10fb34,262092074,0,0x0,8
tick,0x7ff8da10fb34,262108282,0,0x0,8
tick,0x7ff8da10fb34,262124152,0,0x0,8
tick,0x7ff8da10fb34,262140192,0,0x0,8
tick,0x7ff8da10fb34,262156582,0,0x0,8
tick,0x7ff8da10fb34,262171701,0,0x0,8
tick,0x7ff8da10fb34,262187492,0,0x0,8
tick,0x7ff8da10fb34,262202308,0,0x0,8
tick,0x7ff8da10fb34,262218561,0,0x0,8
tick,0x7ff8da10fb34,262232774,0,0x0,8
tick,0x7ff8da10fb34,262247314,0,0x0,8
tick,0x7ff8da10fb34,262263214,0,0x0,8
tick,0x7ff8da10fb34,262278321,0,0x0,8
tick,0x7ff8da10fb34,262293229,0,0x0,8
tick,0x7ff8da10fb34,262308425,0,0x0,8
tick,0x7ff8da10fb34,262323975,0,0x0,8
tick,0x7ff8da10fb34,262339146,0,0x0,8
tick,0x7ff8da10fb34,262357811,0,0x0,8
tick,0x7ff8da10fb34,262370885,0,0x0,8
tick,0x7ff8da10fb34,262387881,0,0x0,8
tick,0x7ff8da10fb34,262401842,0,0x0,8
tick,0x7ff8da10fb34,262417910,0,0x0,8
tick,0x7ff8da10fb34,262432966,0,0x0,8
tick,0x7ff8da10fb34,262448017,0,0x0,8
tick,0x7ff8da10fb34,262463947,0,0x0,8
tick,0x7ff8da10fb34,262479497,0,0x0,8
tick,0x7ff8da10fb34,262494636,0,0x0,8
tick,0x7ff8da10fb34,262510365,0,0x0,8
tick,0x7ff8da10fb34,262526016,0,0x0,8
tick,0x7ff8da10fb34,262541709,0,0x0,8
tick,0x7ff8da10fb34,262557599,0,0x0,8
tick,0x7ff8da10fb34,262572368,0,0x0,8
tick,0x7ff8da10fb34,262587479,0,0x0,8
tick,0x7ff8da10fb34,262602655,0,0x0,8
tick,0x7ff8da10fb34,262618079,0,0x0,8
tick,0x7ff8da10fb34,262634110,0,0x0,8
tick,0x7ff8da10fb34,262649418,0,0x0,8
tick,0x7ff8da10fb34,262664990,0,0x0,8
tick,0x7ff8da10fb34,262679963,0,0x0,8
tick,0x7ff8da10fb34,262696103,0,0x0,8
tick,0x7ff8da10fb34,262712086,0,0x0,8
tick,0x7ff8da10fb34,262726875,0,0x0,8
tick,0x7ff8da10fb34,262742036,0,0x0,8
tick,0x7ff8da10fb34,262757507,0,0x0,8
tick,0x7ff8da10fb34,262773050,0,0x0,8
tick,0x7ff8da10fb34,262787925,0,0x0,8
tick,0x7ff8da10fb34,262802638,0,0x0,8
tick,0x7ff8da10fb34,262818452,0,0x0,8
tick,0x7ff8da10fb34,262834118,0,0x0,8
tick,0x7ff8da10fb34,262849325,0,0x0,8
tick,0x7ff8da10fb34,262865010,0,0x0,8
tick,0x7ff8da10fb34,262880022,0,0x0,8
tick,0x7ff8da10fb34,262896696,0,0x0,8
tick,0x7ff8da10fb34,262911950,0,0x0,8
tick,0x7ff8da10fb34,262927862,0,0x0,8
tick,0x7ff8da10fb34,262943051,0,0x0,8
tick,0x7ff8da10fb34,262961038,0,0x0,8
tick,0x7ff8da10fb34,262973063,0,0x0,8
tick,0x7ff8da10fb34,262988014,0,0x0,8
tick,0x7ff8da10fb34,263003906,0,0x0,8
tick,0x7ff8da10fb34,263019583,0,0x0,8
tick,0x7ff8da10fb34,263035427,0,0x0,8
tick,0x7ff8da10fb34,263051311,0,0x0,8
tick,0x7ff8da10fb34,263067389,0,0x0,8
tick,0x7ff8da10fb34,263083149,0,0x0,8
tick,0x7ff8da10fb34,263099151,0,0x0,8
tick,0x7ff8da10fb34,263114966,0,0x0,8
tick,0x7ff8da10fb34,263130995,0,0x0,8
tick,0x7ff8da10fb34,263145928,0,0x0,8
tick,0x7ff8da10fb34,263161290,0,0x0,8
tick,0x7ff8da10fb34,263176682,0,0x0,8
tick,0x7ff8da10fb34,263192596,0,0x0,8
tick,0x7ff8da10fb34,263208182,0,0x0,8
tick,0x7ff8da10fb34,263224090,0,0x0,8
tick,0x7ff8da10fb34,263239795,0,0x0,8
tick,0x7ff8da10fb34,263255102,0,0x0,8
tick,0x7ff8da10fb34,263270423,0,0x0,8
tick,0x7ff8da10fb34,263286025,0,0x0,8
tick,0x7ff8da10fb34,263301412,0,0x0,8
tick,0x7ff8da10fb34,263317052,0,0x0,8
tick,0x7ff8da10fb34,263332086,0,0x0,8
tick,0x7ff8da10fb34,263347691,0,0x0,8
tick,0x7ff8da10fb34,263363132,0,0x0,8
tick,0x7ff8da10fb34,263378153,0,0x0,8
tick,0x7ff8da10fb34,263393263,0,0x0,8
tick,0x7ff8da10fb34,263408950,0,0x0,8
tick,0x7ff8da10fb34,263424515,0,0x0,8
tick,0x7ff8da10fb34,263440281,0,0x0,8
tick,0x7ff8da10fb34,263456874,0,0x0,8
tick,0x7ff8da10fb34,263472320,0,0x0,8
tick,0x7ff8da10fb34,263487399,0,0x0,8
tick,0x7ff8da10fb34,263502101,0,0x0,8
tick,0x7ff8da10fb34,263517107,0,0x0,8
tick,0x7ff8da10fb34,263532979,0,0x0,8
tick,0x7ff8da10fb34,263549000,0,0x0,8
tick,0x7ff8da10fb34,263565102,0,0x0,8
tick,0x7ff8da10fb34,263580922,0,0x0,8
tick,0x7ff8da10fb34,263596866,0,0x0,8
tick,0x7ff8da10fb34,263612847,0,0x0,8
tick,0x7ff8da10fb34,263628875,0,0x0,8
tick,0x7ff8da10fb34,263643831,0,0x0,8
tick,0x7ff8da10fb34,263658780,0,0x0,8
tick,0x7ff8da10fb34,263673823,0,0x0,8
tick,0x7ff8da10fb34,263688820,0,0x0,8
tick,0x7ff8da10fb34,263704802,0,0x0,8
tick,0x7ff8da10fb34,263720834,0,0x0,8
tick,0x7ff8da10fb34,263736812,0,0x0,8
tick,0x7ff8da10fb34,263752923,0,0x0,8
tick,0x7ff8da10fb34,263768767,0,0x0,8
tick,0x7ff8da10fb34,263784791,0,0x0,8
tick,0x7ff8da10fb34,263800757,0,0x0,8
tick,0x7ff8da10fb34,263816765,0,0x0,8
tick,0x7ff8da10fb34,263832789,0,0x0,8
tick,0x7ff8da10fb34,263848757,0,0x0,8
tick,0x7ff8da10fb34,263864763,0,0x0,8
tick,0x7ff8da10fb34,263880812,0,0x0,8
tick,0x7ff8da10fb34,263897124,0,0x0,8
tick,0x7ff8da10fb34,263912176,0,0x0,8
tick,0x7ff8da10fb34,263928052,0,0x0,8
tick,0x7ff8da10fb34,263944028,0,0x0,8
tick,0x7ff8da10fb34,263959932,0,0x0,8
tick,0x7ff8da10fb34,263975848,0,0x0,8
tick,0x7ff8da10fb34,263990750,0,0x0,8
tick,0x7ff8da10fb34,264006299,0,0x0,8
tick,0x7ff8da10fb34,264022183,0,0x0,8
tick,0x7ff8da10fb34,264038278,0,0x0,8
tick,0x7ff8da10fb34,264054183,0,0x0,8
tick,0x7ff8da10fb34,264069578,0,0x0,8
tick,0x7ff8da10fb34,264084548,0,0x0,8
tick,0x7ff8da10fb34,264100076,0,0x0,8
tick,0x7ff8da10fb34,264116005,0,0x0,8
tick,0x7ff8da10fb34,264131458,0,0x0,8
tick,0x7ff8da10fb34,264147251,0,0x0,8
tick,0x7ff8da10fb34,264162169,0,0x0,8
tick,0x7ff8da10fb34,264177868,0,0x0,8
tick,0x7ff8da10fb34,264193072,0,0x0,8
tick,0x7ff8da10fb34,264208414,0,0x0,8
tick,0x7ff8da10fb34,264224268,0,0x0,8
tick,0x7ff8da10fb34,264239991,0,0x0,8
tick,0x7ff8da10fb34,264255571,0,0x0,8
tick,0x7ff8da10fb34,264271225,0,0x0,8
tick,0x7ff8da10fb34,264286150,0,0x0,8
tick,0x7ff8da10fb34,264301006,0,0x0,8
tick,0x7ff8da10fb34,264316541,0,0x0,8
tick,0x7ff8da10fb34,264332506,0,0x0,8
tick,0x7ff8da10fb34,264348061,0,0x0,8
tick,0x7ff8da10fb34,264364100,0,0x0,8
tick,0x7ff8da10fb34,264379573,0,0x0,8
tick,0x7ff8da10fb34,264394764,0,0x0,8
tick,0x7ff8da10fb34,264410022,0,0x0,8
tick,0x7ff8da10fb34,264426043,0,0x0,8
tick,0x7ff8da10fb34,264441735,0,0x0,8
tick,0x7ff8da10fb34,264457140,0,0x0,8
tick,0x7ff8da10fb34,264473175,0,0x0,8
tick,0x7ff8da10fb34,264488817,0,0x0,8
tick,0x7ff8da10fb34,264503863,0,0x0,8
tick,0x7ff8da10fb34,264518640,0,0x0,8
tick,0x7ff8da10fb34,264534252,0,0x0,8
tick,0x7ff8da10fb34,264549488,0,0x0,8
tick,0x7ff8da10fb34,264564473,0,0x0,8
tick,0x7ff8da10fb34,264580165,0,0x0,8
tick,0x7ff8da10fb34,264596720,0,0x0,8
tick,0x7ff8da10fb34,264611905,0,0x0,8
tick,0x7ff8da10fb34,264627516,0,0x0,8
tick,0x7ff8da10fb34,264641885,0,0x0,8
tick,0x7ff8da10fb34,264657873,0,0x0,8
tick,0x7ff8da10fb34,264673675,0,0x0,8
tick,0x7ff8da10fb34,264688887,0,0x0,8
tick,0x7ff8da10fb34,264704916,0,0x0,8
tick,0x7ff8da10fb34,264720060,0,0x0,8
tick,0x7ff8da10fb34,264736106,0,0x0,8
tick,0x7ff8da10fb34,264751904,0,0x0,8
tick,0x7ff8da10fb34,264768151,0,0x0,8
tick,0x7ff8da10fb34,264784076,0,0x0,8
tick,0x7ff8da10fb34,264799540,0,0x0,8
tick,0x7ff8da10fb34,264814989,0,0x0,8
tick,0x7ff8da10fb34,264830075,0,0x0,8
tick,0x7ff8da10fb34,264846039,0,0x0,8
tick,0x7ff8da10fb34,264862108,0,0x0,8
tick,0x7ff8da10fb34,264878361,0,0x0,8
tick,0x7ff8da10fb34,264893722,0,0x0,8
tick,0x7ff8da10fb34,264909050,0,0x0,8
tick,0x7ff8da10fb34,264924810,0,0x0,8
tick,0x7ff8da10fb34,264940038,0,0x0,8
tick,0x7ff8da10fb34,264955435,0,0x0,8
tick,0x7ff8da10fb34,264971137,0,0x0,8
tick,0x7ff8da10fb34,264986965,0,0x0,8
tick,0x7ff8da10fb34,265002591,0,0x0,8
tick,0x7ff8da10fb34,265017878,0,0x0,8
tick,0x7ff8da10fb34,265033111,0,0x0,8
tick,0x7ff8da10fb34,265048373,0,0x0,8
tick,0x7ff8da10fb34,265064035,0,0x0,8
tick,0x7ff8da10fb34,265079524,0,0x0,8
tick,0x7ff8da10fb34,265094614,0,0x0,8
tick,0x7ff8da10fb34,265109656,0,0x0,8
tick,0x7ff8da10fb34,265125016,0,0x0,8
tick,0x7ff8da10fb34,265140437,0,0x0,8
tick,0x7ff8da10fb34,265156312,0,0x0,8
tick,0x7ff8da10fb34,265172162,0,0x0,8
tick,0x7ff8da10fb34,265187902,0,0x0,8
tick,0x7ff8da10fb34,265203821,0,0x0,8
tick,0x7ff8da10fb34,265220214,0,0x0,8
tick,0x7ff8da10fb34,265234944,0,0x0,8
tick,0x7ff8da10fb34,265250061,0,0x0,8
tick,0x7ff8da10fb34,265266048,0,0x0,8
tick,0x7ff8da10fb34,265282039,0,0x0,8
tick,0x7ff8da10fb34,265297443,0,0x0,8
tick,0x7ff8da10fb34,265312495,0,0x0,8
tick,0x7ff8da10fb34,265328102,0,0x0,8
tick,0x7ff8da10fb34,265343394,0,0x0,8
tick,0x7ff8da10fb34,265358530,0,0x0,8
tick,0x7ff8da10fb34,265373917,0,0x0,8
tick,0x7ff8da10fb34,265389559,0,0x0,8
tick,0x7ff8da10fb34,265405173,0,0x0,8
tick,0x7ff8da10fb34,265420862,0,0x0,8
tick,0x7ff8da10fb34,265436199,0,0x0,8
tick,0x7ff8da10fb34,265451346,0,0x0,8
tick,0x7ff8da10fb34,265466405,0,0x0,8
tick,0x7ff8da10fb34,265482056,0,0x0,8
tick,0x7ff8da10fb34,265498253,0,0x0,8
tick,0x7ff8da10fb34,265514151,0,0x0,8
tick,0x7ff8da10fb34,265529143,0,0x0,8
tick,0x7ff8da10fb34,265544044,0,0x0,8
tick,0x7ff8da10fb34,265560008,0,0x0,8
tick,0x7ff8da10fb34,265576072,0,0x0,8
tick,0x7ff8da10fb34,265591989,0,0x0,8
tick,0x7ff8da10fb34,265608094,0,0x0,8
tick,0x7ff8da10fb34,265624001,0,0x0,8
tick,0x7ff8da10fb34,265639225,0,0x0,8
tick,0x7ff8da10fb34,265653909,0,0x0,8
tick,0x7ff8da10fb34,265669173,0,0x0,8
tick,0x7ff8da10fb34,265685579,0,0x0,8
tick,0x7ff8da10fb34,265700335,0,0x0,8
tick,0x7ff8da10fb34,265716173,0,0x0,8
tick,0x7ff8da10fb34,265732179,0,0x0,8
tick,0x7ff8da10fb34,265747318,0,0x0,8
tick,0x7ff8da10fb34,265762927,0,0x0,8
tick,0x7ff8da10fb34,265778462,0,0x0,8
tick,0x7ff8da10fb34,265794168,0,0x0,8
tick,0x7ff8da10fb34,265809557,0,0x0,8
tick,0x7ff8da10fb34,265825023,0,0x0,8
tick,0x7ff8da10fb34,265840576,0,0x0,8
tick,0x7ff8da10fb34,265856985,0,0x0,8
tick,0x7ff8da10fb34,265871357,0,0x0,8
tick,0x7ff8da10fb34,265887006,0,0x0,8
tick,0x7ff8da10fb34,265903147,0,0x0,8
tick,0x7ff8da10fb34,265918673,0,0x0,8
tick,0x7ff8da10fb34,265934082,0,0x0,8
tick,0x7ff8da10fb34,265949362,0,0x0,8
tick,0x7ff8da10fb34,265965452,0,0x0,8
tick,0x7ff8da10fb34,265980469,0,0x0,8
tick,0x7ff8da10fb34,265996378,0,0x0,8
tick,0x7ff8da10fb34,266012238,0,0x0,8
tick,0x7ff8da10fb34,266028263,0,0x0,8
tick,0x7ff8da10fb34,266043525,0,0x0,8
tick,0x7ff8da10fb34,266059092,0,0x0,8
tick,0x7ff8da10fb34,266074323,0,0x0,8
tick,0x7ff8da10fb34,266090109,0,0x0,8
tick,0x7ff8da10fb34,266105297,0,0x0,8
tick,0x7ff8da10fb34,266120668,0,0x0,8
tick,0x7ff8da10fb34,266136083,0,0x0,8
tick,0x7ff8da10fb34,266151767,0,0x0,8
tick,0x7ff8da10fb34,266167012,0,0x0,8
tick,0x7ff8da10fb34,266182249,0,0x0,8
tick,0x7ff8da10fb34,266197412,0,0x0,8
tick,0x7ff8da10fb34,266213029,0,0x0,8
tick,0x7ff8da10fb34,266227958,0,0x0,8
tick,0x7ff8da10fb34,266243109,0,0x0,8
tick,0x7ff8da10fb34,266258357,0,0x0,8
tick,0x7ff8da10fb34,266273564,0,0x0,8
tick,0x7ff8da10fb34,266289192,0,0x0,8
tick,0x7ff8da10fb34,266305142,0,0x0,8
tick,0x7ff8da10fb34,266320494,0,0x0,8
tick,0x7ff8da10fb34,266336277,0,0x0,8
tick,0x7ff8da10fb34,266351084,0,0x0,8
tick,0x7ff8da10fb34,266366409,0,0x0,8
tick,0x7ff8da10fb34,266382140,0,0x0,8
tick,0x7ff8da10fb34,266397134,0,0x0,8
tick,0x7ff8da10fb34,266412092,0,0x0,8
tick,0x7ff8da10fb34,266427454,0,0x0,8
tick,0x7ff8da10fb34,266443158,0,0x0,8
tick,0x7ff8da10fb34,266458225,0,0x0,8
tick,0x7ff8da10fb34,266473470,0,0x0,8
tick,0x7ff8da10fb34,266489681,0,0x0,8
tick,0x7ff8da10fb34,266505102,0,0x0,8
tick,0x7ff8da10fb34,266520215,0,0x0,8
tick,0x7ff8da10fb34,266536577,0,0x0,8
tick,0x7ff8da10fb34,266551647,0,0x0,8
tick,0x7ff8da10fb34,266567032,0,0x0,8
tick,0x7ff8da10fb34,266583146,0,0x0,8
tick,0x7ff8da10fb34,266598627,0,0x0,8
tick,0x7ff8da10fb34,266614134,0,0x0,8
tick,0x7ff8da10fb34,266629190,0,0x0,8
tick,0x7ff8da10fb34,266644535,0,0x0,8
tick,0x7ff8da10fb34,266659829,0,0x0,8
tick,0x7ff8da10fb34,266675007,0,0x0,8
tick,0x7ff8da10fb34,266689993,0,0x0,8
tick,0x7ff8da10fb34,266705372,0,0x0,8
tick,0x7ff8da10fb34,266721325,0,0x0,8
tick,0x7ff8da10fb34,266737529,0,0x0,8
tick,0x7ff8da10fb34,266752544,0,0x0,8
tick,0x7ff8da10fb34,266767549,0,0x0,8
tick,0x7ff8da10fb34,266783043,0,0x0,8
tick,0x7ff8da10fb34,266798157,0,0x0,8
tick,0x7ff8da10fb34,266814221,0,0x0,8
tick,0x7ff8da10fb34,266828632,0,0x0,8
tick,0x7ff8da10fb34,266844033,0,0x0,8
tick,0x7ff8da10fb34,266859224,0,0x0,8
tick,0x7ff8da10fb34,266874217,0,0x0,8
tick,0x7ff8da10fb34,266890186,0,0x0,8
tick,0x7ff8da10fb34,266905213,0,0x0,8
tick,0x7ff8da10fb34,266921273,0,0x0,8
tick,0x7ff8da10fb34,266938036,0,0x0,8
tick,0x7ff8da10fb34,266952019,0,0x0,8
tick,0x7ff8da10fb34,266968061,0,0x0,8
tick,0x7ff8da10fb34,266983074,0,0x0,8
tick,0x7ff8da10fb34,266998930,0,0x0,8
tick,0x7ff8da10fb34,267014319,0,0x0,8
tick,0x7ff8da10fb34,267029273,0,0x0,8
tick,0x7ff8da10fb34,267044056,0,0x0,8
tick,0x7ff8da10fb34,267059798,0,0x0,8
tick,0x7ff8da10fb34,267075021,0,0x0,8
tick,0x7ff8da10fb34,267089875,0,0x0,8
tick,0x7ff8da10fb34,267105429,0,0x0,8
tick,0x7ff8da10fb34,267121086,0,0x0,8
tick,0x7ff8da10fb34,267137508,0,0x0,8
tick,0x7ff8da10fb34,267152428,0,0x0,8
tick,0x7ff8da10fb34,267168526,0,0x0,8
tick,0x7ff8da10fb34,267183945,0,0x0,8
tick,0x7ff8da10fb34,267199135,0,0x0,8
tick,0x7ff8da10fb34,267214485,0,0x0,8
tick,0x7ff8da10fb34,267229878,0,0x0,8
tick,0x7ff8da10fb34,267245058,0,0x0,8
tick,0x7ff8da10fb34,267261121,0,0x0,8
tick,0x7ff8da10fb34,267277161,0,0x0,8
tick,0x7ff8da10fb34,267291691,0,0x0,8
tick,0x7ff8da10fb34,267307458,0,0x0,8
tick,0x7ff8da10fb34,267322843,0,0x0,8
tick,0x7ff8da10fb34,267338037,0,0x0,8
tick,0x7ff8da10fb34,267353465,0,0x0,8
tick,0x7ff8da10fb34,267369058,0,0x0,8
tick,0x7ff8da10fb34,267384823,0,0x0,8
tick,0x7ff8da10fb34,267399568,0,0x0,8
tick,0x7ff8da10fb34,267415019,0,0x0,8
tick,0x7ff8da10fb34,267431113,0,0x0,8
tick,0x7ff8da10fb34,267446441,0,0x0,8
tick,0x7ff8da10fb34,267462155,0,0x0,8
tick,0x7ff8da10fb34,267477019,0,0x0,8
tick,0x7ff8da10fb34,267491977,0,0x0,8
tick,0x7ff8da10fb34,267507319,0,0x0,8
tick,0x7ff8da10fb34,267523465,0,0x0,8
tick,0x7ff8da10fb34,267538628,0,0x0,8
tick,0x7ff8da10fb34,267554529,0,0x0,8
tick,0x7ff8da10fb34,267569771,0,0x0,8
tick,0x7ff8da10fb34,267586111,0,0x0,8
tick,0x7ff8da10fb34,267601382,0,0x0,8
tick,0x7ff8da10fb34,267616496,0,0x0,8
tick,0x7ff8da10fb34,267632135,0,0x0,8
tick,0x7ff8da10fb34,267648130,0,0x0,8
tick,0x7ff8da10fb34,267664095,0,0x0,8
tick,0x7ff8da10fb34,267679557,0,0x0,8
tick,0x7ff8da10fb34,267694708,0,0x0,8
tick,0x7ff8da10fb34,267710304,0,0x0,8
tick,0x7ff8da10fb34,267726072,0,0x0,8
tick,0x7ff8da10fb34,267741337,0,0x0,8
tick,0x7ff8da10fb34,267756392,0,0x0,8
tick,0x7ff8da10fb34,267771360,0,0x0,8
tick,0x7ff8da10fb34,267787164,0,0x0,8
tick,0x7ff8da10fb34,267801217,0,0x0,8
tick,0x7ff8da10fb34,267816657,0,0x0,8
tick,0x7ff8da10fb34,267831917,0,0x0,8
tick,0x7ff8da10fb34,267847165,0,0x0,8
tick,0x7ff8da10fb34,267862921,0,0x0,8
tick,0x7ff8da10fb34,267878998,0,0x0,8
tick,0x7ff8da10fb34,267894926,0,0x0,8
tick,0x7ff8da10fb34,267911085,0,0x0,8
tick,0x7ff8da10fb34,267926879,0,0x0,8
tick,0x7ff8da10fb34,267942096,0,0x0,8
tick,0x7ff8da10fb34,267957637,0,0x0,8
tick,0x7ff8da10fb34,267973093,0,0x0,8
tick,0x7ff8da10fb34,267987992,0,0x0,8
tick,0x7ff8da10fb34,268003364,0,0x0,8
tick,0x7ff8da10fb34,268019287,0,0x0,8
tick,0x7ff8da10fb34,268035019,0,0x0,8
tick,0x7ff8da10fb34,268050927,0,0x0,8
tick,0x7ff8da10fb34,268066067,0,0x0,8
tick,0x7ff8da10fb34,268081113,0,0x0,8
tick,0x7ff8da10fb34,268096619,0,0x0,8
tick,0x7ff8da10fb34,268112323,0,0x0,8
tick,0x7ff8da10fb34,268127036,0,0x0,8
tick,0x7ff8da10fb34,268142076,0,0x0,8
tick,0x7ff8da10fb34,268157629,0,0x0,8
tick,0x7ff8da10fb34,268172485,0,0x0,8
tick,0x7ff8da10fb34,268187607,0,0x0,8
tick,0x7ff8da10fb34,268203425,0,0x0,8
tick,0x7ff8da10fb34,268218373,0,0x0,8
tick,0x7ff8da10fb34,268234054,0,0x0,8
tick,0x7ff8da10fb34,268249989,0,0x0,8
tick,0x7ff8da10fb34,268265169,0,0x0,8
tick,0x7ff8da10fb34,268281009,0,0x0,8
tick,0x7ff8da10fb34,268296029,0,0x0,8
tick,0x7ff8da10fb34,268311164,0,0x0,8
tick,0x7ff8da10fb34,268326900,0,0x0,8
tick,0x7ff8da10fb34,268342060,0,0x0,8
tick,0x7ff8da10fb34,268358118,0,0x0,8
tick,0x7ff8da10fb34,268373881,0,0x0,8
tick,0x7ff8da10fb34,268390010,0,0x0,8
tick,0x7ff8da10fb34,268406184,0,0x0,8
tick,0x7ff8da10fb34,268421881,0,0x0,8
tick,0x7ff8da10fb34,268437157,0,0x0,8
tick,0x7ff8da10fb34,268452093,0,0x0,8
tick,0x7ff8da10fb34,268467748,0,0x0,8
tick,0x7ff8da10fb34,268483115,0,0x0,8
tick,0x7ff8da10fb34,268498391,0,0x0,8
tick,0x7ff8da10fb34,268513096,0,0x0,8
tick,0x7ff8da10fb34,268529062,0,0x0,8
tick,0x7ff8da10fb34,268544086,0,0x0,8
tick,0x7ff8da10fb34,268560141,0,0x0,8
tick,0x7ff8da10fb34,268576087,0,0x0,8
tick,0x7ff8da10fb34,268592023,0,0x0,8
tick,0x7ff8da10fb34,268608081,0,0x0,8
tick,0x7ff8da10fb34,268624062,0,0x0,8
tick,0x7ff8da10fb34,268640061,0,0x0,8
tick,0x7ff8da10fb34,268655018,0,0x0,8
tick,0x7ff8da10fb34,268670065,0,0x0,8
tick,0x7ff8da10fb34,268686067,0,0x0,8
tick,0x7ff8da10fb34,268702051,0,0x0,8
tick,0x7ff8da10fb34,268718030,0,0x0,8
tick,0x7ff8da10fb34,268733995,0,0x0,8
tick,0x7ff8da10fb34,268750014,0,0x0,8
tick,0x7ff8da10fb34,268764974,0,0x0,8
tick,0x7ff8da10fb34,268779997,0,0x0,8
tick,0x7ff8da10fb34,268796067,0,0x0,8
tick,0x7ff8da10fb34,268812622,0,0x0,8
tick,0x7ff8da10fb34,268827151,0,0x0,8
tick,0x7ff8da10fb34,268842119,0,0x0,8
tick,0x7ff8da10fb34,268857951,0,0x0,8
tick,0x7ff8da10fb34,268874698,0,0x0,8
tick,0x7ff8da10fb34,268888922,0,0x0,8
tick,0x7ff8da10fb34,268904979,0,0x0,8
tick,0x7ff8da10fb34,268920018,0,0x0,8
tick,0x7ff8da10fb34,268935162,0,0x0,8
tick,0x7ff8da10fb34,268951055,0,0x0,8
tick,0x7ff8da10fb34,268966338,0,0x0,8
tick,0x7ff8da10fb34,268981831,0,0x0,8
tick,0x7ff8da10fb34,268997933,0,0x0,8
tick,0x7ff8da10fb34,269013885,0,0x0,8
tick,0x7ff8da10fb34,269029321,0,0x0,8
tick,0x7ff8da10fb34,269045019,0,0x0,8
tick,0x7ff8da10fb34,269060611,0,0x0,8
tick,0x7ff8da10fb34,269076176,0,0x0,8
tick,0x7ff8da10fb34,269091883,0,0x0,8
tick,0x7ff8da10fb34,269107062,0,0x0,8
tick,0x7ff8da10fb34,269123112,0,0x0,8
tick,0x7ff8da10fb34,269137947,0,0x0,8
tick,0x7ff8da10fb34,269153596,0,0x0,8
tick,0x7ff8da10fb34,269169782,0,0x0,8
tick,0x7ff8da10fb34,269184938,0,0x0,8
tick,0x7ff8da10fb34,269200102,0,0x0,8
tick,0x7ff8da10fb34,269216057,0,0x0,8
tick,0x7ff8da10fb34,269232040,0,0x0,8
tick,0x7ff8da10fb34,269247914,0,0x0,8
tick,0x7ff8da10fb34,269263590,0,0x0,8
tick,0x7ff8da10fb34,269278548,0,0x0,8
tick,0x7ff8da10fb34,269294585,0,0x0,8
tick,0x7ff8da10fb34,269309652,0,0x0,8
tick,0x7ff8da10fb34,269325306,0,0x0,8
tick,0x7ff8da10fb34,269341272,0,0x0,8
tick,0x7ff8da10fb34,269356348,0,0x0,8
tick,0x7ff8da10fb34,269373250,0,0x0,8
tick,0x7ff8da10fb34,269386333,0,0x0,8
tick,0x7ff8da10fb34,269402189,0,0x0,8
tick,0x7ff8da10fb34,269418859,0,0x0,8
tick,0x7ff8da10fb34,269434226,0,0x0,8
tick,0x7ff8da10fb34,269449126,0,0x0,8
tick,0x7ff8da10fb34,269464653,0,0x0,8
tick,0x7ff8da10fb34,269479879,0,0x0,8
tick,0x7ff8da10fb34,269495834,0,0x0,8
tick,0x7ff8da10fb34,269511007,0,0x0,8
tick,0x7ff8da10fb34,269526286,0,0x0,8
tick,0x7ff8da10fb34,269542051,0,0x0,8
tick,0x7ff8da10fb34,269557063,0,0x0,8
tick,0x7ff8da10fb34,269571972,0,0x0,8
tick,0x7ff8da10fb34,269587828,0,0x0,8
tick,0x7ff8da10fb34,269603450,0,0x0,8
tick,0x7ff8da10fb34,269619373,0,0x0,8
tick,0x7ff8da10fb34,269634899,0,0x0,8
tick,0x7ff8da10fb34,269649886,0,0x0,8
tick,0x7ff8da10fb34,269664954,0,0x0,8
tick,0x7ff8da10fb34,269680301,0,0x0,8
tick,0x7ff8da10fb34,269696084,0,0x0,8
tick,0x7ff8da10fb34,269711909,0,0x0,8
tick,0x7ff8da10fb34,269727099,0,0x0,8
tick,0x7ff8da10fb34,269742779,0,0x0,8
tick,0x7ff8da10fb34,269758787,0,0x0,8
tick,0x7ff8da10fb34,269773955,0,0x0,8
tick,0x7ff8da10fb34,269789267,0,0x0,8
tick,0x7ff8da10fb34,269805004,0,0x0,8
tick,0x7ff8da10fb34,269819923,0,0x0,8
tick,0x7ff8da10fb34,269834921,0,0x0,8
tick,0x7ff8da10fb34,269850490,0,0x0,8
tick,0x7ff8da10fb34,269866053,0,0x0,8
tick,0x7ff8da10fb34,269882193,0,0x0,8
tick,0x7ff8da10fb34,269897139,0,0x0,8
tick,0x7ff8da10fb34,269912194,0,0x0,8
tick,0x7ff8da10fb34,269927678,0,0x0,8
tick,0x7ff8da10fb34,269942943,0,0x0,8
tick,0x7ff8da10fb34,269958129,0,0x0,8
tick,0x7ff8da10fb34,269973420,0,0x0,8
tick,0x7ff8da10fb34,269989266,0,0x0,8
tick,0x7ff8da10fb34,270004298,0,0x0,8
tick,0x7ff8da10fb34,270019528,0,0x0,8
tick,0x7ff8da10fb34,270035509,0,0x0,8
tick,0x7ff8da10fb34,270051081,0,0x0,8
tick,0x7ff8da10fb34,270066420,0,0x0,8
tick,0x7ff8da10fb34,270082114,0,0x0,8
tick,0x7ff8da10fb34,270098115,0,0x0,8
tick,0x7ff8da10fb34,270114172,0,0x0,8
tick,0x7ff8da10fb34,270129777,0,0x0,8
tick,0x7ff8da10fb34,270145015,0,0x0,8
tick,0x7ff8da10fb34,270160320,0,0x0,8
tick,0x7ff8da10fb34,270176103,0,0x0,8
tick,0x7ff8da10fb34,270191591,0,0x0,8
tick,0x7ff8da10fb34,270207442,0,0x0,8
tick,0x7ff8da10fb34,270222482,0,0x0,8
tick,0x7ff8da10fb34,270238446,0,0x0,8
tick,0x7ff8da10fb34,270254044,0,0x0,8
tick,0x7ff8da10fb34,270269376,0,0x0,8
tick,0x7ff8da10fb34,270284430,0,0x0,8
tick,0x7ff8da10fb34,270300001,0,0x0,8
tick,0x7ff8da10fb34,270316121,0,0x0,8
tick,0x7ff8da10fb34,270331915,0,0x0,8
tick,0x7ff8da10fb34,270347799,0,0x0,8
tick,0x7ff8da10fb34,270363047,0,0x0,8
tick,0x7ff8da10fb34,270378206,0,0x0,8
tick,0x7ff8da10fb34,270394143,0,0x0,8
tick,0x7ff8da10fb34,270409873,0,0x0,8
tick,0x7ff8da10fb34,270426367,0,0x0,8
tick,0x7ff8da10fb34,270442056,0,0x0,8
tick,0x7ff8da10fb34,270457457,0,0x0,8
tick,0x7ff8da10fb34,270472785,0,0x0,8
tick,0x7ff8da10fb34,270488278,0,0x0,8
tick,0x7ff8da10fb34,270504035,0,0x0,8
tick,0x7ff8da10fb34,270519324,0,0x0,8
tick,0x7ff8da10fb34,270535325,0,0x0,8
tick,0x7ff8da10fb34,270551018,0,0x0,8
tick,0x7ff8da10fb34,270566764,0,0x0,8
tick,0x7ff8da10fb34,270582041,0,0x0,8
tick,0x7ff8da10fb34,270597887,0,0x0,8
tick,0x7ff8da10fb34,270613767,0,0x0,8
tick,0x7ff8da10fb34,270629413,0,0x0,8
tick,0x7ff8da10fb34,270645068,0,0x0,8
tick,0x7ff8da10fb34,270660055,0,0x0,8
tick,0x7ff8da10fb34,270675987,0,0x0,8
tick,0x7ff8da10fb34,270691084,0,0x0,8
tick,0x7ff8da10fb34,270707066,0,0x0,8
tick,0x7ff8da10fb34,270722362,0,0x0,8
tick,0x7ff8da10fb34,270737316,0,0x0,8
tick,0x7ff8da10fb34,270752946,0,0x0,8
tick,0x7ff8da10fb34,270768066,0,0x0,8
tick,0x7ff8da10fb34,270783702,0,0x0,8
tick,0x7ff8da10fb34,270798516,0,0x0,8
tick,0x7ff8da10fb34,270813831,0,0x0,8
tick,0x7ff8da10fb34,270829162,0,0x0,8
tick,0x7ff8da10fb34,270844339,0,0x0,8
tick,0x7ff8da10fb34,270859627,0,0x0,8
tick,0x7ff8da10fb34,270875923,0,0x0,8
tick,0x7ff8da10fb34,270891841,0,0x0,8
tick,0x7ff8da10fb34,270907154,0,0x0,8
tick,0x7ff8da10fb34,270922143,0,0x0,8
tick,0x7ff8da10fb34,270938221,0,0x0,8
tick,0x7ff8da10fb34,270952939,0,0x0,8
tick,0x7ff8da10fb34,270968460,0,0x0,8
tick,0x7ff8da10fb34,270983786,0,0x0,8
tick,0x7ff8da10fb34,270998995,0,0x0,8
tick,0x7ff8da10fb34,271014944,0,0x0,8
tick,0x7ff8da10fb34,271030496,0,0x0,8
tick,0x7ff8da10fb34,271046094,0,0x0,8
tick,0x7ff8da10fb34,271062096,0,0x0,8
tick,0x7ff8da10fb34,271077105,0,0x0,8
tick,0x7ff8da10fb34,271092127,0,0x0,8
tick,0x7ff8da10fb34,271108029,0,0x0,8
tick,0x7ff8da10fb34,271123237,0,0x0,8
tick,0x7ff8da10fb34,271138563,0,0x0,8
tick,0x7ff8da10fb34,271153718,0,0x0,8
tick,0x7ff8da10fb34,271169170,0,0x0,8
tick,0x7ff8da10fb34,271185080,0,0x0,8
tick,0x7ff8da10fb34,271200675,0,0x0,8
tick,0x7ff8da10fb34,271216336,0,0x0,8
tick,0x7ff8da10fb34,271231103,0,0x0,8
tick,0x7ff8da10fb34,271246942,0,0x0,8
tick,0x7ff8da10fb34,271262076,0,0x0,8
tick,0x7ff8da10fb34,271277075,0,0x0,8
tick,0x7ff8da10fb34,271292078,0,0x0,8
tick,0x7ff8da10fb34,271306965,0,0x0,8
tick,0x7ff8da10fb34,271322123,0,0x0,8
tick,0x7ff8da10fb34,271337513,0,0x0,8
tick,0x7ff8da10fb34,271352745,0,0x0,8
tick,0x7ff8da10fb34,271368267,0,0x0,8
tick,0x7ff8da10fb34,271383331,0,0x0,8
tick,0x7ff8da10fb34,271398910,0,0x0,8
tick,0x7ff8da10fb34,271414699,0,0x0,8
tick,0x7ff8da10fb34,271430370,0,0x0,8
tick,0x7ff8da10fb34,271446008,0,0x0,8
tick,0x7ff8da10fb34,271460945,0,0x0,8
tick,0x7ff8da10fb34,271476840,0,0x0,8
tick,0x7ff8da10fb34,271492551,0,0x0,8
tick,0x7ff8da10fb34,271507308,0,0x0,8
tick,0x7ff8da10fb34,271521804,0,0x0,8
tick,0x7ff8da10fb34,271536789,0,0x0,8
tick,0x7ff8da10fb34,271552733,0,0x0,8
tick,0x7ff8da10fb34,271568208,0,0x0,8
tick,0x7ff8da10fb34,271582898,0,0x0,8
tick,0x7ff8da10fb34,271598778,0,0x0,8
tick,0x7ff8da10fb34,271614858,0,0x0,8
tick,0x7ff8da10fb34,271630744,0,0x0,8
tick,0x7ff8da10fb34,271646729,0,0x0,8
tick,0x7ff8da10fb34,271661909,0,0x0,8
tick,0x7ff8da10fb34,271676826,0,0x0,8
tick,0x7ff8da10fb34,271692060,0,0x0,8
tick,0x7ff8da10fb34,271707766,0,0x0,8
tick,0x7ff8da10fb34,271723028,0,0x0,8
tick,0x7ff8da10fb34,271739227,0,0x0,8
tick,0x7ff8da10fb34,271754979,0,0x0,8
tick,0x7ff8da10fb34,271770843,0,0x0,8
tick,0x7ff8da10fb34,271787119,0,0x0,8
tick,0x7ff8da10fb34,271803026,0,0x0,8
tick,0x7ff8da10fb34,271819159,0,0x0,8
tick,0x7ff8da10fb34,271834837,0,0x0,8
tick,0x7ff8da10fb34,271850119,0,0x0,8
tick,0x7ff8da10fb34,271866045,0,0x0,8
tick,0x7ff8da10fb34,271881950,0,0x0,8
tick,0x7ff8da10fb34,271897487,0,0x0,8
tick,0x7ff8da10fb34,271912492,0,0x0,8
tick,0x7ff8da10fb34,271928127,0,0x0,8
tick,0x7ff8da10fb34,271944071,0,0x0,8
tick,0x7ff8da10fb34,271959288,0,0x0,8
tick,0x7ff8da10fb34,271974803,0,0x0,8
tick,0x7ff8da10fb34,271990074,0,0x0,8
tick,0x7ff8da10fb34,272006041,0,0x0,8
tick,0x7ff8da10fb34,272020791,0,0x0,8
tick,0x7ff8da10fb34,272035809,0,0x0,8
tick,0x7ff8da10fb34,272051784,0,0x0,8
tick,0x7ff8da10fb34,272068315,0,0x0,8
tick,0x7ff8da10fb34,272082768,0,0x0,8
tick,0x7ff8da10fb34,272098487,0,0x0,8
tick,0x7ff8da10fb34,272113296,0,0x0,8
tick,0x7ff8da10fb34,272128531,0,0x0,8
tick,0x7ff8da10fb34,272144275,0,0x0,8
tick,0x7ff8da10fb34,272159241,0,0x0,8
tick,0x7ff8da10fb34,272174237,0,0x0,8
tick,0x7ff8da10fb34,272189258,0,0x0,8
tick,0x7ff8da10fb34,272204207,0,0x0,8
tick,0x7ff8da10fb34,272220390,0,0x0,8
tick,0x7ff8da10fb34,272235202,0,0x0,8
tick,0x7ff8da10fb34,272250700,0,0x0,8
tick,0x7ff8da10fb34,272266336,0,0x0,8
tick,0x7ff8da10fb34,272281073,0,0x0,8
tick,0x7ff8da10fb34,272296981,0,0x0,8
tick,0x7ff8da10fb34,272312958,0,0x0,8
tick,0x7ff8da10fb34,272328778,0,0x0,8
tick,0x7ff8da10fb34,272344363,0,0x0,8
tick,0x7ff8da10fb34,272359825,0,0x0,8
tick,0x7ff8da10fb34,272374841,0,0x0,8
tick,0x7ff8da10fb34,272390317,0,0x0,8
tick,0x7ff8da10fb34,272405977,0,0x0,8
tick,0x7ff8da10fb34,272421314,0,0x0,8
tick,0x7ff8da10fb34,272436619,0,0x0,8
tick,0x7ff8da10fb34,272452250,0,0x0,8
tick,0x7ff8da10fb34,272467989,0,0x0,8
tick,0x7ff8da10fb34,272483517,0,0x0,8
tick,0x7ff8da10fb34,272499833,0,0x0,8
tick,0x7ff8da10fb34,272516422,0,0x0,8
tick,0x7ff8da10fb34,272531630,0,0x0,8
tick,0x7ff8da10fb34,272547778,0,0x0,8
tick,0x7ff8da10fb34,272563687,0,0x0,8
tick,0x7ff8da10fb34,272579578,0,0x0,8
tick,0x7ff8da10fb34,272595921,0,0x0,8
tick,0x7ff8da10fb34,272611396,0,0x0,8
tick,0x7ff8da10fb34,272627586,0,0x0,8
tick,0x7ff8da10fb34,272642424,0,0x0,8
tick,0x7ff8da10fb34,272658640,0,0x0,8
tick,0x7ff8da10fb34,272673396,0,0x0,8
tick,0x7ff8da10fb34,272689441,0,0x0,8
tick,0x7ff8da10fb34,272704398,0,0x0,8
tick,0x7ff8da10fb34,272719379,0,0x0,8
tick,0x7ff8da10fb34,272734499,0,0x0,8
tick,0x7ff8da10fb34,272749918,0,0x0,8
tick,0x7ff8da10fb34,272765611,0,0x0,8
tick,0x7ff8da10fb34,272780858,0,0x0,8
tick,0x7ff8da10fb34,272796707,0,0x0,8
tick,0x7ff8da10fb34,272812295,0,0x0,8
tick,0x7ff8da10fb34,272828066,0,0x0,8
tick,0x7ff8da10fb34,272844095,0,0x0,8
tick,0x7ff8da10fb34,272859007,0,0x0,8
tick,0x7ff8da10fb34,272874185,0,0x0,8
tick,0x7ff8da10fb34,272890166,0,0x0,8
tick,0x7ff8da10fb34,272904844,0,0x0,8
tick,0x7ff8da10fb34,272920780,0,0x0,8
tick,0x7ff8da10fb34,272935506,0,0x0,8
tick,0x7ff8da10fb34,272950507,0,0x0,8
tick,0x7ff8da10fb34,272966556,0,0x0,8
tick,0x7ff8da10fb34,272981903,0,0x0,8
tick,0x7ff8da10fb34,272996589,0,0x0,8
tick,0x7ff8da10fb34,273011507,0,0x0,8
tick,0x7ff8da10fb34,273026558,0,0x0,8
tick,0x7ff8da10fb34,273042452,0,0x0,8
tick,0x7ff8da10fb34,273058425,0,0x0,8
tick,0x7ff8da10fb34,273073748,0,0x0,8
tick,0x7ff8da10fb34,273088439,0,0x0,8
tick,0x7ff8da10fb34,273104390,0,0x0,8
tick,0x7ff8da10fb34,273122325,0,0x0,8
tick,0x7ff8da10fb34,273134636,0,0x0,8
tick,0x7ff8da10fb34,273150420,0,0x0,8
tick,0x7ff8da10fb34,273165640,0,0x0,8
tick,0x7ff8da10fb34,273181365,0,0x0,8
tick,0x7ff8da10fb34,273196482,0,0x0,8
tick,0x7ff8da10fb34,273219440,0,0x0,8
tick,0x7ff8da10fb34,273228439,0,0x0,8
tick,0x7ff8da10fb34,273243824,0,0x0,8
tick,0x7ff8da10fb34,273259316,0,0x0,8
tick,0x7ff8da10fb34,273274356,0,0x0,8
tick,0x7ff8da10fb34,273289840,0,0x0,8
tick,0x7ff8da10fb34,273306379,0,0x0,8
tick,0x7ff8da10fb34,273320972,0,0x0,8
tick,0x7ff8da10fb34,273336021,0,0x0,8
tick,0x7ff8da10fb34,273351846,0,0x0,8
tick,0x7ff8da10fb34,273367972,0,0x0,8
tick,0x7ff8da10fb34,273383797,0,0x0,8
tick,0x7ff8da10fb34,273400134,0,0x0,8
tick,0x7ff8da10fb34,273416966,0,0x0,8
tick,0x7ff8da10fb34,273432114,0,0x0,8
tick,0x7ff8da10fb34,273446782,0,0x0,8
tick,0x7ff8da10fb34,273461975,0,0x0,8
tick,0x7ff8da10fb34,273477756,0,0x0,8
tick,0x7ff8da10fb34,273492828,0,0x0,8
tick,0x7ff8da10fb34,273507858,0,0x0,8
tick,0x7ff8da10fb34,273522995,0,0x0,8
tick,0x7ff8da10fb34,273539243,0,0x0,8
tick,0x7ff8da10fb34,273553743,0,0x0,8
tick,0x7ff8da10fb34,273569053,0,0x0,8
tick,0x7ff8da10fb34,273583920,0,0x0,8
tick,0x7ff8da10fb34,273598897,0,0x0,8
tick,0x7ff8da10fb34,273614739,0,0x0,8
tick,0x7ff8da10fb34,273630722,0,0x0,8
tick,0x7ff8da10fb34,273646776,0,0x0,8
tick,0x7ff8da10fb34,273662714,0,0x0,8
tick,0x7ff8da10fb34,273677712,0,0x0,8
tick,0x7ff8da10fb34,273692675,0,0x0,8
tick,0x7ff8da10fb34,273707700,0,0x0,8
tick,0x7ff8da10fb34,273722680,0,0x0,8
tick,0x7ff8da10fb34,273738713,0,0x0,8
tick,0x7ff8da10fb34,273753782,0,0x0,8
tick,0x7ff8da10fb34,273768725,0,0x0,8
tick,0x7ff8da10fb34,273783968,0,0x0,8
tick,0x7ff8da10fb34,273798719,0,0x0,8
tick,0x7ff8da10fb34,273814812,0,0x0,8
tick,0x7ff8da10fb34,273830670,0,0x0,8
tick,0x7ff8da10fb34,273846745,0,0x0,8
tick,0x7ff8da10fb34,273862776,0,0x0,8
tick,0x7ff8da10fb34,273878646,0,0x0,8
tick,0x7ff8da10fb34,273894666,0,0x0,8
tick,0x7ff8da10fb34,273910713,0,0x0,8
tick,0x7ff8da10fb34,273926659,0,0x0,8
tick,0x7ff8da10fb34,273942688,0,0x0,8
tick,0x7ff8da10fb34,273958165,0,0x0,8
tick,0x7ff8da10fb34,273973889,0,0x0,8
tick,0x7ff8da10fb34,273989000,0,0x0,8
tick,0x7ff8da10fb34,274004920,0,0x0,8
tick,0x7ff8da10fb34,274020029,0,0x0,8
tick,0x7ff8da10fb34,274035904,0,0x0,8
tick,0x7ff8da10fb34,274050697,0,0x0,8
tick,0x7ff8da10fb34,274066028,0,0x0,8
tick,0x7ff8da10fb34,274081339,0,0x0,8
tick,0x7ff8da10fb34,274096814,0,0x0,8
tick,0x7ff8da10fb34,274112273,0,0x0,8
tick,0x7ff8da10fb34,274128258,0,0x0,8
tick,0x7ff8da10fb34,274143277,0,0x0,8
tick,0x7ff8da10fb34,274159378,0,0x0,8
tick,0x7ff8da10fb34,274174266,0,0x0,8
tick,0x7ff8da10fb34,274189114,0,0x0,8
tick,0x7ff8da10fb34,274204119,0,0x0,8
tick,0x7ff8da10fb34,274218931,0,0x0,8
tick,0x7ff8da10fb34,274235332,0,0x0,8
tick,0x7ff8da10fb34,274251062,0,0x0,8
tick,0x7ff8da10fb34,274266872,0,0x0,8
tick,0x7ff8da10fb34,274283298,0,0x0,8
tick,0x7ff8da10fb34,274299507,0,0x0,8
tick,0x7ff8da10fb34,274314958,0,0x0,8
tick,0x7ff8da10fb34,274330841,0,0x0,8
tick,0x7ff8da10fb34,274346329,0,0x0,8
tick,0x7ff8da10fb34,274362046,0,0x0,8
tick,0x7ff8da10fb34,274377943,0,0x0,8
tick,0x7ff8da10fb34,274394019,0,0x0,8
tick,0x7ff8da10fb34,274409500,0,0x0,8
tick,0x7ff8da10fb34,274424960,0,0x0,8
tick,0x7ff8da10fb34,274439894,0,0x0,8
tick,0x7ff8da10fb34,274454931,0,0x0,8
tick,0x7ff8da10fb34,274470293,0,0x0,8
tick,0x7ff8da10fb34,274485894,0,0x0,8
tick,0x7ff8da10fb34,274501402,0,0x0,8
tick,0x7ff8da10fb34,274518114,0,0x0,8
tick,0x7ff8da10fb34,274533392,0,0x0,8
tick,0x7ff8da10fb34,274549039,0,0x0,8
tick,0x7ff8da10fb34,274565530,0,0x0,8
tick,0x7ff8da10fb34,274580851,0,0x0,8
tick,0x7ff8da10fb34,274596889,0,0x0,8
tick,0x7ff8da10fb34,274612868,0,0x0,8
tick,0x7ff8da10fb34,274628428,0,0x0,8
tick,0x7ff8da10fb34,274644457,0,0x0,8
tick,0x7ff8da10fb34,274660459,0,0x0,8
tick,0x7ff8da10fb34,274676721,0,0x0,8
tick,0x7ff8da10fb34,274691381,0,0x0,8
tick,0x7ff8da10fb34,274706541,0,0x0,8
tick,0x7ff8da10fb34,274721574,0,0x0,8
tick,0x7ff8da10fb34,274736704,0,0x0,8
tick,0x7ff8da10fb34,274752654,0,0x0,8
tick,0x7ff8da10fb34,274768059,0,0x0,8
tick,0x7ff8da10fb34,274783668,0,0x0,8
tick,0x7ff8da10fb34,274798853,0,0x0,8
tick,0x7ff8da10fb34,274813746,0,0x0,8
tick,0x7ff8da10fb34,274828965,0,0x0,8
tick,0x7ff8da10fb34,274845088,0,0x0,8
tick,0x7ff8da10fb34,274860994,0,0x0,8
tick,0x7ff8da10fb34,274878049,0,0x0,8
tick,0x7ff8da10fb34,274893435,0,0x0,8
tick,0x7ff8da10fb34,274908269,0,0x0,8
tick,0x7ff8da10fb34,274923514,0,0x0,8
tick,0x7ff8da10fb34,274939018,0,0x0,8
tick,0x7ff8da10fb34,274955144,0,0x0,8
tick,0x7ff8da10fb34,274970177,0,0x0,8
tick,0x7ff8da10fb34,274985080,0,0x0,8
tick,0x7ff8da10fb34,275001063,0,0x0,8
tick,0x7ff8da10fb34,275017031,0,0x0,8
tick,0x7ff8da10fb34,275033064,0,0x0,8
tick,0x7ff8da10fb34,275049203,0,0x0,8
tick,0x7ff8da10fb34,275065093,0,0x0,8
tick,0x7ff8da10fb34,275081595,0,0x0,8
tick,0x7ff8da10fb34,275096977,0,0x0,8
tick,0x7ff8da10fb34,275111850,0,0x0,8
tick,0x7ff8da10fb34,275126876,0,0x0,8
tick,0x7ff8da10fb34,275142749,0,0x0,8
tick,0x7ff8da10fb34,275158249,0,0x0,8
tick,0x7ff8da10fb34,275173885,0,0x0,8
tick,0x7ff8da10fb34,275189576,0,0x0,8
tick,0x7ff8da10fb34,275204944,0,0x0,8
tick,0x7ff8da10fb34,275220202,0,0x0,8
tick,0x7ff8da10fb34,275235566,0,0x0,8
tick,0x7ff8da10fb34,275251419,0,0x0,8
tick,0x7ff8da10fb34,275267995,0,0x0,8
tick,0x7ff8da10fb34,275282529,0,0x0,8
tick,0x7ff8da10fb34,275297437,0,0x0,8
tick,0x7ff8da10fb34,275314175,0,0x0,8
tick,0x7ff8da10fb34,275328507,0,0x0,8
tick,0x7ff8da10fb34,275343696,0,0x0,8
tick,0x7ff8da10fb34,275358561,0,0x0,8
tick,0x7ff8da10fb34,275373734,0,0x0,8
tick,0x7ff8da10fb34,275388273,0,0x0,8
tick,0x7ff8da10fb34,275403585,0,0x0,8
tick,0x7ff8da10fb34,275419427,0,0x0,8
tick,0x7ff8da10fb34,275435379,0,0x0,8
tick,0x7ff8da10fb34,275451261,0,0x0,8
tick,0x7ff8da10fb34,275467486,0,0x0,8
tick,0x7ff8da10fb34,275482767,0,0x0,8
tick,0x7ff8da10fb34,275499522,0,0x0,8
tick,0x7ff8da10fb34,275515673,0,0x0,8
tick,0x7ff8da10fb34,275530030,0,0x0,8
tick,0x7ff8da10fb34,275544833,0,0x0,8
tick,0x7ff8da10fb34,275561222,0,0x0,8
tick,0x7ff8da10fb34,275576043,0,0x0,8
tick,0x7ff8da10fb34,275591217,0,0x0,8
tick,0x7ff8da10fb34,275607014,0,0x0,8
tick,0x7ff8da10fb34,275622070,0,0x0,8
tick,0x7ff8da10fb34,275637355,0,0x0,8
tick,0x7ff8da10fb34,275653041,0,0x0,8
tick,0x7ff8da10fb34,275667941,0,0x0,8
tick,0x7ff8da10fb34,275683396,0,0x0,8
tick,0x7ff8da10fb34,275698566,0,0x0,8
tick,0x7ff8da10fb34,275714619,0,0x0,8
tick,0x7ff8da10fb34,275730153,0,0x0,8
tick,0x7ff8da10fb34,275746935,0,0x0,8
tick,0x7ff8da10fb34,275762389,0,0x0,8
tick,0x7ff8da10fb34,275777144,0,0x0,8
tick,0x7ff8da10fb34,275792511,0,0x0,8
tick,0x7ff8da10fb34,275806998,0,0x0,8
tick,0x7ff8da10fb34,275822992,0,0x0,8
tick,0x7ff8da10fb34,275838892,0,0x0,8
tick,0x7ff8da10fb34,275854228,0,0x0,8
tick,0x7ff8da10fb34,275869986,0,0x0,8
tick,0x7ff8da10fb34,275886076,0,0x0,8
tick,0x7ff8da10fb34,275901100,0,0x0,8
tick,0x7ff8da10fb34,275915985,0,0x0,8
tick,0x7ff8da10fb34,275931179,0,0x0,8
tick,0x7ff8da10fb34,275947094,0,0x0,8
tick,0x7ff8da10fb34,275963346,0,0x0,8
tick,0x7ff8da10fb34,275978320,0,0x0,8
tick,0x7ff8da10fb34,275994178,0,0x0,8
tick,0x7ff8da10fb34,276009632,0,0x0,8
tick,0x7ff8da10fb34,276025235,0,0x0,8
tick,0x7ff8da10fb34,276040097,0,0x0,8
tick,0x7ff8da10fb34,276056394,0,0x0,8
tick,0x7ff8da10fb34,276072154,0,0x0,8
tick,0x7ff8da10fb34,276088108,0,0x0,8
tick,0x7ff8da10fb34,276103555,0,0x0,8
tick,0x7ff8da10fb34,276119193,0,0x0,8
tick,0x7ff8da10fb34,276135097,0,0x0,8
tick,0x7ff8da10fb34,276150957,0,0x0,8
tick,0x7ff8da10fb34,276167922,0,0x0,8
tick,0x7ff8da10fb34,276181734,0,0x0,8
tick,0x7ff8da10fb34,276196881,0,0x0,8
tick,0x7ff8da10fb34,276212143,0,0x0,8
tick,0x7ff8da10fb34,276227055,0,0x0,8
tick,0x7ff8da10fb34,276243432,0,0x0,8
tick,0x7ff8da10fb34,276258867,0,0x0,8
tick,0x7ff8da10fb34,276274595,0,0x0,8
tick,0x7ff8da10fb34,276289497,0,0x0,8
tick,0x7ff8da10fb34,276304972,0,0x0,8
tick,0x7ff8da10fb34,276320063,0,0x0,8
tick,0x7ff8da10fb34,276335091,0,0x0,8
tick,0x7ff8da10fb34,276351842,0,0x0,8
tick,0x7ff8da10fb34,276367401,0,0x0,8
tick,0x7ff8da10fb34,276382285,0,0x0,8
tick,0x7ff8da10fb34,276397139,0,0x0,8
tick,0x7ff8da10fb34,276412116,0,0x0,8
tick,0x7ff8da10fb34,276427399,0,0x0,8
tick,0x7ff8da10fb34,276443310,0,0x0,8
tick,0x7ff8da10fb34,276459138,0,0x0,8
tick,0x7ff8da10fb34,276475087,0,0x0,8
tick,0x7ff8da10fb34,276490778,0,0x0,8
tick,0x7ff8da10fb34,276506032,0,0x0,8
tick,0x7ff8da10fb34,276521221,0,0x0,8
tick,0x7ff8da10fb34,276536155,0,0x0,8
tick,0x7ff8da10fb34,276551557,0,0x0,8
tick,0x7ff8da10fb34,276567237,0,0x0,8
tick,0x7ff8da10fb34,276583062,0,0x0,8
tick,0x7ff8da10fb34,276598775,0,0x0,8
tick,0x7ff8da10fb34,276614522,0,0x0,8
tick,0x7ff8da10fb34,276630180,0,0x0,8
tick,0x7ff8da10fb34,276646086,0,0x0,8
tick,0x7ff8da10fb34,276661596,0,0x0,8
tick,0x7ff8da10fb34,276677122,0,0x0,8
tick,0x7ff8da10fb34,276692084,0,0x0,8
tick,0x7ff8da10fb34,276707620,0,0x0,8
tick,0x7ff8da10fb34,276723179,0,0x0,8
tick,0x7ff8da10fb34,276739092,0,0x0,8
tick,0x7ff8da10fb34,276755656,0,0x0,8
tick,0x7ff8da10fb34,276771801,0,0x0,8
tick,0x7ff8da10fb34,276788447,0,0x0,8
tick,0x7ff8da10fb34,276802428,0,0x0,8
tick,0x7ff8da10fb34,276818408,0,0x0,8
tick,0x7ff8da10fb34,276834487,0,0x0,8
tick,0x7ff8da10fb34,276850632,0,0x0,8
tick,0x7ff8da10fb34,276867471,0,0x0,8
tick,0x7ff8da10fb34,276882538,0,0x0,8
tick,0x7ff8da10fb34,276896981,0,0x0,8
tick,0x7ff8da10fb34,276912084,0,0x0,8
tick,0x7ff8da10fb34,276927888,0,0x0,8
tick,0x7ff8da10fb34,276943167,0,0x0,8
tick,0x7ff8da10fb34,276957924,0,0x0,8
tick,0x7ff8da10fb34,276973179,0,0x0,8
tick,0x7ff8da10fb34,276989144,0,0x0,8
tick,0x7ff8da10fb34,277004083,0,0x0,8
tick,0x7ff8da10fb34,277018763,0,0x0,8
tick,0x7ff8da10fb34,277034258,0,0x0,8
tick,0x7ff8da10fb34,277049869,0,0x0,8
tick,0x7ff8da10fb34,277065963,0,0x0,8
tick,0x7ff8da10fb34,277081652,0,0x0,8
tick,0x7ff8da10fb34,277096002,0,0x0,8
tick,0x7ff8da10fb34,277112138,0,0x0,8
tick,0x7ff8da10fb34,277127003,0,0x0,8
tick,0x7ff8da10fb34,277142051,0,0x0,8
tick,0x7ff8da10fb34,277157901,0,0x0,8
tick,0x7ff8da10fb34,277173292,0,0x0,8
tick,0x7ff8da10fb34,277189314,0,0x0,8
tick,0x7ff8da10fb34,277204584,0,0x0,8
tick,0x7ff8da10fb34,277219484,0,0x0,8
tick,0x7ff8da10fb34,277235346,0,0x0,8
tick,0x7ff8da10fb34,277250983,0,0x0,8
tick,0x7ff8da10fb34,277267253,0,0x0,8
tick,0x7ff8da10fb34,277282342,0,0x0,8
tick,0x7ff8da10fb34,277298395,0,0x0,8
tick,0x7ff8da10fb34,277314052,0,0x0,8
tick,0x7ff8da10fb34,277330016,0,0x0,8
tick,0x7ff8da10fb34,277346002,0,0x0,8
tick,0x7ff8da10fb34,277362078,0,0x0,8
tick,0x7ff8da10fb34,277377373,0,0x0,8
tick,0x7ff8da10fb34,277393058,0,0x0,8
tick,0x7ff8da10fb34,277408425,0,0x0,8
tick,0x7ff8da10fb34,277423194,0,0x0,8
tick,0x7ff8da10fb34,277438144,0,0x0,8
tick,0x7ff8da10fb34,277454222,0,0x0,8
tick,0x7ff8da10fb34,277469583,0,0x0,8
tick,0x7ff8da10fb34,277484431,0,0x0,8
tick,0x7ff8da10fb34,277501623,0,0x0,8
tick,0x7ff8da10fb34,277515967,0,0x0,8
tick,0x7ff8da10fb34,277532200,0,0x0,8
tick,0x7ff8da10fb34,277548780,0,0x0,8
tick,0x7ff8da10fb34,277561763,0,0x0,8
tick,0x7ff8da10fb34,277576903,0,0x0,8
tick,0x7ff8da10fb34,277592312,0,0x0,8
tick,0x7ff8da10fb34,277608460,0,0x0,8
tick,0x7ff8da10fb34,277623220,0,0x0,8
tick,0x7ff8da10fb34,277638423,0,0x0,8
tick,0x7ff8da10fb34,277653955,0,0x0,8
tick,0x7ff8da10fb34,277668875,0,0x0,8
tick,0x7ff8da10fb34,277684926,0,0x0,8
tick,0x7ff8da10fb34,277700888,0,0x0,8
tick,0x7ff8da10fb34,277717018,0,0x0,8
tick,0x7ff8da10fb34,277732879,0,0x0,8
tick,0x7ff8da10fb34,277749177,0,0x0,8
tick,0x7ff8da10fb34,277763387,0,0x0,8
tick,0x7ff8da10fb34,277778611,0,0x0,8
tick,0x7ff8da10fb34,277794314,0,0x0,8
tick,0x7ff8da10fb34,277809330,0,0x0,8
tick,0x7ff8da10fb34,277825525,0,0x0,8
tick,0x7ff8da10fb34,277840891,0,0x0,8
tick,0x7ff8da10fb34,277856041,0,0x0,8
tick,0x7ff8da10fb34,277872425,0,0x0,8
tick,0x7ff8da10fb34,277895356,0,0x0,8
tick,0x7ff8da10fb34,277903935,0,0x0,8
tick,0x7ff8da10fb34,277918999,0,0x0,8
tick,0x7ff8da10fb34,277949316,0,0x0,8
tick,0x7ff8da10fb34,277969480,0,0x0,8
tick,0x7ff8da10fb34,277984330,0,0x0,8
tick,0x7ff8da10fb34,278007881,0,0x0,8
tick,0x7ff8da10fb34,278013715,0,0x0,8
tick,0x7ff8da10fb34,278048273,0,0x0,8
tick,0x7ff8da10fb34,278058614,0,0x0,8
tick,0x7ff8da10fb34,278073847,0,0x0,8
tick,0x7ff8da10fb34,278088822,0,0x0,8
tick,0x7ff8da10fb34,278103663,0,0x0,8
tick,0x7ff8da10fb34,278119419,0,0x0,8
tick,0x7ff8da10fb34,278135059,0,0x0,8
tick,0x7ff8da10fb34,278150439,0,0x0,8
tick,0x7ff8da10fb34,278166929,0,0x0,8
tick,0x7ff8da10fb34,278183201,0,0x0,8
tick,0x7ff8da10fb34,278199771,0,0x0,8
tick,0x7ff8da10fb34,278212113,0,0x0,8
tick,0x7ff8da10fb34,278227923,0,0x0,8
tick,0x7ff8da10fb34,278243105,0,0x0,8
tick,0x7ff8da10fb34,278258444,0,0x0,8
tick,0x7ff8da10fb34,278274224,0,0x0,8
tick,0x7ff8da10fb34,278289205,0,0x0,8
tick,0x7ff8da10fb34,278305043,0,0x0,8
tick,0x7ff8da10fb34,278320336,0,0x0,8
tick,0x7ff8da10fb34,278335914,0,0x0,8
tick,0x7ff8da10fb34,278351221,0,0x0,8
tick,0x7ff8da10fb34,278367187,0,0x0,8
tick,0x7ff8da10fb34,278383038,0,0x0,8
tick,0x7ff8da10fb34,278398574,0,0x0,8
tick,0x7ff8da10fb34,278413833,0,0x0,8
tick,0x7ff8da10fb34,278428974,0,0x0,8
tick,0x7ff8da10fb34,278445077,0,0x0,8
tick,0x7ff8da10fb34,278460436,0,0x0,8
tick,0x7ff8da10fb34,278476343,0,0x0,8
tick,0x7ff8da10fb34,278491486,0,0x0,8
tick,0x7ff8da10fb34,278507080,0,0x0,8
tick,0x7ff8da10fb34,278522019,0,0x0,8
tick,0x7ff8da10fb34,278537206,0,0x0,8
tick,0x7ff8da10fb34,278553111,0,0x0,8
tick,0x7ff8da10fb34,278569069,0,0x0,8
tick,0x7ff8da10fb34,278585177,0,0x0,8
tick,0x7ff8da10fb34,278601789,0,0x0,8
tick,0x7ff8da10fb34,278617090,0,0x0,8
tick,0x7ff8da10fb34,278632954,0,0x0,8
tick,0x7ff8da10fb34,278648993,0,0x0,8
tick,0x7ff8da10fb34,278665003,0,0x0,8
tick,0x7ff8da10fb34,278681255,0,0x0,8
tick,0x7ff8da10fb34,278697129,0,0x0,8
tick,0x7ff8da10fb34,278713035,0,0x0,8
tick,0x7ff8da10fb34,278729010,0,0x0,8
tick,0x7ff8da10fb34,278744992,0,0x0,8
tick,0x7ff8da10fb34,278761351,0,0x0,8
tick,0x7ff8da10fb34,278778745,0,0x0,8
tick,0x7ff8da10fb34,278793159,0,0x0,8
tick,0x7ff8da10fb34,278808039,0,0x0,8
tick,0x7ff8da10fb34,278823055,0,0x0,8
tick,0x7ff8da10fb34,278838269,0,0x0,8
tick,0x7ff8da10fb34,278854065,0,0x0,8
tick,0x7ff8da10fb34,278870857,0,0x0,8
tick,0x7ff8da10fb34,278887276,0,0x0,8
tick,0x7ff8da10fb34,278901228,0,0x0,8
tick,0x7ff8da10fb34,278916834,0,0x0,8
tick,0x7ff8da10fb34,278931066,0,0x0,8
tick,0x7ff8da10fb34,278947450,0,0x0,8
tick,0x7ff8da10fb34,278961824,0,0x0,8
tick,0x7ff8da10fb34,278976973,0,0x0,8
tick,0x7ff8da10fb34,278993364,0,0x0,8
tick,0x7ff8da10fb34,279008099,0,0x0,8
tick,0x7ff8da10fb34,279024926,0,0x0,8
tick,0x7ff8da10fb34,279040280,0,0x0,8
tick,0x7ff8da10fb34,279055323,0,0x0,8
tick,0x7ff8da10fb34,279070896,0,0x0,8
tick,0x7ff8da10fb34,279085833,0,0x0,8
tick,0x7ff8da10fb34,279101723,0,0x0,8
tick,0x7ff8da10fb34,279117534,0,0x0,8
tick,0x7ff8da10fb34,279134157,0,0x0,8
tick,0x7ff8da10fb34,279152057,0,0x0,8
tick,0x7ff8da10fb34,279164544,0,0x0,8
tick,0x7ff8da10fb34,279178959,0,0x0,8
tick,0x7ff8da10fb34,279194500,0,0x0,8
tick,0x7ff8da10fb34,279209848,0,0x0,8
tick,0x7ff8da10fb34,279225888,0,0x0,8
tick,0x7ff8da10fb34,279241478,0,0x0,8
tick,0x7ff8da10fb34,279256853,0,0x0,8
tick,0x7ff8da10fb34,279272398,0,0x0,8
tick,0x7ff8da10fb34,279288567,0,0x0,8
tick,0x7ff8da10fb34,279304447,0,0x0,8
tick,0x7ff8da10fb34,279320781,0,0x0,8
tick,0x7ff8da10fb34,279336327,0,0x0,8
tick,0x7ff8da10fb34,279352445,0,0x0,8
tick,0x7ff8da10fb34,279367395,0,0x0,8
tick,0x7ff8da10fb34,279383306,0,0x0,8
tick,0x7ff8da10fb34,279398244,0,0x0,8
tick,0x7ff8da10fb34,279414290,0,0x0,8
tick,0x7ff8da10fb34,279429739,0,0x0,8
tick,0x7ff8da10fb34,279444189,0,0x0,8
tick,0x7ff8da10fb34,279459213,0,0x0,8
tick,0x7ff8da10fb34,279474827,0,0x0,8
tick,0x7ff8da10fb34,279490532,0,0x0,8
tick,0x7ff8da10fb34,279505888,0,0x0,8
tick,0x7ff8da10fb34,279521966,0,0x0,8
tick,0x7ff8da10fb34,279538114,0,0x0,8
tick,0x7ff8da10fb34,279554114,0,0x0,8
tick,0x7ff8da10fb34,279570096,0,0x0,8
tick,0x7ff8da10fb34,279585989,0,0x0,8
tick,0x7ff8da10fb34,279602567,0,0x0,8
tick,0x7ff8da10fb34,279618282,0,0x0,8
tick,0x7ff8da10fb34,279634153,0,0x0,8
tick,0x7ff8da10fb34,279650662,0,0x0,8
tick,0x7ff8da10fb34,279666430,0,0x0,8
tick,0x7ff8da10fb34,279682594,0,0x0,8
tick,0x7ff8da10fb34,279698238,0,0x0,8
tick,0x7ff8da10fb34,279718652,0,0x0,8
tick,0x7ff8da10fb34,279727785,0,0x0,8
tick,0x7ff8da10fb34,279743122,0,0x0,8
tick,0x7ff8da10fb34,279758521,0,0x0,8
tick,0x7ff8da10fb34,279774078,0,0x0,8
tick,0x7ff8da10fb34,279790171,0,0x0,8
tick,0x7ff8da10fb34,279806220,0,0x0,8
tick,0x7ff8da10fb34,279821154,0,0x0,8
tick,0x7ff8da10fb34,279836835,0,0x0,8
tick,0x7ff8da10fb34,279852890,0,0x0,8
tick,0x7ff8da10fb34,279868037,0,0x0,8
tick,0x7ff8da10fb34,279883987,0,0x0,8
tick,0x7ff8da10fb34,279899472,0,0x0,8
tick,0x7ff8da10fb34,279914986,0,0x0,8
tick,0x7ff8da10fb34,279930830,0,0x0,8
tick,0x7ff8da10fb34,279946997,0,0x0,8
tick,0x7ff8da10fb34,279963684,0,0x0,8
tick,0x7ff8da10fb34,279978630,0,0x0,8
tick,0x7ff8da10fb34,279993534,0,0x0,8
tick,0x7ff8da10fb34,280009506,0,0x0,8
tick,0x7ff8da10fb34,280024886,0,0x0,8
tick,0x7ff8da10fb34,280041285,0,0x0,8
tick,0x7ff8da10fb34,280057362,0,0x0,8
tick,0x7ff8da10fb34,280071621,0,0x0,8
tick,0x7ff8da10fb34,280087053,0,0x0,8
tick,0x7ff8da10fb34,280101779,0,0x0,8
tick,0x7ff8da10fb34,280117713,0,0x0,8
tick,0x7ff8da10fb34,280133082,0,0x0,8
tick,0x7ff8da10fb34,280148829,0,0x0,8
tick,0x7ff8da10fb34,280164631,0,0x0,8
tick,0x7ff8da10fb34,280179974,0,0x0,8
tick,0x7ff8da10fb34,280195971,0,0x0,8
tick,0x7ff8da10fb34,280211776,0,0x0,8
tick,0x7ff8da10fb34,280227039,0,0x0,8
tick,0x7ff8da10fb34,280242062,0,0x0,8
tick,0x7ff8da10fb34,280257372,0,0x0,8
tick,0x7ff8da10fb34,280273216,0,0x0,8
tick,0x7ff8da10fb34,280288077,0,0x0,8
tick,0x7ff8da10fb34,280302981,0,0x0,8
tick,0x7ff8da10fb34,280318655,0,0x0,8
tick,0x7ff8da10fb34,280334075,0,0x0,8
tick,0x7ff8da10fb34,280349421,0,0x0,8
tick,0x7ff8da10fb34,280365312,0,0x0,8
tick,0x7ff8da10fb34,280381387,0,0x0,8
tick,0x7ff8da10fb34,280397096,0,0x0,8
tick,0x7ff8da10fb34,280411374,0,0x0,8
tick,0x7ff8da10fb34,280426740,0,0x0,8
tick,0x7ff8da10fb34,280444265,0,0x0,8
tick,0x7ff8da10fb34,280457626,0,0x0,8
tick,0x7ff8da10fb34,280472917,0,0x0,8
tick,0x7ff8da10fb34,280487722,0,0x0,8
tick,0x7ff8da10fb34,280503164,0,0x0,8
tick,0x7ff8da10fb34,280518899,0,0x0,8
tick,0x7ff8da10fb34,280534808,0,0x0,8
tick,0x7ff8da10fb34,280550257,0,0x0,8
tick,0x7ff8da10fb34,280566449,0,0x0,8
tick,0x7ff8da10fb34,280582209,0,0x0,8
tick,0x7ff8da10fb34,280598298,0,0x0,8
tick,0x7ff8da10fb34,280614448,0,0x0,8
tick,0x7ff8da10fb34,280629771,0,0x0,8
tick,0x7ff8da10fb34,280645155,0,0x0,8
tick,0x7ff8da10fb34,280660870,0,0x0,8
tick,0x7ff8da10fb34,280676284,0,0x0,8
tick,0x7ff8da10fb34,280691350,0,0x0,8
tick,0x7ff8da10fb34,280706934,0,0x0,8
tick,0x7ff8da10fb34,280722392,0,0x0,8
tick,0x7ff8da10fb34,280737914,0,0x0,8
tick,0x7ff8da10fb34,280752998,0,0x0,8
tick,0x7ff8da10fb34,280769519,0,0x0,8
tick,0x7ff8da10fb34,280785098,0,0x0,8
tick,0x7ff8da10fb34,280800858,0,0x0,8
tick,0x7ff8da10fb34,280816967,0,0x0,8
tick,0x7ff8da10fb34,280833080,0,0x0,8
tick,0x7ff8da10fb34,280848908,0,0x0,8
tick,0x7ff8da10fb34,280864340,0,0x0,8
tick,0x7ff8da10fb34,280880768,0,0x0,8
tick,0x7ff8da10fb34,280897711,0,0x0,8
tick,0x7ff8da10fb34,280911850,0,0x0,8
tick,0x7ff8da10fb34,280926850,0,0x0,8
tick,0x7ff8da10fb34,280942180,0,0x0,8
tick,0x7ff8da10fb34,280957918,0,0x0,8
tick,0x7ff8da10fb34,280973059,0,0x0,8
tick,0x7ff8da10fb34,280989150,0,0x0,8
tick,0x7ff8da10fb34,281003989,0,0x0,8
tick,0x7ff8da10fb34,281018948,0,0x0,8
tick,0x7ff8da10fb34,281035044,0,0x0,8
tick,0x7ff8da10fb34,281050146,0,0x0,8
tick,0x7ff8da10fb34,281066561,0,0x0,8
tick,0x7ff8da10fb34,281082107,0,0x0,8
tick,0x7ff8da10fb34,281098132,0,0x0,8
tick,0x7ff8da10fb34,281114625,0,0x0,8
tick,0x7ff8da10fb34,281130573,0,0x0,8
tick,0x7ff8da10fb34,281148064,0,0x0,8
tick,0x7ff8da10fb34,281162230,0,0x0,8
tick,0x7ff8da10fb34,281177896,0,0x0,8
tick,0x7ff8da10fb34,281193939,0,0x0,8
tick,0x7ff8da10fb34,281209302,0,0x0,8
tick,0x7ff8da10fb34,281224902,0,0x0,8
tick,0x7ff8da10fb34,281239926,0,0x0,8
tick,0x7ff8da10fb34,281254893,0,0x0,8
tick,0x7ff8da10fb34,281270974,0,0x0,8
tick,0x7ff8da10fb34,281287010,0,0x0,8
tick,0x7ff8da10fb34,281301989,0,0x0,8
tick,0x7ff8da10fb34,281317510,0,0x0,8
tick,0x7ff8da10fb34,281333498,0,0x0,8
tick,0x7ff8da10fb34,281349399,0,0x0,8
tick,0x7ff8da10fb34,281365148,0,0x0,8
tick,0x7ff8da10fb34,281380709,0,0x0,8
tick,0x7ff8da10fb34,281396266,0,0x0,8
tick,0x7ff8da10fb34,281411118,0,0x0,8
tick,0x7ff8da10fb34,281427637,0,0x0,8
tick,0x7ff8da10fb34,281442124,0,0x0,8
tick,0x7ff8da10fb34,281457024,0,0x0,8
tick,0x7ff8da10fb34,281472988,0,0x0,8
tick,0x7ff8da10fb34,281488486,0,0x0,8
tick,0x7ff8da10fb34,281504511,0,0x0,8
tick,0x7ff8da10fb34,281519167,0,0x0,8
tick,0x7ff8da10fb34,281534594,0,0x0,8
tick,0x7ff8da10fb34,281550294,0,0x0,8
tick,0x7ff8da10fb34,281566085,0,0x0,8
tick,0x7ff8da10fb34,281581812,0,0x0,8
tick,0x7ff8da10fb34,281597461,0,0x0,8
tick,0x7ff8da10fb34,281612949,0,0x0,8
tick,0x7ff8da10fb34,281628640,0,0x0,8
tick,0x7ff8da10fb34,281647307,0,0x0,8
tick,0x7ff8da10fb34,281661301,0,0x0,8
tick,0x7ff8da10fb34,281677367,0,0x0,8
tick,0x7ff8da10fb34,281692026,0,0x0,8
tick,0x7ff8da10fb34,281706809,0,0x0,8
tick,0x7ff8da10fb34,281722359,0,0x0,8
tick,0x7ff8da10fb34,281737943,0,0x0,8
tick,0x7ff8da10fb34,281753126,0,0x0,8
tick,0x7ff8da10fb34,281768676,0,0x0,8
tick,0x7ff8da10fb34,281783911,0,0x0,8
tick,0x7ff8da10fb34,281799878,0,0x0,8
tick,0x7ff8da10fb34,281815968,0,0x0,8
tick,0x7ff8da10fb34,281831166,0,0x0,8
tick,0x7ff8da10fb34,281847244,0,0x0,8
tick,0x7ff8da10fb34,281863270,0,0x0,8
tick,0x7ff8da10fb34,281879642,0,0x0,8
tick,0x7ff8da10fb34,281894250,0,0x0,8
tick,0x7ff8da10fb34,281910193,0,0x0,8
tick,0x7ff8da10fb34,281925768,0,0x0,8
tick,0x7ff8da10fb34,281941889,0,0x0,8
tick,0x7ff8da10fb34,281957334,0,0x0,8
tick,0x7ff8da10fb34,281971816,0,0x0,8
tick,0x7ff8da10fb34,281987781,0,0x0,8
tick,0x7ff8da10fb34,282003529,0,0x0,8
tick,0x7ff8da10fb34,282018676,0,0x0,8
tick,0x7ff8da10fb34,282033835,0,0x0,8
tick,0x7ff8da10fb34,282049139,0,0x0,8
tick,0x7ff8da10fb34,282064779,0,0x0,8
tick,0x7ff8da10fb34,282080897,0,0x0,8
tick,0x7ff8da10fb34,282096605,0,0x0,8
tick,0x7ff8da10fb34,282112243,0,0x0,8
tick,0x7ff8da10fb34,282127205,0,0x0,8
tick,0x7ff8da10fb34,282143106,0,0x0,8
tick,0x7ff8da10fb34,282157956,0,0x0,8
tick,0x7ff8da10fb34,282172875,0,0x0,8
tick,0x7ff8da10fb34,282188269,0,0x0,8
tick,0x7ff8da10fb34,282204201,0,0x0,8
tick,0x7ff8da10fb34,282219561,0,0x0,8
tick,0x7ff8da10fb34,282234414,0,0x0,8
tick,0x7ff8da10fb34,282250103,0,0x0,8
tick,0x7ff8da10fb34,282265716,0,0x0,8
tick,0x7ff8da10fb34,282281359,0,0x0,8
tick,0x7ff8da10fb34,282297457,0,0x0,8
tick,0x7ff8da10fb34,282313579,0,0x0,8
tick,0x7ff8da10fb34,282328747,0,0x0,8
tick,0x7ff8da10fb34,282344131,0,0x0,8
tick,0x7ff8da10fb34,282359354,0,0x0,8
tick,0x7ff8da10fb34,282376050,0,0x0,8
tick,0x7ff8da10fb34,282391365,0,0x0,8
tick,0x7ff8da10fb34,282406568,0,0x0,8
tick,0x7ff8da10fb34,282421214,0,0x0,8
tick,0x7ff8da10fb34,282436657,0,0x0,8
tick,0x7ff8da10fb34,282451488,0,0x0,8
tick,0x7ff8da10fb34,282467519,0,0x0,8
tick,0x7ff8da10fb34,282483416,0,0x0,8
tick,0x7ff8da10fb34,282498454,0,0x0,8
tick,0x7ff8da10fb34,282514150,0,0x0,8
tick,0x7ff8da10fb34,282528696,0,0x0,8
tick,0x7ff8da10fb34,282542913,0,0x0,8
tick,0x7ff8da10fb34,282558532,0,0x0,8
tick,0x7ff8da10fb34,282573437,0,0x0,8
tick,0x7ff8da10fb34,282588390,0,0x0,8
tick,0x7ff8da10fb34,282603880,0,0x0,8
tick,0x7ff8da10fb34,282620231,0,0x0,8
tick,0x7ff8da10fb34,282635668,0,0x0,8
tick,0x7ff8da10fb34,282651796,0,0x0,8
tick,0x7ff8da10fb34,282667602,0,0x0,8
tick,0x7ff8da10fb34,282683833,0,0x0,8
tick,0x7ff8da10fb34,282698883,0,0x0,8
tick,0x7ff8da10fb34,282715172,0,0x0,8
tick,0x7ff8da10fb34,282730416,0,0x0,8
tick,0x7ff8da10fb34,282746641,0,0x0,8
tick,0x7ff8da10fb34,282761782,0,0x0,8
tick,0x7ff8da10fb34,282776859,0,0x0,8
tick,0x7ff8da10fb34,282792958,0,0x0,8
tick,0x7ff8da10fb34,282808235,0,0x0,8
tick,0x7ff8da10fb34,282823543,0,0x0,8
tick,0x7ff8da10fb34,282839322,0,0x0,8
tick,0x7ff8da10fb34,282854494,0,0x0,8
tick,0x7ff8da10fb34,282869618,0,0x0,8
tick,0x7ff8da10fb34,282885195,0,0x0,8
tick,0x7ff8da10fb34,282901066,0,0x0,8
tick,0x7ff8da10fb34,282917576,0,0x0,8
tick,0x7ff8da10fb34,282932745,0,0x0,8
tick,0x7ff8da10fb34,282947586,0,0x0,8
tick,0x7ff8da10fb34,282963724,0,0x0,8
tick,0x7ff8da10fb34,282979599,0,0x0,8
tick,0x7ff8da10fb34,282996169,0,0x0,8
tick,0x7ff8da10fb34,283009782,0,0x0,8
tick,0x7ff8da10fb34,283025835,0,0x0,8
tick,0x7ff8da10fb34,283040778,0,0x0,8
tick,0x7ff8da10fb34,283056847,0,0x0,8
tick,0x7ff8da10fb34,283071769,0,0x0,8
tick,0x7ff8da10fb34,283086877,0,0x0,8
tick,0x7ff8da10fb34,283102276,0,0x0,8
tick,0x7ff8da10fb34,283118729,0,0x0,8
tick,0x7ff8da10fb34,283134033,0,0x0,8
tick,0x7ff8da10fb34,283149020,0,0x0,8
tick,0x7ff8da10fb34,283164480,0,0x0,8
tick,0x7ff8da10fb34,283182255,0,0x0,8
tick,0x7ff8da10fb34,283196868,0,0x0,8
tick,0x7ff8da10fb34,283211568,0,0x0,8
tick,0x7ff8da10fb34,283226836,0,0x0,8
tick,0x7ff8da10fb34,283241881,0,0x0,8
tick,0x7ff8da10fb34,283257803,0,0x0,8
tick,0x7ff8da10fb34,283273790,0,0x0,8
tick,0x7ff8da10fb34,283288554,0,0x0,8
tick,0x7ff8da10fb34,283303979,0,0x0,8
tick,0x7ff8da10fb34,283319137,0,0x0,8
tick,0x7ff8da10fb34,283334820,0,0x0,8
tick,0x7ff8da10fb34,283350510,0,0x0,8
tick,0x7ff8da10fb34,283365560,0,0x0,8
tick,0x7ff8da10fb34,283381020,0,0x0,8
tick,0x7ff8da10fb34,283397822,0,0x0,8
tick,0x7ff8da10fb34,283413725,0,0x0,8
tick,0x7ff8da10fb34,283429502,0,0x0,8
tick,0x7ff8da10fb34,283444620,0,0x0,8
tick,0x7ff8da10fb34,283459820,0,0x0,8
tick,0x7ff8da10fb34,283476714,0,0x0,8
tick,0x7ff8da10fb34,283491824,0,0x0,8
tick,0x7ff8da10fb34,283506900,0,0x0,8
tick,0x7ff8da10fb34,283521698,0,0x0,8
tick,0x7ff8da10fb34,283536687,0,0x0,8
tick,0x7ff8da10fb34,283552165,0,0x0,8
tick,0x7ff8da10fb34,283568305,0,0x0,8
tick,0x7ff8da10fb34,283584195,0,0x0,8
tick,0x7ff8da10fb34,283600406,0,0x0,8
tick,0x7ff8da10fb34,283615215,0,0x0,8
tick,0x7ff8da10fb34,283630147,0,0x0,8
tick,0x7ff8da10fb34,283646896,0,0x0,8
tick,0x7ff8da10fb34,283662481,0,0x0,8
tick,0x7ff8da10fb34,283677187,0,0x0,8
tick,0x7ff8da10fb34,283692156,0,0x0,8
tick,0x7ff8da10fb34,283707212,0,0x0,8
tick,0x7ff8da10fb34,283723136,0,0x0,8
tick,0x7ff8da10fb34,283738213,0,0x0,8
tick,0x7ff8da10fb34,283753161,0,0x0,8
tick,0x7ff8da10fb34,283768156,0,0x0,8
tick,0x7ff8da10fb34,283783282,0,0x0,8
tick,0x7ff8da10fb34,283799149,0,0x0,8
tick,0x7ff8da10fb34,283815224,0,0x0,8
tick,0x7ff8da10fb34,283831109,0,0x0,8
tick,0x7ff8da10fb34,283847102,0,0x0,8
tick,0x7ff8da10fb34,283863265,0,0x0,8
tick,0x7ff8da10fb34,283878948,0,0x0,8
tick,0x7ff8da10fb34,283893142,0,0x0,8
tick,0x7ff8da10fb34,283908317,0,0x0,8
tick,0x7ff8da10fb34,283924119,0,0x0,8
tick,0x7ff8da10fb34,283939910,0,0x0,8
tick,0x7ff8da10fb34,283955557,0,0x0,8
tick,0x7ff8da10fb34,283970823,0,0x0,8
tick,0x7ff8da10fb34,283986509,0,0x0,8
tick,0x7ff8da10fb34,284001981,0,0x0,8
tick,0x7ff8da10fb34,284016923,0,0x0,8
tick,0x7ff8da10fb34,284032945,0,0x0,8
tick,0x7ff8da10fb34,284048652,0,0x0,8
tick,0x7ff8da10fb34,284064244,0,0x0,8
tick,0x7ff8da10fb34,284080335,0,0x0,8
tick,0x7ff8da10fb34,284096704,0,0x0,8
tick,0x7ff8da10fb34,284114523,0,0x0,8
tick,0x7ff8da10fb34,284129478,0,0x0,8
tick,0x7ff8da10fb34,284143890,0,0x0,8
tick,0x7ff8da10fb34,284158968,0,0x0,8
tick,0x7ff8da10fb34,284175024,0,0x0,8
tick,0x7ff8da10fb34,284189163,0,0x0,8
tick,0x7ff8da10fb34,284205116,0,0x0,8
tick,0x7ff8da10fb34,284220560,0,0x0,8
tick,0x7ff8da10fb34,284235904,0,0x0,8
tick,0x7ff8da10fb34,284250673,0,0x0,8
tick,0x7ff8da10fb34,284265917,0,0x0,8
tick,0x7ff8da10fb34,284281770,0,0x0,8
tick,0x7ff8da10fb34,284298230,0,0x0,8
tick,0x7ff8da10fb34,284313394,0,0x0,8
tick,0x7ff8da10fb34,284328730,0,0x0,8
tick,0x7ff8da10fb34,284343716,0,0x0,8
tick,0x7ff8da10fb34,284359582,0,0x0,8
tick,0x7ff8da10fb34,284374639,0,0x0,8
tick,0x7ff8da10fb34,284389315,0,0x0,8
tick,0x7ff8da10fb34,284404734,0,0x0,8
tick,0x7ff8da10fb34,284419944,0,0x0,8
tick,0x7ff8da10fb34,284436427,0,0x0,8
tick,0x7ff8da10fb34,284450981,0,0x0,8
tick,0x7ff8da10fb34,284466567,0,0x0,8
tick,0x7ff8da10fb34,284482160,0,0x0,8
tick,0x7ff8da10fb34,284498061,0,0x0,8
tick,0x7ff8da10fb34,284513871,0,0x0,8
tick,0x7ff8da10fb34,284529857,0,0x0,8
tick,0x7ff8da10fb34,284546027,0,0x0,8
tick,0x7ff8da10fb34,284561779,0,0x0,8
tick,0x7ff8da10fb34,284576815,0,0x0,8
tick,0x7ff8da10fb34,284591631,0,0x0,8
tick,0x7ff8da10fb34,284606820,0,0x0,8
tick,0x7ff8da10fb34,284622011,0,0x0,8
tick,0x7ff8da10fb34,284637112,0,0x0,8
tick,0x7ff8da10fb34,284653065,0,0x0,8
tick,0x7ff8da10fb34,284670174,0,0x0,8
tick,0x7ff8da10fb34,284684353,0,0x0,8
tick,0x7ff8da10fb34,284699774,0,0x0,8
tick,0x7ff8da10fb34,284715017,0,0x0,8
tick,0x7ff8da10fb34,284731891,0,0x0,8
tick,0x7ff8da10fb34,284745428,0,0x0,8
tick,0x7ff8da10fb34,284760804,0,0x0,8
tick,0x7ff8da10fb34,284776046,0,0x0,8
tick,0x7ff8da10fb34,284791069,0,0x0,8
tick,0x7ff8da10fb34,284806792,0,0x0,8
tick,0x7ff8da10fb34,284822026,0,0x0,8
tick,0x7ff8da10fb34,284836754,0,0x0,8
tick,0x7ff8da10fb34,284852099,0,0x0,8
tick,0x7ff8da10fb34,284866872,0,0x0,8
tick,0x7ff8da10fb34,284882056,0,0x0,8
tick,0x7ff8da10fb34,284897298,0,0x0,8
tick,0x7ff8da10fb34,284912359,0,0x0,8
tick,0x7ff8da10fb34,284927881,0,0x0,8
tick,0x7ff8da10fb34,284943973,0,0x0,8
tick,0x7ff8da10fb34,284959246,0,0x0,8
tick,0x7ff8da10fb34,284974833,0,0x0,8
tick,0x7ff8da10fb34,284989777,0,0x0,8
tick,0x7ff8da10fb34,285005346,0,0x0,8
tick,0x7ff8da10fb34,285021071,0,0x0,8
tick,0x7ff8da10fb34,285037757,0,0x0,8
tick,0x7ff8da10fb34,285051069,0,0x0,8
tick,0x7ff8da10fb34,285066906,0,0x0,8
tick,0x7ff8da10fb34,285082544,0,0x0,8
tick,0x7ff8da10fb34,285097922,0,0x0,8
tick,0x7ff8da10fb34,285113701,0,0x0,8
tick,0x7ff8da10fb34,285129074,0,0x0,8
tick,0x7ff8da10fb34,285145410,0,0x0,8
tick,0x7ff8da10fb34,285160721,0,0x0,8
tick,0x7ff8da10fb34,285175966,0,0x0,8
tick,0x7ff8da10fb34,285190717,0,0x0,8
tick,0x7ff8da10fb34,285205983,0,0x0,8
tick,0x7ff8da10fb34,285222559,0,0x0,8
tick,0x7ff8da10fb34,285237190,0,0x0,8
tick,0x7ff8da10fb34,285252029,0,0x0,8
tick,0x7ff8da10fb34,285267951,0,0x0,8
tick,0x7ff8da10fb34,285283368,0,0x0,8
tick,0x7ff8da10fb34,285298402,0,0x0,8
tick,0x7ff8da10fb34,285313314,0,0x0,8
tick,0x7ff8da10fb34,285329870,0,0x0,8
tick,0x7ff8da10fb34,285345221,0,0x0,8
tick,0x7ff8da10fb34,285361786,0,0x0,8
tick,0x7ff8da10fb34,285376751,0,0x0,8
tick,0x7ff8da10fb34,285392914,0,0x0,8
tick,0x7ff8da10fb34,285408014,0,0x0,8
tick,0x7ff8da10fb34,285423332,0,0x0,8
tick,0x7ff8da10fb34,285438214,0,0x0,8
tick,0x7ff8da10fb34,285453248,0,0x0,8
tick,0x7ff8da10fb34,285469423,0,0x0,8
tick,0x7ff8da10fb34,285484518,0,0x0,8
tick,0x7ff8da10fb34,285500960,0,0x0,8
tick,0x7ff8da10fb34,285516221,0,0x0,8
tick,0x7ff8da10fb34,285530883,0,0x0,8
tick,0x7ff8da10fb34,285546923,0,0x0,8
tick,0x7ff8da10fb34,285562233,0,0x0,8
tick,0x7ff8da10fb34,285578360,0,0x0,8
tick,0x7ff8da10fb34,285594202,0,0x0,8
tick,0x7ff8da10fb34,285609086,0,0x0,8
tick,0x7ff8da10fb34,285624403,0,0x0,8
tick,0x7ff8da10fb34,285640242,0,0x0,8
tick,0x7ff8da10fb34,285656162,0,0x0,8
tick,0x7ff8da10fb34,285671202,0,0x0,8
tick,0x7ff8da10fb34,285686093,0,0x0,8
tick,0x7ff8da10fb34,285700936,0,0x0,8
tick,0x7ff8da10fb34,285716326,0,0x0,8
tick,0x7ff8da10fb34,285732175,0,0x0,8
tick,0x7ff8da10fb34,285747564,0,0x0,8
tick,0x7ff8da10fb34,285763017,0,0x0,8
tick,0x7ff8da10fb34,285778588,0,0x0,8
tick,0x7ff8da10fb34,285793780,0,0x0,8
tick,0x7ff8da10fb34,285809429,0,0x0,8
tick,0x7ff8da10fb34,285824991,0,0x0,8
tick,0x7ff8da10fb34,285840990,0,0x0,8
tick,0x7ff8da10fb34,285856375,0,0x0,8
tick,0x7ff8da10fb34,285871615,0,0x0,8
tick,0x7ff8da10fb34,285887641,0,0x0,8
tick,0x7ff8da10fb34,285903355,0,0x0,8
tick,0x7ff8da10fb34,285918374,0,0x0,8
tick,0x7ff8da10fb34,285933365,0,0x0,8
tick,0x7ff8da10fb34,285948313,0,0x0,8
tick,0x7ff8da10fb34,285963370,0,0x0,8
tick,0x7ff8da10fb34,285979042,0,0x0,8
tick,0x7ff8da10fb34,285997319,0,0x0,8
tick,0x7ff8da10fb34,286010806,0,0x0,8
tick,0x7ff8da10fb34,286026263,0,0x0,8
tick,0x7ff8da10fb34,286041748,0,0x0,8
tick,0x7ff8da10fb34,286057665,0,0x0,8
tick,0x7ff8da10fb34,286073636,0,0x0,8
tick,0x7ff8da10fb34,286088753,0,0x0,8
tick,0x7ff8da10fb34,286104027,0,0x0,8
tick,0x7ff8da10fb34,286119131,0,0x0,8
tick,0x7ff8da10fb34,286134436,0,0x0,8
tick,0x7ff8da10fb34,286150002,0,0x0,8
tick,0x7ff8da10fb34,286166576,0,0x0,8
tick,0x7ff8da10fb34,286181842,0,0x0,8
tick,0x7ff8da10fb34,286196958,0,0x0,8
tick,0x7ff8da10fb34,286211970,0,0x0,8
tick,0x7ff8da10fb34,286228633,0,0x0,8
tick,0x7ff8da10fb34,286243446,0,0x0,8
tick,0x7ff8da10fb34,286258360,0,0x0,8
tick,0x7ff8da10fb34,286273982,0,0x0,8
tick,0x7ff8da10fb34,286290170,0,0x0,8
tick,0x7ff8da10fb34,286305984,0,0x0,8
tick,0x7ff8da10fb34,286321497,0,0x0,8
tick,0x7ff8da10fb34,286337393,0,0x0,8
tick,0x7ff8da10fb34,286353559,0,0x0,8
tick,0x7ff8da10fb34,286368580,0,0x0,8
tick,0x7ff8da10fb34,286384026,0,0x0,8
tick,0x7ff8da10fb34,286399454,0,0x0,8
tick,0x7ff8da10fb34,286414889,0,0x0,8
tick,0x7ff8da10fb34,286430942,0,0x0,8
tick,0x7ff8da10fb34,286447554,0,0x0,8
tick,0x7ff8da10fb34,286461930,0,0x0,8
tick,0x7ff8da10fb34,286477129,0,0x0,8
tick,0x7ff8da10fb34,286493332,0,0x0,8
tick,0x7ff8da10fb34,286509036,0,0x0,8
tick,0x7ff8da10fb34,286524025,0,0x0,8
tick,0x7ff8da10fb34,286539485,0,0x0,8
tick,0x7ff8da10fb34,286554598,0,0x0,8
tick,0x7ff8da10fb34,286569967,0,0x0,8
tick,0x7ff8da10fb34,286586211,0,0x0,8
tick,0x7ff8da10fb34,286601248,0,0x0,8
tick,0x7ff8da10fb34,286617391,0,0x0,8
tick,0x7ff8da10fb34,286631870,0,0x0,8
tick,0x7ff8da10fb34,286647363,0,0x0,8
tick,0x7ff8da10fb34,286662951,0,0x0,8
tick,0x7ff8da10fb34,286679418,0,0x0,8
tick,0x7ff8da10fb34,286694747,0,0x0,8
tick,0x7ff8da10fb34,286710843,0,0x0,8
tick,0x7ff8da10fb34,286726754,0,0x0,8
tick,0x7ff8da10fb34,286741982,0,0x0,8
tick,0x7ff8da10fb34,286758245,0,0x0,8
tick,0x7ff8da10fb34,286774068,0,0x0,8
tick,0x7ff8da10fb34,286789935,0,0x0,8
tick,0x7ff8da10fb34,286808057,0,0x0,8
tick,0x7ff8da10fb34,286821994,0,0x0,8
tick,0x7ff8da10fb34,286836794,0,0x0,8
tick,0x7ff8da10fb34,286852254,0,0x0,8
tick,0x7ff8da10fb34,286867725,0,0x0,8
tick,0x7ff8da10fb34,286884041,0,0x0,8
tick,0x7ff8da10fb34,286899827,0,0x0,8
tick,0x7ff8da10fb34,286915573,0,0x0,8
tick,0x7ff8da10fb34,286930141,0,0x0,8
tick,0x7ff8da10fb34,286946430,0,0x0,8
tick,0x7ff8da10fb34,286962107,0,0x0,8
tick,0x7ff8da10fb34,286978889,0,0x0,8
tick,0x7ff8da10fb34,286994139,0,0x0,8
tick,0x7ff8da10fb34,287009034,0,0x0,8
tick,0x7ff8da10fb34,287024091,0,0x0,8
tick,0x7ff8da10fb34,287039880,0,0x0,8
tick,0x7ff8da10fb34,287056053,0,0x0,8
tick,0x7ff8da10fb34,287071284,0,0x0,8
tick,0x7ff8da10fb34,287086494,0,0x0,8
tick,0x7ff8da10fb34,287101870,0,0x0,8
tick,0x7ff8da10fb34,287117236,0,0x0,8
tick,0x7ff8da10fb34,287133203,0,0x0,8
tick,0x7ff8da10fb34,287149128,0,0x0,8
tick,0x7ff8da10fb34,287165253,0,0x0,8
tick,0x7ff8da10fb34,287180173,0,0x0,8
tick,0x7ff8da10fb34,287196322,0,0x0,8
tick,0x7ff8da10fb34,287212468,0,0x0,8
tick,0x7ff8da10fb34,287228970,0,0x0,8
tick,0x7ff8da10fb34,287245383,0,0x0,8
tick,0x7ff8da10fb34,287258901,0,0x0,8
tick,0x7ff8da10fb34,287273941,0,0x0,8
tick,0x7ff8da10fb34,287289256,0,0x0,8
tick,0x7ff8da10fb34,287305068,0,0x0,8
tick,0x7ff8da10fb34,287320024,0,0x0,8
tick,0x7ff8da10fb34,287336254,0,0x0,8
tick,0x7ff8da10fb34,287352112,0,0x0,8
tick,0x7ff8da10fb34,287367550,0,0x0,8
tick,0x7ff8da10fb34,287383374,0,0x0,8
tick,0x7ff8da10fb34,287399388,0,0x0,8
tick,0x7ff8da10fb34,287415422,0,0x0,8
tick,0x7ff8da10fb34,287431578,0,0x0,8
tick,0x7ff8da10fb34,287447397,0,0x0,8
tick,0x7ff8da10fb34,287463929,0,0x0,8
tick,0x7ff8da10fb34,287480019,0,0x0,8
tick,0x7ff8da10fb34,287495795,0,0x0,8
tick,0x7ff8da10fb34,287511219,0,0x0,8
tick,0x7ff8da10fb34,287527197,0,0x0,8
tick,0x7ff8da10fb34,287542061,0,0x0,8
tick,0x7ff8da10fb34,287557271,0,0x0,8
tick,0x7ff8da10fb34,287573061,0,0x0,8
tick,0x7ff8da10fb34,287587796,0,0x0,8
tick,0x7ff8da10fb34,287603038,0,0x0,8
tick,0x7ff8da10fb34,287619283,0,0x0,8
tick,0x7ff8da10fb34,287633733,0,0x0,8
tick,0x7ff8da10fb34,287649385,0,0x0,8
tick,0x7ff8da10fb34,287665400,0,0x0,8
tick,0x7ff8da10fb34,287681501,0,0x0,8
tick,0x7ff8da10fb34,287697383,0,0x0,8
tick,0x7ff8da10fb34,287713291,0,0x0,8
tick,0x7ff8da10fb34,287729009,0,0x0,8
tick,0x7ff8da10fb34,287745322,0,0x0,8
tick,0x7ff8da10fb34,287760808,0,0x0,8
tick,0x7ff8da10fb34,287776201,0,0x0,8
tick,0x7ff8da10fb34,287791322,0,0x0,8
tick,0x7ff8da10fb34,287806862,0,0x0,8
tick,0x7ff8da10fb34,287822034,0,0x0,8
tick,0x7ff8da10fb34,287837394,0,0x0,8
tick,0x7ff8da10fb34,287853103,0,0x0,8
tick,0x7ff8da10fb34,287868139,0,0x0,8
tick,0x7ff8da10fb34,287884168,0,0x0,8
tick,0x7ff8da10fb34,287899233,0,0x0,8
tick,0x7ff8da10fb34,287914967,0,0x0,8
tick,0x7ff8da10fb34,287930997,0,0x0,8
tick,0x7ff8da10fb34,287948297,0,0x0,8
tick,0x7ff8da10fb34,287979565,0,0x0,8
tick,0x7ff8da10fb34,288000563,0,0x0,8
tick,0x7ff8da10fb34,288011502,0,0x0,8
tick,0x7ff8da10fb34,288027905,0,0x0,8
tick,0x7ff8da10fb34,288042235,0,0x0,8
tick,0x7ff8da10fb34,288058743,0,0x0,8
tick,0x7ff8da10fb34,288074292,0,0x0,8
tick,0x7ff8da10fb34,288090397,0,0x0,8
tick,0x7ff8da10fb34,288106222,0,0x0,8
tick,0x7ff8da10fb34,288120989,0,0x0,8
tick,0x7ff8da10fb34,288136833,0,0x0,8
tick,0x7ff8da10fb34,288152798,0,0x0,8
tick,0x7ff8da10fb34,288168430,0,0x0,8
tick,0x7ff8da10fb34,288183685,0,0x0,8
tick,0x7ff8da10fb34,288198985,0,0x0,8
tick,0x7ff8da10fb34,288214407,0,0x0,8
tick,0x7ff8da10fb34,288229898,0,0x0,8
tick,0x7ff8da10fb34,288246073,0,0x0,8
tick,0x7ff8da10fb34,288261072,0,0x0,8
tick,0x7ff8da10fb34,288276490,0,0x0,8
tick,0x7ff8da10fb34,288292026,0,0x0,8
tick,0x7ff8da10fb34,288308056,0,0x0,8
tick,0x7ff8da10fb34,288323619,0,0x0,8
tick,0x7ff8da10fb34,288339109,0,0x0,8
tick,0x7ff8da10fb34,288354419,0,0x0,8
tick,0x7ff8da10fb34,288369314,0,0x0,8
tick,0x7ff8da10fb34,288384707,0,0x0,8
tick,0x7ff8da10fb34,288399928,0,0x0,8
tick,0x7ff8da10fb34,288416067,0,0x0,8
tick,0x7ff8da10fb34,288431580,0,0x0,8
tick,0x7ff8da10fb34,288446737,0,0x0,8
tick,0x7ff8da10fb34,288462197,0,0x0,8
tick,0x7ff8da10fb34,288477966,0,0x0,8
tick,0x7ff8da10fb34,288494456,0,0x0,8
tick,0x7ff8da10fb34,288509900,0,0x0,8
tick,0x7ff8da10fb34,288526185,0,0x0,8
tick,0x7ff8da10fb34,288541736,0,0x0,8
tick,0x7ff8da10fb34,288557124,0,0x0,8
tick,0x7ff8da10fb34,288571929,0,0x0,8
tick,0x7ff8da10fb34,288586824,0,0x0,8
tick,0x7ff8da10fb34,288602792,0,0x0,8
tick,0x7ff8da10fb34,288617784,0,0x0,8
tick,0x7ff8da10fb34,288632619,0,0x0,8
tick,0x7ff8da10fb34,288648593,0,0x0,8
tick,0x7ff8da10fb34,288663623,0,0x0,8
tick,0x7ff8da10fb34,288679580,0,0x0,8
tick,0x7ff8da10fb34,288695602,0,0x0,8
tick,0x7ff8da10fb34,288711556,0,0x0,8
tick,0x7ff8da10fb34,288727549,0,0x0,8
tick,0x7ff8da10fb34,288743700,0,0x0,8
tick,0x7ff8da10fb34,288759573,0,0x0,8
tick,0x7ff8da10fb34,288775671,0,0x0,8
tick,0x7ff8da10fb34,288791557,0,0x0,8
tick,0x7ff8da10fb34,288806531,0,0x0,8
tick,0x7ff8da10fb34,288821549,0,0x0,8
tick,0x7ff8da10fb34,288837564,0,0x0,8
tick,0x7ff8da10fb34,288853506,0,0x0,8
tick,0x7ff8da10fb34,288868634,0,0x0,8
tick,0x7ff8da10fb34,288883493,0,0x0,8
tick,0x7ff8da10fb34,288899524,0,0x0,8
tick,0x7ff8da10fb34,288915484,0,0x0,8
tick,0x7ff8da10fb34,288931532,0,0x0,8
tick,0x7ff8da10fb34,288946449,0,0x0,8
tick,0x7ff8da10fb34,288961753,0,0x0,8
tick,0x7ff8da10fb34,288977714,0,0x0,8
tick,0x7ff8da10fb34,288993206,0,0x0,8
tick,0x7ff8da10fb34,289008177,0,0x0,8
tick,0x7ff8da10fb34,289024076,0,0x0,8
tick,0x7ff8da10fb34,289039802,0,0x0,8
tick,0x7ff8da10fb34,289055027,0,0x0,8
tick,0x7ff8da10fb34,289070506,0,0x0,8
tick,0x7ff8da10fb34,289085005,0,0x0,8
tick,0x7ff8da10fb34,289100120,0,0x0,8
tick,0x7ff8da10fb34,289116044,0,0x0,8
tick,0x7ff8da10fb34,289131460,0,0x0,8
tick,0x7ff8da10fb34,289147361,0,0x0,8
tick,0x7ff8da10fb34,289163358,0,0x0,8
tick,0x7ff8da10fb34,289179504,0,0x0,8
tick,0x7ff8da10fb34,289195142,0,0x0,8
tick,0x7ff8da10fb34,289210936,0,0x0,8
tick,0x7ff8da10fb34,289226407,0,0x0,8
tick,0x7ff8da10fb34,289241082,0,0x0,8
tick,0x7ff8da10fb34,289256360,0,0x0,8
tick,0x7ff8da10fb34,289272153,0,0x0,8
tick,0x7ff8da10fb34,289287021,0,0x0,8
tick,0x7ff8da10fb34,289302078,0,0x0,8
tick,0x7ff8da10fb34,289317705,0,0x0,8
tick,0x7ff8da10fb34,289333066,0,0x0,8
tick,0x7ff8da10fb34,289349007,0,0x0,8
tick,0x7ff8da10fb34,289363993,0,0x0,8
tick,0x7ff8da10fb34,289379471,0,0x0,8
tick,0x7ff8da10fb34,289395155,0,0x0,8
tick,0x7ff8da10fb34,289410869,0,0x0,8
tick,0x7ff8da10fb34,289426251,0,0x0,8
tick,0x7ff8da10fb34,289442120,0,0x0,8
tick,0x7ff8da10fb34,289458052,0,0x0,8
tick,0x7ff8da10fb34,289474074,0,0x0,8
tick,0x7ff8da10fb34,289489433,0,0x0,8
tick,0x7ff8da10fb34,289505078,0,0x0,8
tick,0x7ff8da10fb34,289520090,0,0x0,8
tick,0x7ff8da10fb34,289536144,0,0x0,8
tick,0x7ff8da10fb34,289552138,0,0x0,8
tick,0x7ff8da10fb34,289567830,0,0x0,8
tick,0x7ff8da10fb34,289583064,0,0x0,8
tick,0x7ff8da10fb34,289598241,0,0x0,8
tick,0x7ff8da10fb34,289613428,0,0x0,8
tick,0x7ff8da10fb34,289629376,0,0x0,8
tick,0x7ff8da10fb34,289645146,0,0x0,8
tick,0x7ff8da10fb34,289661338,0,0x0,8
tick,0x7ff8da10fb34,289677226,0,0x0,8
tick,0x7ff8da10fb34,289692980,0,0x0,8
tick,0x7ff8da10fb34,289708129,0,0x0,8
tick,0x7ff8da10fb34,289723062,0,0x0,8
tick,0x7ff8da10fb34,289738579,0,0x0,8
tick,0x7ff8da10fb34,289754074,0,0x0,8
tick,0x7ff8da10fb34,289769232,0,0x0,8
tick,0x7ff8da10fb34,289784292,0,0x0,8
tick,0x7ff8da10fb34,289799316,0,0x0,8
tick,0x7ff8da10fb34,289814500,0,0x0,8
tick,0x7ff8da10fb34,289830092,0,0x0,8
tick,0x7ff8da10fb34,289845962,0,0x0,8
tick,0x7ff8da10fb34,289861701,0,0x0,8
tick,0x7ff8da10fb34,289877924,0,0x0,8
tick,0x7ff8da10fb34,289894453,0,0x0,8
tick,0x7ff8da10fb34,289910148,0,0x0,8
tick,0x7ff8da10fb34,289924550,0,0x0,8
tick,0x7ff8da10fb34,289939966,0,0x0,8
tick,0x7ff8da10fb34,289956046,0,0x0,8
tick,0x7ff8da10fb34,289972082,0,0x0,8
tick,0x7ff8da10fb34,289988268,0,0x0,8
tick,0x7ff8da10fb34,290004109,0,0x0,8
tick,0x7ff8da10fb34,290019559,0,0x0,8
tick,0x7ff8da10fb34,290034922,0,0x0,8
tick,0x7ff8da10fb34,290050090,0,0x0,8
tick,0x7ff8da10fb34,290066115,0,0x0,8
tick,0x7ff8da10fb34,290081364,0,0x0,8
tick,0x7ff8da10fb34,290097094,0,0x0,8
tick,0x7ff8da10fb34,290112565,0,0x0,8
tick,0x7ff8da10fb34,290128170,0,0x0,8
tick,0x7ff8da10fb34,290143964,0,0x0,8
tick,0x7ff8da10fb34,290159080,0,0x0,8
tick,0x7ff8da10fb34,290175029,0,0x0,8
tick,0x7ff8da10fb34,290190148,0,0x0,8
tick,0x7ff8da10fb34,290205209,0,0x0,8
tick,0x7ff8da10fb34,290221191,0,0x0,8
tick,0x7ff8da10fb34,290236186,0,0x0,8
tick,0x7ff8da10fb34,290250833,0,0x0,8
tick,0x7ff8da10fb34,290266917,0,0x0,8
tick,0x7ff8da10fb34,290282088,0,0x0,8
tick,0x7ff8da10fb34,290297502,0,0x0,8
tick,0x7ff8da10fb34,290313280,0,0x0,8
tick,0x7ff8da10fb34,290328980,0,0x0,8
tick,0x7ff8da10fb34,290344835,0,0x0,8
tick,0x7ff8da10fb34,290361260,0,0x0,8
tick,0x7ff8da10fb34,290376751,0,0x0,8
tick,0x7ff8da10fb34,290391562,0,0x0,8
tick,0x7ff8da10fb34,290406779,0,0x0,8
tick,0x7ff8da10fb34,290422205,0,0x0,8
tick,0x7ff8da10fb34,290438297,0,0x0,8
tick,0x7ff8da10fb34,290454198,0,0x0,8
tick,0x7ff8da10fb34,290470001,0,0x0,8
tick,0x7ff8da10fb34,290485246,0,0x0,8
tick,0x7ff8da10fb34,290500989,0,0x0,8
tick,0x7ff8da10fb34,290516169,0,0x0,8
tick,0x7ff8da10fb34,290531898,0,0x0,8
tick,0x7ff8da10fb34,290547490,0,0x0,8
tick,0x7ff8da10fb34,290563306,0,0x0,8
tick,0x7ff8da10fb34,290579000,0,0x0,8
tick,0x7ff8da10fb34,290594579,0,0x0,8
tick,0x7ff8da10fb34,290610467,0,0x0,8
tick,0x7ff8da10fb34,290625587,0,0x0,8
tick,0x7ff8da10fb34,290641227,0,0x0,8
tick,0x7ff8da10fb34,290656961,0,0x0,8
tick,0x7ff8da10fb34,290672154,0,0x0,8
tick,0x7ff8da10fb34,290687196,0,0x0,8
tick,0x7ff8da10fb34,290703084,0,0x0,8
tick,0x7ff8da10fb34,290717954,0,0x0,8
tick,0x7ff8da10fb34,290733905,0,0x0,8
tick,0x7ff8da10fb34,290749160,0,0x0,8
tick,0x7ff8da10fb34,290764139,0,0x0,8
tick,0x7ff8da10fb34,290779052,0,0x0,8
tick,0x7ff8da10fb34,290794571,0,0x0,8
tick,0x7ff8da10fb34,290810259,0,0x0,8
tick,0x7ff8da10fb34,290826035,0,0x0,8
tick,0x7ff8da10fb34,290841045,0,0x0,8
tick,0x7ff8da10fb34,290856525,0,0x0,8
tick,0x7ff8da10fb34,290871644,0,0x0,8
tick,0x7ff8da10fb34,290886995,0,0x0,8
tick,0x7ff8da10fb34,290902019,0,0x0,8
tick,0x7ff8da10fb34,290918030,0,0x0,8
tick,0x7ff8da10fb34,290933984,0,0x0,8
tick,0x7ff8da10fb34,290949447,0,0x0,8
tick,0x7ff8da10fb34,290964972,0,0x0,8
tick,0x7ff8da10fb34,290980241,0,0x0,8
tick,0x7ff8da10fb34,290995249,0,0x0,8
tick,0x7ff8da10fb34,291011172,0,0x0,8
tick,0x7ff8da10fb34,291027662,0,0x0,8
tick,0x7ff8da10fb34,291042584,0,0x0,8
tick,0x7ff8da10fb34,291057355,0,0x0,8
tick,0x7ff8da10fb34,291071981,0,0x0,8
tick,0x7ff8da10fb34,291088036,0,0x0,8
tick,0x7ff8da10fb34,291103872,0,0x0,8
tick,0x7ff8da10fb34,291120025,0,0x0,8
tick,0x7ff8da10fb34,291134724,0,0x0,8
tick,0x7ff8da10fb34,291149751,0,0x0,8
tick,0x7ff8da10fb34,291164991,0,0x0,8
tick,0x7ff8da10fb34,291180907,0,0x0,8
tick,0x7ff8da10fb34,291196557,0,0x0,8
tick,0x7ff8da10fb34,291212066,0,0x0,8
tick,0x7ff8da10fb34,291228316,0,0x0,8
tick,0x7ff8da10fb34,291243488,0,0x0,8
tick,0x7ff8da10fb34,291259326,0,0x0,8
tick,0x7ff8da10fb34,291274179,0,0x0,8
tick,0x7ff8da10fb34,291289062,0,0x0,8
tick,0x7ff8da10fb34,291305029,0,0x0,8
tick,0x7ff8da10fb34,291320199,0,0x0,8
tick,0x7ff8da10fb34,291334944,0,0x0,8
tick,0x7ff8da10fb34,291350031,0,0x0,8
tick,0x7ff8da10fb34,291366268,0,0x0,8
tick,0x7ff8da10fb34,291382318,0,0x0,8
tick,0x7ff8da10fb34,291397834,0,0x0,8
tick,0x7ff8da10fb34,291412808,0,0x0,8
tick,0x7ff8da10fb34,291428033,0,0x0,8
tick,0x7ff8da10fb34,291443321,0,0x0,8
tick,0x7ff8da10fb34,291458954,0,0x0,8
tick,0x7ff8da10fb34,291474183,0,0x0,8
tick,0x7ff8da10fb34,291489546,0,0x0,8
tick,0x7ff8da10fb34,291505025,0,0x0,8
tick,0x7ff8da10fb34,291521135,0,0x0,8
tick,0x7ff8da10fb34,291537317,0,0x0,8
tick,0x7ff8da10fb34,291552968,0,0x0,8
tick,0x7ff8da10fb34,291567907,0,0x0,8
tick,0x7ff8da10fb34,291582604,0,0x0,8
tick,0x7ff8da10fb34,291598335,0,0x0,8
tick,0x7ff8da10fb34,291613771,0,0x0,8
tick,0x7ff8da10fb34,291629026,0,0x0,8
tick,0x7ff8da10fb34,291644417,0,0x0,8
tick,0x7ff8da10fb34,291660093,0,0x0,8
tick,0x7ff8da10fb34,291675102,0,0x0,8
tick,0x7ff8da10fb34,291690209,0,0x0,8
tick,0x7ff8da10fb34,291706389,0,0x0,8
tick,0x7ff8da10fb34,291722144,0,0x0,8
tick,0x7ff8da10fb34,291737650,0,0x0,8
tick,0x7ff8da10fb34,291753081,0,0x0,8
tick,0x7ff8da10fb34,291768756,0,0x0,8
tick,0x7ff8da10fb34,291783959,0,0x0,8
tick,0x7ff8da10fb34,291799397,0,0x0,8
tick,0x7ff8da10fb34,291814638,0,0x0,8
tick,0x7ff8da10fb34,291829019,0,0x0,8
tick,0x7ff8da10fb34,291845094,0,0x0,8
tick,0x7ff8da10fb34,291860910,0,0x0,8
tick,0x7ff8da10fb34,291878713,0,0x0,8
tick,0x7ff8da10fb34,291892747,0,0x0,8
tick,0x7ff8da10fb34,291909141,0,0x0,8
tick,0x7ff8da10fb34,291924206,0,0x0,8
tick,0x7ff8da10fb34,291939444,0,0x0,8
tick,0x7ff8da10fb34,291955115,0,0x0,8
tick,0x7ff8da10fb34,291970237,0,0x0,8
tick,0x7ff8da10fb34,291986331,0,0x0,8
tick,0x7ff8da10fb34,292002141,0,0x0,8
tick,0x7ff8da10fb34,292018023,0,0x0,8
tick,0x7ff8da10fb34,292034128,0,0x0,8
tick,0x7ff8da10fb34,292049377,0,0x0,8
tick,0x7ff8da10fb34,292064525,0,0x0,8
tick,0x7ff8da10fb34,292080160,0,0x0,8
tick,0x7ff8da10fb34,292096204,0,0x0,8
tick,0x7ff8da10fb34,292111638,0,0x0,8
tick,0x7ff8da10fb34,292127159,0,0x0,8
tick,0x7ff8da10fb34,292143213,0,0x0,8
tick,0x7ff8da10fb34,292158479,0,0x0,8
tick,0x7ff8da10fb34,292174178,0,0x0,8
tick,0x7ff8da10fb34,292189525,0,0x0,8
tick,0x7ff8da10fb34,292205053,0,0x0,8
tick,0x7ff8da10fb34,292221396,0,0x0,8
tick,0x7ff8da10fb34,292236812,0,0x0,8
tick,0x7ff8da10fb34,292252116,0,0x0,8
tick,0x7ff8da10fb34,292267053,0,0x0,8
tick,0x7ff8da10fb34,292282125,0,0x0,8
tick,0x7ff8da10fb34,292297893,0,0x0,8
tick,0x7ff8da10fb34,292313946,0,0x0,8
tick,0x7ff8da10fb34,292328372,0,0x0,8
tick,0x7ff8da10fb34,292344456,0,0x0,8
tick,0x7ff8da10fb34,292359401,0,0x0,8
tick,0x7ff8da10fb34,292375148,0,0x0,8
tick,0x7ff8da10fb34,292390592,0,0x0,8
tick,0x7ff8da10fb34,292406528,0,0x0,8
tick,0x7ff8da10fb34,292421177,0,0x0,8
tick,0x7ff8da10fb34,292437099,0,0x0,8
tick,0x7ff8da10fb34,292452081,0,0x0,8
tick,0x7ff8da10fb34,292468010,0,0x0,8
tick,0x7ff8da10fb34,292483504,0,0x0,8
tick,0x7ff8da10fb34,292499168,0,0x0,8
tick,0x7ff8da10fb34,292513337,0,0x0,8
tick,0x7ff8da10fb34,292528419,0,0x0,8
tick,0x7ff8da10fb34,292543898,0,0x0,8
tick,0x7ff8da10fb34,292559419,0,0x0,8
tick,0x7ff8da10fb34,292575175,0,0x0,8
tick,0x7ff8da10fb34,292589895,0,0x0,8
tick,0x7ff8da10fb34,292604978,0,0x0,8
tick,0x7ff8da10fb34,292621142,0,0x0,8
tick,0x7ff8da10fb34,292636846,0,0x0,8
tick,0x7ff8da10fb34,292652323,0,0x0,8
tick,0x7ff8da10fb34,292667169,0,0x0,8
tick,0x7ff8da10fb34,292682075,0,0x0,8
tick,0x7ff8da10fb34,292697849,0,0x0,8
tick,0x7ff8da10fb34,292713176,0,0x0,8
tick,0x7ff8da10fb34,292728991,0,0x0,8
tick,0x7ff8da10fb34,292744820,0,0x0,8
tick,0x7ff8da10fb34,292759914,0,0x0,8
tick,0x7ff8da10fb34,292776819,0,0x0,8
tick,0x7ff8da10fb34,292791015,0,0x0,8
tick,0x7ff8da10fb34,292806820,0,0x0,8
tick,0x7ff8da10fb34,292822132,0,0x0,8
tick,0x7ff8da10fb34,292837756,0,0x0,8
tick,0x7ff8da10fb34,292852063,0,0x0,8
tick,0x7ff8da10fb34,292867963,0,0x0,8
tick,0x7ff8da10fb34,292883989,0,0x0,8
tick,0x7ff8da10fb34,292899261,0,0x0,8
tick,0x7ff8da10fb34,292913798,0,0x0,8
tick,0x7ff8da10fb34,292929244,0,0x0,8
tick,0x7ff8da10fb34,292944917,0,0x0,8
tick,0x7ff8da10fb34,292960583,0,0x0,8
tick,0x7ff8da10fb34,292975996,0,0x0,8
tick,0x7ff8da10fb34,292992597,0,0x0,8
tick,0x7ff8da10fb34,293007989,0,0x0,8
tick,0x7ff8da10fb34,293024274,0,0x0,8
tick,0x7ff8da10fb34,293039686,0,0x0,8
tick,0x7ff8da10fb34,293054998,0,0x0,8
tick,0x7ff8da10fb34,293071113,0,0x0,8
tick,0x7ff8da10fb34,293087259,0,0x0,8
tick,0x7ff8da10fb34,293102159,0,0x0,8
tick,0x7ff8da10fb34,293117217,0,0x0,8
tick,0x7ff8da10fb34,293131988,0,0x0,8
tick,0x7ff8da10fb34,293147593,0,0x0,8
tick,0x7ff8da10fb34,293163555,0,0x0,8
tick,0x7ff8da10fb34,293178957,0,0x0,8
tick,0x7ff8da10fb34,293194623,0,0x0,8
tick,0x7ff8da10fb34,293210219,0,0x0,8
tick,0x7ff8da10fb34,293226685,0,0x0,8
tick,0x7ff8da10fb34,293241155,0,0x0,8
tick,0x7ff8da10fb34,293256506,0,0x0,8
tick,0x7ff8da10fb34,293272208,0,0x0,8
tick,0x7ff8da10fb34,293288307,0,0x0,8
tick,0x7ff8da10fb34,293304149,0,0x0,8
tick,0x7ff8da10fb34,293319553,0,0x0,8
tick,0x7ff8da10fb34,293335464,0,0x0,8
tick,0x7ff8da10fb34,293350094,0,0x0,8
tick,0x7ff8da10fb34,293364974,0,0x0,8
tick,0x7ff8da10fb34,293380541,0,0x0,8
tick,0x7ff8da10fb34,293396576,0,0x0,8
tick,0x7ff8da10fb34,293411512,0,0x0,8
tick,0x7ff8da10fb34,293426740,0,0x0,8
tick,0x7ff8da10fb34,293442459,0,0x0,8
tick,0x7ff8da10fb34,293458499,0,0x0,8
tick,0x7ff8da10fb34,293473846,0,0x0,8
tick,0x7ff8da10fb34,293488956,0,0x0,8
tick,0x7ff8da10fb34,293505331,0,0x0,8
tick,0x7ff8da10fb34,293521166,0,0x0,8
tick,0x7ff8da10fb34,293537264,0,0x0,8
tick,0x7ff8da10fb34,293552852,0,0x0,8
tick,0x7ff8da10fb34,293569071,0,0x0,8
tick,0x7ff8da10fb34,293584464,0,0x0,8
tick,0x7ff8da10fb34,293599441,0,0x0,8
tick,0x7ff8da10fb34,293614555,0,0x0,8
tick,0x7ff8da10fb34,293629887,0,0x0,8
tick,0x7ff8da10fb34,293645888,0,0x0,8
tick,0x7ff8da10fb34,293660732,0,0x0,8
tick,0x7ff8da10fb34,293676072,0,0x0,8
tick,0x7ff8da10fb34,293690430,0,0x0,8
tick,0x7ff8da10fb34,293706297,0,0x0,8
tick,0x7ff8da10fb34,293722067,0,0x0,8
tick,0x7ff8da10fb34,293737854,0,0x0,8
tick,0x7ff8da10fb34,293753827,0,0x0,8
tick,0x7ff8da10fb34,293769795,0,0x0,8
tick,0x7ff8da10fb34,293785894,0,0x0,8
tick,0x7ff8da10fb34,293801820,0,0x0,8
tick,0x7ff8da10fb34,293817806,0,0x0,8
tick,0x7ff8da10fb34,293832819,0,0x0,8
tick,0x7ff8da10fb34,293847755,0,0x0,8
tick,0x7ff8da10fb34,293864036,0,0x0,8
tick,0x7ff8da10fb34,293879736,0,0x0,8
tick,0x7ff8da10fb34,293894812,0,0x0,8
tick,0x7ff8da10fb34,293909847,0,0x0,8
tick,0x7ff8da10fb34,293925743,0,0x0,8
tick,0x7ff8da10fb34,293941232,0,0x0,8
tick,0x7ff8da10fb34,293955922,0,0x0,8
tick,0x7ff8da10fb34,293971175,0,0x0,8
tick,0x7ff8da10fb34,293987209,0,0x0,8
tick,0x7ff8da10fb34,294002151,0,0x0,8
tick,0x7ff8da10fb34,294017065,0,0x0,8
tick,0x7ff8da10fb34,294032609,0,0x0,8
tick,0x7ff8da10fb34,294048497,0,0x0,8
tick,0x7ff8da10fb34,294063695,0,0x0,8
tick,0x7ff8da10fb34,294079419,0,0x0,8
tick,0x7ff8da10fb34,294094902,0,0x0,8
tick,0x7ff8da10fb34,294110589,0,0x0,8
tick,0x7ff8da10fb34,294126560,0,0x0,8
tick,0x7ff8da10fb34,294142298,0,0x0,8
tick,0x7ff8da10fb34,294157459,0,0x0,8
tick,0x7ff8da10fb34,294172846,0,0x0,8
tick,0x7ff8da10fb34,294187855,0,0x0,8
tick,0x7ff8da10fb34,294203049,0,0x0,8
tick,0x7ff8da10fb34,294218467,0,0x0,8
tick,0x7ff8da10fb34,294233793,0,0x0,8
tick,0x7ff8da10fb34,294249041,0,0x0,8
tick,0x7ff8da10fb34,294265032,0,0x0,8
tick,0x7ff8da10fb34,294281160,0,0x0,8
tick,0x7ff8da10fb34,294296551,0,0x0,8
tick,0x7ff8da10fb34,294311820,0,0x0,8
tick,0x7ff8da10fb34,294327539,0,0x0,8
tick,0x7ff8da10fb34,294343086,0,0x0,8
tick,0x7ff8da10fb34,294358849,0,0x0,8
tick,0x7ff8da10fb34,294374354,0,0x0,8
tick,0x7ff8da10fb34,294409484,0,0x0,8
tick,0x7ff8da10fb34,294409592,0,0x0,8
tick,0x7ff8da10fb34,294421174,0,0x0,8
tick,0x7ff8da10fb34,294436138,0,0x0,8
tick,0x7ff8da10fb34,294452151,0,0x0,8
tick,0x7ff8da10fb34,294467479,0,0x0,8
tick,0x7ff8da10fb34,294483329,0,0x0,8
tick,0x7ff8da10fb34,294498254,0,0x0,8
tick,0x7ff8da10fb34,294513142,0,0x0,8
tick,0x7ff8da10fb34,294528457,0,0x0,8
tick,0x7ff8da10fb34,294543909,0,0x0,8
tick,0x7ff8da10fb34,294559140,0,0x0,8
tick,0x7ff8da10fb34,294574491,0,0x0,8
tick,0x7ff8da10fb34,294589398,0,0x0,8
tick,0x7ff8da10fb34,294604972,0,0x0,8
tick,0x7ff8da10fb34,294620070,0,0x0,8
tick,0x7ff8da10fb34,294636359,0,0x0,8
tick,0x7ff8da10fb34,294652076,0,0x0,8
tick,0x7ff8da10fb34,294667579,0,0x0,8
tick,0x7ff8da10fb34,294683509,0,0x0,8
tick,0x7ff8da10fb34,294699462,0,0x0,8
tick,0x7ff8da10fb34,294714448,0,0x0,8
tick,0x7ff8da10fb34,294730195,0,0x0,8
tick,0x7ff8da10fb34,294746111,0,0x0,8
tick,0x7ff8da10fb34,294762486,0,0x0,8
tick,0x7ff8da10fb34,294778090,0,0x0,8
tick,0x7ff8da10fb34,294793838,0,0x0,8
tick,0x7ff8da10fb34,294809862,0,0x0,8
tick,0x7ff8da10fb34,294825454,0,0x0,8
tick,0x7ff8da10fb34,294841009,0,0x0,8
tick,0x7ff8da10fb34,294855944,0,0x0,8
tick,0x7ff8da10fb34,294871053,0,0x0,8
tick,0x7ff8da10fb34,294886992,0,0x0,8
tick,0x7ff8da10fb34,294901913,0,0x0,8
tick,0x7ff8da10fb34,294917069,0,0x0,8
tick,0x7ff8da10fb34,294931913,0,0x0,8
tick,0x7ff8da10fb34,294947733,0,0x0,8
tick,0x7ff8da10fb34,294962423,0,0x0,8
tick,0x7ff8da10fb34,294978393,0,0x0,8
tick,0x7ff8da10fb34,294993043,0,0x0,8
tick,0x7ff8da10fb34,295008385,0,0x0,8
tick,0x7ff8da10fb34,295023342,0,0x0,8
tick,0x7ff8da10fb34,295038841,0,0x0,8
tick,0x7ff8da10fb34,295054066,0,0x0,8
tick,0x7ff8da10fb34,295069473,0,0x0,8
tick,0x7ff8da10fb34,295084455,0,0x0,8
tick,0x7ff8da10fb34,295099924,0,0x0,8
tick,0x7ff8da10fb34,295116169,0,0x0,8
tick,0x7ff8da10fb34,295132156,0,0x0,8
tick,0x7ff8da10fb34,295147780,0,0x0,8
tick,0x7ff8da10fb34,295162994,0,0x0,8
tick,0x7ff8da10fb34,295178560,0,0x0,8
tick,0x7ff8da10fb34,295193767,0,0x0,8
tick,0x7ff8da10fb34,295209148,0,0x0,8
tick,0x7ff8da10fb34,295223991,0,0x0,8
tick,0x7ff8da10fb34,295239352,0,0x0,8
tick,0x7ff8da10fb34,295254636,0,0x0,8
tick,0x7ff8da10fb34,295269934,0,0x0,8
tick,0x7ff8da10fb34,295286291,0,0x0,8
tick,0x7ff8da10fb34,295302000,0,0x0,8
tick,0x7ff8da10fb34,295317125,0,0x0,8
tick,0x7ff8da10fb34,295331870,0,0x0,8
tick,0x7ff8da10fb34,295347536,0,0x0,8
tick,0x7ff8da10fb34,295362296,0,0x0,8
tick,0x7ff8da10fb34,295378110,0,0x0,8
tick,0x7ff8da10fb34,295393997,0,0x0,8
tick,0x7ff8da10fb34,295409341,0,0x0,8
tick,0x7ff8da10fb34,295425674,0,0x0,8
tick,0x7ff8da10fb34,295440408,0,0x0,8
tick,0x7ff8da10fb34,295456083,0,0x0,8
tick,0x7ff8da10fb34,295471068,0,0x0,8
tick,0x7ff8da10fb34,295487036,0,0x0,8
tick,0x7ff8da10fb34,295502240,0,0x0,8
tick,0x7ff8da10fb34,295517779,0,0x0,8
tick,0x7ff8da10fb34,295533492,0,0x0,8
tick,0x7ff8da10fb34,295549138,0,0x0,8
tick,0x7ff8da10fb34,295564025,0,0x0,8
tick,0x7ff8da10fb34,295578760,0,0x0,8
tick,0x7ff8da10fb34,295594243,0,0x0,8
tick,0x7ff8da10fb34,295610071,0,0x0,8
tick,0x7ff8da10fb34,295625943,0,0x0,8
tick,0x7ff8da10fb34,295641239,0,0x0,8
tick,0x7ff8da10fb34,295656035,0,0x0,8
tick,0x7ff8da10fb34,295672541,0,0x0,8
tick,0x7ff8da10fb34,295686951,0,0x0,8
tick,0x7ff8da10fb34,295702078,0,0x0,8
tick,0x7ff8da10fb34,295717405,0,0x0,8
tick,0x7ff8da10fb34,295732699,0,0x0,8
tick,0x7ff8da10fb34,295748036,0,0x0,8
tick,0x7ff8da10fb34,295763960,0,0x0,8
tick,0x7ff8da10fb34,295779515,0,0x0,8
tick,0x7ff8da10fb34,295795061,0,0x0,8
tick,0x7ff8da10fb34,295810933,0,0x0,8
tick,0x7ff8da10fb34,295826826,0,0x0,8
tick,0x7ff8da10fb34,295842379,0,0x0,8
tick,0x7ff8da10fb34,295858063,0,0x0,8
tick,0x7ff8da10fb34,295874399,0,0x0,8
tick,0x7ff8da10fb34,295890342,0,0x0,8
tick,0x7ff8da10fb34,295906551,0,0x0,8
tick,0x7ff8da10fb34,295921987,0,0x0,8
tick,0x7ff8da10fb34,295938246,0,0x0,8
tick,0x7ff8da10fb34,295954045,0,0x0,8
tick,0x7ff8da10fb34,295969668,0,0x0,8
tick,0x7ff8da10fb34,295985306,0,0x0,8
tick,0x7ff8da10fb34,296000136,0,0x0,8
tick,0x7ff8da10fb34,296016948,0,0x0,8
tick,0x7ff8da10fb34,296031176,0,0x0,8
tick,0x7ff8da10fb34,296046132,0,0x0,8
tick,0x7ff8da10fb34,296061536,0,0x0,8
tick,0x7ff8da10fb34,296077519,0,0x0,8
tick,0x7ff8da10fb34,296093190,0,0x0,8
tick,0x7ff8da10fb34,296108922,0,0x0,8
tick,0x7ff8da10fb34,296124757,0,0x0,8
tick,0x7ff8da10fb34,296140389,0,0x0,8
tick,0x7ff8da10fb34,296156019,0,0x0,8
tick,0x7ff8da10fb34,296171430,0,0x0,8
tick,0x7ff8da10fb34,296187451,0,0x0,8
tick,0x7ff8da10fb34,296202092,0,0x0,8
tick,0x7ff8da10fb34,296217063,0,0x0,8
tick,0x7ff8da10fb34,296232025,0,0x0,8
tick,0x7ff8da10fb34,296246996,0,0x0,8
tick,0x7ff8da10fb34,296262646,0,0x0,8
tick,0x7ff8da10fb34,296278291,0,0x0,8
tick,0x7ff8da10fb34,296294061,0,0x0,8
tick,0x7ff8da10fb34,296309944,0,0x0,8
tick,0x7ff8da10fb34,296325639,0,0x0,8
tick,0x7ff8da10fb34,296341413,0,0x0,8
tick,0x7ff8da10fb34,296357247,0,0x0,8
tick,0x7ff8da10fb34,296372255,0,0x0,8
tick,0x7ff8da10fb34,296387251,0,0x0,8
tick,0x7ff8da10fb34,296402138,0,0x0,8
tick,0x7ff8da10fb34,296418279,0,0x0,8
tick,0x7ff8da10fb34,296434167,0,0x0,8
tick,0x7ff8da10fb34,296449615,0,0x0,8
tick,0x7ff8da10fb34,296464566,0,0x0,8
tick,0x7ff8da10fb34,296480154,0,0x0,8
tick,0x7ff8da10fb34,296496302,0,0x0,8
tick,0x7ff8da10fb34,296510968,0,0x0,8
tick,0x7ff8da10fb34,296526670,0,0x0,8
tick,0x7ff8da10fb34,296542360,0,0x0,8
tick,0x7ff8da10fb34,296557583,0,0x0,8
tick,0x7ff8da10fb34,296572557,0,0x0,8
tick,0x7ff8da10fb34,296587991,0,0x0,8
tick,0x7ff8da10fb34,296603132,0,0x0,8
tick,0x7ff8da10fb34,296618492,0,0x0,8
tick,0x7ff8da10fb34,296633683,0,0x0,8
tick,0x7ff8da10fb34,296649022,0,0x0,8
tick,0x7ff8da10fb34,296664634,0,0x0,8
tick,0x7ff8da10fb34,296680078,0,0x0,8
tick,0x7ff8da10fb34,296695174,0,0x0,8
tick,0x7ff8da10fb34,296710611,0,0x0,8
tick,0x7ff8da10fb34,296726594,0,0x0,8
tick,0x7ff8da10fb34,296742328,0,0x0,8
tick,0x7ff8da10fb34,296758147,0,0x0,8
tick,0x7ff8da10fb34,296773205,0,0x0,8
tick,0x7ff8da10fb34,296788292,0,0x0,8
tick,0x7ff8da10fb34,296804271,0,0x0,8
tick,0x7ff8da10fb34,296819849,0,0x0,8
tick,0x7ff8da10fb34,296835121,0,0x0,8
tick,0x7ff8da10fb34,296850779,0,0x0,8
tick,0x7ff8da10fb34,296866244,0,0x0,8
tick,0x7ff8da10fb34,296882160,0,0x0,8
tick,0x7ff8da10fb34,296897806,0,0x0,8
tick,0x7ff8da10fb34,296913818,0,0x0,8
tick,0x7ff8da10fb34,296929370,0,0x0,8
tick,0x7ff8da10fb34,296944708,0,0x0,8
tick,0x7ff8da10fb34,296960393,0,0x0,8
tick,0x7ff8da10fb34,296975395,0,0x0,8
tick,0x7ff8da10fb34,296991434,0,0x0,8
tick,0x7ff8da10fb34,297006905,0,0x0,8
tick,0x7ff8da10fb34,297022245,0,0x0,8
tick,0x7ff8da10fb34,297037217,0,0x0,8
tick,0x7ff8da10fb34,297052255,0,0x0,8
tick,0x7ff8da10fb34,297067323,0,0x0,8
tick,0x7ff8da10fb34,297082603,0,0x0,8
tick,0x7ff8da10fb34,297098273,0,0x0,8
tick,0x7ff8da10fb34,297113204,0,0x0,8
tick,0x7ff8da10fb34,297128642,0,0x0,8
tick,0x7ff8da10fb34,297143856,0,0x0,8
tick,0x7ff8da10fb34,297159563,0,0x0,8
tick,0x7ff8da10fb34,297175345,0,0x0,8
tick,0x7ff8da10fb34,297191587,0,0x0,8
tick,0x7ff8da10fb34,297206310,0,0x0,8
tick,0x7ff8da10fb34,297222188,0,0x0,8
tick,0x7ff8da10fb34,297236657,0,0x0,8
tick,0x7ff8da10fb34,297252283,0,0x0,8
tick,0x7ff8da10fb34,297268549,0,0x0,8
tick,0x7ff8da10fb34,297283202,0,0x0,8
tick,0x7ff8da10fb34,297298129,0,0x0,8
tick,0x7ff8da10fb34,297313457,0,0x0,8
tick,0x7ff8da10fb34,297329336,0,0x0,8
tick,0x7ff8da10fb34,297344580,0,0x0,8
tick,0x7ff8da10fb34,297359861,0,0x0,8
tick,0x7ff8da10fb34,297375266,0,0x0,8
tick,0x7ff8da10fb34,297390975,0,0x0,8
tick,0x7ff8da10fb34,297406399,0,0x0,8
tick,0x7ff8da10fb34,297421339,0,0x0,8
tick,0x7ff8da10fb34,297436546,0,0x0,8
tick,0x7ff8da10fb34,297452119,0,0x0,8
tick,0x7ff8da10fb34,297467567,0,0x0,8
tick,0x7ff8da10fb34,297483334,0,0x0,8
tick,0x7ff8da10fb34,297498439,0,0x0,8
tick,0x7ff8da10fb34,297513539,0,0x0,8
tick,0x7ff8da10fb34,297529425,0,0x0,8
tick,0x7ff8da10fb34,297544998,0,0x0,8
tick,0x7ff8da10fb34,297560516,0,0x0,8
tick,0x7ff8da10fb34,297576254,0,0x0,8
tick,0x7ff8da10fb34,297591947,0,0x0,8
tick,0x7ff8da10fb34,297608013,0,0x0,8
tick,0x7ff8da10fb34,297623909,0,0x0,8
tick,0x7ff8da10fb34,297639054,0,0x0,8
tick,0x7ff8da10fb34,297655018,0,0x0,8
tick,0x7ff8da10fb34,297670637,0,0x0,8
tick,0x7ff8da10fb34,297686264,0,0x0,8
tick,0x7ff8da10fb34,297702303,0,0x0,8
tick,0x7ff8da10fb34,297717448,0,0x0,8
tick,0x7ff8da10fb34,297732776,0,0x0,8
tick,0x7ff8da10fb34,297748020,0,0x0,8
tick,0x7ff8da10fb34,297763540,0,0x0,8
tick,0x7ff8da10fb34,297779544,0,0x0,8
tick,0x7ff8da10fb34,297794775,0,0x0,8
tick,0x7ff8da10fb34,297810186,0,0x0,8
tick,0x7ff8da10fb34,297826066,0,0x0,8
tick,0x7ff8da10fb34,297841695,0,0x0,8
tick,0x7ff8da10fb34,297858184,0,0x0,8
tick,0x7ff8da10fb34,297874224,0,0x0,8
tick,0x7ff8da10fb34,297889657,0,0x0,8
tick,0x7ff8da10fb34,297904996,0,0x0,8
tick,0x7ff8da10fb34,297921052,0,0x0,8
tick,0x7ff8da10fb34,297936914,0,0x0,8
tick,0x7ff8da10fb34,297953216,0,0x0,8
tick,0x7ff8da10fb34,297968518,0,0x0,8
tick,0x7ff8da10fb34,297984282,0,0x0,8
tick,0x7ff8da10fb34,297999309,0,0x0,8
tick,0x7ff8da10fb34,298015199,0,0x0,8
tick,0x7ff8da10fb34,298030777,0,0x0,8
tick,0x7ff8da10fb34,298046229,0,0x0,8
tick,0x7ff8da10fb34,298061886,0,0x0,8
tick,0x7ff8da10fb34,298077154,0,0x0,8
tick,0x7ff8da10fb34,298092642,0,0x0,8
tick,0x7ff8da10fb34,298108159,0,0x0,8
tick,0x7ff8da10fb34,298122862,0,0x0,8
tick,0x7ff8da10fb34,298138810,0,0x0,8
tick,0x7ff8da10fb34,298154476,0,0x0,8
tick,0x7ff8da10fb34,298170273,0,0x0,8
tick,0x7ff8da10fb34,298186233,0,0x0,8
tick,0x7ff8da10fb34,298202311,0,0x0,8
tick,0x7ff8da10fb34,298218113,0,0x0,8
tick,0x7ff8da10fb34,298233667,0,0x0,8
tick,0x7ff8da10fb34,298248422,0,0x0,8
tick,0x7ff8da10fb34,298263439,0,0x0,8
tick,0x7ff8da10fb34,298278690,0,0x0,8
tick,0x7ff8da10fb34,298293344,0,0x0,8
tick,0x7ff8da10fb34,298309025,0,0x0,8
tick,0x7ff8da10fb34,298324833,0,0x0,8
tick,0x7ff8da10fb34,298340921,0,0x0,8
tick,0x7ff8da10fb34,298356648,0,0x0,8
tick,0x7ff8da10fb34,298371996,0,0x0,8
tick,0x7ff8da10fb34,298387055,0,0x0,8
tick,0x7ff8da10fb34,298402194,0,0x0,8
tick,0x7ff8da10fb34,298417285,0,0x0,8
tick,0x7ff8da10fb34,298433008,0,0x0,8
tick,0x7ff8da10fb34,298448199,0,0x0,8
tick,0x7ff8da10fb34,298463874,0,0x0,8
tick,0x7ff8da10fb34,298479551,0,0x0,8
tick,0x7ff8da10fb34,298495240,0,0x0,8
tick,0x7ff8da10fb34,298510379,0,0x0,8
tick,0x7ff8da10fb34,298527435,0,0x0,8
tick,0x7ff8da10fb34,298542235,0,0x0,8
tick,0x7ff8da10fb34,298558180,0,0x0,8
tick,0x7ff8da10fb34,298573673,0,0x0,8
tick,0x7ff8da10fb34,298589297,0,0x0,8
tick,0x7ff8da10fb34,298605497,0,0x0,8
tick,0x7ff8da10fb34,298621287,0,0x0,8
tick,0x7ff8da10fb34,298637301,0,0x0,8
tick,0x7ff8da10fb34,298653113,0,0x0,8
tick,0x7ff8da10fb34,298669181,0,0x0,8
tick,0x7ff8da10fb34,298685276,0,0x0,8
tick,0x7ff8da10fb34,298700259,0,0x0,8
tick,0x7ff8da10fb34,298715207,0,0x0,8
tick,0x7ff8da10fb34,298730145,0,0x0,8
tick,0x7ff8da10fb34,298745134,0,0x0,8
tick,0x7ff8da10fb34,298761132,0,0x0,8
tick,0x7ff8da10fb34,298776203,0,0x0,8
tick,0x7ff8da10fb34,298791188,0,0x0,8
tick,0x7ff8da10fb34,298807112,0,0x0,8
tick,0x7ff8da10fb34,298822162,0,0x0,8
tick,0x7ff8da10fb34,298837100,0,0x0,8
tick,0x7ff8da10fb34,298852118,0,0x0,8
tick,0x7ff8da10fb34,298867127,0,0x0,8
tick,0x7ff8da10fb34,298883193,0,0x0,8
tick,0x7ff8da10fb34,298898829,0,0x0,8
tick,0x7ff8da10fb34,298914049,0,0x0,8
tick,0x7ff8da10fb34,298929398,0,0x0,8
tick,0x7ff8da10fb34,298944987,0,0x0,8
tick,0x7ff8da10fb34,298960105,0,0x0,8
tick,0x7ff8da10fb34,298975663,0,0x0,8
tick,0x7ff8da10fb34,298991335,0,0x0,8
tick,0x7ff8da10fb34,299007570,0,0x0,8
tick,0x7ff8da10fb34,299022153,0,0x0,8
tick,0x7ff8da10fb34,299037282,0,0x0,8
tick,0x7ff8da10fb34,299052240,0,0x0,8
tick,0x7ff8da10fb34,299067041,0,0x0,8
tick,0x7ff8da10fb34,299082288,0,0x0,8
tick,0x7ff8da10fb34,299097614,0,0x0,8
tick,0x7ff8da10fb34,299112835,0,0x0,8
tick,0x7ff8da10fb34,299128148,0,0x0,8
tick,0x7ff8da10fb34,299143158,0,0x0,8
tick,0x7ff8da10fb34,299159114,0,0x0,8
tick,0x7ff8da10fb34,299174535,0,0x0,8
tick,0x7ff8da10fb34,299190347,0,0x0,8
tick,0x7ff8da10fb34,299206432,0,0x0,8
tick,0x7ff8da10fb34,299221913,0,0x0,8
tick,0x7ff8da10fb34,299237184,0,0x0,8
tick,0x7ff8da10fb34,299252051,0,0x0,8
tick,0x7ff8da10fb34,299267534,0,0x0,8
tick,0x7ff8da10fb34,299283458,0,0x0,8
tick,0x7ff8da10fb34,299298237,0,0x0,8
tick,0x7ff8da10fb34,299313301,0,0x0,8
tick,0x7ff8da10fb34,299328575,0,0x0,8
tick,0x7ff8da10fb34,299343951,0,0x0,8
tick,0x7ff8da10fb34,299359189,0,0x0,8
tick,0x7ff8da10fb34,299374618,0,0x0,8
tick,0x7ff8da10fb34,299390184,0,0x0,8
tick,0x7ff8da10fb34,299406283,0,0x0,8
tick,0x7ff8da10fb34,299421214,0,0x0,8
tick,0x7ff8da10fb34,299436422,0,0x0,8
tick,0x7ff8da10fb34,299451364,0,0x0,8
tick,0x7ff8da10fb34,299466932,0,0x0,8
tick,0x7ff8da10fb34,299482163,0,0x0,8
tick,0x7ff8da10fb34,299497663,0,0x0,8
tick,0x7ff8da10fb34,299512711,0,0x0,8
tick,0x7ff8da10fb34,299528459,0,0x0,8
tick,0x7ff8da10fb34,299543796,0,0x0,8
tick,0x7ff8da10fb34,299559083,0,0x0,8
tick,0x7ff8da10fb34,299574393,0,0x0,8
tick,0x7ff8da10fb34,299590055,0,0x0,8
tick,0x7ff8da10fb34,299606551,0,0x0,8
tick,0x7ff8da10fb34,299622406,0,0x0,8
tick,0x7ff8da10fb34,299637456,0,0x0,8
tick,0x7ff8da10fb34,299652154,0,0x0,8
tick,0x7ff8da10fb34,299667808,0,0x0,8
tick,0x7ff8da10fb34,299683168,0,0x0,8
tick,0x7ff8da10fb34,299698349,0,0x0,8
tick,0x7ff8da10fb34,299714157,0,0x0,8
tick,0x7ff8da10fb34,299729787,0,0x0,8
tick,0x7ff8da10fb34,299745025,0,0x0,8
tick,0x7ff8da10fb34,299760959,0,0x0,8
tick,0x7ff8da10fb34,299776121,0,0x0,8
tick,0x7ff8da10fb34,299791795,0,0x0,8
tick,0x7ff8da10fb34,299807412,0,0x0,8
tick,0x7ff8da10fb34,299823190,0,0x0,8
tick,0x7ff8da10fb34,299838717,0,0x0,8
tick,0x7ff8da10fb34,299854173,0,0x0,8
tick,0x7ff8da10fb34,299870252,0,0x0,8
tick,0x7ff8da10fb34,299886225,0,0x0,8
tick,0x7ff8da10fb34,299902019,0,0x0,8
tick,0x7ff8da10fb34,299917520,0,0x0,8
tick,0x7ff8da10fb34,299933516,0,0x0,8
tick,0x7ff8da10fb34,299948979,0,0x0,8
tick,0x7ff8da10fb34,299964390,0,0x0,8
tick,0x7ff8da10fb34,299979745,0,0x0,8
tick,0x7ff8da10fb34,299995141,0,0x0,8
tick,0x7ff8da10fb34,300011251,0,0x0,8
tick,0x7ff8da10fb34,300026799,0,0x0,8
tick,0x7ff8da10fb34,300042086,0,0x0,8
tick,0x7ff8da10fb34,300056940,0,0x0,8
tick,0x7ff8da10fb34,300072263,0,0x0,8
tick,0x7ff8da10fb34,300088310,0,0x0,8
tick,0x7ff8da10fb34,300103141,0,0x0,8
tick,0x7ff8da10fb34,300118324,0,0x0,8
tick,0x7ff8da10fb34,300133727,0,0x0,8
tick,0x7ff8da10fb34,300149252,0,0x0,8
tick,0x7ff8da10fb34,300163796,0,0x0,8
tick,0x7ff8da10fb34,300179604,0,0x0,8
tick,0x7ff8da10fb34,300195019,0,0x0,8
tick,0x7ff8da10fb34,300211125,0,0x0,8
tick,0x7ff8da10fb34,300225960,0,0x0,8
tick,0x7ff8da10fb34,300241523,0,0x0,8
tick,0x7ff8da10fb34,300257252,0,0x0,8
tick,0x7ff8da10fb34,300273536,0,0x0,8
tick,0x7ff8da10fb34,300288920,0,0x0,8
tick,0x7ff8da10fb34,300304347,0,0x0,8
tick,0x7ff8da10fb34,300319354,0,0x0,8
tick,0x7ff8da10fb34,300335367,0,0x0,8
tick,0x7ff8da10fb34,300351127,0,0x0,8
tick,0x7ff8da10fb34,300367010,0,0x0,8
tick,0x7ff8da10fb34,300382268,0,0x0,8
tick,0x7ff8da10fb34,300397148,0,0x0,8
tick,0x7ff8da10fb34,300412039,0,0x0,8
tick,0x7ff8da10fb34,300427973,0,0x0,8
tick,0x7ff8da10fb34,300443375,0,0x0,8
tick,0x7ff8da10fb34,300459357,0,0x0,8
tick,0x7ff8da10fb34,300474919,0,0x0,8
tick,0x7ff8da10fb34,300490700,0,0x0,8
tick,0x7ff8da10fb34,300506586,0,0x0,8
tick,0x7ff8da10fb34,300521978,0,0x0,8
tick,0x7ff8da10fb34,300537490,0,0x0,8
tick,0x7ff8da10fb34,300552072,0,0x0,8
tick,0x7ff8da10fb34,300567246,0,0x0,8
tick,0x7ff8da10fb34,300583265,0,0x0,8
tick,0x7ff8da10fb34,300598945,0,0x0,8
tick,0x7ff8da10fb34,300614146,0,0x0,8
tick,0x7ff8da10fb34,300629547,0,0x0,8
tick,0x7ff8da10fb34,300645336,0,0x0,8
tick,0x7ff8da10fb34,300660389,0,0x0,8
tick,0x7ff8da10fb34,300676194,0,0x0,8
tick,0x7ff8da10fb34,300691332,0,0x0,8
tick,0x7ff8da10fb34,300707254,0,0x0,8
tick,0x7ff8da10fb34,300722893,0,0x0,8
tick,0x7ff8da10fb34,300738705,0,0x0,8
tick,0x7ff8da10fb34,300753122,0,0x0,8
tick,0x7ff8da10fb34,300767956,0,0x0,8
tick,0x7ff8da10fb34,300783256,0,0x0,8
tick,0x7ff8da10fb34,300798345,0,0x0,8
tick,0x7ff8da10fb34,300814258,0,0x0,8
tick,0x7ff8da10fb34,300829852,0,0x0,8
tick,0x7ff8da10fb34,300844872,0,0x0,8
tick,0x7ff8da10fb34,300860967,0,0x0,8
tick,0x7ff8da10fb34,300877077,0,0x0,8
tick,0x7ff8da10fb34,300891530,0,0x0,8
tick,0x7ff8da10fb34,300907727,0,0x0,8
tick,0x7ff8da10fb34,300921262,0,0x0,8
tick,0x7ff8da10fb34,300936387,0,0x0,8
tick,0x7ff8da10fb34,300951281,0,0x0,8
tick,0x7ff8da10fb34,300967054,0,0x0,8
tick,0x7ff8da10fb34,300982188,0,0x0,8
tick,0x7ff8da10fb34,300997297,0,0x0,8
tick,0x7ff8da10fb34,301012048,0,0x0,8
tick,0x7ff8da10fb34,301028060,0,0x0,8
tick,0x7ff8da10fb34,301043207,0,0x0,8
tick,0x7ff8da10fb34,301059041,0,0x0,8
tick,0x7ff8da10fb34,301074771,0,0x0,8
tick,0x7ff8da10fb34,301090679,0,0x0,8
tick,0x7ff8da10fb34,301106033,0,0x0,8
tick,0x7ff8da10fb34,301120993,0,0x0,8
tick,0x7ff8da10fb34,301136337,0,0x0,8
tick,0x7ff8da10fb34,301152162,0,0x0,8
tick,0x7ff8da10fb34,301166971,0,0x0,8
tick,0x7ff8da10fb34,301182218,0,0x0,8
tick,0x7ff8da10fb34,301197580,0,0x0,8
tick,0x7ff8da10fb34,301212999,0,0x0,8
tick,0x7ff8da10fb34,301228027,0,0x0,8
tick,0x7ff8da10fb34,301243303,0,0x0,8
tick,0x7ff8da10fb34,301258846,0,0x0,8
tick,0x7ff8da10fb34,301274542,0,0x0,8
tick,0x7ff8da10fb34,301290227,0,0x0,8
tick,0x7ff8da10fb34,301305919,0,0x0,8
tick,0x7ff8da10fb34,301321323,0,0x0,8
tick,0x7ff8da10fb34,301337404,0,0x0,8
tick,0x7ff8da10fb34,301352222,0,0x0,8
tick,0x7ff8da10fb34,301367340,0,0x0,8
tick,0x7ff8da10fb34,301382425,0,0x0,8
tick,0x7ff8da10fb34,301397889,0,0x0,8
tick,0x7ff8da10fb34,301413749,0,0x0,8
tick,0x7ff8da10fb34,301429332,0,0x0,8
tick,0x7ff8da10fb34,301444680,0,0x0,8
tick,0x7ff8da10fb34,301459911,0,0x0,8
tick,0x7ff8da10fb34,301475080,0,0x0,8
tick,0x7ff8da10fb34,301490507,0,0x0,8
tick,0x7ff8da10fb34,301506787,0,0x0,8
tick,0x7ff8da10fb34,301521179,0,0x0,8
tick,0x7ff8da10fb34,301536264,0,0x0,8
tick,0x7ff8da10fb34,301552120,0,0x0,8
tick,0x7ff8da10fb34,301567116,0,0x0,8
tick,0x7ff8da10fb34,301582235,0,0x0,8
tick,0x7ff8da10fb34,301597488,0,0x0,8
tick,0x7ff8da10fb34,301612688,0,0x0,8
tick,0x7ff8da10fb34,301628169,0,0x0,8
tick,0x7ff8da10fb34,301643811,0,0x0,8
tick,0x7ff8da10fb34,301658652,0,0x0,8
tick,0x7ff8da10fb34,301674357,0,0x0,8
tick,0x7ff8da10fb34,301690297,0,0x0,8
tick,0x7ff8da10fb34,301705714,0,0x0,8
tick,0x7ff8da10fb34,301721186,0,0x0,8
tick,0x7ff8da10fb34,301736300,0,0x0,8
tick,0x7ff8da10fb34,301751145,0,0x0,8
tick,0x7ff8da10fb34,301766683,0,0x0,8
tick,0x7ff8da10fb34,301782236,0,0x0,8
tick,0x7ff8da10fb34,301797218,0,0x0,8
tick,0x7ff8da10fb34,301812245,0,0x0,8
tick,0x7ff8da10fb34,301827990,0,0x0,8
tick,0x7ff8da10fb34,301844455,0,0x0,8
tick,0x7ff8da10fb34,301858899,0,0x0,8
tick,0x7ff8da10fb34,301875181,0,0x0,8
tick,0x7ff8da10fb34,301890802,0,0x0,8
tick,0x7ff8da10fb34,301906922,0,0x0,8
tick,0x7ff8da10fb34,301921995,0,0x0,8
tick,0x7ff8da10fb34,301937478,0,0x0,8
tick,0x7ff8da10fb34,301953286,0,0x0,8
tick,0x7ff8da10fb34,301969234,0,0x0,8
tick,0x7ff8da10fb34,301985249,0,0x0,8
tick,0x7ff8da10fb34,302000606,0,0x0,8
tick,0x7ff8da10fb34,302016293,0,0x0,8
tick,0x7ff8da10fb34,302031467,0,0x0,8
tick,0x7ff8da10fb34,302047454,0,0x0,8
tick,0x7ff8da10fb34,302063442,0,0x0,8
tick,0x7ff8da10fb34,302079341,0,0x0,8
tick,0x7ff8da10fb34,302095611,0,0x0,8
tick,0x7ff8da10fb34,302111521,0,0x0,8
tick,0x7ff8da10fb34,302127535,0,0x0,8
tick,0x7ff8da10fb34,302142678,0,0x0,8
tick,0x7ff8da10fb34,302158656,0,0x0,8
tick,0x7ff8da10fb34,302173770,0,0x0,8
tick,0x7ff8da10fb34,302189819,0,0x0,8
tick,0x7ff8da10fb34,302206117,0,0x0,8
tick,0x7ff8da10fb34,302221550,0,0x0,8
tick,0x7ff8da10fb34,302237350,0,0x0,8
tick,0x7ff8da10fb34,302251556,0,0x0,8
tick,0x7ff8da10fb34,302266965,0,0x0,8
tick,0x7ff8da10fb34,302283221,0,0x0,8
tick,0x7ff8da10fb34,302298868,0,0x0,8
tick,0x7ff8da10fb34,302314518,0,0x0,8
tick,0x7ff8da10fb34,302330370,0,0x0,8
tick,0x7ff8da10fb34,302346233,0,0x0,8
tick,0x7ff8da10fb34,302361370,0,0x0,8
tick,0x7ff8da10fb34,302377322,0,0x0,8
tick,0x7ff8da10fb34,302391986,0,0x0,8
tick,0x7ff8da10fb34,302407443,0,0x0,8
tick,0x7ff8da10fb34,302423322,0,0x0,8
tick,0x7ff8da10fb34,302439244,0,0x0,8
tick,0x7ff8da10fb34,302455806,0,0x0,8
tick,0x7ff8da10fb34,302471307,0,0x0,8
tick,0x7ff8da10fb34,302486517,0,0x0,8
tick,0x7ff8da10fb34,302502210,0,0x0,8
tick,0x7ff8da10fb34,302518114,0,0x0,8
tick,0x7ff8da10fb34,302534413,0,0x0,8
tick,0x7ff8da10fb34,302549884,0,0x0,8
tick,0x7ff8da10fb34,302566025,0,0x0,8
tick,0x7ff8da10fb34,302582066,0,0x0,8
tick,0x7ff8da10fb34,302597307,0,0x0,8
tick,0x7ff8da10fb34,302612145,0,0x0,8
tick,0x7ff8da10fb34,302627722,0,0x0,8
tick,0x7ff8da10fb34,302643406,0,0x0,8
tick,0x7ff8da10fb34,302658193,0,0x0,8
tick,0x7ff8da10fb34,302673197,0,0x0,8
tick,0x7ff8da10fb34,302689256,0,0x0,8
tick,0x7ff8da10fb34,302704203,0,0x0,8
tick,0x7ff8da10fb34,302719337,0,0x0,8
tick,0x7ff8da10fb34,302735540,0,0x0,8
tick,0x7ff8da10fb34,302750556,0,0x0,8
tick,0x7ff8da10fb34,302765595,0,0x0,8
tick,0x7ff8da10fb34,302781317,0,0x0,8
tick,0x7ff8da10fb34,302796934,0,0x0,8
tick,0x7ff8da10fb34,302813025,0,0x0,8
tick,0x7ff8da10fb34,302828226,0,0x0,8
tick,0x7ff8da10fb34,302844238,0,0x0,8
tick,0x7ff8da10fb34,302859574,0,0x0,8
tick,0x7ff8da10fb34,302874524,0,0x0,8
tick,0x7ff8da10fb34,302890364,0,0x0,8
tick,0x7ff8da10fb34,302905424,0,0x0,8
tick,0x7ff8da10fb34,302921879,0,0x0,8
tick,0x7ff8da10fb34,302938001,0,0x0,8
tick,0x7ff8da10fb34,302953205,0,0x0,8
tick,0x7ff8da10fb34,302968209,0,0x0,8
tick,0x7ff8da10fb34,302983258,0,0x0,8
tick,0x7ff8da10fb34,302998932,0,0x0,8
tick,0x7ff8da10fb34,303014151,0,0x0,8
tick,0x7ff8da10fb34,303029380,0,0x0,8
tick,0x7ff8da10fb34,303045053,0,0x0,8
tick,0x7ff8da10fb34,303060679,0,0x0,8
tick,0x7ff8da10fb34,303076686,0,0x0,8
tick,0x7ff8da10fb34,303091354,0,0x0,8
tick,0x7ff8da10fb34,303107387,0,0x0,8
tick,0x7ff8da10fb34,303122846,0,0x0,8
tick,0x7ff8da10fb34,303138441,0,0x0,8
tick,0x7ff8da10fb34,303154137,0,0x0,8
tick,0x7ff8da10fb34,303168973,0,0x0,8
tick,0x7ff8da10fb34,303184292,0,0x0,8
tick,0x7ff8da10fb34,303199530,0,0x0,8
tick,0x7ff8da10fb34,303214372,0,0x0,8
tick,0x7ff8da10fb34,303229412,0,0x0,8
tick,0x7ff8da10fb34,303245521,0,0x0,8
tick,0x7ff8da10fb34,303260779,0,0x0,8
tick,0x7ff8da10fb34,303276722,0,0x0,8
tick,0x7ff8da10fb34,303291801,0,0x0,8
tick,0x7ff8da10fb34,303306850,0,0x0,8
tick,0x7ff8da10fb34,303322216,0,0x0,8
tick,0x7ff8da10fb34,303338162,0,0x0,8
tick,0x7ff8da10fb34,303353505,0,0x0,8
tick,0x7ff8da10fb34,303369296,0,0x0,8
tick,0x7ff8da10fb34,303384688,0,0x0,8
tick,0x7ff8da10fb34,303399636,0,0x0,8
tick,0x7ff8da10fb34,303414805,0,0x0,8
tick,0x7ff8da10fb34,303430974,0,0x0,8
tick,0x7ff8da10fb34,303446178,0,0x0,8
tick,0x7ff8da10fb34,303461946,0,0x0,8
tick,0x7ff8da10fb34,303477950,0,0x0,8
tick,0x7ff8da10fb34,303493167,0,0x0,8
tick,0x7ff8da10fb34,303509103,0,0x0,8
tick,0x7ff8da10fb34,303525142,0,0x0,8
tick,0x7ff8da10fb34,303541146,0,0x0,8
tick,0x7ff8da10fb34,303557197,0,0x0,8
tick,0x7ff8da10fb34,303571874,0,0x0,8
tick,0x7ff8da10fb34,303587521,0,0x0,8
tick,0x7ff8da10fb34,303602527,0,0x0,8
tick,0x7ff8da10fb34,303618366,0,0x0,8
tick,0x7ff8da10fb34,303634295,0,0x0,8
tick,0x7ff8da10fb34,303650124,0,0x0,8
tick,0x7ff8da10fb34,303666200,0,0x0,8
tick,0x7ff8da10fb34,303681493,0,0x0,8
tick,0x7ff8da10fb34,303696636,0,0x0,8
tick,0x7ff8da10fb34,303712615,0,0x0,8
tick,0x7ff8da10fb34,303727356,0,0x0,8
tick,0x7ff8da10fb34,303742462,0,0x0,8
tick,0x7ff8da10fb34,303757423,0,0x0,8
tick,0x7ff8da10fb34,303772438,0,0x0,8
tick,0x7ff8da10fb34,303788476,0,0x0,8
tick,0x7ff8da10fb34,303804421,0,0x0,8
tick,0x7ff8da10fb34,303820652,0,0x0,8
tick,0x7ff8da10fb34,303836651,0,0x0,8
tick,0x7ff8da10fb34,303851274,0,0x0,8
tick,0x7ff8da10fb34,303866568,0,0x0,8
tick,0x7ff8da10fb34,303882420,0,0x0,8
tick,0x7ff8da10fb34,303898563,0,0x0,8
tick,0x7ff8da10fb34,303914211,0,0x0,8
tick,0x7ff8da10fb34,303929199,0,0x0,8
tick,0x7ff8da10fb34,303944277,0,0x0,8
tick,0x7ff8da10fb34,303959518,0,0x0,8
tick,0x7ff8da10fb34,303974740,0,0x0,8
tick,0x7ff8da10fb34,303990852,0,0x0,8
tick,0x7ff8da10fb34,304006188,0,0x0,8
tick,0x7ff8da10fb34,304021423,0,0x0,8
tick,0x7ff8da10fb34,304037123,0,0x0,8
tick,0x7ff8da10fb34,304052336,0,0x0,8
tick,0x7ff8da10fb34,304067635,0,0x0,8
tick,0x7ff8da10fb34,304083239,0,0x0,8
tick,0x7ff8da10fb34,304098843,0,0x0,8
tick,0x7ff8da10fb34,304114198,0,0x0,8
tick,0x7ff8da10fb34,304129279,0,0x0,8
tick,0x7ff8da10fb34,304144664,0,0x0,8
tick,0x7ff8da10fb34,304159982,0,0x0,8
tick,0x7ff8da10fb34,304176506,0,0x0,8
tick,0x7ff8da10fb34,304190882,0,0x0,8
tick,0x7ff8da10fb34,304206760,0,0x0,8
tick,0x7ff8da10fb34,304222368,0,0x0,8
tick,0x7ff8da10fb34,304238461,0,0x0,8
tick,0x7ff8da10fb34,304253221,0,0x0,8
tick,0x7ff8da10fb34,304268623,0,0x0,8
tick,0x7ff8da10fb34,304284285,0,0x0,8
tick,0x7ff8da10fb34,304300420,0,0x0,8
tick,0x7ff8da10fb34,304318103,0,0x0,8
tick,0x7ff8da10fb34,304332104,0,0x0,8
tick,0x7ff8da10fb34,304348134,0,0x0,8
tick,0x7ff8da10fb34,304364269,0,0x0,8
tick,0x7ff8da10fb34,304379434,0,0x0,8
tick,0x7ff8da10fb34,304394791,0,0x0,8
tick,0x7ff8da10fb34,304410153,0,0x0,8
tick,0x7ff8da10fb34,304426119,0,0x0,8
tick,0x7ff8da10fb34,304440803,0,0x0,8
tick,0x7ff8da10fb34,304456653,0,0x0,8
tick,0x7ff8da10fb34,304472959,0,0x0,8
tick,0x7ff8da10fb34,304491001,0,0x0,8
tick,0x7ff8da10fb34,304504415,0,0x0,8
tick,0x7ff8da10fb34,304520245,0,0x0,8
tick,0x7ff8da10fb34,304536099,0,0x0,8
tick,0x7ff8da10fb34,304551459,0,0x0,8
tick,0x7ff8da10fb34,304566154,0,0x0,8
tick,0x7ff8da10fb34,304581313,0,0x0,8
tick,0x7ff8da10fb34,304597083,0,0x0,8
tick,0x7ff8da10fb34,304612293,0,0x0,8
tick,0x7ff8da10fb34,304627440,0,0x0,8
tick,0x7ff8da10fb34,304642587,0,0x0,8
tick,0x7ff8da10fb34,304658046,0,0x0,8
tick,0x7ff8da10fb34,304673250,0,0x0,8
tick,0x7ff8da10fb34,304688931,0,0x0,8
tick,0x7ff8da10fb34,304704529,0,0x0,8
tick,0x7ff8da10fb34,304719996,0,0x0,8
tick,0x7ff8da10fb34,304740254,0,0x0,8
tick,0x7ff8da10fb34,304755365,0,0x0,8
tick,0x7ff8da10fb34,304768513,0,0x0,8
tick,0x7ff8da10fb34,304783507,0,0x0,8
tick,0x7ff8da10fb34,304798233,0,0x0,8
tick,0x7ff8da10fb34,304811951,0,0x0,8
tick,0x7ff8da10fb34,304826942,0,0x0,8
tick,0x7ff8da10fb34,304842458,0,0x0,8
tick,0x7ff8da10fb34,304858585,0,0x0,8
tick,0x7ff8da10fb34,304874507,0,0x0,8
tick,0x7ff8da10fb34,304890743,0,0x0,8
tick,0x7ff8da10fb34,304906679,0,0x0,8
tick,0x7ff8da10fb34,304921693,0,0x0,8
tick,0x7ff8da10fb34,304936156,0,0x0,8
tick,0x7ff8da10fb34,304952267,0,0x0,8
tick,0x7ff8da10fb34,304968153,0,0x0,8
tick,0x7ff8da10fb34,304983214,0,0x0,8
tick,0x7ff8da10fb34,304999038,0,0x0,8
tick,0x7ff8da10fb34,305014159,0,0x0,8
tick,0x7ff8da10fb34,305029416,0,0x0,8
tick,0x7ff8da10fb34,305044872,0,0x0,8
tick,0x7ff8da10fb34,305059919,0,0x0,8
tick,0x7ff8da10fb34,305075131,0,0x0,8
tick,0x7ff8da10fb34,305090470,0,0x0,8
tick,0x7ff8da10fb34,305106402,0,0x0,8
tick,0x7ff8da10fb34,305121917,0,0x0,8
tick,0x7ff8da10fb34,305137795,0,0x0,8
tick,0x7ff8da10fb34,305153136,0,0x0,8
tick,0x7ff8da10fb34,305168265,0,0x0,8
tick,0x7ff8da10fb34,305184119,0,0x0,8
tick,0x7ff8da10fb34,305199940,0,0x0,8
tick,0x7ff8da10fb34,305216288,0,0x0,8
tick,0x7ff8da10fb34,305231975,0,0x0,8
tick,0x7ff8da10fb34,305247937,0,0x0,8
